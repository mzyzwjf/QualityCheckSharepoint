# -*- coding: mbcs -*-
typelib_path = 'C:\\Windows\\system32\\simpdata.tlb'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from ctypes import HRESULT
from comtypes.automation import VARIANT
from comtypes.automation import VARIANT
from comtypes import BSTR
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid


class Library(object):
    u'Microsoft OLE DB Simple Provider 1.5 Library'
    name = u'MSDAOSP'
    _reg_typelib_ = ('{E0E270C2-C0BE-11D0-8FE4-00A0C90A6341}', 1, 5)


# values for enumeration 'OSPXFER'
OSPXFER_COMPLETE = 0
OSPXFER_ABORT = 1
OSPXFER_ERROR = 2
OSPXFER = c_int # enum

# values for enumeration 'OSPCOMP'
OSPCOMP_EQ = 1
OSPCOMP_DEFAULT = 1
OSPCOMP_LT = 2
OSPCOMP_LE = 3
OSPCOMP_GE = 4
OSPCOMP_GT = 5
OSPCOMP_NE = 6
OSPCOMP = c_int # enum
class OLEDBSimpleProvider(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{E0E270C0-C0BE-11D0-8FE4-00A0C90A6341}')
    _idlflags_ = ['oleautomation']

# values for enumeration 'OSPRW'
OSPRW_DEFAULT = 1
OSPRW_READONLY = 0
OSPRW_READWRITE = 1
OSPRW_MIXED = 2
OSPRW = c_int # enum

# values for enumeration 'OSPFORMAT'
OSPFORMAT_RAW = 0
OSPFORMAT_DEFAULT = 0
OSPFORMAT_FORMATTED = 1
OSPFORMAT_HTML = 2
OSPFORMAT = c_int # enum

# values for enumeration 'OSPFIND'
OSPFIND_DEFAULT = 0
OSPFIND_UP = 1
OSPFIND_CASESENSITIVE = 2
OSPFIND_UPCASESENSITIVE = 3
OSPFIND = c_int # enum
class OLEDBSimpleProviderListener(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{E0E270C1-C0BE-11D0-8FE4-00A0C90A6341}')
    _idlflags_ = ['oleautomation']
OLEDBSimpleProvider._methods_ = [
    COMMETHOD([], HRESULT, 'getRowCount',
              ( ['retval', 'out'], POINTER(c_longlong), 'pcRows' )),
    COMMETHOD([], HRESULT, 'getColumnCount',
              ( ['retval', 'out'], POINTER(c_longlong), 'pcColumns' )),
    COMMETHOD([], HRESULT, 'getRWStatus',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'iColumn' ),
              ( ['retval', 'out'], POINTER(OSPRW), 'prwStatus' )),
    COMMETHOD([], HRESULT, 'getVariant',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'iColumn' ),
              ( ['in'], OSPFORMAT, 'format' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pVar' )),
    COMMETHOD([], HRESULT, 'setVariant',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'iColumn' ),
              ( ['in'], OSPFORMAT, 'format' ),
              ( ['in'], VARIANT, 'Var' )),
    COMMETHOD([], HRESULT, 'getLocale',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrLocale' )),
    COMMETHOD([], HRESULT, 'deleteRows',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'cRows' ),
              ( ['retval', 'out'], POINTER(c_longlong), 'pcRowsDeleted' )),
    COMMETHOD([], HRESULT, 'insertRows',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'cRows' ),
              ( ['retval', 'out'], POINTER(c_longlong), 'pcRowsInserted' )),
    COMMETHOD([], HRESULT, 'find',
              ( ['in'], c_longlong, 'iRowStart' ),
              ( ['in'], c_longlong, 'iColumn' ),
              ( ['in'], VARIANT, 'val' ),
              ( ['in'], OSPFIND, 'findFlags' ),
              ( ['in'], OSPCOMP, 'compType' ),
              ( ['retval', 'out'], POINTER(c_longlong), 'piRowFound' )),
    COMMETHOD([], HRESULT, 'addOLEDBSimpleProviderListener',
              ( ['in'], POINTER(OLEDBSimpleProviderListener), 'pospIListener' )),
    COMMETHOD([], HRESULT, 'removeOLEDBSimpleProviderListener',
              ( ['in'], POINTER(OLEDBSimpleProviderListener), 'pospIListener' )),
    COMMETHOD([], HRESULT, 'isAsync',
              ( ['retval', 'out'], POINTER(c_int), 'pbAsynch' )),
    COMMETHOD([], HRESULT, 'getEstimatedRows',
              ( ['retval', 'out'], POINTER(c_longlong), 'piRows' )),
    COMMETHOD([], HRESULT, 'stopTransfer'),
]
################################################################
## code template for OLEDBSimpleProvider implementation
##class OLEDBSimpleProvider_Impl(object):
##    def getRWStatus(self, iRow, iColumn):
##        '-no docstring-'
##        #return prwStatus
##
##    def setVariant(self, iRow, iColumn, format, Var):
##        '-no docstring-'
##        #return 
##
##    def addOLEDBSimpleProviderListener(self, pospIListener):
##        '-no docstring-'
##        #return 
##
##    def deleteRows(self, iRow, cRows):
##        '-no docstring-'
##        #return pcRowsDeleted
##
##    def stopTransfer(self):
##        '-no docstring-'
##        #return 
##
##    def getLocale(self):
##        '-no docstring-'
##        #return pbstrLocale
##
##    def getColumnCount(self):
##        '-no docstring-'
##        #return pcColumns
##
##    def insertRows(self, iRow, cRows):
##        '-no docstring-'
##        #return pcRowsInserted
##
##    def isAsync(self):
##        '-no docstring-'
##        #return pbAsynch
##
##    def removeOLEDBSimpleProviderListener(self, pospIListener):
##        '-no docstring-'
##        #return 
##
##    def getVariant(self, iRow, iColumn, format):
##        '-no docstring-'
##        #return pVar
##
##    def getRowCount(self):
##        '-no docstring-'
##        #return pcRows
##
##    def find(self, iRowStart, iColumn, val, findFlags, compType):
##        '-no docstring-'
##        #return piRowFound
##
##    def getEstimatedRows(self):
##        '-no docstring-'
##        #return piRows
##

OLEDBSimpleProviderListener._methods_ = [
    COMMETHOD([], HRESULT, 'aboutToChangeCell',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'iColumn' )),
    COMMETHOD([], HRESULT, 'cellChanged',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'iColumn' )),
    COMMETHOD([], HRESULT, 'aboutToDeleteRows',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'cRows' )),
    COMMETHOD([], HRESULT, 'deletedRows',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'cRows' )),
    COMMETHOD([], HRESULT, 'aboutToInsertRows',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'cRows' )),
    COMMETHOD([], HRESULT, 'insertedRows',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'cRows' )),
    COMMETHOD([], HRESULT, 'rowsAvailable',
              ( ['in'], c_longlong, 'iRow' ),
              ( ['in'], c_longlong, 'cRows' )),
    COMMETHOD([], HRESULT, 'transferComplete',
              ( ['in'], OSPXFER, 'xfer' )),
]
################################################################
## code template for OLEDBSimpleProviderListener implementation
##class OLEDBSimpleProviderListener_Impl(object):
##    def transferComplete(self, xfer):
##        '-no docstring-'
##        #return 
##
##    def aboutToChangeCell(self, iRow, iColumn):
##        '-no docstring-'
##        #return 
##
##    def aboutToInsertRows(self, iRow, cRows):
##        '-no docstring-'
##        #return 
##
##    def aboutToDeleteRows(self, iRow, cRows):
##        '-no docstring-'
##        #return 
##
##    def cellChanged(self, iRow, iColumn):
##        '-no docstring-'
##        #return 
##
##    def rowsAvailable(self, iRow, cRows):
##        '-no docstring-'
##        #return 
##
##    def insertedRows(self, iRow, cRows):
##        '-no docstring-'
##        #return 
##
##    def deletedRows(self, iRow, cRows):
##        '-no docstring-'
##        #return 
##

__all__ = [ 'OSPFIND', 'OSPRW_READWRITE', 'OSPFORMAT_HTML',
           'OSPRW_READONLY', 'OSPFORMAT_RAW', 'OSPXFER', 'OSPCOMP_LT',
           'OLEDBSimpleProviderListener', 'OSPCOMP_LE',
           'OSPXFER_ERROR', 'OLEDBSimpleProvider', 'OSPCOMP_NE',
           'OSPCOMP', 'OSPCOMP_DEFAULT', 'OSPFORMAT_DEFAULT',
           'OSPXFER_COMPLETE', 'OSPFIND_CASESENSITIVE', 'OSPRW_MIXED',
           'OSPFORMAT_FORMATTED', 'OSPRW', 'OSPFIND_DEFAULT',
           'OSPFIND_UP', 'OSPFORMAT', 'OSPCOMP_GE', 'OSPCOMP_EQ',
           'OSPRW_DEFAULT', 'OSPFIND_UPCASESENSITIVE', 'OSPCOMP_GT',
           'OSPXFER_ABORT']
from comtypes import _check_version; _check_version('', 1552970743.542771)
