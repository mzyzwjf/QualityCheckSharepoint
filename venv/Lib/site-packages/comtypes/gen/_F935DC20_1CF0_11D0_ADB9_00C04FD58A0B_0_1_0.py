# -*- coding: mbcs -*-
typelib_path = 'C:\\Windows\\system32\\wshom.ocx'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from comtypes.automation import VARIANT
from ctypes import HRESULT
from comtypes import IUnknown
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
from comtypes import CoClass
from comtypes import BSTR
from comtypes.automation import IDispatch
from ctypes.wintypes import VARIANT_BOOL


class IFileCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C7C3F5A5-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
class IFile(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C7C3F5A4-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
IFileCollection._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Key' ),
              ( ['retval', 'out'], POINTER(POINTER(IFile)), 'ppfile' )),
    COMMETHOD([dispid(-4), 'restricted', 'hidden', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppenum' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
]
################################################################
## code template for IFileCollection implementation
##class IFileCollection_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    @property
##    def Item(self, Key):
##        '-no docstring-'
##        #return ppfile
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppenum
##

class IWshCollection_Class(CoClass):
    u'Generic Collection Object'
    _reg_clsid_ = GUID('{F935DC28-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
class IWshCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Generic Collection Object'
    _iid_ = GUID('{F935DC27-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['dual', 'oleautomation']
IWshCollection_Class._com_interfaces_ = [IWshCollection]

class IWshShell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Shell Object Interface'
    _iid_ = GUID('{F935DC21-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IWshShell2(IWshShell):
    _case_insensitive_ = True
    u'Shell Object Interface'
    _iid_ = GUID('{24BE5A30-EDFE-11D2-B933-00104B365C9F}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IWshShell3(IWshShell2):
    _case_insensitive_ = True
    u'Shell Object Interface'
    _iid_ = GUID('{41904400-BE18-11D3-A28B-00104BD35090}')
    _idlflags_ = ['dual', 'oleautomation']
class IWshEnvironment(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Environment Variables Collection Object'
    _iid_ = GUID('{F935DC29-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['dual', 'oleautomation']
IWshShell._methods_ = [
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'SpecialFolders',
              ( ['retval', 'out'], POINTER(POINTER(IWshCollection)), 'out_Folders' )),
    COMMETHOD([dispid(200), 'propget'], HRESULT, 'Environment',
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' ),
              ( ['retval', 'out'], POINTER(POINTER(IWshEnvironment)), 'out_Env' )),
    COMMETHOD([dispid(1000)], HRESULT, 'Run',
              ( ['in'], BSTR, 'Command' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WindowStyle' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'WaitOnReturn' ),
              ( ['retval', 'out'], POINTER(c_int), 'out_ExitCode' )),
    COMMETHOD([dispid(1001)], HRESULT, 'Popup',
              ( ['in'], BSTR, 'Text' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'SecondsToWait' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Title' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' ),
              ( ['retval', 'out'], POINTER(c_int), 'out_Button' )),
    COMMETHOD([dispid(1002)], HRESULT, 'CreateShortcut',
              ( ['in'], BSTR, 'PathLink' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'out_Shortcut' )),
    COMMETHOD([dispid(1006)], HRESULT, 'ExpandEnvironmentStrings',
              ( ['in'], BSTR, 'Src' ),
              ( ['retval', 'out'], POINTER(BSTR), 'out_Dst' )),
    COMMETHOD([dispid(2000)], HRESULT, 'RegRead',
              ( ['in'], BSTR, 'Name' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'out_Value' )),
    COMMETHOD([dispid(2001)], HRESULT, 'RegWrite',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], POINTER(VARIANT), 'Value' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Type' )),
    COMMETHOD([dispid(2002)], HRESULT, 'RegDelete',
              ( ['in'], BSTR, 'Name' )),
]
################################################################
## code template for IWshShell implementation
##class IWshShell_Impl(object):
##    def RegRead(self, Name):
##        '-no docstring-'
##        #return out_Value
##
##    @property
##    def SpecialFolders(self):
##        '-no docstring-'
##        #return out_Folders
##
##    def Popup(self, Text, SecondsToWait, Title, Type):
##        '-no docstring-'
##        #return out_Button
##
##    def Run(self, Command, WindowStyle, WaitOnReturn):
##        '-no docstring-'
##        #return out_ExitCode
##
##    def RegDelete(self, Name):
##        '-no docstring-'
##        #return 
##
##    def ExpandEnvironmentStrings(self, Src):
##        '-no docstring-'
##        #return out_Dst
##
##    @property
##    def Environment(self, Type):
##        '-no docstring-'
##        #return out_Env
##
##    def RegWrite(self, Name, Value, Type):
##        '-no docstring-'
##        #return 
##
##    def CreateShortcut(self, PathLink):
##        '-no docstring-'
##        #return out_Shortcut
##

IWshShell2._methods_ = [
    COMMETHOD([dispid(3000)], HRESULT, 'LogEvent',
              ( ['in'], POINTER(VARIANT), 'Type' ),
              ( ['in'], BSTR, 'Message' ),
              ( ['in', 'optional'], BSTR, 'Target', u'' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'out_Success' )),
    COMMETHOD([dispid(3010)], HRESULT, 'AppActivate',
              ( ['in'], POINTER(VARIANT), 'App' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Wait' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'out_Success' )),
    COMMETHOD([dispid(3011)], HRESULT, 'SendKeys',
              ( ['in'], BSTR, 'Keys' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Wait' )),
]
################################################################
## code template for IWshShell2 implementation
##class IWshShell2_Impl(object):
##    def AppActivate(self, App, Wait):
##        '-no docstring-'
##        #return out_Success
##
##    def LogEvent(self, Type, Message, Target):
##        '-no docstring-'
##        #return out_Success
##
##    def SendKeys(self, Keys, Wait):
##        '-no docstring-'
##        #return 
##

class IWshExec(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'WSH Exec Object'
    _iid_ = GUID('{08FED190-BE19-11D3-A28B-00104BD35090}')
    _idlflags_ = ['dual', 'oleautomation']
IWshShell3._methods_ = [
    COMMETHOD([dispid(3012)], HRESULT, 'Exec',
              ( ['in'], BSTR, 'Command' ),
              ( ['retval', 'out'], POINTER(POINTER(IWshExec)), 'ppExec' )),
    COMMETHOD([dispid(3013), 'propget'], HRESULT, 'CurrentDirectory',
              ( ['retval', 'out'], POINTER(BSTR), 'out_Directory' )),
    COMMETHOD([dispid(3013), 'propput'], HRESULT, 'CurrentDirectory',
              ( ['in'], BSTR, 'out_Directory' )),
]
################################################################
## code template for IWshShell3 implementation
##class IWshShell3_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return out_Directory
##    def _set(self, out_Directory):
##        '-no docstring-'
##    CurrentDirectory = property(_get, _set, doc = _set.__doc__)
##
##    def Exec(self, Command):
##        '-no docstring-'
##        #return ppExec
##

class WshNetwork(CoClass):
    u'Network Object'
    _reg_clsid_ = GUID('{093FF999-1EA0-4079-9525-9614C3504B74}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
class IWshNetwork(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Network Object'
    _iid_ = GUID('{F935DC25-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IWshNetwork2(IWshNetwork):
    _case_insensitive_ = True
    u'Network Object'
    _iid_ = GUID('{24BE5A31-EDFE-11D2-B933-00104B365C9F}')
    _idlflags_ = ['dual', 'oleautomation']
WshNetwork._com_interfaces_ = [IWshNetwork2]


# values for enumeration 'Tristate'
TristateTrue = -1
TristateFalse = 0
TristateUseDefault = -2
TristateMixed = -2
Tristate = c_int # enum
class Files(CoClass):
    _reg_clsid_ = GUID('{C7C3F5B6-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
Files._com_interfaces_ = [IFileCollection]

class Drive(CoClass):
    _reg_clsid_ = GUID('{C7C3F5B1-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
class IDrive(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C7C3F5A0-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
Drive._com_interfaces_ = [IDrive]

class TextStream(CoClass):
    _reg_clsid_ = GUID('{0BB02EC0-EF49-11CF-8940-00A0C9054228}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
class ITextStream(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{53BAD8C1-E718-11CF-893D-00A0C9054228}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
TextStream._com_interfaces_ = [ITextStream]


# values for enumeration '__MIDL___MIDL_itf_iwshom_0001_0016_0001'
WshHide = 0
WshNormalFocus = 1
WshMinimizedFocus = 2
WshMaximizedFocus = 3
WshNormalNoFocus = 4
WshMinimizedNoFocus = 6
__MIDL___MIDL_itf_iwshom_0001_0016_0001 = c_int # enum
WshWindowStyle = __MIDL___MIDL_itf_iwshom_0001_0016_0001
class IWshEnvironment_Class(CoClass):
    u'Environment Variables Collection Object'
    _reg_clsid_ = GUID('{F935DC2A-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
IWshEnvironment_Class._com_interfaces_ = [IWshEnvironment]

class WshEnvironment(CoClass):
    u'Environment Variables Collection Object'
    _reg_clsid_ = GUID('{F48229AF-E28C-42B5-BB92-E114E62BDD54}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
WshEnvironment._com_interfaces_ = [IWshEnvironment]


# values for enumeration '__MIDL___MIDL_itf_iwshom_0001_0037_0001'
WshRunning = 0
WshFinished = 1
WshFailed = 2
__MIDL___MIDL_itf_iwshom_0001_0037_0001 = c_int # enum
WshExecStatus = __MIDL___MIDL_itf_iwshom_0001_0037_0001
IWshExec._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(WshExecStatus), 'Status' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'StdIn',
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'StdOut',
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'StdErr',
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ProcessID',
              ( ['retval', 'out'], POINTER(c_int), 'PID' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ExitCode',
              ( ['retval', 'out'], POINTER(c_int), 'ExitCode' )),
    COMMETHOD([dispid(8)], HRESULT, 'Terminate'),
]
################################################################
## code template for IWshExec implementation
##class IWshExec_Impl(object):
##    @property
##    def Status(self):
##        '-no docstring-'
##        #return Status
##
##    @property
##    def ProcessID(self):
##        '-no docstring-'
##        #return PID
##
##    @property
##    def StdOut(self):
##        '-no docstring-'
##        #return ppts
##
##    @property
##    def StdIn(self):
##        '-no docstring-'
##        #return ppts
##
##    def Terminate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def StdErr(self):
##        '-no docstring-'
##        #return ppts
##
##    @property
##    def ExitCode(self):
##        '-no docstring-'
##        #return ExitCode
##

class WshExec(CoClass):
    u'WSHExec object'
    _reg_clsid_ = GUID('{08FED191-BE19-11D3-A28B-00104BD35090}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
WshExec._com_interfaces_ = [IWshExec]

class WshURLShortcut(CoClass):
    u'URLShortcut Object'
    _reg_clsid_ = GUID('{50E13488-6F1E-4450-96B0-873755403955}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
class IWshURLShortcut(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'URLShortcut Object'
    _iid_ = GUID('{F935DC2B-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['dual', 'oleautomation']
WshURLShortcut._com_interfaces_ = [IWshURLShortcut]

class IDriveCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C7C3F5A1-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
IDriveCollection._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Key' ),
              ( ['retval', 'out'], POINTER(POINTER(IDrive)), 'ppdrive' )),
    COMMETHOD([dispid(-4), 'restricted', 'hidden', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppenum' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
]
################################################################
## code template for IDriveCollection implementation
##class IDriveCollection_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    @property
##    def Item(self, Key):
##        '-no docstring-'
##        #return ppdrive
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppenum
##

class WshShortcut(CoClass):
    u'Shortcut Object'
    _reg_clsid_ = GUID('{A548B8E4-51D5-4661-8824-DAA1D893DFB2}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
class IWshShortcut(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Shortcut Object'
    _iid_ = GUID('{F935DC23-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['dual', 'oleautomation']
WshShortcut._com_interfaces_ = [IWshShortcut]

class IWshShell_Class(CoClass):
    u'Shell Object'
    _reg_clsid_ = GUID('{F935DC22-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
IWshShell_Class._com_interfaces_ = [IWshShell3]

class WshCollection(CoClass):
    u'Generic Collection Object'
    _reg_clsid_ = GUID('{387DAFF4-DA03-44D2-B0D1-80C927C905AC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
WshCollection._com_interfaces_ = [IWshCollection]

class IFileSystem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0AB5A3D0-E5B6-11D0-ABF5-00A0C90FFFC0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
class IFolder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C7C3F5A2-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']

# values for enumeration '__MIDL___MIDL_itf_iwshom_0000_0000_0003'
WindowsFolder = 0
SystemFolder = 1
TemporaryFolder = 2
__MIDL___MIDL_itf_iwshom_0000_0000_0003 = c_int # enum
SpecialFolderConst = __MIDL___MIDL_itf_iwshom_0000_0000_0003

# values for enumeration 'IOMode'
ForReading = 1
ForWriting = 2
ForAppending = 8
IOMode = c_int # enum
IFileSystem._methods_ = [
    COMMETHOD([dispid(10010), 'propget'], HRESULT, 'Drives',
              ( ['retval', 'out'], POINTER(POINTER(IDriveCollection)), 'ppdrives' )),
    COMMETHOD([dispid(10000)], HRESULT, 'BuildPath',
              ( ['in'], BSTR, 'Path' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10004)], HRESULT, 'GetDriveName',
              ( ['in'], BSTR, 'Path' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10005)], HRESULT, 'GetParentFolderName',
              ( ['in'], BSTR, 'Path' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10006)], HRESULT, 'GetFileName',
              ( ['in'], BSTR, 'Path' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10007)], HRESULT, 'GetBaseName',
              ( ['in'], BSTR, 'Path' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10008)], HRESULT, 'GetExtensionName',
              ( ['in'], BSTR, 'Path' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10002)], HRESULT, 'GetAbsolutePathName',
              ( ['in'], BSTR, 'Path' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10003)], HRESULT, 'GetTempName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrResult' )),
    COMMETHOD([dispid(10015)], HRESULT, 'DriveExists',
              ( ['in'], BSTR, 'DriveSpec' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfExists' )),
    COMMETHOD([dispid(10016)], HRESULT, 'FileExists',
              ( ['in'], BSTR, 'FileSpec' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfExists' )),
    COMMETHOD([dispid(10017)], HRESULT, 'FolderExists',
              ( ['in'], BSTR, 'FolderSpec' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfExists' )),
    COMMETHOD([dispid(10011)], HRESULT, 'GetDrive',
              ( ['in'], BSTR, 'DriveSpec' ),
              ( ['retval', 'out'], POINTER(POINTER(IDrive)), 'ppdrive' )),
    COMMETHOD([dispid(10012)], HRESULT, 'GetFile',
              ( ['in'], BSTR, 'FilePath' ),
              ( ['retval', 'out'], POINTER(POINTER(IFile)), 'ppfile' )),
    COMMETHOD([dispid(10013)], HRESULT, 'GetFolder',
              ( ['in'], BSTR, 'FolderPath' ),
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(10014)], HRESULT, 'GetSpecialFolder',
              ( ['in'], SpecialFolderConst, 'SpecialFolder' ),
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(1200)], HRESULT, 'DeleteFile',
              ( ['in'], BSTR, 'FileSpec' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Force', False )),
    COMMETHOD([dispid(1201)], HRESULT, 'DeleteFolder',
              ( ['in'], BSTR, 'FolderSpec' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Force', False )),
    COMMETHOD([dispid(1204)], HRESULT, 'MoveFile',
              ( ['in'], BSTR, 'Source' ),
              ( ['in'], BSTR, 'Destination' )),
    COMMETHOD([dispid(1205)], HRESULT, 'MoveFolder',
              ( ['in'], BSTR, 'Source' ),
              ( ['in'], BSTR, 'Destination' )),
    COMMETHOD([dispid(1202)], HRESULT, 'CopyFile',
              ( ['in'], BSTR, 'Source' ),
              ( ['in'], BSTR, 'Destination' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OverWriteFiles', True )),
    COMMETHOD([dispid(1203)], HRESULT, 'CopyFolder',
              ( ['in'], BSTR, 'Source' ),
              ( ['in'], BSTR, 'Destination' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OverWriteFiles', True )),
    COMMETHOD([dispid(1120)], HRESULT, 'CreateFolder',
              ( ['in'], BSTR, 'Path' ),
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(1101)], HRESULT, 'CreateTextFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Overwrite', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Unicode', False ),
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
    COMMETHOD([dispid(1100)], HRESULT, 'OpenTextFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], IOMode, 'IOMode', 1 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Create', False ),
              ( ['in', 'optional'], Tristate, 'Format', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
]
################################################################
## code template for IFileSystem implementation
##class IFileSystem_Impl(object):
##    def FileExists(self, FileSpec):
##        '-no docstring-'
##        #return pfExists
##
##    def CopyFile(self, Source, Destination, OverWriteFiles):
##        '-no docstring-'
##        #return 
##
##    def MoveFolder(self, Source, Destination):
##        '-no docstring-'
##        #return 
##
##    def GetTempName(self):
##        '-no docstring-'
##        #return pbstrResult
##
##    def GetFolder(self, FolderPath):
##        '-no docstring-'
##        #return ppfolder
##
##    def GetParentFolderName(self, Path):
##        '-no docstring-'
##        #return pbstrResult
##
##    def OpenTextFile(self, FileName, IOMode, Create, Format):
##        '-no docstring-'
##        #return ppts
##
##    def GetFile(self, FilePath):
##        '-no docstring-'
##        #return ppfile
##
##    def CopyFolder(self, Source, Destination, OverWriteFiles):
##        '-no docstring-'
##        #return 
##
##    def CreateTextFile(self, FileName, Overwrite, Unicode):
##        '-no docstring-'
##        #return ppts
##
##    @property
##    def Drives(self):
##        '-no docstring-'
##        #return ppdrives
##
##    def DeleteFile(self, FileSpec, Force):
##        '-no docstring-'
##        #return 
##
##    def GetFileName(self, Path):
##        '-no docstring-'
##        #return pbstrResult
##
##    def FolderExists(self, FolderSpec):
##        '-no docstring-'
##        #return pfExists
##
##    def DriveExists(self, DriveSpec):
##        '-no docstring-'
##        #return pfExists
##
##    def BuildPath(self, Path, Name):
##        '-no docstring-'
##        #return pbstrResult
##
##    def GetDriveName(self, Path):
##        '-no docstring-'
##        #return pbstrResult
##
##    def CreateFolder(self, Path):
##        '-no docstring-'
##        #return ppfolder
##
##    def GetDrive(self, DriveSpec):
##        '-no docstring-'
##        #return ppdrive
##
##    def DeleteFolder(self, FolderSpec, Force):
##        '-no docstring-'
##        #return 
##
##    def GetAbsolutePathName(self, Path):
##        '-no docstring-'
##        #return pbstrResult
##
##    def GetBaseName(self, Path):
##        '-no docstring-'
##        #return pbstrResult
##
##    def MoveFile(self, Source, Destination):
##        '-no docstring-'
##        #return 
##
##    def GetSpecialFolder(self, SpecialFolder):
##        '-no docstring-'
##        #return ppfolder
##
##    def GetExtensionName(self, Path):
##        '-no docstring-'
##        #return pbstrResult
##


# values for enumeration '__MIDL___MIDL_itf_iwshom_0000_0000_0001'
Normal = 0
ReadOnly = 1
Hidden = 2
System = 4
Volume = 8
Directory = 16
Archive = 32
Alias = 1024
Compressed = 2048
__MIDL___MIDL_itf_iwshom_0000_0000_0001 = c_int # enum
class IWshURLShortcut_Class(CoClass):
    u'URLShortcut Object'
    _reg_clsid_ = GUID('{F935DC2C-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
IWshURLShortcut_Class._com_interfaces_ = [IWshURLShortcut]

IWshEnvironment._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], BSTR, 'Name' ),
              ( ['retval', 'out'], POINTER(BSTR), 'out_Value' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Item',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'out_Value' )),
    COMMETHOD([dispid(1)], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'out_Count' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'length',
              ( ['retval', 'out'], POINTER(c_int), 'out_Count' )),
    COMMETHOD([dispid(-4)], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'out_Enum' )),
    COMMETHOD([dispid(1001)], HRESULT, 'Remove',
              ( ['in'], BSTR, 'Name' )),
]
################################################################
## code template for IWshEnvironment implementation
##class IWshEnvironment_Impl(object):
##    def Count(self):
##        '-no docstring-'
##        #return out_Count
##
##    def _get(self, Name):
##        '-no docstring-'
##        #return out_Value
##    def _set(self, Name, out_Value):
##        '-no docstring-'
##    Item = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def length(self):
##        '-no docstring-'
##        #return out_Count
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return out_Enum
##
##    def Remove(self, Name):
##        '-no docstring-'
##        #return 
##

IWshNetwork._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'UserDomain',
              ( ['retval', 'out'], POINTER(BSTR), 'out_UserDomain' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'UserName',
              ( ['retval', 'out'], POINTER(BSTR), 'out_UserName' )),
    COMMETHOD([dispid(1610743810), 'hidden', 'propget'], HRESULT, 'UserProfile',
              ( ['retval', 'out'], POINTER(BSTR), 'out_UserProfile' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ComputerName',
              ( ['retval', 'out'], POINTER(BSTR), 'out_ComputerName' )),
    COMMETHOD([dispid(1610743812), 'hidden', 'propget'], HRESULT, 'Organization',
              ( ['retval', 'out'], POINTER(BSTR), 'out_Organization' )),
    COMMETHOD([dispid(1610743813), 'hidden', 'propget'], HRESULT, 'Site',
              ( ['retval', 'out'], POINTER(BSTR), 'out_Site' )),
    COMMETHOD([dispid(1000)], HRESULT, 'MapNetworkDrive',
              ( ['in'], BSTR, 'LocalName' ),
              ( ['in'], BSTR, 'RemoteName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpdateProfile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UserName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' )),
    COMMETHOD([dispid(1001)], HRESULT, 'RemoveNetworkDrive',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Force' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpdateProfile' )),
    COMMETHOD([dispid(1002)], HRESULT, 'EnumNetworkDrives',
              ( ['retval', 'out'], POINTER(POINTER(IWshCollection)), 'out_Enum' )),
    COMMETHOD([dispid(2000)], HRESULT, 'AddPrinterConnection',
              ( ['in'], BSTR, 'LocalName' ),
              ( ['in'], BSTR, 'RemoteName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpdateProfile' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UserName' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Password' )),
    COMMETHOD([dispid(2001)], HRESULT, 'RemovePrinterConnection',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Force' ),
              ( ['in', 'optional'], POINTER(VARIANT), 'UpdateProfile' )),
    COMMETHOD([dispid(2002)], HRESULT, 'EnumPrinterConnections',
              ( ['retval', 'out'], POINTER(POINTER(IWshCollection)), 'out_Enum' )),
    COMMETHOD([dispid(2003)], HRESULT, 'SetDefaultPrinter',
              ( ['in'], BSTR, 'Name' )),
]
################################################################
## code template for IWshNetwork implementation
##class IWshNetwork_Impl(object):
##    @property
##    def UserName(self):
##        '-no docstring-'
##        #return out_UserName
##
##    @property
##    def ComputerName(self):
##        '-no docstring-'
##        #return out_ComputerName
##
##    def RemovePrinterConnection(self, Name, Force, UpdateProfile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UserDomain(self):
##        '-no docstring-'
##        #return out_UserDomain
##
##    def MapNetworkDrive(self, LocalName, RemoteName, UpdateProfile, UserName, Password):
##        '-no docstring-'
##        #return 
##
##    def SetDefaultPrinter(self, Name):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Site(self):
##        '-no docstring-'
##        #return out_Site
##
##    def RemoveNetworkDrive(self, Name, Force, UpdateProfile):
##        '-no docstring-'
##        #return 
##
##    def AddPrinterConnection(self, LocalName, RemoteName, UpdateProfile, UserName, Password):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Organization(self):
##        '-no docstring-'
##        #return out_Organization
##
##    def EnumPrinterConnections(self):
##        '-no docstring-'
##        #return out_Enum
##
##    def EnumNetworkDrives(self):
##        '-no docstring-'
##        #return out_Enum
##
##    @property
##    def UserProfile(self):
##        '-no docstring-'
##        #return out_UserProfile
##

IWshURLShortcut._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'FullName',
              ( ['retval', 'out'], POINTER(BSTR), 'out_FullName' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'TargetPath',
              ( ['retval', 'out'], POINTER(BSTR), 'out_Path' )),
    COMMETHOD([dispid(1005), 'propput'], HRESULT, 'TargetPath',
              ( ['in'], BSTR, 'out_Path' )),
    COMMETHOD([dispid(2000), 'hidden'], HRESULT, 'Load',
              ( ['in'], BSTR, 'PathLink' )),
    COMMETHOD([dispid(2001)], HRESULT, 'Save'),
]
################################################################
## code template for IWshURLShortcut implementation
##class IWshURLShortcut_Impl(object):
##    def Load(self, PathLink):
##        '-no docstring-'
##        #return 
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return out_FullName
##
##    def Save(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return out_Path
##    def _set(self, out_Path):
##        '-no docstring-'
##    TargetPath = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration '__MIDL___MIDL_itf_iwshom_0000_0000_0004'
StdIn = 0
StdOut = 1
StdErr = 2
__MIDL___MIDL_itf_iwshom_0000_0000_0004 = c_int # enum
StandardStreamTypes = __MIDL___MIDL_itf_iwshom_0000_0000_0004
class IWshShortcut_Class(CoClass):
    u'Shortcut Object'
    _reg_clsid_ = GUID('{F935DC24-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
IWshShortcut_Class._com_interfaces_ = [IWshShortcut]

class IFolderCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C7C3F5A3-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
IFolderCollection._methods_ = [
    COMMETHOD([dispid(2)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Key' ),
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(-4), 'restricted', 'hidden', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppenum' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
]
################################################################
## code template for IFolderCollection implementation
##class IFolderCollection_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    @property
##    def Item(self, Key):
##        '-no docstring-'
##        #return ppfolder
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return ppfolder
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppenum
##

class Library(object):
    u'Windows Script Host Object Model'
    name = u'IWshRuntimeLibrary'
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)

FileAttribute = __MIDL___MIDL_itf_iwshom_0000_0000_0001
IFolder._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPath' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1000), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'pbstrName' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'ShortPath',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPath' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'ShortName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1004), 'propget'], HRESULT, 'Drive',
              ( ['retval', 'out'], POINTER(POINTER(IDrive)), 'ppdrive' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'ParentFolder',
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'Attributes',
              ( ['retval', 'out'], POINTER(FileAttribute), 'pfa' )),
    COMMETHOD([dispid(1003), 'propput'], HRESULT, 'Attributes',
              ( ['in'], FileAttribute, 'pfa' )),
    COMMETHOD([dispid(1006), 'propget'], HRESULT, 'DateCreated',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(1007), 'propget'], HRESULT, 'DateLastModified',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(1008), 'propget'], HRESULT, 'DateLastAccessed',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(1010), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrType' )),
    COMMETHOD([dispid(1201)], HRESULT, 'Delete',
              ( ['in', 'optional'], VARIANT_BOOL, 'Force', False )),
    COMMETHOD([dispid(1203)], HRESULT, 'Copy',
              ( ['in'], BSTR, 'Destination' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OverWriteFiles', True )),
    COMMETHOD([dispid(1205)], HRESULT, 'Move',
              ( ['in'], BSTR, 'Destination' )),
    COMMETHOD([dispid(10000), 'propget'], HRESULT, 'IsRootFolder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfRootFolder' )),
    COMMETHOD([dispid(1009), 'propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarSize' )),
    COMMETHOD([dispid(10001), 'propget'], HRESULT, 'SubFolders',
              ( ['retval', 'out'], POINTER(POINTER(IFolderCollection)), 'ppfolders' )),
    COMMETHOD([dispid(10002), 'propget'], HRESULT, 'Files',
              ( ['retval', 'out'], POINTER(POINTER(IFileCollection)), 'ppfiles' )),
    COMMETHOD([dispid(1101)], HRESULT, 'CreateTextFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Overwrite', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Unicode', False ),
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
]
################################################################
## code template for IFolder implementation
##class IFolder_Impl(object):
##    @property
##    def Files(self):
##        '-no docstring-'
##        #return ppfiles
##
##    @property
##    def IsRootFolder(self):
##        '-no docstring-'
##        #return pfRootFolder
##
##    @property
##    def ShortPath(self):
##        '-no docstring-'
##        #return pbstrPath
##
##    @property
##    def SubFolders(self):
##        '-no docstring-'
##        #return ppfolders
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrName
##    def _set(self, pbstrName):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def CreateTextFile(self, FileName, Overwrite, Unicode):
##        '-no docstring-'
##        #return ppts
##
##    def Move(self, Destination):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Drive(self):
##        '-no docstring-'
##        #return ppdrive
##
##    @property
##    def DateCreated(self):
##        '-no docstring-'
##        #return pdate
##
##    @property
##    def ParentFolder(self):
##        '-no docstring-'
##        #return ppfolder
##
##    @property
##    def DateLastModified(self):
##        '-no docstring-'
##        #return pdate
##
##    @property
##    def Size(self):
##        '-no docstring-'
##        #return pvarSize
##
##    @property
##    def DateLastAccessed(self):
##        '-no docstring-'
##        #return pdate
##
##    def _get(self):
##        '-no docstring-'
##        #return pfa
##    def _set(self, pfa):
##        '-no docstring-'
##    Attributes = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return pbstrPath
##
##    @property
##    def ShortName(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def Copy(self, Destination, OverWriteFiles):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return pbstrType
##
##    def Delete(self, Force):
##        '-no docstring-'
##        #return 
##


# values for enumeration '__MIDL___MIDL_itf_iwshom_0000_0000_0002'
UnknownType = 0
Removable = 1
Fixed = 2
Remote = 3
CDRom = 4
RamDisk = 5
__MIDL___MIDL_itf_iwshom_0000_0000_0002 = c_int # enum
DriveTypeConst = __MIDL___MIDL_itf_iwshom_0000_0000_0002
IWshNetwork2._methods_ = [
    COMMETHOD([dispid(2004)], HRESULT, 'AddWindowsPrinterConnection',
              ( ['in'], BSTR, 'PrinterName' ),
              ( ['in', 'optional'], BSTR, 'DriverName', u'' ),
              ( ['in', 'optional'], BSTR, 'Port', u'LPT1' )),
]
################################################################
## code template for IWshNetwork2 implementation
##class IWshNetwork2_Impl(object):
##    def AddWindowsPrinterConnection(self, PrinterName, DriverName, Port):
##        '-no docstring-'
##        #return 
##

IWshCollection._methods_ = [
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], POINTER(VARIANT), 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'out_Value' )),
    COMMETHOD([dispid(1)], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'out_Count' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'length',
              ( ['retval', 'out'], POINTER(c_int), 'out_Count' )),
    COMMETHOD([dispid(-4)], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'out_Enum' )),
]
################################################################
## code template for IWshCollection implementation
##class IWshCollection_Impl(object):
##    def Count(self):
##        '-no docstring-'
##        #return out_Count
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return out_Value
##
##    @property
##    def length(self):
##        '-no docstring-'
##        #return out_Count
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return out_Enum
##

IWshShortcut._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'FullName',
              ( ['retval', 'out'], POINTER(BSTR), 'out_FullName' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Arguments',
              ( ['retval', 'out'], POINTER(BSTR), 'out_Arguments' )),
    COMMETHOD([dispid(1000), 'propput'], HRESULT, 'Arguments',
              ( ['in'], BSTR, 'out_Arguments' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'out_Description' )),
    COMMETHOD([dispid(1001), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'out_Description' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'Hotkey',
              ( ['retval', 'out'], POINTER(BSTR), 'out_HotKey' )),
    COMMETHOD([dispid(1002), 'propput'], HRESULT, 'Hotkey',
              ( ['in'], BSTR, 'out_HotKey' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'IconLocation',
              ( ['retval', 'out'], POINTER(BSTR), 'out_IconPath' )),
    COMMETHOD([dispid(1003), 'propput'], HRESULT, 'IconLocation',
              ( ['in'], BSTR, 'out_IconPath' )),
    COMMETHOD([dispid(1004), 'propput'], HRESULT, 'RelativePath',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'TargetPath',
              ( ['retval', 'out'], POINTER(BSTR), 'out_Path' )),
    COMMETHOD([dispid(1005), 'propput'], HRESULT, 'TargetPath',
              ( ['in'], BSTR, 'out_Path' )),
    COMMETHOD([dispid(1006), 'propget'], HRESULT, 'WindowStyle',
              ( ['retval', 'out'], POINTER(c_int), 'out_ShowCmd' )),
    COMMETHOD([dispid(1006), 'propput'], HRESULT, 'WindowStyle',
              ( ['in'], c_int, 'out_ShowCmd' )),
    COMMETHOD([dispid(1007), 'propget'], HRESULT, 'WorkingDirectory',
              ( ['retval', 'out'], POINTER(BSTR), 'out_WorkingDirectory' )),
    COMMETHOD([dispid(1007), 'propput'], HRESULT, 'WorkingDirectory',
              ( ['in'], BSTR, 'out_WorkingDirectory' )),
    COMMETHOD([dispid(2000), 'hidden'], HRESULT, 'Load',
              ( ['in'], BSTR, 'PathLink' )),
    COMMETHOD([dispid(2001)], HRESULT, 'Save'),
]
################################################################
## code template for IWshShortcut implementation
##class IWshShortcut_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return out_ShowCmd
##    def _set(self, out_ShowCmd):
##        '-no docstring-'
##    WindowStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Load(self, PathLink):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return out_Description
##    def _set(self, out_Description):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return out_WorkingDirectory
##    def _set(self, out_WorkingDirectory):
##        '-no docstring-'
##    WorkingDirectory = property(_get, _set, doc = _set.__doc__)
##
##    def _set(self, rhs):
##        '-no docstring-'
##    RelativePath = property(fset = _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return out_IconPath
##    def _set(self, out_IconPath):
##        '-no docstring-'
##    IconLocation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return out_Arguments
##    def _set(self, out_Arguments):
##        '-no docstring-'
##    Arguments = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return out_HotKey
##    def _set(self, out_HotKey):
##        '-no docstring-'
##    Hotkey = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return out_FullName
##
##    def Save(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return out_Path
##    def _set(self, out_Path):
##        '-no docstring-'
##    TargetPath = property(_get, _set, doc = _set.__doc__)
##

class IWshNetwork_Class(CoClass):
    u'Network Object'
    _reg_clsid_ = GUID('{F935DC26-1CF0-11D0-ADB9-00C04FD58A0B}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
IWshNetwork_Class._com_interfaces_ = [IWshNetwork2]

class Folder(CoClass):
    _reg_clsid_ = GUID('{C7C3F5B3-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
Folder._com_interfaces_ = [IFolder]

IFile._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPath' )),
    COMMETHOD([dispid(1000), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1000), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'pbstrName' )),
    COMMETHOD([dispid(1002), 'propget'], HRESULT, 'ShortPath',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPath' )),
    COMMETHOD([dispid(1001), 'propget'], HRESULT, 'ShortName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1004), 'propget'], HRESULT, 'Drive',
              ( ['retval', 'out'], POINTER(POINTER(IDrive)), 'ppdrive' )),
    COMMETHOD([dispid(1005), 'propget'], HRESULT, 'ParentFolder',
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(1003), 'propget'], HRESULT, 'Attributes',
              ( ['retval', 'out'], POINTER(FileAttribute), 'pfa' )),
    COMMETHOD([dispid(1003), 'propput'], HRESULT, 'Attributes',
              ( ['in'], FileAttribute, 'pfa' )),
    COMMETHOD([dispid(1006), 'propget'], HRESULT, 'DateCreated',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(1007), 'propget'], HRESULT, 'DateLastModified',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(1008), 'propget'], HRESULT, 'DateLastAccessed',
              ( ['retval', 'out'], POINTER(c_double), 'pdate' )),
    COMMETHOD([dispid(1009), 'propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarSize' )),
    COMMETHOD([dispid(1010), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrType' )),
    COMMETHOD([dispid(1200)], HRESULT, 'Delete',
              ( ['in', 'optional'], VARIANT_BOOL, 'Force', False )),
    COMMETHOD([dispid(1202)], HRESULT, 'Copy',
              ( ['in'], BSTR, 'Destination' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'OverWriteFiles', True )),
    COMMETHOD([dispid(1204)], HRESULT, 'Move',
              ( ['in'], BSTR, 'Destination' )),
    COMMETHOD([dispid(1100)], HRESULT, 'OpenAsTextStream',
              ( ['in', 'optional'], IOMode, 'IOMode', 1 ),
              ( ['in', 'optional'], Tristate, 'Format', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
]
################################################################
## code template for IFile implementation
##class IFile_Impl(object):
##    @property
##    def ShortPath(self):
##        '-no docstring-'
##        #return pbstrPath
##
##    def Copy(self, Destination, OverWriteFiles):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrName
##    def _set(self, pbstrName):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def OpenAsTextStream(self, IOMode, Format):
##        '-no docstring-'
##        #return ppts
##
##    def Move(self, Destination):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Drive(self):
##        '-no docstring-'
##        #return ppdrive
##
##    @property
##    def DateCreated(self):
##        '-no docstring-'
##        #return pdate
##
##    @property
##    def ParentFolder(self):
##        '-no docstring-'
##        #return ppfolder
##
##    @property
##    def DateLastModified(self):
##        '-no docstring-'
##        #return pdate
##
##    @property
##    def DateLastAccessed(self):
##        '-no docstring-'
##        #return pdate
##
##    def _get(self):
##        '-no docstring-'
##        #return pfa
##    def _set(self, pfa):
##        '-no docstring-'
##    Attributes = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return pbstrPath
##
##    @property
##    def ShortName(self):
##        '-no docstring-'
##        #return pbstrName
##
##    def Delete(self, Force):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return pbstrType
##
##    @property
##    def Size(self):
##        '-no docstring-'
##        #return pvarSize
##

class FileSystemObject(CoClass):
    _reg_clsid_ = GUID('{0D43FE01-F093-11CF-8940-00A0C9054228}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
class IFileSystem3(IFileSystem):
    _case_insensitive_ = True
    _iid_ = GUID('{2A0B9D10-4B87-11D3-A97A-00104B365C9F}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
FileSystemObject._com_interfaces_ = [IFileSystem3]


# values for enumeration 'CompareMethod'
BinaryCompare = 0
TextCompare = 1
DatabaseCompare = 2
CompareMethod = c_int # enum
IDrive._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPath' )),
    COMMETHOD([dispid(10000), 'propget'], HRESULT, 'DriveLetter',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrLetter' )),
    COMMETHOD([dispid(10001), 'propget'], HRESULT, 'ShareName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrShareName' )),
    COMMETHOD([dispid(10002), 'propget'], HRESULT, 'DriveType',
              ( ['retval', 'out'], POINTER(DriveTypeConst), 'pdt' )),
    COMMETHOD([dispid(10003), 'propget'], HRESULT, 'RootFolder',
              ( ['retval', 'out'], POINTER(POINTER(IFolder)), 'ppfolder' )),
    COMMETHOD([dispid(10005), 'propget'], HRESULT, 'AvailableSpace',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarAvail' )),
    COMMETHOD([dispid(10004), 'propget'], HRESULT, 'FreeSpace',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarFree' )),
    COMMETHOD([dispid(10006), 'propget'], HRESULT, 'TotalSize',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarTotal' )),
    COMMETHOD([dispid(10007), 'propget'], HRESULT, 'VolumeName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(10007), 'propput'], HRESULT, 'VolumeName',
              ( ['in'], BSTR, 'pbstrName' )),
    COMMETHOD([dispid(10008), 'propget'], HRESULT, 'FileSystem',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrFileSystem' )),
    COMMETHOD([dispid(10009), 'propget'], HRESULT, 'SerialNumber',
              ( ['retval', 'out'], POINTER(c_int), 'pulSerialNumber' )),
    COMMETHOD([dispid(10010), 'propget'], HRESULT, 'IsReady',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfReady' )),
]
################################################################
## code template for IDrive implementation
##class IDrive_Impl(object):
##    @property
##    def FreeSpace(self):
##        '-no docstring-'
##        #return pvarFree
##
##    @property
##    def IsReady(self):
##        '-no docstring-'
##        #return pfReady
##
##    @property
##    def DriveLetter(self):
##        '-no docstring-'
##        #return pbstrLetter
##
##    @property
##    def TotalSize(self):
##        '-no docstring-'
##        #return pvarTotal
##
##    @property
##    def ShareName(self):
##        '-no docstring-'
##        #return pbstrShareName
##
##    @property
##    def FileSystem(self):
##        '-no docstring-'
##        #return pbstrFileSystem
##
##    @property
##    def SerialNumber(self):
##        '-no docstring-'
##        #return pulSerialNumber
##
##    @property
##    def AvailableSpace(self):
##        '-no docstring-'
##        #return pvarAvail
##
##    @property
##    def DriveType(self):
##        '-no docstring-'
##        #return pdt
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return pbstrPath
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrName
##    def _set(self, pbstrName):
##        '-no docstring-'
##    VolumeName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RootFolder(self):
##        '-no docstring-'
##        #return ppfolder
##

class Drives(CoClass):
    _reg_clsid_ = GUID('{C7C3F5B2-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
Drives._com_interfaces_ = [IDriveCollection]

class Folders(CoClass):
    _reg_clsid_ = GUID('{C7C3F5B4-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
Folders._com_interfaces_ = [IFolderCollection]

IFileSystem3._methods_ = [
    COMMETHOD([dispid(20000)], HRESULT, 'GetStandardStream',
              ( ['in'], StandardStreamTypes, 'StandardStreamType' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Unicode', False ),
              ( ['retval', 'out'], POINTER(POINTER(ITextStream)), 'ppts' )),
    COMMETHOD([dispid(20010)], HRESULT, 'GetFileVersion',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(BSTR), 'FileVersion' )),
]
################################################################
## code template for IFileSystem3 implementation
##class IFileSystem3_Impl(object):
##    def GetStandardStream(self, StandardStreamType, Unicode):
##        '-no docstring-'
##        #return ppts
##
##    def GetFileVersion(self, FileName):
##        '-no docstring-'
##        #return FileVersion
##

class WshShell(CoClass):
    u'Shell Object'
    _reg_clsid_ = GUID('{72C24DD5-D70A-438B-8A42-98424B88AFB8}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
WshShell._com_interfaces_ = [IWshShell3]

class File(CoClass):
    _reg_clsid_ = GUID('{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}', 1, 0)
File._com_interfaces_ = [IFile]

ITextStream._methods_ = [
    COMMETHOD([dispid(10000), 'propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(c_int), 'Line' )),
    COMMETHOD([dispid(-529), 'propget'], HRESULT, 'Column',
              ( ['retval', 'out'], POINTER(c_int), 'Column' )),
    COMMETHOD([dispid(10002), 'propget'], HRESULT, 'AtEndOfStream',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'EOS' )),
    COMMETHOD([dispid(10003), 'propget'], HRESULT, 'AtEndOfLine',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'EOL' )),
    COMMETHOD([dispid(10004)], HRESULT, 'Read',
              ( ['in'], c_int, 'Characters' ),
              ( ['retval', 'out'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(10005)], HRESULT, 'ReadLine',
              ( ['retval', 'out'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(10006)], HRESULT, 'ReadAll',
              ( ['retval', 'out'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(10007)], HRESULT, 'Write',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(10008)], HRESULT, 'WriteLine',
              ( ['in', 'optional'], BSTR, 'Text', u'' )),
    COMMETHOD([dispid(10009)], HRESULT, 'WriteBlankLines',
              ( ['in'], c_int, 'Lines' )),
    COMMETHOD([dispid(10010)], HRESULT, 'Skip',
              ( ['in'], c_int, 'Characters' )),
    COMMETHOD([dispid(10011)], HRESULT, 'SkipLine'),
    COMMETHOD([dispid(10012)], HRESULT, 'Close'),
]
################################################################
## code template for ITextStream implementation
##class ITextStream_Impl(object):
##    def Write(self, Text):
##        '-no docstring-'
##        #return 
##
##    def ReadAll(self):
##        '-no docstring-'
##        #return Text
##
##    def WriteBlankLines(self, Lines):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return Column
##
##    def Skip(self, Characters):
##        '-no docstring-'
##        #return 
##
##    def SkipLine(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AtEndOfLine(self):
##        '-no docstring-'
##        #return EOL
##
##    def Read(self, Characters):
##        '-no docstring-'
##        #return Text
##
##    def WriteLine(self, Text):
##        '-no docstring-'
##        #return 
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return Line
##
##    @property
##    def AtEndOfStream(self):
##        '-no docstring-'
##        #return EOS
##
##    def ReadLine(self):
##        '-no docstring-'
##        #return Text
##

__all__ = [ 'TristateFalse', 'IDrive', 'IWshEnvironment', 'Files',
           'DatabaseCompare',
           '__MIDL___MIDL_itf_iwshom_0001_0016_0001',
           'IDriveCollection', 'StdIn', 'SpecialFolderConst',
           'WshCollection', 'TristateUseDefault',
           '__MIDL___MIDL_itf_iwshom_0000_0000_0003',
           '__MIDL___MIDL_itf_iwshom_0000_0000_0002',
           '__MIDL___MIDL_itf_iwshom_0000_0000_0004', 'ForAppending',
           'CompareMethod', 'WshMaximizedFocus', 'IFolder',
           'IFileSystem', 'WshShell', 'WshShortcut', 'WshRunning',
           'SystemFolder', 'IWshEnvironment_Class', 'Fixed',
           'ForReading', 'ITextStream', 'IWshShell3', 'IWshShell2',
           'WshNetwork', 'DriveTypeConst', 'TristateMixed', 'System',
           'WshWindowStyle', 'WshEnvironment', 'ReadOnly', 'StdErr',
           'IWshShortcut_Class', 'ForWriting', 'WshExec', 'StdOut',
           'WindowsFolder', 'WshFinished', 'IWshNetwork2',
           'IWshCollection_Class', 'Directory', 'Alias',
           'TristateTrue', 'WshNormalNoFocus',
           'IWshURLShortcut_Class', 'TextStream', 'UnknownType',
           'Tristate', 'WshFailed', 'Removable', 'IWshNetwork_Class',
           'IWshShortcut', '__MIDL___MIDL_itf_iwshom_0000_0000_0001',
           'WshExecStatus', 'IFolderCollection', 'Normal', 'Drives',
           'IWshShell_Class', 'Compressed', 'IWshExec',
           'FileSystemObject', 'Remote', 'TextCompare',
           'WshNormalFocus', 'WshHide', 'IWshShell', 'IFile',
           'TemporaryFolder', 'WshURLShortcut', 'IWshCollection',
           'IFileCollection', 'Archive', 'WshMinimizedNoFocus',
           '__MIDL___MIDL_itf_iwshom_0001_0037_0001', 'Hidden',
           'Folder', 'Folders', 'Volume', 'WshMinimizedFocus',
           'CDRom', 'IOMode', 'RamDisk', 'Drive', 'BinaryCompare',
           'FileAttribute', 'IWshURLShortcut', 'IWshNetwork',
           'IFileSystem3', 'File', 'StandardStreamTypes']
from comtypes import _check_version; _check_version('', 1552970702.882360)
