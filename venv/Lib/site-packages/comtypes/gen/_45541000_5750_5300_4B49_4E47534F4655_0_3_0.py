# -*- coding: mbcs -*-
typelib_path = u'C:\\Users\\Administrator\\AppData\\Local\\Kingsoft\\WPS Office\\11.1.0.10069\\office6\\etapi.dll'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from comtypes import CoClass
from comtypes.automation import IDispatch
from comtypes import BSTR
from comtypes.automation import VARIANT
from comtypes import dispid
from comtypes import DISPMETHOD, DISPPROPERTY, helpstring
import comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1
from ctypes.wintypes import VARIANT_BOOL
from ctypes import HRESULT
from comtypes import IUnknown
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes.automation import _midlSAFEARRAY
import comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3


class ChartGroup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020859-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Application(CoClass):
    _reg_clsid_ = GUID('{00024500-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
class _Application(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
class AppEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024413-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Application._com_interfaces_ = [_Application]
Application._outgoing_interfaces_ = [AppEvents]


# values for enumeration 'XlCreator'
xlCreatorCode = 1480803660
XlCreator = c_int # enum

# values for enumeration 'XlAxisGroup'
xlPrimary = 1
xlSecondary = 2
XlAxisGroup = c_int # enum
class DownBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C6-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Border(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020854-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Border._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(99), 'propget'], VARIANT, 'Color'),
    DISPMETHOD([dispid(99), 'propput'], None, 'Color',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(97), 'propget'], VARIANT, 'ColorIndex'),
    DISPMETHOD([dispid(97), 'propput'], None, 'ColorIndex',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(119), 'propget'], VARIANT, 'LineStyle'),
    DISPMETHOD([dispid(119), 'propput'], None, 'LineStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(120), 'propget'], VARIANT, 'Weight'),
    DISPMETHOD([dispid(120), 'propput'], None, 'Weight',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2365), 'propget'], VARIANT, 'ThemeColor'),
    DISPMETHOD([dispid(2365), 'propput'], None, 'ThemeColor',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2366), 'propget'], VARIANT, 'TintAndShade'),
    DISPMETHOD([dispid(2366), 'propput'], None, 'TintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
]
class Interior(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020870-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Interior._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(99), 'propget'], VARIANT, 'Color'),
    DISPMETHOD([dispid(99), 'propput'], None, 'Color',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(97), 'propget'], VARIANT, 'ColorIndex'),
    DISPMETHOD([dispid(97), 'propput'], None, 'ColorIndex',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(132), 'propget'], VARIANT, 'InvertIfNegative'),
    DISPMETHOD([dispid(132), 'propput'], None, 'InvertIfNegative',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(95), 'propget'], VARIANT, 'Pattern'),
    DISPMETHOD([dispid(95), 'propput'], None, 'Pattern',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(100), 'propget'], VARIANT, 'PatternColor'),
    DISPMETHOD([dispid(100), 'propput'], None, 'PatternColor',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(98), 'propget'], VARIANT, 'PatternColorIndex'),
    DISPMETHOD([dispid(98), 'propput'], None, 'PatternColorIndex',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2365), 'propget'], VARIANT, 'ThemeColor'),
    DISPMETHOD([dispid(2365), 'propput'], None, 'ThemeColor',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2366), 'propget'], VARIANT, 'TintAndShade'),
    DISPMETHOD([dispid(2366), 'propput'], None, 'TintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2643), 'propget'], VARIANT, 'PatternThemeColor'),
    DISPMETHOD([dispid(2643), 'propput'], None, 'PatternThemeColor',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2644), 'propget'], VARIANT, 'PatternTintAndShade'),
    DISPMETHOD([dispid(2644), 'propput'], None, 'PatternTintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2645), 'propget'], POINTER(IDispatch), 'Gradient'),
]
class ChartFillFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024435-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class ChartColorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024436-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ChartColorFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1646), 'propget'], c_int, 'SchemeColor'),
    DISPMETHOD([dispid(1646), 'propput'], None, 'SchemeColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1055), 'propget'], c_int, 'RGB'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
]
ChartFillFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1621)], None, 'OneColorGradient',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
               ( ['in'], c_int, 'Variant' ),
               ( ['in'], c_float, 'Degree' )),
    DISPMETHOD([dispid(1624)], None, 'TwoColorGradient',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
               ( ['in'], c_int, 'Variant' )),
    DISPMETHOD([dispid(1625)], None, 'PresetTextured',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTexture, 'PresetTexture' )),
    DISPMETHOD([dispid(1627)], None, 'Solid'),
    DISPMETHOD([dispid(1628)], None, 'Patterned',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType, 'Pattern' )),
    DISPMETHOD([dispid(1629)], None, 'UserPicture',
               ( ['in', 'optional'], VARIANT, 'PictureFile' ),
               ( ['in', 'optional'], VARIANT, 'PictureFormat' ),
               ( ['in', 'optional'], VARIANT, 'PictureStackUnit' ),
               ( ['in', 'optional'], VARIANT, 'PicturePlacement' )),
    DISPMETHOD([dispid(1634)], None, 'UserTextured',
               ( ['in'], BSTR, 'TextureFile' )),
    DISPMETHOD([dispid(1636)], None, 'PresetGradient',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
               ( ['in'], c_int, 'Variant' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetGradientType, 'PresetGradientType' )),
    DISPMETHOD([dispid(1638), 'propget'], POINTER(ChartColorFormat), 'BackColor'),
    DISPMETHOD([dispid(1639), 'propget'], POINTER(ChartColorFormat), 'ForeColor'),
    DISPMETHOD([dispid(1640), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientColorType, 'GradientColorType'),
    DISPMETHOD([dispid(1641), 'propget'], c_float, 'GradientDegree'),
    DISPMETHOD([dispid(1642), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'GradientStyle'),
    DISPMETHOD([dispid(1643), 'propget'], c_int, 'GradientVariant'),
    DISPMETHOD([dispid(95), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType, 'Pattern'),
    DISPMETHOD([dispid(1637), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetGradientType, 'PresetGradientType'),
    DISPMETHOD([dispid(1626), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTexture, 'PresetTexture'),
    DISPMETHOD([dispid(1644), 'propget'], BSTR, 'TextureName'),
    DISPMETHOD([dispid(1645), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextureType, 'TextureType'),
    DISPMETHOD([dispid(108), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFillType, 'Type'),
    DISPMETHOD([dispid(558), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
]
class ChartFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class FillFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0314-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class LineFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0317-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PictureFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ShadowFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextFrame2(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0398-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ThreeDFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0321-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Adjustments(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0310-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ChartFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1663), 'propget'], POINTER(FillFormat), 'Fill'),
    DISPMETHOD([dispid(2663), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.GlowFormat), 'Glow'),
    DISPMETHOD([dispid(817), 'propget'], POINTER(LineFormat), 'Line'),
    DISPMETHOD([dispid(1631), 'propget'], POINTER(PictureFormat), 'PictureFormat'),
    DISPMETHOD([dispid(103), 'propget'], POINTER(ShadowFormat), 'Shadow'),
    DISPMETHOD([dispid(2662), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SoftEdgeFormat), 'SoftEdge'),
    DISPMETHOD([dispid(2659), 'propget'], POINTER(TextFrame2), 'TextFrame2'),
    DISPMETHOD([dispid(1703), 'propget'], POINTER(ThreeDFormat), 'ThreeD'),
    DISPMETHOD([dispid(1691), 'propget'], POINTER(Adjustments), 'Adjustments'),
    DISPMETHOD([dispid(1693), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'AutoShapeType'),
    DISPMETHOD([dispid(1693), 'propput'], None, 'AutoShapeType',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'rhs' )),
]
DownBars._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class DropLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
DropLines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class HiLoLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
HiLoLines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class TickLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C9-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Font(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002084D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlThemeFont'
xlThemeFontNone = 0
xlThemeFontMajor = 1
xlThemeFontMinor = 2
XlThemeFont = c_int # enum
Font._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(180), 'propget'], VARIANT, 'Background'),
    DISPMETHOD([dispid(180), 'propput'], None, 'Background',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(96), 'propget'], VARIANT, 'Bold'),
    DISPMETHOD([dispid(96), 'propput'], None, 'Bold',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(99), 'propget'], VARIANT, 'Color'),
    DISPMETHOD([dispid(99), 'propput'], None, 'Color',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(97), 'propget'], VARIANT, 'ColorIndex'),
    DISPMETHOD([dispid(97), 'propput'], None, 'ColorIndex',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(177), 'propget'], VARIANT, 'FontStyle'),
    DISPMETHOD([dispid(177), 'propput'], None, 'FontStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(101), 'propget'], VARIANT, 'Italic'),
    DISPMETHOD([dispid(101), 'propput'], None, 'Italic',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], VARIANT, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(221), 'hidden', 'propget'], VARIANT, 'OutlineFont'),
    DISPMETHOD([dispid(221), 'hidden', 'propput'], None, 'OutlineFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(103), 'hidden', 'propget'], VARIANT, 'Shadow'),
    DISPMETHOD([dispid(103), 'hidden', 'propput'], None, 'Shadow',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(104), 'propget'], VARIANT, 'Size'),
    DISPMETHOD([dispid(104), 'propput'], None, 'Size',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(105), 'propget'], VARIANT, 'Strikethrough'),
    DISPMETHOD([dispid(105), 'propput'], None, 'Strikethrough',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(179), 'propget'], VARIANT, 'Subscript'),
    DISPMETHOD([dispid(179), 'propput'], None, 'Subscript',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(178), 'propget'], VARIANT, 'Superscript'),
    DISPMETHOD([dispid(178), 'propput'], None, 'Superscript',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(106), 'propget'], VARIANT, 'Underline'),
    DISPMETHOD([dispid(106), 'propput'], None, 'Underline',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2365), 'propget'], VARIANT, 'ThemeColor'),
    DISPMETHOD([dispid(2365), 'propput'], None, 'ThemeColor',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2366), 'propget'], VARIANT, 'TintAndShade'),
    DISPMETHOD([dispid(2366), 'propput'], None, 'TintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2367), 'propget'], XlThemeFont, 'ThemeFont'),
    DISPMETHOD([dispid(2367), 'propput'], None, 'ThemeFont',
               ( ['in'], XlThemeFont, 'rhs' )),
]

# values for enumeration 'XlTickLabelOrientation'
xlTickLabelOrientationAutomatic = -4105
xlTickLabelOrientationDownward = -4170
xlTickLabelOrientationHorizontal = -4128
xlTickLabelOrientationUpward = -4171
xlTickLabelOrientationVertical = -4166
XlTickLabelOrientation = c_int # enum
TickLabels._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(193), 'propget'], BSTR, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(194), 'propget'], VARIANT_BOOL, 'NumberFormatLinked'),
    DISPMETHOD([dispid(194), 'propput'], None, 'NumberFormatLinked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1097), 'propget'], VARIANT, 'NumberFormatLocal'),
    DISPMETHOD([dispid(1097), 'propput'], None, 'NumberFormatLocal',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], XlTickLabelOrientation, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], XlTickLabelOrientation, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1890), 'propget'], c_int, 'Depth'),
    DISPMETHOD([dispid(254), 'propget'], c_int, 'Offset'),
    DISPMETHOD([dispid(254), 'propput'], None, 'Offset',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(453), 'propget'], c_int, 'Alignment'),
    DISPMETHOD([dispid(453), 'propput'], None, 'Alignment',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2653), 'propget'], VARIANT_BOOL, 'MultiLevel'),
    DISPMETHOD([dispid(2653), 'propput'], None, 'MultiLevel',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class SeriesLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SeriesLines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class UpBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C5-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
UpBars._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]

# values for enumeration 'XlSizeRepresents'
xlSizeIsWidth = 2
xlSizeIsArea = 1
XlSizeRepresents = c_int # enum

# values for enumeration 'XlChartSplitType'
xlSplitByPosition = 1
xlSplitByPercentValue = 3
xlSplitByCustomSplit = 4
xlSplitByValue = 2
XlChartSplitType = c_int # enum
ChartGroup._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(47), 'propget'], XlAxisGroup, 'AxisGroup'),
    DISPMETHOD([dispid(47), 'propput'], None, 'AxisGroup',
               ( ['in'], XlAxisGroup, 'rhs' )),
    DISPMETHOD([dispid(1126), 'propget'], c_int, 'DoughnutHoleSize'),
    DISPMETHOD([dispid(1126), 'propput'], None, 'DoughnutHoleSize',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(141), 'propget'], POINTER(DownBars), 'DownBars'),
    DISPMETHOD([dispid(142), 'propget'], POINTER(DropLines), 'DropLines'),
    DISPMETHOD([dispid(63), 'propget'], c_int, 'FirstSliceAngle'),
    DISPMETHOD([dispid(63), 'propput'], None, 'FirstSliceAngle',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(51), 'propget'], c_int, 'GapWidth'),
    DISPMETHOD([dispid(51), 'propput'], None, 'GapWidth',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(61), 'propget'], VARIANT_BOOL, 'HasDropLines'),
    DISPMETHOD([dispid(61), 'propput'], None, 'HasDropLines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(62), 'propget'], VARIANT_BOOL, 'HasHiLoLines'),
    DISPMETHOD([dispid(62), 'propput'], None, 'HasHiLoLines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(64), 'propget'], VARIANT_BOOL, 'HasRadarAxisLabels'),
    DISPMETHOD([dispid(64), 'propput'], None, 'HasRadarAxisLabels',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(65), 'propget'], VARIANT_BOOL, 'HasSeriesLines'),
    DISPMETHOD([dispid(65), 'propput'], None, 'HasSeriesLines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(66), 'propget'], VARIANT_BOOL, 'HasUpDownBars'),
    DISPMETHOD([dispid(66), 'propput'], None, 'HasUpDownBars',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(143), 'propget'], POINTER(HiLoLines), 'HiLoLines'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(56), 'propget'], c_int, 'Overlap'),
    DISPMETHOD([dispid(56), 'propput'], None, 'Overlap',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(144), 'propget'], POINTER(TickLabels), 'RadarAxisLabels'),
    DISPMETHOD([dispid(68)], POINTER(IDispatch), 'SeriesCollection',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(145), 'propget'], POINTER(SeriesLines), 'SeriesLines'),
    DISPMETHOD([dispid(109), 'hidden', 'propget'], c_int, 'SubType'),
    DISPMETHOD([dispid(109), 'hidden', 'propput'], None, 'SubType',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(108), 'hidden', 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(108), 'hidden', 'propput'], None, 'Type',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(140), 'propget'], POINTER(UpBars), 'UpBars'),
    DISPMETHOD([dispid(60), 'propget'], VARIANT_BOOL, 'VaryByCategories'),
    DISPMETHOD([dispid(60), 'propput'], None, 'VaryByCategories',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1652), 'propget'], XlSizeRepresents, 'SizeRepresents'),
    DISPMETHOD([dispid(1652), 'propput'], None, 'SizeRepresents',
               ( ['in'], XlSizeRepresents, 'rhs' )),
    DISPMETHOD([dispid(1653), 'propget'], c_int, 'BubbleScale'),
    DISPMETHOD([dispid(1653), 'propput'], None, 'BubbleScale',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1654), 'propget'], VARIANT_BOOL, 'ShowNegativeBubbles'),
    DISPMETHOD([dispid(1654), 'propput'], None, 'ShowNegativeBubbles',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1655), 'propget'], XlChartSplitType, 'SplitType'),
    DISPMETHOD([dispid(1655), 'propput'], None, 'SplitType',
               ( ['in'], XlChartSplitType, 'rhs' )),
    DISPMETHOD([dispid(1656), 'propget'], VARIANT, 'SplitValue'),
    DISPMETHOD([dispid(1656), 'propput'], None, 'SplitValue',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1657), 'propget'], c_int, 'SecondPlotSize'),
    DISPMETHOD([dispid(1657), 'propput'], None, 'SecondPlotSize',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1658), 'propget'], VARIANT_BOOL, 'Has3DShading'),
    DISPMETHOD([dispid(1658), 'propput'], None, 'Has3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3081)], POINTER(IDispatch), 'FullCategoryCollection',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(3082)], POINTER(IDispatch), 'CategoryCollection',
               ( ['in', 'optional'], VARIANT, 'Index' )),
]
class IListBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020888-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlPictureAppearance'
xlPrinter = 2
xlScreen = 1
XlPictureAppearance = c_int # enum

# values for enumeration 'XlCopyPictureFormat'
xlBitmap = 2
xlPicture = -4147
XlCopyPictureFormat = c_int # enum
class ShapeRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Shape(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024439-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class TextFrame(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Characters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020878-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Characters._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(252)], VARIANT, 'Insert',
               ( ['in'], BSTR, 'String' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1522), 'propget'], BSTR, 'PhoneticCharacters'),
    DISPMETHOD([dispid(1522), 'propput'], None, 'PhoneticCharacters',
               ( ['in'], BSTR, 'rhs' )),
]

# values for enumeration 'XlHAlign'
xlHAlignCenter = -4108
xlHAlignCenterAcrossSelection = 7
xlHAlignDistributed = -4117
xlHAlignFill = 5
xlHAlignGeneral = 1
xlHAlignJustify = -4130
xlHAlignLeft = -4131
xlHAlignRight = -4152
XlHAlign = c_int # enum

# values for enumeration 'XlVAlign'
xlVAlignBottom = -4107
xlVAlignCenter = -4108
xlVAlignDistributed = -4117
xlVAlignJustify = -4130
xlVAlignTop = -4160
XlVAlign = c_int # enum

# values for enumeration 'XlOartVerticalOverflow'
xlOartVerticalOverflowOverflow = 0
xlOartVerticalOverflowClip = 1
xlOartVerticalOverflowEllipsis = 2
XlOartVerticalOverflow = c_int # enum

# values for enumeration 'XlOartHorizontalOverflow'
xlOartHorizontalOverflowOverflow = 0
xlOartHorizontalOverflowClip = 1
XlOartHorizontalOverflow = c_int # enum
TextFrame._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1745), 'propget'], c_float, 'MarginBottom'),
    DISPMETHOD([dispid(1745), 'propput'], None, 'MarginBottom',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1746), 'propget'], c_float, 'MarginLeft'),
    DISPMETHOD([dispid(1746), 'propput'], None, 'MarginLeft',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1747), 'propget'], c_float, 'MarginRight'),
    DISPMETHOD([dispid(1747), 'propput'], None, 'MarginRight',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1748), 'propget'], c_float, 'MarginTop'),
    DISPMETHOD([dispid(1748), 'propput'], None, 'MarginTop',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'rhs' )),
    DISPMETHOD([dispid(603)], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(136), 'propget'], XlHAlign, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], XlHAlign, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], XlVAlign, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], XlVAlign, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1749), 'propget'], VARIANT_BOOL, 'AutoMargins'),
    DISPMETHOD([dispid(1749), 'propput'], None, 'AutoMargins',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2922), 'propget'], XlOartVerticalOverflow, 'VerticalOverflow'),
    DISPMETHOD([dispid(2922), 'propput'], None, 'VerticalOverflow',
               ( ['in'], XlOartVerticalOverflow, 'rhs' )),
    DISPMETHOD([dispid(2923), 'propget'], XlOartHorizontalOverflow, 'HorizontalOverflow'),
    DISPMETHOD([dispid(2923), 'propput'], None, 'HorizontalOverflow',
               ( ['in'], XlOartHorizontalOverflow, 'rhs' )),
]
class CalloutFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0311-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ConnectorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443E-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ConnectorFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1750)], None, 'BeginConnect',
               ( ['in'], POINTER(Shape), 'ConnectedShape' ),
               ( ['in'], c_int, 'ConnectionSite' )),
    DISPMETHOD([dispid(1753)], None, 'BeginDisconnect'),
    DISPMETHOD([dispid(1754)], None, 'EndConnect',
               ( ['in'], POINTER(Shape), 'ConnectedShape' ),
               ( ['in'], c_int, 'ConnectionSite' )),
    DISPMETHOD([dispid(1755)], None, 'EndDisconnect'),
    DISPMETHOD([dispid(1756), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'BeginConnected'),
    DISPMETHOD([dispid(1757), 'propget'], POINTER(Shape), 'BeginConnectedShape'),
    DISPMETHOD([dispid(1758), 'propget'], c_int, 'BeginConnectionSite'),
    DISPMETHOD([dispid(1759), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'EndConnected'),
    DISPMETHOD([dispid(1760), 'propget'], POINTER(Shape), 'EndConnectedShape'),
    DISPMETHOD([dispid(1761), 'propget'], c_int, 'EndConnectionSite'),
    DISPMETHOD([dispid(108), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoConnectorType, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoConnectorType, 'rhs' )),
]
class GroupShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
GroupShapes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Shape), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0)], POINTER(Shape), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(ShapeRange), 'Range',
               ( ['in'], VARIANT, 'Index' )),
]
class ShapeNodes(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0319-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class TextEffectFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C031F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class Hyperlink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024431-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Range(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020846-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlReferenceStyle'
xlA1 = 1
xlR1C1 = -4150
XlReferenceStyle = c_int # enum

# values for enumeration 'XlFilterAction'
xlFilterCopy = 2
xlFilterInPlace = 1
XlFilterAction = c_int # enum

# values for enumeration 'XlApplyNamesOrder'
xlColumnThenRow = 2
xlRowThenColumn = 1
XlApplyNamesOrder = c_int # enum
class Areas(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020860-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Areas._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Range), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Range), '_Default',
               ( ['in'], c_int, 'Index' )),
]

# values for enumeration 'XlAutoFillType'
xlFillCopy = 1
xlFillDays = 5
xlFillDefault = 0
xlFillFormats = 3
xlFillMonths = 7
xlFillSeries = 2
xlFillValues = 4
xlFillWeekdays = 6
xlFillYears = 8
xlGrowthTrend = 10
xlLinearTrend = 9
xlFlashFill = 11
XlAutoFillType = c_int # enum

# values for enumeration 'XlAutoFilterOperator'
xlAnd = 1
xlBottom10Items = 4
xlBottom10Percent = 6
xlOr = 2
xlTop10Items = 3
xlTop10Percent = 5
xlFilterValues = 7
xlFilterCellColor = 8
xlFilterFontColor = 9
xlFilterIcon = 10
xlFilterDynamic = 11
xlFilterNoFill = 12
xlFilterAutomaticFontColor = 13
xlFilterNoIcon = 14
XlAutoFilterOperator = c_int # enum

# values for enumeration 'XlRangeAutoFormat'
xlRangeAutoFormat3DEffects1 = 13
xlRangeAutoFormat3DEffects2 = 14
xlRangeAutoFormatAccounting1 = 4
xlRangeAutoFormatAccounting2 = 5
xlRangeAutoFormatAccounting3 = 6
xlRangeAutoFormatAccounting4 = 17
xlRangeAutoFormatClassic1 = 1
xlRangeAutoFormatClassic2 = 2
xlRangeAutoFormatClassic3 = 3
xlRangeAutoFormatColor1 = 7
xlRangeAutoFormatColor2 = 8
xlRangeAutoFormatColor3 = 9
xlRangeAutoFormatList1 = 10
xlRangeAutoFormatList2 = 11
xlRangeAutoFormatList3 = 12
xlRangeAutoFormatLocalFormat1 = 15
xlRangeAutoFormatLocalFormat2 = 16
xlRangeAutoFormatLocalFormat3 = 19
xlRangeAutoFormatLocalFormat4 = 20
xlRangeAutoFormatReport1 = 21
xlRangeAutoFormatReport2 = 22
xlRangeAutoFormatReport3 = 23
xlRangeAutoFormatReport4 = 24
xlRangeAutoFormatReport5 = 25
xlRangeAutoFormatReport6 = 26
xlRangeAutoFormatReport7 = 27
xlRangeAutoFormatReport8 = 28
xlRangeAutoFormatReport9 = 29
xlRangeAutoFormatReport10 = 30
xlRangeAutoFormatClassicPivotTable = 31
xlRangeAutoFormatTable1 = 32
xlRangeAutoFormatTable2 = 33
xlRangeAutoFormatTable3 = 34
xlRangeAutoFormatTable4 = 35
xlRangeAutoFormatTable5 = 36
xlRangeAutoFormatTable6 = 37
xlRangeAutoFormatTable7 = 38
xlRangeAutoFormatTable8 = 39
xlRangeAutoFormatTable9 = 40
xlRangeAutoFormatTable10 = 41
xlRangeAutoFormatPTNone = 42
xlRangeAutoFormatNone = -4142
xlRangeAutoFormatSimple = -4154
XlRangeAutoFormat = c_int # enum

# values for enumeration 'XlBorderWeight'
xlHairline = 1
xlMedium = -4138
xlThick = 4
xlThin = 2
XlBorderWeight = c_int # enum

# values for enumeration 'XlColorIndex'
xlColorIndexAutomatic = -4105
xlColorIndexNone = -4142
XlColorIndex = c_int # enum
class Borders(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020855-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlBordersIndex'
xlInsideHorizontal = 12
xlInsideVertical = 11
xlDiagonalDown = 5
xlDiagonalUp = 6
xlEdgeBottom = 9
xlEdgeLeft = 7
xlEdgeRight = 10
xlEdgeTop = 8
XlBordersIndex = c_int # enum
Borders._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(99), 'propget'], VARIANT, 'Color'),
    DISPMETHOD([dispid(99), 'propput'], None, 'Color',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(97), 'propget'], VARIANT, 'ColorIndex'),
    DISPMETHOD([dispid(97), 'propput'], None, 'ColorIndex',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Border), 'Item',
               ( ['in'], XlBordersIndex, 'Index' )),
    DISPMETHOD([dispid(119), 'propget'], VARIANT, 'LineStyle'),
    DISPMETHOD([dispid(119), 'propput'], None, 'LineStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(120), 'propget'], VARIANT, 'Weight'),
    DISPMETHOD([dispid(120), 'propput'], None, 'Weight',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Border), '_Default',
               ( ['in'], XlBordersIndex, 'Index' )),
    DISPMETHOD([dispid(2365), 'propget'], VARIANT, 'ThemeColor'),
    DISPMETHOD([dispid(2365), 'propput'], None, 'ThemeColor',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2366), 'propget'], VARIANT, 'TintAndShade'),
    DISPMETHOD([dispid(2366), 'propput'], None, 'TintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
]

# values for enumeration 'XlDataSeriesType'
xlAutoFill = 4
xlChronological = 3
xlGrowth = 2
xlDataSeriesLinear = -4132
XlDataSeriesType = c_int # enum

# values for enumeration 'XlDataSeriesDate'
xlDay = 1
xlMonth = 3
xlWeekday = 2
xlYear = 4
XlDataSeriesDate = c_int # enum

# values for enumeration 'XlEditionType'
xlPublisher = 1
xlSubscriber = 2
XlEditionType = c_int # enum

# values for enumeration 'XlEditionOptionsOption'
xlAutomaticUpdate = 4
xlCancel = 1
xlChangeAttributes = 6
xlManualUpdate = 5
xlOpenSource = 3
xlSelect = 3
xlSendPublisher = 2
xlUpdateSubscriber = 2
XlEditionOptionsOption = c_int # enum

# values for enumeration 'XlDirection'
xlDown = -4121
xlToLeft = -4159
xlToRight = -4161
xlUp = -4162
XlDirection = c_int # enum

# values for enumeration 'XlSearchDirection'
xlNext = 1
xlPrevious = 2
XlSearchDirection = c_int # enum

# values for enumeration 'XlFormulaLabel'
xlNoLabels = -4142
xlRowLabels = 1
xlColumnLabels = 2
xlMixedLabels = 3
XlFormulaLabel = c_int # enum

# values for enumeration 'XlLocationInTable'
xlColumnHeader = -4110
xlColumnItem = 5
xlDataHeader = 3
xlDataItem = 7
xlPageHeader = 2
xlPageItem = 6
xlRowHeader = -4153
xlRowItem = 4
xlTableBody = 8
XlLocationInTable = c_int # enum

# values for enumeration 'XlPasteType'
xlPasteAll = -4104
xlPasteAllUsingSourceTheme = 13
xlPasteAllMergingConditionalFormats = 14
xlPasteAllExceptBorders = 7
xlPasteFormats = -4122
xlPasteFormulas = -4123
xlPasteComments = -4144
xlPasteValues = -4163
xlPasteColumnWidths = 8
xlPasteValidation = 6
xlPasteFormulasAndNumberFormats = 11
xlPasteValuesAndNumberFormats = 12
XlPasteType = c_int # enum

# values for enumeration 'XlPasteSpecialOperation'
xlPasteSpecialOperationAdd = 2
xlPasteSpecialOperationDivide = 5
xlPasteSpecialOperationMultiply = 4
xlPasteSpecialOperationNone = -4142
xlPasteSpecialOperationSubtract = 3
XlPasteSpecialOperation = c_int # enum
class PivotField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020874-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlPivotFieldCalculation'
xlDifferenceFrom = 2
xlIndex = 9
xlNoAdditionalCalculation = -4143
xlPercentDifferenceFrom = 4
xlPercentOf = 3
xlPercentOfColumn = 7
xlPercentOfRow = 6
xlPercentOfTotal = 8
xlRunningTotal = 5
xlPercentOfParentRow = 10
xlPercentOfParentColumn = 11
xlPercentOfParent = 12
xlPercentRunningTotal = 13
xlRankAscending = 14
xlRankDecending = 15
XlPivotFieldCalculation = c_int # enum

# values for enumeration 'XlPivotFieldDataType'
xlDate = 2
xlNumber = -4145
xlText = -4158
XlPivotFieldDataType = c_int # enum

# values for enumeration 'XlConsolidationFunction'
xlAverage = -4106
xlCount = -4112
xlCountNums = -4113
xlMax = -4136
xlMin = -4139
xlProduct = -4149
xlStDev = -4155
xlStDevP = -4156
xlSum = -4157
xlVar = -4164
xlVarP = -4165
xlUnknown = 1000
xlDistinctCount = 11
XlConsolidationFunction = c_int # enum

# values for enumeration 'XlPivotFieldOrientation'
xlColumnField = 2
xlDataField = 4
xlHidden = 0
xlPageField = 3
xlRowField = 1
XlPivotFieldOrientation = c_int # enum
class CalculatedItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024421-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class PivotItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020876-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotItem._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(PivotField), 'Parent'),
    DISPMETHOD([dispid(730), 'propget'], VARIANT, 'ChildItems',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(720), 'propget'], POINTER(Range), 'DataRange'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(719), 'propget'], POINTER(Range), 'LabelRange'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(741), 'propget'], POINTER(PivotItem), 'ParentItem'),
    DISPMETHOD([dispid(739), 'propget'], VARIANT_BOOL, 'ParentShowDetail'),
    DISPMETHOD([dispid(133), 'propget'], c_int, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(585), 'propget'], VARIANT_BOOL, 'ShowDetail'),
    DISPMETHOD([dispid(585), 'propput'], None, 'ShowDetail',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(721), 'propget'], VARIANT, 'SourceName'),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1512), 'propget'], VARIANT_BOOL, 'IsCalculated'),
    DISPMETHOD([dispid(1478), 'propget'], c_int, 'RecordCount'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1850), 'propget'], VARIANT_BOOL, 'DrilledDown'),
    DISPMETHOD([dispid(1850), 'propput'], None, 'DrilledDown',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2084), 'propget'], BSTR, 'StandardFormula'),
    DISPMETHOD([dispid(2084), 'propput'], None, 'StandardFormula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2148), 'propget'], BSTR, 'SourceNameStandard'),
    DISPMETHOD([dispid(2580)], None, 'DrillTo',
               ( ['in'], BSTR, 'Field' )),
]
CalculatedItems._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(2085), 'hidden'], POINTER(PivotItem), '_Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Formula' )),
    DISPMETHOD([dispid(170)], POINTER(PivotItem), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotItem), '_Default',
               ( ['in'], VARIANT, 'Field' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(PivotItem), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Formula' ),
               ( ['in', 'optional'], VARIANT, 'UseStandardFormula' )),
]

# values for enumeration 'XlSubtototalLocationType'
xlAtTop = 1
xlAtBottom = 2
XlSubtototalLocationType = c_int # enum

# values for enumeration 'XlLayoutFormType'
xlTabular = 0
xlOutline = 1
XlLayoutFormType = c_int # enum
class CubeField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002444C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PivotFilters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024484-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class PivotFilter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024483-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlPivotFilterType'
xlTopCount = 1
xlBottomCount = 2
xlTopPercent = 3
xlBottomPercent = 4
xlTopSum = 5
xlBottomSum = 6
xlValueEquals = 7
xlValueDoesNotEqual = 8
xlValueIsGreaterThan = 9
xlValueIsGreaterThanOrEqualTo = 10
xlValueIsLessThan = 11
xlValueIsLessThanOrEqualTo = 12
xlValueIsBetween = 13
xlValueIsNotBetween = 14
xlCaptionEquals = 15
xlCaptionDoesNotEqual = 16
xlCaptionBeginsWith = 17
xlCaptionDoesNotBeginWith = 18
xlCaptionEndsWith = 19
xlCaptionDoesNotEndWith = 20
xlCaptionContains = 21
xlCaptionDoesNotContain = 22
xlCaptionIsGreaterThan = 23
xlCaptionIsGreaterThanOrEqualTo = 24
xlCaptionIsLessThan = 25
xlCaptionIsLessThanOrEqualTo = 26
xlCaptionIsBetween = 27
xlCaptionIsNotBetween = 28
xlSpecificDate = 29
xlNotSpecificDate = 30
xlBefore = 31
xlBeforeOrEqualTo = 32
xlAfter = 33
xlAfterOrEqualTo = 34
xlDateBetween = 35
xlDateNotBetween = 36
xlDateTomorrow = 37
xlDateToday = 38
xlDateYesterday = 39
xlDateNextWeek = 40
xlDateThisWeek = 41
xlDateLastWeek = 42
xlDateNextMonth = 43
xlDateThisMonth = 44
xlDateLastMonth = 45
xlDateNextQuarter = 46
xlDateThisQuarter = 47
xlDateLastQuarter = 48
xlDateNextYear = 49
xlDateThisYear = 50
xlDateLastYear = 51
xlYearToDate = 52
xlAllDatesInPeriodQuarter1 = 53
xlAllDatesInPeriodQuarter2 = 54
xlAllDatesInPeriodQuarter3 = 55
xlAllDatesInPeriodQuarter4 = 56
xlAllDatesInPeriodJanuary = 57
xlAllDatesInPeriodFebruary = 58
xlAllDatesInPeriodMarch = 59
xlAllDatesInPeriodApril = 60
xlAllDatesInPeriodMay = 61
xlAllDatesInPeriodJune = 62
xlAllDatesInPeriodJuly = 63
xlAllDatesInPeriodAugust = 64
xlAllDatesInPeriodSeptember = 65
xlAllDatesInPeriodOctober = 66
xlAllDatesInPeriodNovember = 67
xlAllDatesInPeriodDecember = 68
XlPivotFilterType = c_int # enum
PivotFilter._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(192), 'propget'], c_int, 'Order'),
    DISPMETHOD([dispid(192), 'propput'], None, 'Order',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2686), 'propget'], XlPivotFilterType, 'FilterType'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(218), 'propget'], BSTR, 'Description'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2312), 'propget'], VARIANT_BOOL, 'Active'),
    DISPMETHOD([dispid(731), 'propget'], POINTER(PivotField), 'PivotField'),
    DISPMETHOD([dispid(2091), 'propget'], POINTER(PivotField), 'DataField'),
    DISPMETHOD([dispid(2687), 'propget'], POINTER(CubeField), 'DataCubeField'),
    DISPMETHOD([dispid(2688), 'propget'], VARIANT, 'Value1'),
    DISPMETHOD([dispid(1388), 'propget'], VARIANT, 'Value2'),
    DISPMETHOD([dispid(2689), 'propget'], POINTER(PivotField), 'MemberPropertyField'),
    DISPMETHOD([dispid(2690), 'propget'], VARIANT_BOOL, 'IsMemberPropertyFilter'),
    DISPMETHOD([dispid(3099), 'propget'], VARIANT_BOOL, 'WholeDayFilter'),
    DISPMETHOD([dispid(3099), 'propput'], None, 'WholeDayFilter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
PivotFilters._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotFilter), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(PivotFilter), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181), 'hidden'], POINTER(PivotFilter), 'Add',
               ( ['in'], XlPivotFilterType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'DataField' ),
               ( ['in', 'optional'], VARIANT, 'Value1' ),
               ( ['in', 'optional'], VARIANT, 'Value2' ),
               ( ['in', 'optional'], VARIANT, 'Order' ),
               ( ['in', 'optional'], VARIANT, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'Description' ),
               ( ['in', 'optional'], VARIANT, 'MemberPropertyField' )),
    DISPMETHOD([dispid(3054)], POINTER(PivotFilter), 'Add2',
               ( ['in'], XlPivotFilterType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'DataField' ),
               ( ['in', 'optional'], VARIANT, 'Value1' ),
               ( ['in', 'optional'], VARIANT, 'Value2' ),
               ( ['in', 'optional'], VARIANT, 'Order' ),
               ( ['in', 'optional'], VARIANT, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'Description' ),
               ( ['in', 'optional'], VARIANT, 'MemberPropertyField' ),
               ( ['in', 'optional'], VARIANT, 'WholeDayFilter' )),
]
class PivotLine(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024480-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlPivotLineType'
xlPivotLineRegular = 0
xlPivotLineSubtotal = 1
xlPivotLineGrandTotal = 2
xlPivotLineBlank = 3
XlPivotLineType = c_int # enum
class PivotLineCells(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447F-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class PivotCell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024458-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlPivotCellType'
xlPivotCellValue = 0
xlPivotCellPivotItem = 1
xlPivotCellSubtotal = 2
xlPivotCellGrandTotal = 3
xlPivotCellDataField = 4
xlPivotCellPivotField = 5
xlPivotCellPageFieldItem = 6
xlPivotCellCustomSubtotal = 7
xlPivotCellDataPivotField = 8
xlPivotCellBlankCell = 9
XlPivotCellType = c_int # enum
class PivotTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020872-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class CalculatedFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024420-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
CalculatedFields._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(2085), 'hidden'], POINTER(PivotField), '_Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Formula' )),
    DISPMETHOD([dispid(170)], POINTER(PivotField), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotField), '_Default',
               ( ['in'], VARIANT, 'Field' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(PivotField), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Formula' ),
               ( ['in', 'optional'], VARIANT, 'UseStandardFormula' )),
]
class PivotCache(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlCmdType'
xlCmdCube = 1
xlCmdSql = 2
xlCmdTable = 3
xlCmdDefault = 4
xlCmdList = 5
xlCmdTableCollection = 6
xlCmdExcel = 7
xlCmdDAX = 8
XlCmdType = c_int # enum

# values for enumeration 'XlQueryType'
xlODBCQuery = 1
xlDAORecordset = 2
xlWebQuery = 4
xlOLEDBQuery = 5
xlTextImport = 6
xlADORecordset = 7
XlQueryType = c_int # enum

# values for enumeration 'XlPivotTableSourceType'
xlScenario = 4
xlConsolidation = 3
xlDatabase = 1
xlExternal = 2
xlPivotTable = -4148
XlPivotTableSourceType = c_int # enum

# values for enumeration 'XlPivotTableMissingItems'
xlMissingItemsDefault = -1
xlMissingItemsNone = 0
xlMissingItemsMax = 32500
xlMissingItemsMax2 = 1048576
XlPivotTableMissingItems = c_int # enum

# values for enumeration 'XlRobustConnect'
xlAsRequired = 0
xlAlways = 1
xlNever = 2
XlRobustConnect = c_int # enum
class WorkbookConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024485-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlConnectionType'
xlConnectionTypeOLEDB = 1
xlConnectionTypeODBC = 2
xlConnectionTypeXMLMAP = 3
xlConnectionTypeTEXT = 4
xlConnectionTypeWEB = 5
xlConnectionTypeDATAFEED = 6
xlConnectionTypeMODEL = 7
xlConnectionTypeWORKSHEET = 8
xlConnectionTypeNOSOURCE = 9
XlConnectionType = c_int # enum
class OLEDBConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlCredentialsMethod'
xlCredentialsMethodIntegrated = 0
xlCredentialsMethodNone = 1
xlCredentialsMethodStored = 2
XlCredentialsMethod = c_int # enum
class CalculatedMembers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024454-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class CalculatedMember(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024455-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlCalculatedMemberType'
xlCalculatedMember = 0
xlCalculatedSet = 1
xlCalculatedMeasure = 2
XlCalculatedMemberType = c_int # enum

# values for enumeration 'XlCalcMemNumberFormatType'
xlNumberFormatTypeDefault = 0
xlNumberFormatTypeNumber = 1
xlNumberFormatTypePercent = 2
XlCalcMemNumberFormatType = c_int # enum
CalculatedMember._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(721), 'propget'], BSTR, 'SourceName'),
    DISPMETHOD([dispid(2187), 'propget'], c_int, 'SolveOrder'),
    DISPMETHOD([dispid(2188), 'propget'], VARIANT_BOOL, 'IsValid'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(108), 'propget'], XlCalculatedMemberType, 'Type'),
    DISPMETHOD([dispid(2926), 'propget'], VARIANT_BOOL, 'Dynamic'),
    DISPMETHOD([dispid(2927), 'propget'], BSTR, 'DisplayFolder'),
    DISPMETHOD([dispid(2925), 'propget'], VARIANT_BOOL, 'HierarchizeDistinct'),
    DISPMETHOD([dispid(2925), 'propput'], None, 'HierarchizeDistinct',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2924), 'propget'], VARIANT_BOOL, 'FlattenHierarchies'),
    DISPMETHOD([dispid(2924), 'propput'], None, 'FlattenHierarchies',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3092), 'propget'], BSTR, 'MeasureGroup'),
    DISPMETHOD([dispid(3093), 'propget'], BSTR, 'ParentHierarchy'),
    DISPMETHOD([dispid(3094), 'propget'], BSTR, 'ParentMember'),
    DISPMETHOD([dispid(193), 'propget'], XlCalcMemNumberFormatType, 'NumberFormat'),
]
CalculatedMembers._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(CalculatedMember), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(CalculatedMember), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(2085), 'hidden'], POINTER(CalculatedMember), '_Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Formula' ),
               ( ['in', 'optional'], VARIANT, 'SolveOrder' ),
               ( ['in', 'optional'], VARIANT, 'Type' )),
    DISPMETHOD([dispid(181)], POINTER(CalculatedMember), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], VARIANT, 'Formula' ),
               ( ['in', 'optional'], VARIANT, 'SolveOrder' ),
               ( ['in', 'optional'], VARIANT, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Dynamic' ),
               ( ['in', 'optional'], VARIANT, 'DisplayFolder' ),
               ( ['in', 'optional'], VARIANT, 'HierarchizeDistinct' )),
    DISPMETHOD([dispid(3091)], POINTER(CalculatedMember), 'AddCalculatedMember',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], VARIANT, 'Formula' ),
               ( ['in', 'optional'], VARIANT, 'SolveOrder' ),
               ( ['in', 'optional'], VARIANT, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'DisplayFolder' ),
               ( ['in', 'optional'], VARIANT, 'MeasureGroup' ),
               ( ['in', 'optional'], VARIANT, 'ParentHierarchy' ),
               ( ['in', 'optional'], VARIANT, 'ParentMember' ),
               ( ['in', 'optional'], VARIANT, 'NumberFormat' )),
]
OLEDBConnection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2074), 'propget'], POINTER(IDispatch), 'ADOConnection'),
    DISPMETHOD([dispid(1427), 'propget'], VARIANT_BOOL, 'BackgroundQuery'),
    DISPMETHOD([dispid(1427), 'propput'], None, 'BackgroundQuery',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1589)], None, 'CancelRefresh'),
    DISPMETHOD([dispid(1829), 'propget'], VARIANT, 'CommandText'),
    DISPMETHOD([dispid(1829), 'propput'], None, 'CommandText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1830), 'propget'], XlCmdType, 'CommandType'),
    DISPMETHOD([dispid(1830), 'propput'], None, 'CommandType',
               ( ['in'], XlCmdType, 'rhs' )),
    DISPMETHOD([dispid(1432), 'propget'], VARIANT, 'Connection'),
    DISPMETHOD([dispid(1432), 'propput'], None, 'Connection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1477), 'propget'], VARIANT_BOOL, 'EnableRefresh'),
    DISPMETHOD([dispid(1477), 'propput'], None, 'EnableRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1835), 'propget'], VARIANT, 'LocalConnection'),
    DISPMETHOD([dispid(1835), 'propput'], None, 'LocalConnection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1832), 'propget'], VARIANT_BOOL, 'MaintainConnection'),
    DISPMETHOD([dispid(1832), 'propput'], None, 'MaintainConnection',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2076)], None, 'MakeConnection'),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(696), 'propget'], c_double, 'RefreshDate'),
    DISPMETHOD([dispid(1587), 'propget'], VARIANT_BOOL, 'Refreshing'),
    DISPMETHOD([dispid(1479), 'propget'], VARIANT_BOOL, 'RefreshOnFileOpen'),
    DISPMETHOD([dispid(1479), 'propput'], None, 'RefreshOnFileOpen',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1833), 'propget'], c_int, 'RefreshPeriod'),
    DISPMETHOD([dispid(1833), 'propput'], None, 'RefreshPeriod',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2081), 'propget'], XlRobustConnect, 'RobustConnect'),
    DISPMETHOD([dispid(2081), 'propput'], None, 'RobustConnect',
               ( ['in'], XlRobustConnect, 'rhs' )),
    DISPMETHOD([dispid(2082)], None, 'SaveAsODC',
               ( ['in'], BSTR, 'ODCFileName' ),
               ( ['in', 'optional'], VARIANT, 'Description' ),
               ( ['in', 'optional'], VARIANT, 'Keywords' )),
    DISPMETHOD([dispid(1481), 'propget'], VARIANT_BOOL, 'SavePassword'),
    DISPMETHOD([dispid(1481), 'propput'], None, 'SavePassword',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2079), 'propget'], BSTR, 'SourceConnectionFile'),
    DISPMETHOD([dispid(2079), 'propput'], None, 'SourceConnectionFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2080), 'propget'], BSTR, 'SourceDataFile'),
    DISPMETHOD([dispid(2080), 'propput'], None, 'SourceDataFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2077), 'propget'], VARIANT_BOOL, 'OLAP'),
    DISPMETHOD([dispid(1837), 'propget'], VARIANT_BOOL, 'UseLocalConnection'),
    DISPMETHOD([dispid(1837), 'propput'], None, 'UseLocalConnection',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2703), 'propget'], c_int, 'MaxDrillthroughRecords'),
    DISPMETHOD([dispid(2703), 'propput'], None, 'MaxDrillthroughRecords',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2075), 'propget'], VARIANT_BOOL, 'IsConnected'),
    DISPMETHOD([dispid(2704), 'propget'], XlCredentialsMethod, 'ServerCredentialsMethod'),
    DISPMETHOD([dispid(2704), 'propput'], None, 'ServerCredentialsMethod',
               ( ['in'], XlCredentialsMethod, 'rhs' )),
    DISPMETHOD([dispid(2705), 'propget'], BSTR, 'ServerSSOApplicationID'),
    DISPMETHOD([dispid(2705), 'propput'], None, 'ServerSSOApplicationID',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2706), 'propget'], VARIANT_BOOL, 'AlwaysUseConnectionFile'),
    DISPMETHOD([dispid(2706), 'propput'], None, 'AlwaysUseConnectionFile',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2707), 'propget'], VARIANT_BOOL, 'ServerFillColor'),
    DISPMETHOD([dispid(2707), 'propput'], None, 'ServerFillColor',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2708), 'propget'], VARIANT_BOOL, 'ServerFontStyle'),
    DISPMETHOD([dispid(2708), 'propput'], None, 'ServerFontStyle',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2709), 'propget'], VARIANT_BOOL, 'ServerNumberFormat'),
    DISPMETHOD([dispid(2709), 'propput'], None, 'ServerNumberFormat',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2710), 'propget'], VARIANT_BOOL, 'ServerTextColor'),
    DISPMETHOD([dispid(2710), 'propput'], None, 'ServerTextColor',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2711), 'propget'], VARIANT_BOOL, 'RetrieveInOfficeUILang'),
    DISPMETHOD([dispid(2711), 'propput'], None, 'RetrieveInOfficeUILang',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2939)], None, 'Reconnect'),
    DISPMETHOD([dispid(2125), 'propget'], POINTER(CalculatedMembers), 'CalculatedMembers'),
    DISPMETHOD([dispid(2940), 'propget'], c_int, 'LocaleID'),
    DISPMETHOD([dispid(2940), 'propput'], None, 'LocaleID',
               ( ['in'], c_int, 'rhs' )),
]
class ODBCConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448E-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ODBCConnection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1427), 'propget'], VARIANT_BOOL, 'BackgroundQuery'),
    DISPMETHOD([dispid(1427), 'propput'], None, 'BackgroundQuery',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1589)], None, 'CancelRefresh'),
    DISPMETHOD([dispid(1829), 'propget'], VARIANT, 'CommandText'),
    DISPMETHOD([dispid(1829), 'propput'], None, 'CommandText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1830), 'propget'], XlCmdType, 'CommandType'),
    DISPMETHOD([dispid(1830), 'propput'], None, 'CommandType',
               ( ['in'], XlCmdType, 'rhs' )),
    DISPMETHOD([dispid(1432), 'propget'], VARIANT, 'Connection'),
    DISPMETHOD([dispid(1432), 'propput'], None, 'Connection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1477), 'propget'], VARIANT_BOOL, 'EnableRefresh'),
    DISPMETHOD([dispid(1477), 'propput'], None, 'EnableRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(696), 'propget'], c_double, 'RefreshDate'),
    DISPMETHOD([dispid(1587), 'propget'], VARIANT_BOOL, 'Refreshing'),
    DISPMETHOD([dispid(1479), 'propget'], VARIANT_BOOL, 'RefreshOnFileOpen'),
    DISPMETHOD([dispid(1479), 'propput'], None, 'RefreshOnFileOpen',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1833), 'propget'], c_int, 'RefreshPeriod'),
    DISPMETHOD([dispid(1833), 'propput'], None, 'RefreshPeriod',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2081), 'propget'], XlRobustConnect, 'RobustConnect'),
    DISPMETHOD([dispid(2081), 'propput'], None, 'RobustConnect',
               ( ['in'], XlRobustConnect, 'rhs' )),
    DISPMETHOD([dispid(2082)], None, 'SaveAsODC',
               ( ['in'], BSTR, 'ODCFileName' ),
               ( ['in', 'optional'], VARIANT, 'Description' ),
               ( ['in', 'optional'], VARIANT, 'Keywords' )),
    DISPMETHOD([dispid(1481), 'propget'], VARIANT_BOOL, 'SavePassword'),
    DISPMETHOD([dispid(1481), 'propput'], None, 'SavePassword',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2079), 'propget'], BSTR, 'SourceConnectionFile'),
    DISPMETHOD([dispid(2079), 'propput'], None, 'SourceConnectionFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(686), 'propget'], VARIANT, 'SourceData'),
    DISPMETHOD([dispid(686), 'propput'], None, 'SourceData',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2080), 'propget'], BSTR, 'SourceDataFile'),
    DISPMETHOD([dispid(2080), 'propput'], None, 'SourceDataFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2704), 'propget'], XlCredentialsMethod, 'ServerCredentialsMethod'),
    DISPMETHOD([dispid(2704), 'propput'], None, 'ServerCredentialsMethod',
               ( ['in'], XlCredentialsMethod, 'rhs' )),
    DISPMETHOD([dispid(2705), 'propget'], BSTR, 'ServerSSOApplicationID'),
    DISPMETHOD([dispid(2705), 'propput'], None, 'ServerSSOApplicationID',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2706), 'propget'], VARIANT_BOOL, 'AlwaysUseConnectionFile'),
    DISPMETHOD([dispid(2706), 'propput'], None, 'AlwaysUseConnectionFile',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class Ranges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A0-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Ranges._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Range), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Range), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
]
class ModelConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelConnection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1829), 'propget'], VARIANT, 'CommandText'),
    DISPMETHOD([dispid(1829), 'propput'], None, 'CommandText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1830), 'propget'], XlCmdType, 'CommandType'),
    DISPMETHOD([dispid(1830), 'propput'], None, 'CommandType',
               ( ['in'], XlCmdType, 'rhs' )),
    DISPMETHOD([dispid(2074), 'propget'], POINTER(IDispatch), 'ADOConnection'),
    DISPMETHOD([dispid(2125), 'propget'], POINTER(CalculatedMembers), 'CalculatedMembers'),
]
class WorksheetDataConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
WorksheetDataConnection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1432), 'propget'], VARIANT, 'Connection'),
    DISPMETHOD([dispid(1829), 'propget'], VARIANT, 'CommandText'),
    DISPMETHOD([dispid(1829), 'propput'], None, 'CommandText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1830), 'propget'], XlCmdType, 'CommandType'),
    DISPMETHOD([dispid(1830), 'propput'], None, 'CommandType',
               ( ['in'], XlCmdType, 'rhs' )),
]
class TextConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlTextParsingType'
xlDelimited = 1
xlFixedWidth = 2
XlTextParsingType = c_int # enum

# values for enumeration 'XlPlatform'
xlMacintosh = 1
xlMSDOS = 3
xlWindows = 2
XlPlatform = c_int # enum

# values for enumeration 'XlTextQualifier'
xlTextQualifierDoubleQuote = 1
xlTextQualifierNone = -4142
xlTextQualifierSingleQuote = 2
XlTextQualifier = c_int # enum

# values for enumeration 'XlTextVisualLayoutType'
xlTextVisualLTR = 1
xlTextVisualRTL = 2
XlTextVisualLayoutType = c_int # enum
TextConnection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1432), 'propget'], VARIANT, 'Connection'),
    DISPMETHOD([dispid(1432), 'propput'], None, 'Connection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(3118), 'propget'], VARIANT_BOOL, 'TextFileHeaderRow'),
    DISPMETHOD([dispid(3118), 'propput'], None, 'TextFileHeaderRow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1865), 'propget'], VARIANT, 'TextFileColumnDataTypes'),
    DISPMETHOD([dispid(1865), 'propput'], None, 'TextFileColumnDataTypes',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1862), 'propget'], VARIANT_BOOL, 'TextFileCommaDelimiter'),
    DISPMETHOD([dispid(1862), 'propput'], None, 'TextFileCommaDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1859), 'propget'], VARIANT_BOOL, 'TextFileConsecutiveDelimiter'),
    DISPMETHOD([dispid(1859), 'propput'], None, 'TextFileConsecutiveDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1870), 'propget'], BSTR, 'TextFileDecimalSeparator'),
    DISPMETHOD([dispid(1870), 'propput'], None, 'TextFileDecimalSeparator',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1866), 'propget'], VARIANT, 'TextFileFixedColumnWidths'),
    DISPMETHOD([dispid(1866), 'propput'], None, 'TextFileFixedColumnWidths',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1864), 'propget'], BSTR, 'TextFileOtherDelimiter'),
    DISPMETHOD([dispid(1864), 'propput'], None, 'TextFileOtherDelimiter',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1857), 'propget'], XlTextParsingType, 'TextFileParseType'),
    DISPMETHOD([dispid(1857), 'propput'], None, 'TextFileParseType',
               ( ['in'], XlTextParsingType, 'rhs' )),
    DISPMETHOD([dispid(1855), 'propget'], XlPlatform, 'TextFilePlatform'),
    DISPMETHOD([dispid(1855), 'propput'], None, 'TextFilePlatform',
               ( ['in'], XlPlatform, 'rhs' )),
    DISPMETHOD([dispid(1869), 'propget'], VARIANT_BOOL, 'TextFilePromptOnRefresh'),
    DISPMETHOD([dispid(1869), 'propput'], None, 'TextFilePromptOnRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1861), 'propget'], VARIANT_BOOL, 'TextFileSemicolonDelimiter'),
    DISPMETHOD([dispid(1861), 'propput'], None, 'TextFileSemicolonDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1863), 'propget'], VARIANT_BOOL, 'TextFileSpaceDelimiter'),
    DISPMETHOD([dispid(1863), 'propput'], None, 'TextFileSpaceDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1856), 'propget'], c_int, 'TextFileStartRow'),
    DISPMETHOD([dispid(1856), 'propput'], None, 'TextFileStartRow',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1860), 'propget'], VARIANT_BOOL, 'TextFileTabDelimiter'),
    DISPMETHOD([dispid(1860), 'propput'], None, 'TextFileTabDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1858), 'propget'], XlTextQualifier, 'TextFileTextQualifier'),
    DISPMETHOD([dispid(1858), 'propput'], None, 'TextFileTextQualifier',
               ( ['in'], XlTextQualifier, 'rhs' )),
    DISPMETHOD([dispid(1871), 'propget'], BSTR, 'TextFileThousandsSeparator'),
    DISPMETHOD([dispid(1871), 'propput'], None, 'TextFileThousandsSeparator',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2164), 'propget'], VARIANT_BOOL, 'TextFileTrailingMinusNumbers'),
    DISPMETHOD([dispid(2164), 'propput'], None, 'TextFileTrailingMinusNumbers',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2245), 'propget'], XlTextVisualLayoutType, 'TextFileVisualLayout'),
    DISPMETHOD([dispid(2245), 'propput'], None, 'TextFileVisualLayout',
               ( ['in'], XlTextVisualLayoutType, 'rhs' )),
]
class DataFeedConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
DataFeedConnection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2706), 'propget'], VARIANT_BOOL, 'AlwaysUseConnectionFile'),
    DISPMETHOD([dispid(2706), 'propput'], None, 'AlwaysUseConnectionFile',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1829), 'propget'], VARIANT, 'CommandText'),
    DISPMETHOD([dispid(1829), 'propput'], None, 'CommandText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1830), 'propget'], XlCmdType, 'CommandType'),
    DISPMETHOD([dispid(1830), 'propput'], None, 'CommandType',
               ( ['in'], XlCmdType, 'rhs' )),
    DISPMETHOD([dispid(1432), 'propget'], VARIANT, 'Connection'),
    DISPMETHOD([dispid(1432), 'propput'], None, 'Connection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1477), 'propget'], VARIANT_BOOL, 'EnableRefresh'),
    DISPMETHOD([dispid(1477), 'propput'], None, 'EnableRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(696), 'propget'], c_double, 'RefreshDate'),
    DISPMETHOD([dispid(1587), 'propget'], VARIANT_BOOL, 'Refreshing'),
    DISPMETHOD([dispid(1479), 'propget'], VARIANT_BOOL, 'RefreshOnFileOpen'),
    DISPMETHOD([dispid(1479), 'propput'], None, 'RefreshOnFileOpen',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1833), 'propget'], c_int, 'RefreshPeriod'),
    DISPMETHOD([dispid(1833), 'propput'], None, 'RefreshPeriod',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1481), 'propget'], VARIANT_BOOL, 'SavePassword'),
    DISPMETHOD([dispid(1481), 'propput'], None, 'SavePassword',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2704), 'propget'], XlCredentialsMethod, 'ServerCredentialsMethod'),
    DISPMETHOD([dispid(2704), 'propput'], None, 'ServerCredentialsMethod',
               ( ['in'], XlCredentialsMethod, 'rhs' )),
    DISPMETHOD([dispid(2079), 'propget'], BSTR, 'SourceConnectionFile'),
    DISPMETHOD([dispid(2079), 'propput'], None, 'SourceConnectionFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2080), 'propget'], BSTR, 'SourceDataFile'),
    DISPMETHOD([dispid(2080), 'propput'], None, 'SourceDataFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1589)], None, 'CancelRefresh'),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(2082)], None, 'SaveAsODC',
               ( ['in'], BSTR, 'ODCFileName' ),
               ( ['in', 'optional'], VARIANT, 'Description' ),
               ( ['in', 'optional'], VARIANT, 'Keywords' )),
]
class ModelTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D8-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D7-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelTableColumns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D6-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelTableColumn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D5-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelTableColumn._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(722), 'propget'], c_int, 'DataType'),
]
ModelTableColumns._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ModelTableColumn), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ModelTableColumn), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
ModelTable._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(721), 'propget'], BSTR, 'SourceName'),
    DISPMETHOD([dispid(3119), 'propget'], POINTER(ModelTableColumns), 'ModelTableColumns'),
    DISPMETHOD([dispid(3120), 'propget'], POINTER(WorkbookConnection), 'SourceWorkbookConnection'),
    DISPMETHOD([dispid(1610743815), 'restricted', 'hidden'], None, '_Dummy7'),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(1478), 'propget'], c_int, 'RecordCount'),
]
ModelTables._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ModelTable), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ModelTable), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
WorkbookConnection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(218), 'propget'], BSTR, 'Description'),
    DISPMETHOD([dispid(218), 'propput'], None, 'Description',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], XlConnectionType, 'Type'),
    DISPMETHOD([dispid(2697), 'propget'], POINTER(OLEDBConnection), 'OLEDBConnection'),
    DISPMETHOD([dispid(2698), 'propget'], POINTER(ODBCConnection), 'ODBCConnection'),
    DISPMETHOD([dispid(2699), 'propget'], POINTER(Ranges), 'Ranges'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(3100), 'propget'], POINTER(ModelConnection), 'ModelConnection'),
    DISPMETHOD([dispid(3101), 'propget'], POINTER(WorksheetDataConnection), 'WorksheetDataConnection'),
    DISPMETHOD([dispid(3102), 'propget'], VARIANT_BOOL, 'RefreshWithRefreshAll'),
    DISPMETHOD([dispid(3102), 'propput'], None, 'RefreshWithRefreshAll',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3103), 'propget'], POINTER(TextConnection), 'TextConnection'),
    DISPMETHOD([dispid(3104), 'propget'], POINTER(DataFeedConnection), 'DataFeedConnection'),
    DISPMETHOD([dispid(3105), 'propget'], VARIANT_BOOL, 'InModel'),
    DISPMETHOD([dispid(3106), 'propget'], POINTER(ModelTables), 'ModelTables'),
]

# values for enumeration 'XlPivotTableVersionList'
xlPivotTableVersion2000 = 0
xlPivotTableVersion10 = 1
xlPivotTableVersion11 = 2
xlPivotTableVersion12 = 3
xlPivotTableVersion14 = 4
xlPivotTableVersion15 = 5
xlPivotTableVersionCurrent = -1
XlPivotTableVersionList = c_int # enum
PivotCache._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1427), 'propget'], VARIANT_BOOL, 'BackgroundQuery'),
    DISPMETHOD([dispid(1427), 'propput'], None, 'BackgroundQuery',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1432), 'propget'], VARIANT, 'Connection'),
    DISPMETHOD([dispid(1432), 'propput'], None, 'Connection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1477), 'propget'], VARIANT_BOOL, 'EnableRefresh'),
    DISPMETHOD([dispid(1477), 'propput'], None, 'EnableRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(372), 'propget'], c_int, 'MemoryUsed'),
    DISPMETHOD([dispid(1428), 'propget'], VARIANT_BOOL, 'OptimizeCache'),
    DISPMETHOD([dispid(1428), 'propput'], None, 'OptimizeCache',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1478), 'propget'], c_int, 'RecordCount'),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(696), 'propget'], c_double, 'RefreshDate'),
    DISPMETHOD([dispid(697), 'propget'], BSTR, 'RefreshName'),
    DISPMETHOD([dispid(1479), 'propget'], VARIANT_BOOL, 'RefreshOnFileOpen'),
    DISPMETHOD([dispid(1479), 'propput'], None, 'RefreshOnFileOpen',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1480), 'hidden', 'propget'], VARIANT, 'Sql'),
    DISPMETHOD([dispid(1480), 'hidden', 'propput'], None, 'Sql',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1481), 'propget'], VARIANT_BOOL, 'SavePassword'),
    DISPMETHOD([dispid(1481), 'propput'], None, 'SavePassword',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(686), 'propget'], VARIANT, 'SourceData'),
    DISPMETHOD([dispid(686), 'propput'], None, 'SourceData',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1829), 'propget'], VARIANT, 'CommandText'),
    DISPMETHOD([dispid(1829), 'propput'], None, 'CommandText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1830), 'propget'], XlCmdType, 'CommandType'),
    DISPMETHOD([dispid(1830), 'propput'], None, 'CommandType',
               ( ['in'], XlCmdType, 'rhs' )),
    DISPMETHOD([dispid(1831), 'propget'], XlQueryType, 'QueryType'),
    DISPMETHOD([dispid(1832), 'propget'], VARIANT_BOOL, 'MaintainConnection'),
    DISPMETHOD([dispid(1832), 'propput'], None, 'MaintainConnection',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1833), 'propget'], c_int, 'RefreshPeriod'),
    DISPMETHOD([dispid(1833), 'propput'], None, 'RefreshPeriod',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1165), 'propget'], POINTER(IDispatch), 'Recordset'),
    DISPMETHOD([dispid(1165), 'propputref'], None, 'Recordset',
               ( ['in'], POINTER(IDispatch), 'rhs' )),
    DISPMETHOD([dispid(1834)], None, 'ResetTimer'),
    DISPMETHOD([dispid(1835), 'propget'], VARIANT, 'LocalConnection'),
    DISPMETHOD([dispid(1835), 'propput'], None, 'LocalConnection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1836)], POINTER(PivotTable), 'CreatePivotTable',
               ( ['in'], VARIANT, 'TableDestination' ),
               ( ['in', 'optional'], VARIANT, 'TableName' ),
               ( ['in', 'optional'], VARIANT, 'ReadData' ),
               ( ['in', 'optional'], VARIANT, 'DefaultVersion' )),
    DISPMETHOD([dispid(1837), 'propget'], VARIANT_BOOL, 'UseLocalConnection'),
    DISPMETHOD([dispid(1837), 'propput'], None, 'UseLocalConnection',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2074), 'propget'], POINTER(IDispatch), 'ADOConnection'),
    DISPMETHOD([dispid(2075), 'propget'], VARIANT_BOOL, 'IsConnected'),
    DISPMETHOD([dispid(2076)], None, 'MakeConnection'),
    DISPMETHOD([dispid(2077), 'propget'], VARIANT_BOOL, 'OLAP'),
    DISPMETHOD([dispid(685), 'propget'], XlPivotTableSourceType, 'SourceType'),
    DISPMETHOD([dispid(2078), 'propget'], XlPivotTableMissingItems, 'MissingItemsLimit'),
    DISPMETHOD([dispid(2078), 'propput'], None, 'MissingItemsLimit',
               ( ['in'], XlPivotTableMissingItems, 'rhs' )),
    DISPMETHOD([dispid(2079), 'propget'], BSTR, 'SourceConnectionFile'),
    DISPMETHOD([dispid(2079), 'propput'], None, 'SourceConnectionFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2080), 'propget'], BSTR, 'SourceDataFile'),
    DISPMETHOD([dispid(2081), 'propget'], XlRobustConnect, 'RobustConnect'),
    DISPMETHOD([dispid(2081), 'propput'], None, 'RobustConnect',
               ( ['in'], XlRobustConnect, 'rhs' )),
    DISPMETHOD([dispid(2082)], None, 'SaveAsODC',
               ( ['in'], BSTR, 'ODCFileName' ),
               ( ['in', 'optional'], VARIANT, 'Description' ),
               ( ['in', 'optional'], VARIANT, 'Keywords' )),
    DISPMETHOD([dispid(2544), 'propget'], POINTER(WorkbookConnection), 'WorkbookConnection'),
    DISPMETHOD([dispid(392), 'propget'], XlPivotTableVersionList, 'Version'),
    DISPMETHOD([dispid(2545), 'propget'], VARIANT_BOOL, 'UpgradeOnRefresh'),
    DISPMETHOD([dispid(2545), 'propput'], None, 'UpgradeOnRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3062)], POINTER(Shape), 'CreatePivotChart',
               ( ['in'], VARIANT, 'ChartDestination' ),
               ( ['in', 'optional'], VARIANT, 'XlChartType' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' )),
]
class PivotFormulas(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441F-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class PivotFormula(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441E-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotFormula._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(486), 'propput'], None, 'Index',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2084), 'propget'], BSTR, 'StandardFormula'),
    DISPMETHOD([dispid(2084), 'propput'], None, 'StandardFormula',
               ( ['in'], BSTR, 'rhs' )),
]
PivotFormulas._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(2085), 'hidden'], POINTER(PivotFormula), '_Add',
               ( ['in'], BSTR, 'Formula' )),
    DISPMETHOD([dispid(170)], POINTER(PivotFormula), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotFormula), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(PivotFormula), 'Add',
               ( ['in'], BSTR, 'Formula' ),
               ( ['in', 'optional'], VARIANT, 'UseStandardFormula' )),
]

# values for enumeration 'XlPTSelectionMode'
xlLabelOnly = 1
xlDataAndLabel = 0
xlDataOnly = 2
xlOrigin = 3
xlButton = 15
xlBlanks = 4
xlFirstRow = 256
XlPTSelectionMode = c_int # enum

# values for enumeration 'XlPivotFormatType'
xlReport1 = 0
xlReport2 = 1
xlReport3 = 2
xlReport4 = 3
xlReport5 = 4
xlReport6 = 5
xlReport7 = 6
xlReport8 = 7
xlReport9 = 8
xlReport10 = 9
xlTable1 = 10
xlTable2 = 11
xlTable3 = 12
xlTable4 = 13
xlTable5 = 14
xlTable6 = 15
xlTable7 = 16
xlTable8 = 17
xlTable9 = 18
xlTable10 = 19
xlPTClassic = 20
xlPTNone = 21
XlPivotFormatType = c_int # enum
class CubeFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002444D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class PivotAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024482-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class PivotLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024481-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotLines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotLine), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(PivotLine), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
]
PivotAxis._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2685), 'propget'], POINTER(PivotLines), 'PivotLines'),
]

# values for enumeration 'XlLayoutRowType'
xlCompactRow = 0
xlTabularRow = 1
xlOutlineRow = 2
XlLayoutRowType = c_int # enum

# values for enumeration 'XlAllocation'
xlManualAllocation = 1
xlAutomaticAllocation = 2
XlAllocation = c_int # enum

# values for enumeration 'XlAllocationValue'
xlAllocateValue = 1
xlAllocateIncrement = 2
XlAllocationValue = c_int # enum

# values for enumeration 'XlAllocationMethod'
xlEqualAllocation = 1
xlWeightedAllocation = 2
XlAllocationMethod = c_int # enum

# values for enumeration 'XlPivotFieldRepeatLabels'
xlDoNotRepeatLabels = 1
xlRepeatLabels = 2
XlPivotFieldRepeatLabels = c_int # enum
class PivotTableChangeList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ValueChange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C0-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ValueChange._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(192), 'propget'], c_int, 'Order'),
    DISPMETHOD([dispid(2971), 'propget'], VARIANT_BOOL, 'VisibleInPivotTable'),
    DISPMETHOD([dispid(2013), 'propget'], POINTER(PivotCell), 'PivotCell'),
    DISPMETHOD([dispid(2972), 'propget'], BSTR, 'Tuple'),
    DISPMETHOD([dispid(6), 'propget'], c_double, 'Value'),
    DISPMETHOD([dispid(2874), 'propget'], XlAllocationValue, 'AllocationValue'),
    DISPMETHOD([dispid(2875), 'propget'], XlAllocationMethod, 'AllocationMethod'),
    DISPMETHOD([dispid(2876), 'propget'], BSTR, 'AllocationWeightExpression'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
PivotTableChangeList._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ValueChange), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(ValueChange), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181)], POINTER(ValueChange), 'Add',
               ( ['in'], BSTR, 'Tuple' ),
               ( ['in'], c_double, 'Value' ),
               ( ['in', 'optional'], VARIANT, 'AllocationValue' ),
               ( ['in', 'optional'], VARIANT, 'AllocationMethod' ),
               ( ['in', 'optional'], VARIANT, 'AllocationWeightExpression' )),
]
class Slicers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C7-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Slicer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C8-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SlicerCache(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SlicerPivotTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CB-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SlicerPivotTables._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(PivotTable), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotTable), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(2990)], None, 'AddPivotTable',
               ( ['in'], POINTER(PivotTable), 'PivotTable' )),
    DISPMETHOD([dispid(2991)], None, 'RemovePivotTable',
               ( ['in'], VARIANT, 'PivotTable' )),
]
class SlicerCacheLevels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C5-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SlicerCacheLevel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C6-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SlicerItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CA-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SlicerItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C9-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SlicerItem._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(SlicerCache), 'Parent'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(721), 'propget'], VARIANT, 'SourceName'),
    DISPMETHOD([dispid(2148), 'propget'], BSTR, 'SourceNameStandard'),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(1123), 'propget'], VARIANT_BOOL, 'Selected'),
    DISPMETHOD([dispid(1123), 'propput'], None, 'Selected',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2989), 'propget'], VARIANT_BOOL, 'HasData'),
]
SlicerItems._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(SlicerItem), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SlicerItem), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlSlicerCrossFilterType'
xlSlicerNoCrossFilter = 1
xlSlicerCrossFilterShowItemsWithDataAtTop = 2
xlSlicerCrossFilterShowItemsWithNoData = 3
xlSlicerCrossFilterHideButtonsWithNoData = 4
XlSlicerCrossFilterType = c_int # enum

# values for enumeration 'XlSlicerSort'
xlSlicerSortDataSourceOrder = 1
xlSlicerSortAscending = 2
xlSlicerSortDescending = 3
XlSlicerSort = c_int # enum
SlicerCacheLevel._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2977), 'propget'], POINTER(SlicerItems), 'SlicerItems'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(2981), 'propget'], c_int, 'Ordinal'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(2978), 'propget'], XlSlicerCrossFilterType, 'CrossFilterType'),
    DISPMETHOD([dispid(2978), 'propput'], None, 'CrossFilterType',
               ( ['in'], XlSlicerCrossFilterType, 'rhs' )),
    DISPMETHOD([dispid(2979), 'propget'], XlSlicerSort, 'SortItems'),
    DISPMETHOD([dispid(2979), 'propput'], None, 'SortItems',
               ( ['in'], XlSlicerSort, 'rhs' )),
    DISPMETHOD([dispid(2976), 'propget'], VARIANT, 'VisibleSlicerItemsList'),
]
SlicerCacheLevels._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(SlicerCacheLevel), 'Item',
               ( ['in', 'optional'], VARIANT, 'Level' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SlicerCacheLevel), '_Default',
               ( ['in', 'optional'], VARIANT, 'Level' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class TimelineState(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DF-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlFilterStatus'
xlFilterStatusOK = 0
xlFilterStatusDateWrongOrder = 1
xlFilterStatusDateHasTime = 2
xlFilterStatusInvalidDate = 3
XlFilterStatus = c_int # enum
TimelineState._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(3133), 'propget'], VARIANT, 'StartDate'),
    DISPMETHOD([dispid(3134), 'propget'], VARIANT, 'EndDate'),
    DISPMETHOD([dispid(2686), 'propget'], XlPivotFilterType, 'FilterType'),
    DISPMETHOD([dispid(3135), 'propget'], VARIANT, 'FilterValue1'),
    DISPMETHOD([dispid(3136), 'propget'], VARIANT, 'FilterValue2'),
    DISPMETHOD([dispid(3137), 'propget'], VARIANT_BOOL, 'SingleRangeFilterState'),
    DISPMETHOD([dispid(3138)], XlFilterStatus, 'SetFilterDateRange',
               ( ['in'], VARIANT, 'StartDate' ),
               ( ['in'], VARIANT, 'EndDate' )),
]

# values for enumeration 'XlSlicerCacheType'
xlSlicer = 1
xlTimeline = 2
XlSlicerCacheType = c_int # enum
class ListObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024471-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlListConflict'
xlListConflictDialog = 0
xlListConflictRetryAllConflicts = 1
xlListConflictDiscardAllConflicts = 2
xlListConflictError = 3
XlListConflict = c_int # enum
class ListColumns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024472-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ListColumn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024473-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ListDataFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlListDataType'
xlListDataTypeNone = 0
xlListDataTypeText = 1
xlListDataTypeMultiLineText = 2
xlListDataTypeNumber = 3
xlListDataTypeCurrency = 4
xlListDataTypeDateTime = 5
xlListDataTypeChoice = 6
xlListDataTypeChoiceMulti = 7
xlListDataTypeListLookup = 8
xlListDataTypeCheckbox = 9
xlListDataTypeHyperLink = 10
xlListDataTypeCounter = 11
xlListDataTypeMultiLineRichText = 12
XlListDataType = c_int # enum
ListDataFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], XlListDataType, '_Default'),
    DISPMETHOD([dispid(2348), 'propget'], VARIANT, 'Choices'),
    DISPMETHOD([dispid(2349), 'propget'], c_int, 'DecimalPlaces'),
    DISPMETHOD([dispid(2350), 'propget'], VARIANT, 'DefaultValue'),
    DISPMETHOD([dispid(2351), 'propget'], VARIANT_BOOL, 'IsPercent'),
    DISPMETHOD([dispid(2352), 'propget'], c_int, 'lcid'),
    DISPMETHOD([dispid(2353), 'propget'], c_int, 'MaxCharacters'),
    DISPMETHOD([dispid(2354), 'propget'], VARIANT, 'MaxNumber'),
    DISPMETHOD([dispid(2355), 'propget'], VARIANT, 'MinNumber'),
    DISPMETHOD([dispid(2356), 'propget'], VARIANT_BOOL, 'Required'),
    DISPMETHOD([dispid(108), 'propget'], XlListDataType, 'Type'),
    DISPMETHOD([dispid(296), 'propget'], VARIANT_BOOL, 'ReadOnly'),
    DISPMETHOD([dispid(2357), 'propget'], VARIANT_BOOL, 'AllowFillIn'),
]

# values for enumeration 'XlTotalsCalculation'
xlTotalsCalculationNone = 0
xlTotalsCalculationSum = 1
xlTotalsCalculationAverage = 2
xlTotalsCalculationCount = 3
xlTotalsCalculationCountNums = 4
xlTotalsCalculationMin = 5
xlTotalsCalculationMax = 6
xlTotalsCalculationStdDev = 7
xlTotalsCalculationVar = 8
xlTotalsCalculationCustom = 9
XlTotalsCalculation = c_int # enum
class XPath(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447E-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class XmlMap(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class XmlNamespace(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024476-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
XmlNamespace._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(2325), 'propget'], BSTR, 'Uri'),
    DISPMETHOD([dispid(2326), 'propget'], BSTR, 'Prefix'),
]
class XmlSchemas(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class XmlSchema(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024479-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
XmlSchema._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2332), 'propget'], POINTER(XmlNamespace), 'Namespace'),
    DISPMETHOD([dispid(2333), 'propget'], BSTR, 'XML'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
]
XmlSchemas._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(XmlSchema), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(XmlSchema), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class XmlDataBinding(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024478-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlXmlImportResult'
xlXmlImportSuccess = 0
xlXmlImportElementsTruncated = 1
xlXmlImportValidationFailed = 2
XlXmlImportResult = c_int # enum
XmlDataBinding._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(1417)], XlXmlImportResult, 'Refresh'),
    DISPMETHOD([dispid(2329)], None, 'LoadSettings',
               ( ['in'], BSTR, 'Url' )),
    DISPMETHOD([dispid(2330)], None, 'ClearSettings'),
    DISPMETHOD([dispid(2331), 'propget'], BSTR, 'SourceUrl'),
]

# values for enumeration 'XlXmlExportResult'
xlXmlExportSuccess = 0
xlXmlExportValidationFailed = 1
XlXmlExportResult = c_int # enum
XmlMap._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2334), 'propget'], VARIANT_BOOL, 'IsExportable'),
    DISPMETHOD([dispid(2335), 'propget'], VARIANT_BOOL, 'ShowImportExportValidationErrors'),
    DISPMETHOD([dispid(2335), 'propput'], None, 'ShowImportExportValidationErrors',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2336), 'propget'], VARIANT_BOOL, 'SaveDataSourceDefinition'),
    DISPMETHOD([dispid(2336), 'propput'], None, 'SaveDataSourceDefinition',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1868), 'propget'], VARIANT_BOOL, 'AdjustColumnWidth'),
    DISPMETHOD([dispid(1868), 'propput'], None, 'AdjustColumnWidth',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2337), 'propget'], VARIANT_BOOL, 'PreserveColumnFilter'),
    DISPMETHOD([dispid(2337), 'propput'], None, 'PreserveColumnFilter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2338), 'propget'], VARIANT_BOOL, 'PreserveNumberFormatting'),
    DISPMETHOD([dispid(2338), 'propput'], None, 'PreserveNumberFormatting',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2339), 'propget'], VARIANT_BOOL, 'AppendOnImport'),
    DISPMETHOD([dispid(2339), 'propput'], None, 'AppendOnImport',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2340), 'propget'], BSTR, 'RootElementName'),
    DISPMETHOD([dispid(2341), 'propget'], POINTER(XmlNamespace), 'RootElementNamespace'),
    DISPMETHOD([dispid(2342), 'propget'], POINTER(XmlSchemas), 'Schemas'),
    DISPMETHOD([dispid(2343), 'propget'], POINTER(XmlDataBinding), 'DataBinding'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(917)], XlXmlImportResult, 'Import',
               ( ['in'], BSTR, 'Url' ),
               ( ['in', 'optional'], VARIANT, 'Overwrite' )),
    DISPMETHOD([dispid(2344)], XlXmlImportResult, 'ImportXml',
               ( ['in'], BSTR, 'XmlData' ),
               ( ['in', 'optional'], VARIANT, 'Overwrite' )),
    DISPMETHOD([dispid(1414)], XlXmlExportResult, 'Export',
               ( ['in'], BSTR, 'Url' ),
               ( ['in', 'optional'], VARIANT, 'Overwrite' )),
    DISPMETHOD([dispid(2346)], XlXmlExportResult, 'ExportXml',
               ( ['out'], POINTER(BSTR), 'Data' )),
    DISPMETHOD([dispid(2544), 'propget'], POINTER(WorkbookConnection), 'WorkbookConnection'),
]
XPath._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(2262), 'propget'], POINTER(XmlMap), 'Map'),
    DISPMETHOD([dispid(2358)], None, 'SetValue',
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], BSTR, 'XPath' ),
               ( ['in', 'optional'], VARIANT, 'SelectionNamespace' ),
               ( ['in', 'optional'], VARIANT, 'Repeating' )),
    DISPMETHOD([dispid(111)], None, 'Clear'),
    DISPMETHOD([dispid(2360), 'propget'], VARIANT_BOOL, 'Repeating'),
]
ListColumn._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(2321), 'hidden', 'propget'], POINTER(ListDataFormat), 'ListDataFormat'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
    DISPMETHOD([dispid(2322), 'propget'], XlTotalsCalculation, 'TotalsCalculation'),
    DISPMETHOD([dispid(2322), 'propput'], None, 'TotalsCalculation',
               ( ['in'], XlTotalsCalculation, 'rhs' )),
    DISPMETHOD([dispid(2258), 'propget'], POINTER(XPath), 'XPath'),
    DISPMETHOD([dispid(2323), 'hidden', 'propget'], BSTR, 'SharePointFormula'),
    DISPMETHOD([dispid(705), 'propget'], POINTER(Range), 'DataBodyRange'),
    DISPMETHOD([dispid(2681), 'propget'], POINTER(Range), 'Total'),
]
ListColumns._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(ListColumn), 'Add',
               ( ['in', 'optional'], VARIANT, 'Position' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ListColumn), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(ListColumn), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
]
class ListRows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024474-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ListRow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024475-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ListRow._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(2324), 'hidden', 'propget'], VARIANT_BOOL, 'InvalidData'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
]
ListRows._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2085), 'hidden'], POINTER(ListRow), '_Add',
               ( ['in', 'optional'], VARIANT, 'Position' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ListRow), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(ListRow), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181)], POINTER(ListRow), 'Add',
               ( ['in', 'optional'], VARIANT, 'Position' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysInsert' )),
]
class QueryTable(CoClass):
    _reg_clsid_ = GUID('{59191DA1-EA47-11CE-A51F-00AA0061507F}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
class _QueryTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024428-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class RefreshEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
QueryTable._com_interfaces_ = [_QueryTable]
QueryTable._outgoing_interfaces_ = [RefreshEvents]


# values for enumeration 'XlListObjectSourceType'
xlSrcExternal = 0
xlSrcRange = 1
xlSrcXml = 2
xlSrcQuery = 3
xlSrcModel = 4
XlListObjectSourceType = c_int # enum
class AutoFilter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024432-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Filters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024433-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Filter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024434-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Filter._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1618), 'propget'], VARIANT_BOOL, 'On'),
    DISPMETHOD([dispid(796), 'propget'], VARIANT, 'Criteria1'),
    DISPMETHOD([dispid(2641), 'hidden', 'propget'], XlAutoFilterOperator, '_Operator'),
    DISPMETHOD([dispid(798), 'propget'], VARIANT, 'Criteria2'),
    DISPMETHOD([dispid(797), 'propget'], XlAutoFilterOperator, 'Operator'),
    DISPMETHOD([dispid(797), 'propput'], None, 'Operator',
               ( ['in'], XlAutoFilterOperator, 'rhs' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
]
Filters._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Filter), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Filter), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class Sort(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AB-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlYesNoGuess'
xlGuess = 0
xlNo = 2
xlYes = 1
XlYesNoGuess = c_int # enum

# values for enumeration 'XlSortOrientation'
xlSortRows = 2
xlSortColumns = 1
XlSortOrientation = c_int # enum

# values for enumeration 'XlSortMethod'
xlPinYin = 1
xlStroke = 2
XlSortMethod = c_int # enum
class SortFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AA-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SortField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A9-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlSortOn'
xlSortOnValues = 0
xlSortOnCellColor = 1
xlSortOnFontColor = 2
xlSortOnIcon = 3
XlSortOn = c_int # enum

# values for enumeration 'XlSortOrder'
xlAscending = 1
xlDescending = 2
XlSortOrder = c_int # enum

# values for enumeration 'XlSortDataOption'
xlSortNormal = 0
xlSortTextAsNumbers = 1
XlSortDataOption = c_int # enum
class Icon(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class IconSet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlIconSet'
xlCustomSet = -1
xl3Arrows = 1
xl3ArrowsGray = 2
xl3Flags = 3
xl3TrafficLights1 = 4
xl3TrafficLights2 = 5
xl3Signs = 6
xl3Symbols = 7
xl3Symbols2 = 8
xl4Arrows = 9
xl4ArrowsGray = 10
xl4RedToBlack = 11
xl4CRV = 12
xl4TrafficLights = 13
xl5Arrows = 14
xl5ArrowsGray = 15
xl5CRV = 16
xl5Quarters = 17
xl3Stars = 18
xl3Triangles = 19
xl5Boxes = 20
XlIconSet = c_int # enum
IconSet._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(570), 'propget'], XlIconSet, 'ID'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Icon), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Icon), 'Item',
               ( ['in'], VARIANT, 'Index' )),
]
Icon._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IconSet), 'Parent'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
]
SortField._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2741), 'propget'], XlSortOn, 'SortOn'),
    DISPMETHOD([dispid(2741), 'propput'], None, 'SortOn',
               ( ['in'], XlSortOn, 'rhs' )),
    DISPMETHOD([dispid(2742), 'propget'], POINTER(IDispatch), 'SortOnValue'),
    DISPMETHOD([dispid(155), 'propget'], POINTER(Range), 'Key'),
    DISPMETHOD([dispid(192), 'propget'], XlSortOrder, 'Order'),
    DISPMETHOD([dispid(192), 'propput'], None, 'Order',
               ( ['in'], XlSortOrder, 'rhs' )),
    DISPMETHOD([dispid(2743), 'propget'], VARIANT, 'CustomOrder'),
    DISPMETHOD([dispid(2743), 'propput'], None, 'CustomOrder',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2744), 'propget'], XlSortDataOption, 'DataOption'),
    DISPMETHOD([dispid(2744), 'propput'], None, 'DataOption',
               ( ['in'], XlSortDataOption, 'rhs' )),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2745)], None, 'ModifyKey',
               ( ['in'], POINTER(Range), 'Key' )),
    DISPMETHOD([dispid(2746)], None, 'SetIcon',
               ( ['in'], POINTER(Icon), 'Icon' )),
]
SortFields._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(SortField), 'Add',
               ( ['in'], POINTER(Range), 'Key' ),
               ( ['in', 'optional'], VARIANT, 'SortOn' ),
               ( ['in', 'optional'], VARIANT, 'Order' ),
               ( ['in', 'optional'], VARIANT, 'CustomOrder' ),
               ( ['in', 'optional'], VARIANT, 'DataOption' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(SortField), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(111)], None, 'Clear'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SortField), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
Sort._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2748), 'propget'], POINTER(Range), 'Rng'),
    DISPMETHOD([dispid(895), 'propget'], XlYesNoGuess, 'Header'),
    DISPMETHOD([dispid(895), 'propput'], None, 'Header',
               ( ['in'], XlYesNoGuess, 'rhs' )),
    DISPMETHOD([dispid(426), 'propget'], VARIANT_BOOL, 'MatchCase'),
    DISPMETHOD([dispid(426), 'propput'], None, 'MatchCase',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], XlSortOrientation, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], XlSortOrientation, 'rhs' )),
    DISPMETHOD([dispid(897), 'propget'], XlSortMethod, 'SortMethod'),
    DISPMETHOD([dispid(897), 'propput'], None, 'SortMethod',
               ( ['in'], XlSortMethod, 'rhs' )),
    DISPMETHOD([dispid(2749), 'propget'], POINTER(SortFields), 'SortFields'),
    DISPMETHOD([dispid(2750)], None, 'SetRange',
               ( ['in'], POINTER(Range), 'Rng' )),
    DISPMETHOD([dispid(1675)], None, 'Apply'),
]
AutoFilter._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
    DISPMETHOD([dispid(1617), 'propget'], POINTER(Filters), 'Filters'),
    DISPMETHOD([dispid(800), 'propget'], VARIANT_BOOL, 'FilterMode'),
    DISPMETHOD([dispid(880), 'propget'], POINTER(Sort), 'Sort'),
    DISPMETHOD([dispid(2640)], None, 'ApplyFilter'),
    DISPMETHOD([dispid(794)], None, 'ShowAllData'),
]
class TableObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CE-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlCellInsertionMode'
xlOverwriteCells = 0
xlInsertDeleteCells = 1
xlInsertEntireRows = 2
XlCellInsertionMode = c_int # enum
TableObject._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1585), 'propget'], VARIANT_BOOL, 'RowNumbers'),
    DISPMETHOD([dispid(1585), 'propput'], None, 'RowNumbers',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1588), 'propget'], VARIANT_BOOL, 'FetchedRowOverflow'),
    DISPMETHOD([dispid(1590), 'propget'], XlCellInsertionMode, 'RefreshStyle'),
    DISPMETHOD([dispid(1590), 'propput'], None, 'RefreshStyle',
               ( ['in'], XlCellInsertionMode, 'rhs' )),
    DISPMETHOD([dispid(1477), 'propget'], VARIANT_BOOL, 'EnableRefresh'),
    DISPMETHOD([dispid(1477), 'propput'], None, 'EnableRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(681), 'propget'], POINTER(Range), 'Destination'),
    DISPMETHOD([dispid(1592), 'propget'], POINTER(Range), 'ResultRange'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1417)], VARIANT_BOOL, 'Refresh'),
    DISPMETHOD([dispid(1595), 'propget'], VARIANT_BOOL, 'EnableEditing'),
    DISPMETHOD([dispid(1595), 'propput'], None, 'EnableEditing',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1867), 'propget'], VARIANT_BOOL, 'PreserveColumnInfo'),
    DISPMETHOD([dispid(1867), 'propput'], None, 'PreserveColumnInfo',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1500), 'propget'], VARIANT_BOOL, 'PreserveFormatting'),
    DISPMETHOD([dispid(1500), 'propput'], None, 'PreserveFormatting',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1868), 'propget'], VARIANT_BOOL, 'AdjustColumnWidth'),
    DISPMETHOD([dispid(1868), 'propput'], None, 'AdjustColumnWidth',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2257), 'propget'], POINTER(ListObject), 'ListObject'),
    DISPMETHOD([dispid(2544), 'propget'], POINTER(WorkbookConnection), 'WorkbookConnection'),
]
ListObject._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1895)], BSTR, 'Publish',
               ( ['in'], VARIANT, 'Target' ),
               ( ['in'], VARIANT_BOOL, 'LinkSource' )),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(2308)], None, 'Unlink'),
    DISPMETHOD([dispid(2309)], None, 'Unlist'),
    DISPMETHOD([dispid(2310), 'hidden'], None, 'UpdateChanges',
               ( ['in', 'optional'], XlListConflict, 'iConflictType', 0 )),
    DISPMETHOD([dispid(256)], None, 'Resize',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(2312), 'propget'], VARIANT_BOOL, 'Active'),
    DISPMETHOD([dispid(705), 'propget'], POINTER(Range), 'DataBodyRange'),
    DISPMETHOD([dispid(1774), 'propget'], VARIANT_BOOL, 'DisplayRightToLeft'),
    DISPMETHOD([dispid(2313), 'propget'], POINTER(Range), 'HeaderRowRange'),
    DISPMETHOD([dispid(2314), 'propget'], POINTER(Range), 'InsertRowRange'),
    DISPMETHOD([dispid(2315), 'propget'], POINTER(ListColumns), 'ListColumns'),
    DISPMETHOD([dispid(2316), 'propget'], POINTER(ListRows), 'ListRows'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1386), 'propget'], POINTER(QueryTable), 'QueryTable'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
    DISPMETHOD([dispid(2317), 'propget'], VARIANT_BOOL, 'ShowAutoFilter'),
    DISPMETHOD([dispid(2317), 'propput'], None, 'ShowAutoFilter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2318), 'propget'], VARIANT_BOOL, 'ShowTotals'),
    DISPMETHOD([dispid(2318), 'propput'], None, 'ShowTotals',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(685), 'propget'], XlListObjectSourceType, 'SourceType'),
    DISPMETHOD([dispid(2319), 'propget'], POINTER(Range), 'TotalsRowRange'),
    DISPMETHOD([dispid(2320), 'propget'], BSTR, 'SharePointURL'),
    DISPMETHOD([dispid(2253), 'propget'], POINTER(XmlMap), 'XmlMap'),
    DISPMETHOD([dispid(2677), 'propget'], BSTR, 'DisplayName'),
    DISPMETHOD([dispid(2677), 'propput'], None, 'DisplayName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2678), 'propget'], VARIANT_BOOL, 'ShowHeaders'),
    DISPMETHOD([dispid(2678), 'propput'], None, 'ShowHeaders',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(793), 'propget'], POINTER(AutoFilter), 'AutoFilter'),
    DISPMETHOD([dispid(1504), 'propget'], VARIANT, 'TableStyle'),
    DISPMETHOD([dispid(1504), 'propput'], None, 'TableStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2679), 'propget'], VARIANT_BOOL, 'ShowTableStyleFirstColumn'),
    DISPMETHOD([dispid(2679), 'propput'], None, 'ShowTableStyleFirstColumn',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2563), 'propget'], VARIANT_BOOL, 'ShowTableStyleLastColumn'),
    DISPMETHOD([dispid(2563), 'propput'], None, 'ShowTableStyleLastColumn',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2564), 'propget'], VARIANT_BOOL, 'ShowTableStyleRowStripes'),
    DISPMETHOD([dispid(2564), 'propput'], None, 'ShowTableStyleRowStripes',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2565), 'propget'], VARIANT_BOOL, 'ShowTableStyleColumnStripes'),
    DISPMETHOD([dispid(2565), 'propput'], None, 'ShowTableStyleColumnStripes',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(880), 'propget'], POINTER(Sort), 'Sort'),
    DISPMETHOD([dispid(910), 'propget'], BSTR, 'Comment'),
    DISPMETHOD([dispid(910), 'propput'], None, 'Comment',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2680)], None, 'ExportToVisio'),
    DISPMETHOD([dispid(1891), 'propget'], BSTR, 'AlternativeText'),
    DISPMETHOD([dispid(1891), 'propput'], None, 'AlternativeText',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(273), 'propget'], BSTR, 'Summary'),
    DISPMETHOD([dispid(273), 'propput'], None, 'Summary',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(3095), 'propget'], POINTER(TableObject), 'TableObject'),
    DISPMETHOD([dispid(2881), 'propget'], POINTER(Slicers), 'Slicers'),
    DISPMETHOD([dispid(3096), 'propget'], VARIANT_BOOL, 'ShowAutoFilterDropDown'),
    DISPMETHOD([dispid(3096), 'propput'], None, 'ShowAutoFilterDropDown',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
SlicerCache._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(2077), 'propget'], VARIANT_BOOL, 'OLAP'),
    DISPMETHOD([dispid(685), 'propget'], XlPivotTableSourceType, 'SourceType'),
    DISPMETHOD([dispid(2544), 'propget'], POINTER(WorkbookConnection), 'WorkbookConnection'),
    DISPMETHOD([dispid(2881), 'propget'], POINTER(Slicers), 'Slicers'),
    DISPMETHOD([dispid(690), 'propget'], POINTER(SlicerPivotTables), 'PivotTables'),
    DISPMETHOD([dispid(2974), 'propget'], POINTER(SlicerCacheLevels), 'SlicerCacheLevels'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2975), 'propget'], POINTER(SlicerItems), 'VisibleSlicerItems'),
    DISPMETHOD([dispid(2976), 'propget'], VARIANT, 'VisibleSlicerItemsList'),
    DISPMETHOD([dispid(2976), 'propput'], None, 'VisibleSlicerItemsList',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2977), 'propget'], POINTER(SlicerItems), 'SlicerItems'),
    DISPMETHOD([dispid(2978), 'propget'], XlSlicerCrossFilterType, 'CrossFilterType'),
    DISPMETHOD([dispid(2978), 'propput'], None, 'CrossFilterType',
               ( ['in'], XlSlicerCrossFilterType, 'rhs' )),
    DISPMETHOD([dispid(2979), 'propget'], XlSlicerSort, 'SortItems'),
    DISPMETHOD([dispid(2979), 'propput'], None, 'SortItems',
               ( ['in'], XlSlicerSort, 'rhs' )),
    DISPMETHOD([dispid(721), 'propget'], BSTR, 'SourceName'),
    DISPMETHOD([dispid(2574), 'propget'], VARIANT_BOOL, 'SortUsingCustomLists'),
    DISPMETHOD([dispid(2574), 'propput'], None, 'SortUsingCustomLists',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(452), 'propget'], VARIANT_BOOL, 'ShowAllItems'),
    DISPMETHOD([dispid(452), 'propput'], None, 'ShowAllItems',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2594)], None, 'ClearManualFilter'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(3112), 'propget'], POINTER(TimelineState), 'TimelineState'),
    DISPMETHOD([dispid(2561)], None, 'ClearAllFilters'),
    DISPMETHOD([dispid(3111), 'propget'], XlSlicerCacheType, 'SlicerCacheType'),
    DISPMETHOD([dispid(3113), 'propget'], VARIANT_BOOL, 'FilterCleared'),
    DISPMETHOD([dispid(861), 'propget'], VARIANT_BOOL, 'List'),
    DISPMETHOD([dispid(3114), 'propget'], VARIANT_BOOL, 'RequireManualUpdate'),
    DISPMETHOD([dispid(3114), 'propput'], None, 'RequireManualUpdate',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2257), 'propget'], POINTER(ListObject), 'ListObject'),
    DISPMETHOD([dispid(3115)], None, 'ClearDateFilter'),
]
class TimelineViewState(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E0-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlTimelineLevel'
xlTimelineLevelYears = 0
xlTimelineLevelQuarters = 1
xlTimelineLevelMonths = 2
xlTimelineLevelDays = 3
XlTimelineLevel = c_int # enum
TimelineViewState._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(3139), 'propget'], VARIANT_BOOL, 'ShowHeader'),
    DISPMETHOD([dispid(3139), 'propput'], None, 'ShowHeader',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3140), 'propget'], VARIANT_BOOL, 'ShowSelectionLabel'),
    DISPMETHOD([dispid(3140), 'propput'], None, 'ShowSelectionLabel',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3141), 'propget'], VARIANT_BOOL, 'ShowTimeLevel'),
    DISPMETHOD([dispid(3141), 'propput'], None, 'ShowTimeLevel',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3142), 'propget'], VARIANT_BOOL, 'ShowHorizontalScrollbar'),
    DISPMETHOD([dispid(3142), 'propput'], None, 'ShowHorizontalScrollbar',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2980), 'propget'], XlTimelineLevel, 'Level'),
    DISPMETHOD([dispid(2980), 'propput'], None, 'Level',
               ( ['in'], XlTimelineLevel, 'rhs' )),
]
Slicer._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2983), 'propget'], VARIANT_BOOL, 'DisableMoveResizeUI'),
    DISPMETHOD([dispid(2983), 'propput'], None, 'DisableMoveResizeUI',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(272), 'propget'], c_double, 'RowHeight'),
    DISPMETHOD([dispid(272), 'propput'], None, 'RowHeight',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(242), 'propget'], c_double, 'ColumnWidth'),
    DISPMETHOD([dispid(242), 'propput'], None, 'ColumnWidth',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2984), 'propget'], c_int, 'NumberOfColumns'),
    DISPMETHOD([dispid(2984), 'propput'], None, 'NumberOfColumns',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2985), 'propget'], VARIANT_BOOL, 'DisplayHeader'),
    DISPMETHOD([dispid(2985), 'propput'], None, 'DisplayHeader',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2986), 'propget'], POINTER(SlicerCache), 'SlicerCache'),
    DISPMETHOD([dispid(2987), 'propget'], POINTER(SlicerCacheLevel), 'SlicerCacheLevel'),
    DISPMETHOD([dispid(1582), 'propget'], POINTER(Shape), 'Shape'),
    DISPMETHOD([dispid(260), 'propget'], VARIANT, 'Style'),
    DISPMETHOD([dispid(260), 'propput'], None, 'Style',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(565)], None, 'Cut'),
    DISPMETHOD([dispid(551)], None, 'Copy'),
    DISPMETHOD([dispid(2988), 'propget'], POINTER(SlicerItem), 'ActiveItem'),
    DISPMETHOD([dispid(3116), 'propget'], POINTER(TimelineViewState), 'TimelineViewState'),
    DISPMETHOD([dispid(3111), 'propget'], XlSlicerCacheType, 'SlicerCacheType'),
]
Slicers._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Slicer), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Slicer), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(Slicer), 'Add',
               ( ['in'], VARIANT, 'SlicerDestination' ),
               ( ['in', 'optional'], VARIANT, 'Level' ),
               ( ['in', 'optional'], VARIANT, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'Caption' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' )),
]
class PivotValueCell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CF-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Actions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024490-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Action(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448F-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlActionType'
xlActionTypeUrl = 1
xlActionTypeRowset = 16
xlActionTypeReport = 128
xlActionTypeDrillthrough = 256
XlActionType = c_int # enum
Action._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(108), 'propget'], XlActionType, 'Type'),
    DISPMETHOD([dispid(2712), 'propget'], BSTR, 'Coordinate'),
    DISPMETHOD([dispid(2713), 'propget'], BSTR, 'Content'),
    DISPMETHOD([dispid(2211)], None, 'Execute'),
]
Actions._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Action), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Action), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
]
PivotValueCell._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2013), 'propget'], POINTER(PivotCell), 'PivotCell'),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(585)], None, 'ShowDetail'),
    DISPMETHOD([dispid(2491), 'propget'], POINTER(Actions), 'ServerActions'),
]
PivotTable._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(708)], VARIANT, 'AddFields',
               ( ['in', 'optional'], VARIANT, 'RowFields' ),
               ( ['in', 'optional'], VARIANT, 'ColumnFields' ),
               ( ['in', 'optional'], VARIANT, 'PageFields' ),
               ( ['in', 'optional'], VARIANT, 'AddToTable' )),
    DISPMETHOD([dispid(713), 'propget'], POINTER(IDispatch), 'ColumnFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(694), 'propget'], VARIANT_BOOL, 'ColumnGrand'),
    DISPMETHOD([dispid(694), 'propput'], None, 'ColumnGrand',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(702), 'propget'], POINTER(Range), 'ColumnRange'),
    DISPMETHOD([dispid(706)], VARIANT, 'ShowPages',
               ( ['in', 'optional'], VARIANT, 'PageField' )),
    DISPMETHOD([dispid(705), 'propget'], POINTER(Range), 'DataBodyRange'),
    DISPMETHOD([dispid(715), 'propget'], POINTER(IDispatch), 'DataFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(704), 'propget'], POINTER(Range), 'DataLabelRange'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(695), 'propget'], VARIANT_BOOL, 'HasAutoFormat'),
    DISPMETHOD([dispid(695), 'propput'], None, 'HasAutoFormat',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(711), 'propget'], POINTER(IDispatch), 'HiddenFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(698), 'propget'], BSTR, 'InnerDetail'),
    DISPMETHOD([dispid(698), 'propput'], None, 'InnerDetail',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(714), 'propget'], POINTER(IDispatch), 'PageFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(703), 'propget'], POINTER(Range), 'PageRange'),
    DISPMETHOD([dispid(1482), 'propget'], POINTER(Range), 'PageRangeCells'),
    DISPMETHOD([dispid(718)], POINTER(IDispatch), 'PivotFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(696), 'propget'], c_double, 'RefreshDate'),
    DISPMETHOD([dispid(697), 'propget'], BSTR, 'RefreshName'),
    DISPMETHOD([dispid(717)], VARIANT_BOOL, 'RefreshTable'),
    DISPMETHOD([dispid(712), 'propget'], POINTER(IDispatch), 'RowFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(693), 'propget'], VARIANT_BOOL, 'RowGrand'),
    DISPMETHOD([dispid(693), 'propput'], None, 'RowGrand',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(701), 'propget'], POINTER(Range), 'RowRange'),
    DISPMETHOD([dispid(692), 'propget'], VARIANT_BOOL, 'SaveData'),
    DISPMETHOD([dispid(692), 'propput'], None, 'SaveData',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(686), 'propget'], VARIANT, 'SourceData'),
    DISPMETHOD([dispid(686), 'propput'], None, 'SourceData',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(699), 'propget'], POINTER(Range), 'TableRange1'),
    DISPMETHOD([dispid(700), 'propget'], POINTER(Range), 'TableRange2'),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(710), 'propget'], POINTER(IDispatch), 'VisibleFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1483), 'propget'], c_int, 'CacheIndex'),
    DISPMETHOD([dispid(1483), 'propput'], None, 'CacheIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1484)], POINTER(CalculatedFields), 'CalculatedFields'),
    DISPMETHOD([dispid(1485), 'propget'], VARIANT_BOOL, 'DisplayErrorString'),
    DISPMETHOD([dispid(1485), 'propput'], None, 'DisplayErrorString',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1486), 'propget'], VARIANT_BOOL, 'DisplayNullString'),
    DISPMETHOD([dispid(1486), 'propput'], None, 'DisplayNullString',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1487), 'propget'], VARIANT_BOOL, 'EnableDrilldown'),
    DISPMETHOD([dispid(1487), 'propput'], None, 'EnableDrilldown',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1488), 'propget'], VARIANT_BOOL, 'EnableFieldDialog'),
    DISPMETHOD([dispid(1488), 'propput'], None, 'EnableFieldDialog',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1489), 'propget'], VARIANT_BOOL, 'EnableWizard'),
    DISPMETHOD([dispid(1489), 'propput'], None, 'EnableWizard',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1490), 'propget'], BSTR, 'ErrorString'),
    DISPMETHOD([dispid(1490), 'propput'], None, 'ErrorString',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1491)], c_double, 'GetData',
               ( ['in'], BSTR, 'Name' )),
    DISPMETHOD([dispid(1492)], None, 'ListFormulas'),
    DISPMETHOD([dispid(1493), 'propget'], VARIANT_BOOL, 'ManualUpdate'),
    DISPMETHOD([dispid(1493), 'propput'], None, 'ManualUpdate',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1494), 'propget'], VARIANT_BOOL, 'MergeLabels'),
    DISPMETHOD([dispid(1494), 'propput'], None, 'MergeLabels',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1495), 'propget'], BSTR, 'NullString'),
    DISPMETHOD([dispid(1495), 'propput'], None, 'NullString',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1496)], POINTER(PivotCache), 'PivotCache'),
    DISPMETHOD([dispid(1497), 'propget'], POINTER(PivotFormulas), 'PivotFormulas'),
    DISPMETHOD([dispid(684)], None, 'PivotTableWizard',
               ( ['in', 'optional'], VARIANT, 'SourceType' ),
               ( ['in', 'optional'], VARIANT, 'SourceData' ),
               ( ['in', 'optional'], VARIANT, 'TableDestination' ),
               ( ['in', 'optional'], VARIANT, 'TableName' ),
               ( ['in', 'optional'], VARIANT, 'RowGrand' ),
               ( ['in', 'optional'], VARIANT, 'ColumnGrand' ),
               ( ['in', 'optional'], VARIANT, 'SaveData' ),
               ( ['in', 'optional'], VARIANT, 'HasAutoFormat' ),
               ( ['in', 'optional'], VARIANT, 'AutoPage' ),
               ( ['in', 'optional'], VARIANT, 'Reserved' ),
               ( ['in', 'optional'], VARIANT, 'BackgroundQuery' ),
               ( ['in', 'optional'], VARIANT, 'OptimizeCache' ),
               ( ['in', 'optional'], VARIANT, 'PageFieldOrder' ),
               ( ['in', 'optional'], VARIANT, 'PageFieldWrapCount' ),
               ( ['in', 'optional'], VARIANT, 'ReadData' ),
               ( ['in', 'optional'], VARIANT, 'Connection' )),
    DISPMETHOD([dispid(1498), 'propget'], VARIANT_BOOL, 'SubtotalHiddenPageItems'),
    DISPMETHOD([dispid(1498), 'propput'], None, 'SubtotalHiddenPageItems',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1429), 'propget'], c_int, 'PageFieldOrder'),
    DISPMETHOD([dispid(1429), 'propput'], None, 'PageFieldOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1499), 'propget'], BSTR, 'PageFieldStyle'),
    DISPMETHOD([dispid(1499), 'propput'], None, 'PageFieldStyle',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1430), 'propget'], c_int, 'PageFieldWrapCount'),
    DISPMETHOD([dispid(1430), 'propput'], None, 'PageFieldWrapCount',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1500), 'propget'], VARIANT_BOOL, 'PreserveFormatting'),
    DISPMETHOD([dispid(1500), 'propput'], None, 'PreserveFormatting',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2087), 'hidden'], None, '_PivotSelect',
               ( ['in'], BSTR, 'Name' ),
               ( ['in', 'optional'], XlPTSelectionMode, 'Mode', 0 )),
    DISPMETHOD([dispid(1502), 'propget'], BSTR, 'PivotSelection'),
    DISPMETHOD([dispid(1502), 'propput'], None, 'PivotSelection',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1503), 'propget'], XlPTSelectionMode, 'SelectionMode'),
    DISPMETHOD([dispid(1503), 'propput'], None, 'SelectionMode',
               ( ['in'], XlPTSelectionMode, 'rhs' )),
    DISPMETHOD([dispid(1504), 'hidden', 'propget'], BSTR, 'TableStyle'),
    DISPMETHOD([dispid(1504), 'hidden', 'propput'], None, 'TableStyle',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1505), 'propget'], BSTR, 'Tag'),
    DISPMETHOD([dispid(1505), 'propput'], None, 'Tag',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(680)], None, 'Update'),
    DISPMETHOD([dispid(1506), 'propget'], BSTR, 'VacatedStyle'),
    DISPMETHOD([dispid(1506), 'propput'], None, 'VacatedStyle',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(116), 'hidden'], None, 'Format',
               ( ['in'], XlPivotFormatType, 'Format' )),
    DISPMETHOD([dispid(1838), 'propget'], VARIANT_BOOL, 'PrintTitles'),
    DISPMETHOD([dispid(1838), 'propput'], None, 'PrintTitles',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1839), 'propget'], POINTER(CubeFields), 'CubeFields'),
    DISPMETHOD([dispid(1840), 'propget'], BSTR, 'GrandTotalName'),
    DISPMETHOD([dispid(1840), 'propput'], None, 'GrandTotalName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1841), 'propget'], VARIANT_BOOL, 'SmallGrid'),
    DISPMETHOD([dispid(1841), 'propput'], None, 'SmallGrid',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1842), 'propget'], VARIANT_BOOL, 'RepeatItemsOnEachPrintedPage'),
    DISPMETHOD([dispid(1842), 'propput'], None, 'RepeatItemsOnEachPrintedPage',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1843), 'propget'], VARIANT_BOOL, 'TotalsAnnotation'),
    DISPMETHOD([dispid(1843), 'propput'], None, 'TotalsAnnotation',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1501)], None, 'PivotSelect',
               ( ['in'], BSTR, 'Name' ),
               ( ['in', 'optional'], XlPTSelectionMode, 'Mode', 0 ),
               ( ['in', 'optional'], VARIANT, 'UseStandardName' )),
    DISPMETHOD([dispid(2089), 'propget'], BSTR, 'PivotSelectionStandard'),
    DISPMETHOD([dispid(2089), 'propput'], None, 'PivotSelectionStandard',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2090)], POINTER(Range), 'GetPivotData',
               ( ['in', 'optional'], VARIANT, 'DataField' ),
               ( ['in', 'optional'], VARIANT, 'Field1' ),
               ( ['in', 'optional'], VARIANT, 'Item1' ),
               ( ['in', 'optional'], VARIANT, 'Field2' ),
               ( ['in', 'optional'], VARIANT, 'Item2' ),
               ( ['in', 'optional'], VARIANT, 'Field3' ),
               ( ['in', 'optional'], VARIANT, 'Item3' ),
               ( ['in', 'optional'], VARIANT, 'Field4' ),
               ( ['in', 'optional'], VARIANT, 'Item4' ),
               ( ['in', 'optional'], VARIANT, 'Field5' ),
               ( ['in', 'optional'], VARIANT, 'Item5' ),
               ( ['in', 'optional'], VARIANT, 'Field6' ),
               ( ['in', 'optional'], VARIANT, 'Item6' ),
               ( ['in', 'optional'], VARIANT, 'Field7' ),
               ( ['in', 'optional'], VARIANT, 'Item7' ),
               ( ['in', 'optional'], VARIANT, 'Field8' ),
               ( ['in', 'optional'], VARIANT, 'Item8' ),
               ( ['in', 'optional'], VARIANT, 'Field9' ),
               ( ['in', 'optional'], VARIANT, 'Item9' ),
               ( ['in', 'optional'], VARIANT, 'Field10' ),
               ( ['in', 'optional'], VARIANT, 'Item10' ),
               ( ['in', 'optional'], VARIANT, 'Field11' ),
               ( ['in', 'optional'], VARIANT, 'Item11' ),
               ( ['in', 'optional'], VARIANT, 'Field12' ),
               ( ['in', 'optional'], VARIANT, 'Item12' ),
               ( ['in', 'optional'], VARIANT, 'Field13' ),
               ( ['in', 'optional'], VARIANT, 'Item13' ),
               ( ['in', 'optional'], VARIANT, 'Field14' ),
               ( ['in', 'optional'], VARIANT, 'Item14' )),
    DISPMETHOD([dispid(2120), 'propget'], POINTER(PivotField), 'DataPivotField'),
    DISPMETHOD([dispid(2121), 'propget'], VARIANT_BOOL, 'EnableDataValueEditing'),
    DISPMETHOD([dispid(2121), 'propput'], None, 'EnableDataValueEditing',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2122)], POINTER(PivotField), 'AddDataField',
               ( ['in'], POINTER(IDispatch), 'Field' ),
               ( ['in', 'optional'], VARIANT, 'Caption' ),
               ( ['in', 'optional'], VARIANT, 'Function' )),
    DISPMETHOD([dispid(2123), 'propget'], BSTR, 'MDX'),
    DISPMETHOD([dispid(2124), 'propget'], VARIANT_BOOL, 'ViewCalculatedMembers'),
    DISPMETHOD([dispid(2124), 'propput'], None, 'ViewCalculatedMembers',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2125), 'propget'], POINTER(CalculatedMembers), 'CalculatedMembers'),
    DISPMETHOD([dispid(2126), 'propget'], VARIANT_BOOL, 'DisplayImmediateItems'),
    DISPMETHOD([dispid(2126), 'propput'], None, 'DisplayImmediateItems',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2127), 'hidden'], VARIANT, 'Dummy15',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(2128), 'propget'], VARIANT_BOOL, 'EnableFieldList'),
    DISPMETHOD([dispid(2128), 'propput'], None, 'EnableFieldList',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2129), 'propget'], VARIANT_BOOL, 'VisualTotals'),
    DISPMETHOD([dispid(2129), 'propput'], None, 'VisualTotals',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2130), 'propget'], VARIANT_BOOL, 'ShowPageMultipleItemLabel'),
    DISPMETHOD([dispid(2130), 'propput'], None, 'ShowPageMultipleItemLabel',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(392), 'propget'], XlPivotTableVersionList, 'Version'),
    DISPMETHOD([dispid(2131)], BSTR, 'CreateCubeFile',
               ( ['in'], BSTR, 'File' ),
               ( ['in', 'optional'], VARIANT, 'Measures' ),
               ( ['in', 'optional'], VARIANT, 'Levels' ),
               ( ['in', 'optional'], VARIANT, 'Members' ),
               ( ['in', 'optional'], VARIANT, 'Properties' )),
    DISPMETHOD([dispid(2136), 'propget'], VARIANT_BOOL, 'DisplayEmptyRow'),
    DISPMETHOD([dispid(2136), 'propput'], None, 'DisplayEmptyRow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2137), 'propget'], VARIANT_BOOL, 'DisplayEmptyColumn'),
    DISPMETHOD([dispid(2137), 'propput'], None, 'DisplayEmptyColumn',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2138), 'hidden', 'propget'], VARIANT_BOOL, 'ShowCellBackgroundFromOLAP'),
    DISPMETHOD([dispid(2138), 'hidden', 'propput'], None, 'ShowCellBackgroundFromOLAP',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2546), 'propget'], POINTER(PivotAxis), 'PivotColumnAxis'),
    DISPMETHOD([dispid(2547), 'propget'], POINTER(PivotAxis), 'PivotRowAxis'),
    DISPMETHOD([dispid(2548), 'propget'], VARIANT_BOOL, 'ShowDrillIndicators'),
    DISPMETHOD([dispid(2548), 'propput'], None, 'ShowDrillIndicators',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2549), 'propget'], VARIANT_BOOL, 'PrintDrillIndicators'),
    DISPMETHOD([dispid(2549), 'propput'], None, 'PrintDrillIndicators',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2550), 'propget'], VARIANT_BOOL, 'DisplayMemberPropertyTooltips'),
    DISPMETHOD([dispid(2550), 'propput'], None, 'DisplayMemberPropertyTooltips',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2551), 'propget'], VARIANT_BOOL, 'DisplayContextTooltips'),
    DISPMETHOD([dispid(2551), 'propput'], None, 'DisplayContextTooltips',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2552)], None, 'ClearTable'),
    DISPMETHOD([dispid(2553), 'propget'], c_int, 'CompactRowIndent'),
    DISPMETHOD([dispid(2553), 'propput'], None, 'CompactRowIndent',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2554), 'propget'], XlLayoutRowType, 'LayoutRowDefault'),
    DISPMETHOD([dispid(2554), 'propput'], None, 'LayoutRowDefault',
               ( ['in'], XlLayoutRowType, 'rhs' )),
    DISPMETHOD([dispid(2555), 'propget'], VARIANT_BOOL, 'DisplayFieldCaptions'),
    DISPMETHOD([dispid(2555), 'propput'], None, 'DisplayFieldCaptions',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2556)], None, 'RowAxisLayout',
               ( ['in'], XlLayoutRowType, 'RowLayout' )),
    DISPMETHOD([dispid(2558)], None, 'SubtotalLocation',
               ( ['in'], XlSubtototalLocationType, 'Location' )),
    DISPMETHOD([dispid(2559), 'propget'], POINTER(PivotFilters), 'ActiveFilters'),
    DISPMETHOD([dispid(2560), 'propget'], VARIANT_BOOL, 'InGridDropZones'),
    DISPMETHOD([dispid(2560), 'propput'], None, 'InGridDropZones',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2561)], None, 'ClearAllFilters'),
    DISPMETHOD([dispid(2562), 'propget'], VARIANT, 'TableStyle2'),
    DISPMETHOD([dispid(2562), 'propput'], None, 'TableStyle2',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2563), 'propget'], VARIANT_BOOL, 'ShowTableStyleLastColumn'),
    DISPMETHOD([dispid(2563), 'propput'], None, 'ShowTableStyleLastColumn',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2564), 'propget'], VARIANT_BOOL, 'ShowTableStyleRowStripes'),
    DISPMETHOD([dispid(2564), 'propput'], None, 'ShowTableStyleRowStripes',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2565), 'propget'], VARIANT_BOOL, 'ShowTableStyleColumnStripes'),
    DISPMETHOD([dispid(2565), 'propput'], None, 'ShowTableStyleColumnStripes',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2566), 'propget'], VARIANT_BOOL, 'ShowTableStyleRowHeaders'),
    DISPMETHOD([dispid(2566), 'propput'], None, 'ShowTableStyleRowHeaders',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2567), 'propget'], VARIANT_BOOL, 'ShowTableStyleColumnHeaders'),
    DISPMETHOD([dispid(2567), 'propput'], None, 'ShowTableStyleColumnHeaders',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2568)], None, 'ConvertToFormulas',
               ( ['in'], VARIANT_BOOL, 'ConvertFilters' )),
    DISPMETHOD([dispid(2570), 'propget'], VARIANT_BOOL, 'AllowMultipleFilters'),
    DISPMETHOD([dispid(2570), 'propput'], None, 'AllowMultipleFilters',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2571), 'propget'], BSTR, 'CompactLayoutRowHeader'),
    DISPMETHOD([dispid(2571), 'propput'], None, 'CompactLayoutRowHeader',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2572), 'propget'], BSTR, 'CompactLayoutColumnHeader'),
    DISPMETHOD([dispid(2572), 'propput'], None, 'CompactLayoutColumnHeader',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2573), 'propget'], VARIANT_BOOL, 'FieldListSortAscending'),
    DISPMETHOD([dispid(2573), 'propput'], None, 'FieldListSortAscending',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2574), 'propget'], VARIANT_BOOL, 'SortUsingCustomLists'),
    DISPMETHOD([dispid(2574), 'propput'], None, 'SortUsingCustomLists',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2575)], None, 'ChangeConnection',
               ( ['in'], POINTER(WorkbookConnection), 'conn' )),
    DISPMETHOD([dispid(2577)], None, 'ChangePivotCache',
               ( ['in'], VARIANT, 'PivotCache' )),
    DISPMETHOD([dispid(1397), 'propget'], BSTR, 'Location'),
    DISPMETHOD([dispid(1397), 'propput'], None, 'Location',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2872), 'propget'], VARIANT_BOOL, 'EnableWriteback'),
    DISPMETHOD([dispid(2872), 'propput'], None, 'EnableWriteback',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2873), 'propget'], XlAllocation, 'Allocation'),
    DISPMETHOD([dispid(2873), 'propput'], None, 'Allocation',
               ( ['in'], XlAllocation, 'rhs' )),
    DISPMETHOD([dispid(2874), 'propget'], XlAllocationValue, 'AllocationValue'),
    DISPMETHOD([dispid(2874), 'propput'], None, 'AllocationValue',
               ( ['in'], XlAllocationValue, 'rhs' )),
    DISPMETHOD([dispid(2875), 'propget'], XlAllocationMethod, 'AllocationMethod'),
    DISPMETHOD([dispid(2875), 'propput'], None, 'AllocationMethod',
               ( ['in'], XlAllocationMethod, 'rhs' )),
    DISPMETHOD([dispid(2876), 'propget'], BSTR, 'AllocationWeightExpression'),
    DISPMETHOD([dispid(2876), 'propput'], None, 'AllocationWeightExpression',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2855)], None, 'AllocateChanges'),
    DISPMETHOD([dispid(2877)], None, 'CommitChanges'),
    DISPMETHOD([dispid(2856)], None, 'DiscardChanges'),
    DISPMETHOD([dispid(2878)], None, 'RefreshDataSourceValues'),
    DISPMETHOD([dispid(2879)], None, 'RepeatAllLabels',
               ( ['in'], XlPivotFieldRepeatLabels, 'Repeat' )),
    DISPMETHOD([dispid(2880), 'propget'], POINTER(PivotTableChangeList), 'ChangeList'),
    DISPMETHOD([dispid(2881), 'propget'], POINTER(Slicers), 'Slicers'),
    DISPMETHOD([dispid(1891), 'propget'], BSTR, 'AlternativeText'),
    DISPMETHOD([dispid(1891), 'propput'], None, 'AlternativeText',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(273), 'propget'], BSTR, 'Summary'),
    DISPMETHOD([dispid(273), 'propput'], None, 'Summary',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2882), 'propget'], VARIANT_BOOL, 'VisualTotalsForSets'),
    DISPMETHOD([dispid(2882), 'propput'], None, 'VisualTotalsForSets',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2883), 'propget'], VARIANT_BOOL, 'ShowValuesRow'),
    DISPMETHOD([dispid(2883), 'propput'], None, 'ShowValuesRow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2884), 'propget'], VARIANT_BOOL, 'CalculatedMembersInFilters'),
    DISPMETHOD([dispid(2884), 'propput'], None, 'CalculatedMembersInFilters',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3064)], POINTER(PivotValueCell), 'PivotValueCell',
               ( ['in', 'optional'], VARIANT, 'rowline' ),
               ( ['in', 'optional'], VARIANT, 'columnline' )),
    DISPMETHOD([dispid(268), 'propget'], VARIANT_BOOL, 'Hidden'),
    DISPMETHOD([dispid(3067), 'propget'], POINTER(Shape), 'PivotChart'),
    DISPMETHOD([dispid(3068)], None, 'DrillDown',
               ( ['in'], POINTER(PivotItem), 'PivotItem' ),
               ( ['in', 'optional'], VARIANT, 'PivotLine' )),
    DISPMETHOD([dispid(3069)], None, 'DrillUp',
               ( ['in'], POINTER(PivotItem), 'PivotItem' ),
               ( ['in', 'optional'], VARIANT, 'PivotLine' ),
               ( ['in', 'optional'], VARIANT, 'LevelUniqueName' )),
    DISPMETHOD([dispid(2580)], None, 'DrillTo',
               ( ['in'], POINTER(PivotItem), 'PivotItem' ),
               ( ['in'], POINTER(CubeField), 'CubeField' ),
               ( ['in', 'optional'], VARIANT, 'PivotLine' )),
    DISPMETHOD([dispid(1783), 'hidden'], VARIANT, 'Dummy2',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
]
class PivotItemList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024468-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotItemList._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(PivotItem), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotItem), '_Default',
               ( ['in'], VARIANT, 'Field' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlCellChangedState'
xlCellNotChanged = 1
xlCellChanged = 2
xlCellChangeApplied = 3
XlCellChangedState = c_int # enum
PivotCell._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2189), 'propget'], XlPivotCellType, 'PivotCellType'),
    DISPMETHOD([dispid(716), 'propget'], POINTER(PivotTable), 'PivotTable'),
    DISPMETHOD([dispid(2091), 'propget'], POINTER(PivotField), 'DataField'),
    DISPMETHOD([dispid(731), 'propget'], POINTER(PivotField), 'PivotField'),
    DISPMETHOD([dispid(740), 'propget'], POINTER(PivotItem), 'PivotItem'),
    DISPMETHOD([dispid(2190), 'propget'], POINTER(PivotItemList), 'RowItems'),
    DISPMETHOD([dispid(2191), 'propget'], POINTER(PivotItemList), 'ColumnItems'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
    DISPMETHOD([dispid(2295), 'hidden', 'propget'], BSTR, 'Dummy18'),
    DISPMETHOD([dispid(2193), 'propget'], XlConsolidationFunction, 'CustomSubtotalFunction'),
    DISPMETHOD([dispid(2673), 'propget'], POINTER(PivotLine), 'PivotRowLine'),
    DISPMETHOD([dispid(2674), 'propget'], POINTER(PivotLine), 'PivotColumnLine'),
    DISPMETHOD([dispid(2928)], None, 'AllocateChange'),
    DISPMETHOD([dispid(2929)], None, 'DiscardChange'),
    DISPMETHOD([dispid(2930), 'propget'], VARIANT, 'DataSourceValue'),
    DISPMETHOD([dispid(2931), 'propget'], XlCellChangedState, 'CellChanged'),
    DISPMETHOD([dispid(2123), 'propget'], BSTR, 'MDX'),
    DISPMETHOD([dispid(2491), 'propget'], POINTER(Actions), 'ServerActions'),
]
PivotLineCells._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotCell), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(PivotCell), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(3097), 'propget'], VARIANT_BOOL, 'Full'),
]
PivotLine._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2683), 'propget'], XlPivotLineType, 'LineType'),
    DISPMETHOD([dispid(133), 'propget'], c_int, 'Position'),
    DISPMETHOD([dispid(2684), 'propget'], POINTER(PivotLineCells), 'PivotLineCells'),
    DISPMETHOD([dispid(3098), 'propget'], POINTER(PivotLineCells), 'PivotLineCellsFull'),
]
PivotField._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(316), 'propget'], XlPivotFieldCalculation, 'Calculation'),
    DISPMETHOD([dispid(316), 'propput'], None, 'Calculation',
               ( ['in'], XlPivotFieldCalculation, 'rhs' )),
    DISPMETHOD([dispid(736), 'propget'], POINTER(PivotField), 'ChildField'),
    DISPMETHOD([dispid(730), 'propget'], VARIANT, 'ChildItems',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(738), 'propget'], VARIANT, 'CurrentPage'),
    DISPMETHOD([dispid(738), 'propput'], None, 'CurrentPage',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(720), 'propget'], POINTER(Range), 'DataRange'),
    DISPMETHOD([dispid(722), 'propget'], XlPivotFieldDataType, 'DataType'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(899), 'propget'], XlConsolidationFunction, 'Function'),
    DISPMETHOD([dispid(899), 'propput'], None, 'Function',
               ( ['in'], XlConsolidationFunction, 'rhs' )),
    DISPMETHOD([dispid(723), 'propget'], VARIANT, 'GroupLevel'),
    DISPMETHOD([dispid(728), 'propget'], VARIANT, 'HiddenItems',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(719), 'propget'], POINTER(Range), 'LabelRange'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(193), 'propget'], BSTR, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], XlPivotFieldOrientation, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], XlPivotFieldOrientation, 'rhs' )),
    DISPMETHOD([dispid(452), 'propget'], VARIANT_BOOL, 'ShowAllItems'),
    DISPMETHOD([dispid(452), 'propput'], None, 'ShowAllItems',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(732), 'propget'], POINTER(PivotField), 'ParentField'),
    DISPMETHOD([dispid(729), 'propget'], VARIANT, 'ParentItems',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(737)], VARIANT, 'PivotItems',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(133), 'propget'], VARIANT, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(721), 'propget'], BSTR, 'SourceName'),
    DISPMETHOD([dispid(733), 'propget'], VARIANT, 'Subtotals',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(733), 'propput'], None, 'Subtotals',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(734), 'propget'], VARIANT, 'BaseField'),
    DISPMETHOD([dispid(734), 'propput'], None, 'BaseField',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(735), 'propget'], VARIANT, 'BaseItem'),
    DISPMETHOD([dispid(735), 'propput'], None, 'BaseItem',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(724), 'propget'], VARIANT, 'TotalLevels'),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(727), 'propget'], VARIANT, 'VisibleItems',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1507)], POINTER(CalculatedItems), 'CalculatedItems'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1508), 'propget'], VARIANT_BOOL, 'DragToColumn'),
    DISPMETHOD([dispid(1508), 'propput'], None, 'DragToColumn',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1509), 'propget'], VARIANT_BOOL, 'DragToHide'),
    DISPMETHOD([dispid(1509), 'propput'], None, 'DragToHide',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1510), 'propget'], VARIANT_BOOL, 'DragToPage'),
    DISPMETHOD([dispid(1510), 'propput'], None, 'DragToPage',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1511), 'propget'], VARIANT_BOOL, 'DragToRow'),
    DISPMETHOD([dispid(1511), 'propput'], None, 'DragToRow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1844), 'propget'], VARIANT_BOOL, 'DragToData'),
    DISPMETHOD([dispid(1844), 'propput'], None, 'DragToData',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1512), 'propget'], VARIANT_BOOL, 'IsCalculated'),
    DISPMETHOD([dispid(372), 'propget'], c_int, 'MemoryUsed'),
    DISPMETHOD([dispid(1513), 'propget'], VARIANT_BOOL, 'ServerBased'),
    DISPMETHOD([dispid(1513), 'propput'], None, 'ServerBased',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2579), 'hidden'], None, '_AutoSort',
               ( ['in'], c_int, 'Order' ),
               ( ['in'], BSTR, 'Field' )),
    DISPMETHOD([dispid(1515)], None, 'AutoShow',
               ( ['in'], c_int, 'Type' ),
               ( ['in'], c_int, 'Range' ),
               ( ['in'], c_int, 'Count' ),
               ( ['in'], BSTR, 'Field' )),
    DISPMETHOD([dispid(1516), 'propget'], c_int, 'AutoSortOrder'),
    DISPMETHOD([dispid(1517), 'propget'], BSTR, 'AutoSortField'),
    DISPMETHOD([dispid(1518), 'propget'], c_int, 'AutoShowType'),
    DISPMETHOD([dispid(1519), 'propget'], c_int, 'AutoShowRange'),
    DISPMETHOD([dispid(1520), 'propget'], c_int, 'AutoShowCount'),
    DISPMETHOD([dispid(1521), 'propget'], BSTR, 'AutoShowField'),
    DISPMETHOD([dispid(1845), 'propget'], VARIANT_BOOL, 'LayoutBlankLine'),
    DISPMETHOD([dispid(1845), 'propput'], None, 'LayoutBlankLine',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1846), 'propget'], XlSubtototalLocationType, 'LayoutSubtotalLocation'),
    DISPMETHOD([dispid(1846), 'propput'], None, 'LayoutSubtotalLocation',
               ( ['in'], XlSubtototalLocationType, 'rhs' )),
    DISPMETHOD([dispid(1847), 'propget'], VARIANT_BOOL, 'LayoutPageBreak'),
    DISPMETHOD([dispid(1847), 'propput'], None, 'LayoutPageBreak',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1848), 'propget'], XlLayoutFormType, 'LayoutForm'),
    DISPMETHOD([dispid(1848), 'propput'], None, 'LayoutForm',
               ( ['in'], XlLayoutFormType, 'rhs' )),
    DISPMETHOD([dispid(1849), 'propget'], BSTR, 'SubtotalName'),
    DISPMETHOD([dispid(1849), 'propput'], None, 'SubtotalName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1850), 'propget'], VARIANT_BOOL, 'DrilledDown'),
    DISPMETHOD([dispid(1850), 'propput'], None, 'DrilledDown',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1851), 'propget'], POINTER(CubeField), 'CubeField'),
    DISPMETHOD([dispid(1852), 'propget'], BSTR, 'CurrentPageName'),
    DISPMETHOD([dispid(1852), 'propput'], None, 'CurrentPageName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2084), 'propget'], BSTR, 'StandardFormula'),
    DISPMETHOD([dispid(2084), 'propput'], None, 'StandardFormula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2139), 'propget'], VARIANT, 'HiddenItemsList'),
    DISPMETHOD([dispid(2139), 'propput'], None, 'HiddenItemsList',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2140), 'propget'], VARIANT_BOOL, 'DatabaseSort'),
    DISPMETHOD([dispid(2140), 'propput'], None, 'DatabaseSort',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2141), 'propget'], VARIANT_BOOL, 'IsMemberProperty'),
    DISPMETHOD([dispid(2142), 'propget'], POINTER(PivotField), 'PropertyParentField'),
    DISPMETHOD([dispid(2143), 'propget'], c_int, 'PropertyOrder'),
    DISPMETHOD([dispid(2143), 'propput'], None, 'PropertyOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2144), 'propget'], VARIANT_BOOL, 'EnableItemSelection'),
    DISPMETHOD([dispid(2144), 'propput'], None, 'EnableItemSelection',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2145), 'propget'], VARIANT, 'CurrentPageList'),
    DISPMETHOD([dispid(2145), 'propput'], None, 'CurrentPageList',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2146)], None, 'AddPageItem',
               ( ['in'], BSTR, 'Item' ),
               ( ['in', 'optional'], VARIANT, 'ClearList' )),
    DISPMETHOD([dispid(268), 'propget'], VARIANT_BOOL, 'Hidden'),
    DISPMETHOD([dispid(268), 'propput'], None, 'Hidden',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2580)], None, 'DrillTo',
               ( ['in'], BSTR, 'Field' )),
    DISPMETHOD([dispid(2581), 'propget'], VARIANT_BOOL, 'UseMemberPropertyAsCaption'),
    DISPMETHOD([dispid(2581), 'propput'], None, 'UseMemberPropertyAsCaption',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2582), 'propget'], BSTR, 'MemberPropertyCaption'),
    DISPMETHOD([dispid(2582), 'propput'], None, 'MemberPropertyCaption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2583), 'propget'], VARIANT_BOOL, 'DisplayAsTooltip'),
    DISPMETHOD([dispid(2583), 'propput'], None, 'DisplayAsTooltip',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2584), 'propget'], VARIANT_BOOL, 'DisplayInReport'),
    DISPMETHOD([dispid(2584), 'propput'], None, 'DisplayInReport',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2585), 'propget'], VARIANT_BOOL, 'DisplayAsCaption'),
    DISPMETHOD([dispid(2586), 'propget'], VARIANT_BOOL, 'LayoutCompactRow'),
    DISPMETHOD([dispid(2586), 'propput'], None, 'LayoutCompactRow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2587), 'propget'], VARIANT_BOOL, 'IncludeNewItemsInFilter'),
    DISPMETHOD([dispid(2587), 'propput'], None, 'IncludeNewItemsInFilter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2588), 'propget'], VARIANT, 'VisibleItemsList'),
    DISPMETHOD([dispid(2588), 'propput'], None, 'VisibleItemsList',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2589), 'propget'], POINTER(PivotFilters), 'PivotFilters'),
    DISPMETHOD([dispid(2590), 'propget'], POINTER(PivotLine), 'AutoSortPivotLine'),
    DISPMETHOD([dispid(2591), 'propget'], c_int, 'AutoSortCustomSubtotal'),
    DISPMETHOD([dispid(2592), 'propget'], VARIANT_BOOL, 'ShowingInAxis'),
    DISPMETHOD([dispid(2184), 'propget'], VARIANT_BOOL, 'EnableMultiplePageItems'),
    DISPMETHOD([dispid(2184), 'propput'], None, 'EnableMultiplePageItems',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2593), 'propget'], VARIANT_BOOL, 'AllItemsVisible'),
    DISPMETHOD([dispid(2594)], None, 'ClearManualFilter'),
    DISPMETHOD([dispid(2561)], None, 'ClearAllFilters'),
    DISPMETHOD([dispid(2595)], None, 'ClearValueFilters'),
    DISPMETHOD([dispid(2596)], None, 'ClearLabelFilters'),
    DISPMETHOD([dispid(1514)], None, 'AutoSort',
               ( ['in'], c_int, 'Order' ),
               ( ['in'], BSTR, 'Field' ),
               ( ['in', 'optional'], VARIANT, 'PivotLine' ),
               ( ['in', 'optional'], VARIANT, 'CustomSubtotal' )),
    DISPMETHOD([dispid(2599), 'propget'], BSTR, 'SourceCaption'),
    DISPMETHOD([dispid(585), 'propget'], VARIANT_BOOL, 'ShowDetail'),
    DISPMETHOD([dispid(585), 'propput'], None, 'ShowDetail',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2885), 'propget'], VARIANT_BOOL, 'RepeatLabels'),
    DISPMETHOD([dispid(2885), 'propput'], None, 'RepeatLabels',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class SoundNote(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SoundNote._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(917)], VARIANT, 'Import',
               ( ['in'], BSTR, 'Filename' )),
    DISPMETHOD([dispid(918)], VARIANT, 'Play'),
    DISPMETHOD([dispid(919)], VARIANT, 'Record'),
]

# values for enumeration 'XlCellType'
xlCellTypeBlanks = 4
xlCellTypeConstants = 2
xlCellTypeFormulas = -4123
xlCellTypeLastCell = 11
xlCellTypeComments = -4144
xlCellTypeVisible = 12
xlCellTypeAllFormatConditions = -4172
xlCellTypeSameFormatConditions = -4173
xlCellTypeAllValidation = -4174
xlCellTypeSameValidation = -4175
XlCellType = c_int # enum

# values for enumeration 'XlSubscribeToFormat'
xlSubscribeToPicture = -4147
xlSubscribeToText = -4158
XlSubscribeToFormat = c_int # enum

# values for enumeration 'XlSummaryRow'
xlSummaryAbove = 0
xlSummaryBelow = 1
XlSummaryRow = c_int # enum
class Validation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442F-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlDVType'
xlValidateInputOnly = 0
xlValidateWholeNumber = 1
xlValidateDecimal = 2
xlValidateList = 3
xlValidateDate = 4
xlValidateTime = 5
xlValidateTextLength = 6
xlValidateCustom = 7
XlDVType = c_int # enum
Validation._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], None, 'Add',
               ( ['in'], XlDVType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'AlertStyle' ),
               ( ['in', 'optional'], VARIANT, 'Operator' ),
               ( ['in', 'optional'], VARIANT, 'Formula1' ),
               ( ['in', 'optional'], VARIANT, 'Formula2' )),
    DISPMETHOD([dispid(1605), 'propget'], c_int, 'AlertStyle'),
    DISPMETHOD([dispid(1606), 'propget'], VARIANT_BOOL, 'IgnoreBlank'),
    DISPMETHOD([dispid(1606), 'propput'], None, 'IgnoreBlank',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1607), 'propget'], c_int, 'IMEMode'),
    DISPMETHOD([dispid(1607), 'propput'], None, 'IMEMode',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1608), 'propget'], VARIANT_BOOL, 'InCellDropdown'),
    DISPMETHOD([dispid(1608), 'propput'], None, 'InCellDropdown',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1609), 'propget'], BSTR, 'ErrorMessage'),
    DISPMETHOD([dispid(1609), 'propput'], None, 'ErrorMessage',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1610), 'propget'], BSTR, 'ErrorTitle'),
    DISPMETHOD([dispid(1610), 'propput'], None, 'ErrorTitle',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1611), 'propget'], BSTR, 'InputMessage'),
    DISPMETHOD([dispid(1611), 'propput'], None, 'InputMessage',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1612), 'propget'], BSTR, 'InputTitle'),
    DISPMETHOD([dispid(1612), 'propput'], None, 'InputTitle',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1579), 'propget'], BSTR, 'Formula1'),
    DISPMETHOD([dispid(1580), 'propget'], BSTR, 'Formula2'),
    DISPMETHOD([dispid(1581)], None, 'Modify',
               ( ['in', 'optional'], VARIANT, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'AlertStyle' ),
               ( ['in', 'optional'], VARIANT, 'Operator' ),
               ( ['in', 'optional'], VARIANT, 'Formula1' ),
               ( ['in', 'optional'], VARIANT, 'Formula2' )),
    DISPMETHOD([dispid(797), 'propget'], c_int, 'Operator'),
    DISPMETHOD([dispid(1613), 'propget'], VARIANT_BOOL, 'ShowError'),
    DISPMETHOD([dispid(1613), 'propput'], None, 'ShowError',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1614), 'propget'], VARIANT_BOOL, 'ShowInput'),
    DISPMETHOD([dispid(1614), 'propput'], None, 'ShowInput',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(6), 'propget'], VARIANT_BOOL, 'Value'),
]
class Worksheet(CoClass):
    _reg_clsid_ = GUID('{00020820-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
class _Worksheet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D8-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class DocEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024411-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Worksheet._com_interfaces_ = [_Worksheet]
Worksheet._outgoing_interfaces_ = [DocEvents]

class Comment(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024427-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Comment._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(574), 'propget'], BSTR, 'Author'),
    DISPMETHOD([dispid(1582), 'propget'], POINTER(Shape), 'Shape'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138)], BSTR, 'Text',
               ( ['in', 'optional'], VARIANT, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Overwrite' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(502)], POINTER(Comment), 'Next'),
    DISPMETHOD([dispid(503)], POINTER(Comment), 'Previous'),
]
class Phonetic(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024438-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Phonetic._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1674), 'propget'], c_int, 'CharacterType'),
    DISPMETHOD([dispid(1674), 'propput'], None, 'CharacterType',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(453), 'propget'], c_int, 'Alignment'),
    DISPMETHOD([dispid(453), 'propput'], None, 'Alignment',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
]
class FormatConditions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024424-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlFormatConditionType'
xlCellValue = 1
xlExpression = 2
xlColorScale = 3
xlDatabar = 4
xlTop10 = 5
xlIconSets = 6
xlUniqueValues = 8
xlTextString = 9
xlBlanksCondition = 10
xlTimePeriod = 11
xlAboveAverageCondition = 12
xlNoBlanksCondition = 13
xlErrorsCondition = 16
xlNoErrorsCondition = 17
XlFormatConditionType = c_int # enum
FormatConditions._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(181)], POINTER(IDispatch), 'Add',
               ( ['in'], XlFormatConditionType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Operator' ),
               ( ['in', 'optional'], VARIANT, 'Formula1' ),
               ( ['in', 'optional'], VARIANT, 'Formula2' ),
               ( ['in', 'optional'], VARIANT, 'String' ),
               ( ['in', 'optional'], VARIANT, 'TextOperator' ),
               ( ['in', 'optional'], VARIANT, 'DateOperator' ),
               ( ['in', 'optional'], VARIANT, 'ScopeType' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2616)], POINTER(IDispatch), 'AddColorScale',
               ( ['in'], c_int, 'ColorScaleType' )),
    DISPMETHOD([dispid(2618)], POINTER(IDispatch), 'AddDatabar'),
    DISPMETHOD([dispid(2619)], POINTER(IDispatch), 'AddIconSetCondition'),
    DISPMETHOD([dispid(2620)], POINTER(IDispatch), 'AddTop10'),
    DISPMETHOD([dispid(2621)], POINTER(IDispatch), 'AddAboveAverage'),
    DISPMETHOD([dispid(2622)], POINTER(IDispatch), 'AddUniqueValues'),
]
class Hyperlinks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024430-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Hyperlinks._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(IDispatch), 'Add',
               ( ['in'], POINTER(IDispatch), 'Anchor' ),
               ( ['in'], BSTR, 'Address' ),
               ( ['in', 'optional'], VARIANT, 'SubAddress' ),
               ( ['in', 'optional'], VARIANT, 'ScreenTip' ),
               ( ['in', 'optional'], VARIANT, 'TextToDisplay' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Hyperlink), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Hyperlink), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
class Phonetics(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024447-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Phonetics._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(608), 'propget'], c_int, 'Start'),
    DISPMETHOD([dispid(609), 'propget'], c_int, 'Length'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1674), 'propget'], c_int, 'CharacterType'),
    DISPMETHOD([dispid(1674), 'propput'], None, 'CharacterType',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(453), 'propget'], c_int, 'Alignment'),
    DISPMETHOD([dispid(453), 'propput'], None, 'Alignment',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(181)], None, 'Add',
               ( ['in'], c_int, 'Start' ),
               ( ['in'], c_int, 'Length' ),
               ( ['in'], BSTR, 'Text' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class Errors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Error(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Error._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(6), 'propget'], VARIANT_BOOL, 'Value'),
    DISPMETHOD([dispid(2210), 'propget'], VARIANT_BOOL, 'Ignore'),
    DISPMETHOD([dispid(2210), 'propput'], None, 'Ignore',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
Errors._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Error), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Error), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class SmartTags(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024461-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class SmartTag(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024460-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class SmartTagActions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class SmartTagAction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []

# values for enumeration 'XlSmartTagControlType'
xlSmartTagControlSmartTag = 1
xlSmartTagControlLink = 2
xlSmartTagControlHelp = 3
xlSmartTagControlHelpURL = 4
xlSmartTagControlSeparator = 5
xlSmartTagControlButton = 6
xlSmartTagControlLabel = 7
xlSmartTagControlImage = 8
xlSmartTagControlCheckbox = 9
xlSmartTagControlTextbox = 10
xlSmartTagControlListbox = 11
xlSmartTagControlCombo = 12
xlSmartTagControlActiveX = 13
xlSmartTagControlRadioGroup = 14
XlSmartTagControlType = c_int # enum
SmartTagAction._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(2211)], None, 'Execute'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(108), 'propget'], XlSmartTagControlType, 'Type'),
    DISPMETHOD([dispid(2297), 'propget'], VARIANT_BOOL, 'PresentInPane'),
    DISPMETHOD([dispid(2298), 'propget'], VARIANT_BOOL, 'ExpandHelp'),
    DISPMETHOD([dispid(2298), 'propput'], None, 'ExpandHelp',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2299), 'propget'], VARIANT_BOOL, 'CheckboxState'),
    DISPMETHOD([dispid(2299), 'propput'], None, 'CheckboxState',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2300), 'propget'], BSTR, 'TextboxText'),
    DISPMETHOD([dispid(2300), 'propput'], None, 'TextboxText',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2301), 'propget'], c_int, 'ListSelection'),
    DISPMETHOD([dispid(2301), 'propput'], None, 'ListSelection',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2302), 'propget'], c_int, 'RadioGroupSelection'),
    DISPMETHOD([dispid(2302), 'propput'], None, 'RadioGroupSelection',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2303), 'propget'], POINTER(IDispatch), 'ActiveXControl'),
]
SmartTagActions._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SmartTagAction), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(SmartTagAction), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class CustomProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024452-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class CustomProperty(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024453-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
CustomProperty._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], VARIANT, '_Default'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
CustomProperties._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(CustomProperty), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], VARIANT, 'Value' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(CustomProperty), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(CustomProperty), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
SmartTag._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2212), 'propget'], BSTR, 'DownloadURL'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(2213), 'propget'], BSTR, 'XML'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2214), 'propget'], POINTER(SmartTagActions), 'SmartTagActions'),
    DISPMETHOD([dispid(2135), 'propget'], POINTER(CustomProperties), 'Properties'),
]
SmartTags._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(SmartTag), 'Add',
               ( ['in'], BSTR, 'SmartTagType' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SmartTag), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlFixedFormatType'
xlTypePDF = 0
xlTypeXPS = 1
XlFixedFormatType = c_int # enum
class SparklineGroups(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B6-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlSparkType'
xlSparkLine = 1
xlSparkColumn = 2
xlSparkColumnStacked100 = 3
XlSparkType = c_int # enum
class SparklineGroup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B7-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Sparkline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B9-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Sparkline._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1397), 'propget'], POINTER(Range), 'Location'),
    DISPMETHOD([dispid(1397), 'propputref'], None, 'Location',
               ( ['in'], POINTER(Range), 'rhs' )),
    DISPMETHOD([dispid(686), 'propget'], BSTR, 'SourceData'),
    DISPMETHOD([dispid(686), 'propput'], None, 'SourceData',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2949)], None, 'ModifyLocation',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2950)], None, 'ModifySourceData',
               ( ['in'], BSTR, 'Formula' )),
]
class FormatColor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024491-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
FormatColor._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(99), 'propget'], VARIANT, 'Color'),
    DISPMETHOD([dispid(99), 'propput'], None, 'Color',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(97), 'propget'], XlColorIndex, 'ColorIndex'),
    DISPMETHOD([dispid(97), 'propput'], None, 'ColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(2365), 'propget'], VARIANT, 'ThemeColor'),
    DISPMETHOD([dispid(2365), 'propput'], None, 'ThemeColor',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2366), 'propget'], VARIANT, 'TintAndShade'),
    DISPMETHOD([dispid(2366), 'propput'], None, 'TintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
]
class SparkPoints(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B8-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SparkColor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BD-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SparkColor._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(99), 'propget'], POINTER(FormatColor), 'Color'),
]
SparkPoints._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2955), 'propget'], POINTER(SparkColor), 'Negative'),
    DISPMETHOD([dispid(2956), 'propget'], POINTER(SparkColor), 'Markers'),
    DISPMETHOD([dispid(2957), 'propget'], POINTER(SparkColor), 'Highpoint'),
    DISPMETHOD([dispid(2958), 'propget'], POINTER(SparkColor), 'Lowpoint'),
    DISPMETHOD([dispid(2959), 'propget'], POINTER(SparkColor), 'Firstpoint'),
    DISPMETHOD([dispid(2960), 'propget'], POINTER(SparkColor), 'Lastpoint'),
]
class SparkAxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BA-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class SparkVerticalAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BC-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlSparkScale'
xlSparkScaleGroup = 1
xlSparkScaleSingle = 2
xlSparkScaleCustom = 3
XlSparkScale = c_int # enum
SparkVerticalAxis._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2965), 'propget'], XlSparkScale, 'MinScaleType'),
    DISPMETHOD([dispid(2965), 'propput'], None, 'MinScaleType',
               ( ['in'], XlSparkScale, 'rhs' )),
    DISPMETHOD([dispid(2966), 'propget'], VARIANT, 'CustomMinScaleValue'),
    DISPMETHOD([dispid(2966), 'propput'], None, 'CustomMinScaleValue',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2967), 'propget'], XlSparkScale, 'MaxScaleType'),
    DISPMETHOD([dispid(2967), 'propput'], None, 'MaxScaleType',
               ( ['in'], XlSparkScale, 'rhs' )),
    DISPMETHOD([dispid(2968), 'propget'], VARIANT, 'CustomMaxScaleValue'),
    DISPMETHOD([dispid(2968), 'propput'], None, 'CustomMaxScaleValue',
               ( ['in'], VARIANT, 'rhs' )),
]
class SparkHorizontalAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BB-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SparkHorizontalAxis._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(67), 'propget'], POINTER(SparkColor), 'Axis'),
    DISPMETHOD([dispid(2963), 'propget'], VARIANT_BOOL, 'IsDateAxis'),
    DISPMETHOD([dispid(2964), 'propget'], VARIANT_BOOL, 'RightToLeftPlotOrder'),
    DISPMETHOD([dispid(2964), 'propput'], None, 'RightToLeftPlotOrder',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
SparkAxes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2961), 'propget'], POINTER(SparkVerticalAxis), 'Vertical'),
    DISPMETHOD([dispid(2962), 'propget'], POINTER(SparkHorizontalAxis), 'Horizontal'),
]

# values for enumeration 'XlDisplayBlanksAs'
xlInterpolated = 3
xlNotPlotted = 1
xlZero = 2
XlDisplayBlanksAs = c_int # enum

# values for enumeration 'XlSparklineRowCol'
xlSparklineNonSquare = 0
xlSparklineRowsSquare = 1
xlSparklineColumnsSquare = 2
XlSparklineRowCol = c_int # enum
SparklineGroup._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Sparkline), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(1397), 'propget'], POINTER(Range), 'Location'),
    DISPMETHOD([dispid(1397), 'propputref'], None, 'Location',
               ( ['in'], POINTER(Range), 'rhs' )),
    DISPMETHOD([dispid(686), 'propget'], BSTR, 'SourceData'),
    DISPMETHOD([dispid(686), 'propput'], None, 'SourceData',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2948), 'propget'], BSTR, 'DateRange'),
    DISPMETHOD([dispid(2948), 'propput'], None, 'DateRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2949)], None, 'ModifyLocation',
               ( ['in'], POINTER(Range), 'Location' )),
    DISPMETHOD([dispid(2950)], None, 'ModifySourceData',
               ( ['in'], BSTR, 'SourceData' )),
    DISPMETHOD([dispid(1581)], None, 'Modify',
               ( ['in'], POINTER(Range), 'Location' ),
               ( ['in'], BSTR, 'SourceData' )),
    DISPMETHOD([dispid(2951)], None, 'ModifyDateRange',
               ( ['in'], BSTR, 'DateRange' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(108), 'propget'], XlSparkType, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlSparkType, 'rhs' )),
    DISPMETHOD([dispid(2952), 'propget'], POINTER(FormatColor), 'SeriesColor'),
    DISPMETHOD([dispid(70), 'propget'], POINTER(SparkPoints), 'Points'),
    DISPMETHOD([dispid(23), 'propget'], POINTER(SparkAxes), 'Axes'),
    DISPMETHOD([dispid(93), 'propget'], XlDisplayBlanksAs, 'DisplayBlanksAs'),
    DISPMETHOD([dispid(93), 'propput'], None, 'DisplayBlanksAs',
               ( ['in'], XlDisplayBlanksAs, 'rhs' )),
    DISPMETHOD([dispid(2953), 'propget'], VARIANT_BOOL, 'DisplayHidden'),
    DISPMETHOD([dispid(2953), 'propput'], None, 'DisplayHidden',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2954), 'propget'], VARIANT, 'LineWeight'),
    DISPMETHOD([dispid(2954), 'propput'], None, 'LineWeight',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(202), 'propget'], XlSparklineRowCol, 'PlotBy'),
    DISPMETHOD([dispid(202), 'propput'], None, 'PlotBy',
               ( ['in'], XlSparklineRowCol, 'rhs' )),
]
SparklineGroups._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(SparklineGroup), 'Add',
               ( ['in'], XlSparkType, 'Type' ),
               ( ['in'], BSTR, 'SourceData' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(SparklineGroup), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SparklineGroup), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(111)], None, 'Clear'),
    DISPMETHOD([dispid(2947)], None, 'ClearGroups'),
    DISPMETHOD([dispid(46)], None, 'Group',
               ( ['in'], POINTER(Range), 'Location' )),
    DISPMETHOD([dispid(244)], None, 'Ungroup'),
]
class DisplayFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
DisplayFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(260), 'propget'], VARIANT, 'Style'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT, 'AddIndent'),
    DISPMETHOD([dispid(262), 'propget'], VARIANT, 'FormulaHidden'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(201), 'propget'], VARIANT, 'IndentLevel'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(269), 'propget'], VARIANT, 'Locked'),
    DISPMETHOD([dispid(208), 'propget'], VARIANT, 'MergeCells'),
    DISPMETHOD([dispid(193), 'propget'], VARIANT, 'NumberFormat'),
    DISPMETHOD([dispid(1097), 'propget'], VARIANT, 'NumberFormatLocal'),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(209), 'propget'], VARIANT, 'ShrinkToFit'),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(276), 'propget'], VARIANT, 'WrapText'),
]
Range._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(304)], VARIANT, 'Activate'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(236), 'propget'], BSTR, 'Address',
               ( ['in', 'optional'], VARIANT, 'RowAbsolute' ),
               ( ['in', 'optional'], VARIANT, 'ColumnAbsolute' ),
               ( ['in', 'optional'], XlReferenceStyle, 'ReferenceStyle', 1 ),
               ( ['in', 'optional'], VARIANT, 'External' ),
               ( ['in', 'optional'], VARIANT, 'RelativeTo' )),
    DISPMETHOD([dispid(437), 'propget'], BSTR, 'AddressLocal',
               ( ['in', 'optional'], VARIANT, 'RowAbsolute' ),
               ( ['in', 'optional'], VARIANT, 'ColumnAbsolute' ),
               ( ['in', 'optional'], XlReferenceStyle, 'ReferenceStyle', 1 ),
               ( ['in', 'optional'], VARIANT, 'External' ),
               ( ['in', 'optional'], VARIANT, 'RelativeTo' )),
    DISPMETHOD([dispid(876)], VARIANT, 'AdvancedFilter',
               ( ['in'], XlFilterAction, 'Action' ),
               ( ['in', 'optional'], VARIANT, 'CriteriaRange' ),
               ( ['in', 'optional'], VARIANT, 'CopyToRange' ),
               ( ['in', 'optional'], VARIANT, 'Unique' )),
    DISPMETHOD([dispid(441)], VARIANT, 'ApplyNames',
               ( ['in', 'optional'], VARIANT, 'Names' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreRelativeAbsolute' ),
               ( ['in', 'optional'], VARIANT, 'UseRowColumnNames' ),
               ( ['in', 'optional'], VARIANT, 'OmitColumn' ),
               ( ['in', 'optional'], VARIANT, 'OmitRow' ),
               ( ['in', 'optional'], XlApplyNamesOrder, 'Order', 1 ),
               ( ['in', 'optional'], VARIANT, 'AppendLast' )),
    DISPMETHOD([dispid(448)], VARIANT, 'ApplyOutlineStyles'),
    DISPMETHOD([dispid(568), 'propget'], POINTER(Areas), 'Areas'),
    DISPMETHOD([dispid(1185)], BSTR, 'AutoComplete',
               ( ['in'], BSTR, 'String' )),
    DISPMETHOD([dispid(449)], VARIANT, 'AutoFill',
               ( ['in'], POINTER(Range), 'Destination' ),
               ( ['in', 'optional'], XlAutoFillType, 'Type', 0 )),
    DISPMETHOD([dispid(793)], VARIANT, 'AutoFilter',
               ( ['in', 'optional'], VARIANT, 'Field' ),
               ( ['in', 'optional'], VARIANT, 'Criteria1' ),
               ( ['in', 'optional'], XlAutoFilterOperator, 'Operator', 1 ),
               ( ['in', 'optional'], VARIANT, 'Criteria2' ),
               ( ['in', 'optional'], VARIANT, 'VisibleDropDown' )),
    DISPMETHOD([dispid(237)], VARIANT, 'AutoFit'),
    DISPMETHOD([dispid(114), 'hidden'], VARIANT, 'AutoFormat',
               ( ['in', 'optional'], XlRangeAutoFormat, 'Format', 1 ),
               ( ['in', 'optional'], VARIANT, 'Number' ),
               ( ['in', 'optional'], VARIANT, 'Font' ),
               ( ['in', 'optional'], VARIANT, 'Alignment' ),
               ( ['in', 'optional'], VARIANT, 'Border' ),
               ( ['in', 'optional'], VARIANT, 'Pattern' ),
               ( ['in', 'optional'], VARIANT, 'Width' )),
    DISPMETHOD([dispid(1036)], VARIANT, 'AutoOutline'),
    DISPMETHOD([dispid(1067), 'hidden'], VARIANT, '_BorderAround',
               ( ['in', 'optional'], VARIANT, 'LineStyle' ),
               ( ['in', 'optional'], XlBorderWeight, 'Weight', 2 ),
               ( ['in', 'optional'], XlColorIndex, 'ColorIndex', -4105 ),
               ( ['in', 'optional'], VARIANT, 'Color' )),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(279)], VARIANT, 'Calculate'),
    DISPMETHOD([dispid(238), 'propget'], POINTER(Range), 'Cells'),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(111)], VARIANT, 'Clear'),
    DISPMETHOD([dispid(113)], VARIANT, 'ClearContents'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(239)], VARIANT, 'ClearNotes'),
    DISPMETHOD([dispid(1037)], VARIANT, 'ClearOutline'),
    DISPMETHOD([dispid(240), 'propget'], c_int, 'Column'),
    DISPMETHOD([dispid(510)], POINTER(Range), 'ColumnDifferences',
               ( ['in'], VARIANT, 'Comparison' )),
    DISPMETHOD([dispid(241), 'propget'], POINTER(Range), 'Columns'),
    DISPMETHOD([dispid(242), 'propget'], VARIANT, 'ColumnWidth'),
    DISPMETHOD([dispid(242), 'propput'], None, 'ColumnWidth',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(482)], VARIANT, 'Consolidate',
               ( ['in', 'optional'], VARIANT, 'Sources' ),
               ( ['in', 'optional'], VARIANT, 'Function' ),
               ( ['in', 'optional'], VARIANT, 'TopRow' ),
               ( ['in', 'optional'], VARIANT, 'LeftColumn' ),
               ( ['in', 'optional'], VARIANT, 'CreateLinks' )),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy',
               ( ['in', 'optional'], VARIANT, 'Destination' )),
    DISPMETHOD([dispid(1152)], c_int, 'CopyFromRecordset',
               ( ['in'], POINTER(IUnknown), 'Data' ),
               ( ['in', 'optional'], VARIANT, 'MaxRows' ),
               ( ['in', 'optional'], VARIANT, 'MaxColumns' )),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(457)], VARIANT, 'CreateNames',
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Bottom' ),
               ( ['in', 'optional'], VARIANT, 'Right' )),
    DISPMETHOD([dispid(458), 'hidden'], VARIANT, 'CreatePublisher',
               ( ['in', 'optional'], VARIANT, 'Edition' ),
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
               ( ['in', 'optional'], VARIANT, 'ContainsPICT' ),
               ( ['in', 'optional'], VARIANT, 'ContainsBIFF' ),
               ( ['in', 'optional'], VARIANT, 'ContainsRTF' ),
               ( ['in', 'optional'], VARIANT, 'ContainsVALU' )),
    DISPMETHOD([dispid(501), 'propget'], POINTER(Range), 'CurrentArray'),
    DISPMETHOD([dispid(243), 'propget'], POINTER(Range), 'CurrentRegion'),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut',
               ( ['in', 'optional'], VARIANT, 'Destination' )),
    DISPMETHOD([dispid(464)], VARIANT, 'DataSeries',
               ( ['in', 'optional'], VARIANT, 'Rowcol' ),
               ( ['in', 'optional'], XlDataSeriesType, 'Type', -4132 ),
               ( ['in', 'optional'], XlDataSeriesDate, 'Date', 1 ),
               ( ['in', 'optional'], VARIANT, 'Step' ),
               ( ['in', 'optional'], VARIANT, 'Stop' ),
               ( ['in', 'optional'], VARIANT, 'Trend' )),
    DISPMETHOD([dispid(0), 'propget'], VARIANT, '_Default',
               ( ['in', 'optional'], VARIANT, 'RowIndex' ),
               ( ['in', 'optional'], VARIANT, 'ColumnIndex' )),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in', 'optional'], VARIANT, 'RowIndex' ),
               ( ['in', 'optional'], VARIANT, 'ColumnIndex' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete',
               ( ['in', 'optional'], VARIANT, 'Shift' )),
    DISPMETHOD([dispid(543), 'propget'], POINTER(Range), 'Dependents'),
    DISPMETHOD([dispid(245)], VARIANT, 'DialogBox'),
    DISPMETHOD([dispid(545), 'propget'], POINTER(Range), 'DirectDependents'),
    DISPMETHOD([dispid(546), 'propget'], POINTER(Range), 'DirectPrecedents'),
    DISPMETHOD([dispid(1131)], VARIANT, 'EditionOptions',
               ( ['in'], XlEditionType, 'Type' ),
               ( ['in'], XlEditionOptionsOption, 'Option' ),
               ( ['in', 'optional'], VARIANT, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'Reference' ),
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
               ( ['in', 'optional'], XlPictureAppearance, 'ChartSize', 1 ),
               ( ['in', 'optional'], VARIANT, 'Format' )),
    DISPMETHOD([dispid(500), 'propget'], POINTER(Range), 'End',
               ( ['in'], XlDirection, 'Direction' )),
    DISPMETHOD([dispid(246), 'propget'], POINTER(Range), 'EntireColumn'),
    DISPMETHOD([dispid(247), 'propget'], POINTER(Range), 'EntireRow'),
    DISPMETHOD([dispid(248)], VARIANT, 'FillDown'),
    DISPMETHOD([dispid(249)], VARIANT, 'FillLeft'),
    DISPMETHOD([dispid(250)], VARIANT, 'FillRight'),
    DISPMETHOD([dispid(251)], VARIANT, 'FillUp'),
    DISPMETHOD([dispid(398)], POINTER(Range), 'Find',
               ( ['in'], VARIANT, 'What' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'LookIn' ),
               ( ['in', 'optional'], VARIANT, 'LookAt' ),
               ( ['in', 'optional'], VARIANT, 'SearchOrder' ),
               ( ['in', 'optional'], XlSearchDirection, 'SearchDirection', 1 ),
               ( ['in', 'optional'], VARIANT, 'MatchCase' ),
               ( ['in', 'optional'], VARIANT, 'MatchByte' ),
               ( ['in', 'optional'], VARIANT, 'SearchFormat' )),
    DISPMETHOD([dispid(399)], POINTER(Range), 'FindNext',
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(400)], POINTER(Range), 'FindPrevious',
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], VARIANT, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(586), 'propget'], VARIANT, 'FormulaArray'),
    DISPMETHOD([dispid(586), 'propput'], None, 'FormulaArray',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1380), 'hidden', 'propget'], XlFormulaLabel, 'FormulaLabel'),
    DISPMETHOD([dispid(1380), 'hidden', 'propput'], None, 'FormulaLabel',
               ( ['in'], XlFormulaLabel, 'rhs' )),
    DISPMETHOD([dispid(262), 'propget'], VARIANT, 'FormulaHidden'),
    DISPMETHOD([dispid(262), 'propput'], None, 'FormulaHidden',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(263), 'propget'], VARIANT, 'FormulaLocal'),
    DISPMETHOD([dispid(263), 'propput'], None, 'FormulaLocal',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(264), 'propget'], VARIANT, 'FormulaR1C1'),
    DISPMETHOD([dispid(264), 'propput'], None, 'FormulaR1C1',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(265), 'propget'], VARIANT, 'FormulaR1C1Local'),
    DISPMETHOD([dispid(265), 'propput'], None, 'FormulaR1C1Local',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(571)], VARIANT, 'FunctionWizard'),
    DISPMETHOD([dispid(472), 'hidden'], VARIANT_BOOL, 'GoalSeek',
               ( ['in'], VARIANT, 'Goal' ),
               ( ['in'], POINTER(Range), 'ChangingCell' )),
    DISPMETHOD([dispid(46)], VARIANT, 'Group',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'End' ),
               ( ['in', 'optional'], VARIANT, 'By' ),
               ( ['in', 'optional'], VARIANT, 'Periods' )),
    DISPMETHOD([dispid(266), 'propget'], VARIANT, 'HasArray'),
    DISPMETHOD([dispid(267), 'propget'], VARIANT, 'HasFormula'),
    DISPMETHOD([dispid(123), 'propget'], VARIANT, 'Height'),
    DISPMETHOD([dispid(268), 'propget'], VARIANT, 'Hidden'),
    DISPMETHOD([dispid(268), 'propput'], None, 'Hidden',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(201), 'propget'], VARIANT, 'IndentLevel'),
    DISPMETHOD([dispid(201), 'propput'], None, 'IndentLevel',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1381)], None, 'InsertIndent',
               ( ['in'], c_int, 'InsertAmount' )),
    DISPMETHOD([dispid(252)], VARIANT, 'Insert',
               ( ['in', 'optional'], VARIANT, 'Shift' ),
               ( ['in', 'optional'], VARIANT, 'CopyOrigin' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(170), 'propget'], VARIANT, 'Item',
               ( ['in'], VARIANT, 'RowIndex' ),
               ( ['in', 'optional'], VARIANT, 'ColumnIndex' )),
    DISPMETHOD([dispid(170), 'propput'], None, 'Item',
               ( ['in'], VARIANT, 'RowIndex' ),
               ( ['in', 'optional'], VARIANT, 'ColumnIndex' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(495)], VARIANT, 'Justify'),
    DISPMETHOD([dispid(127), 'propget'], VARIANT, 'Left'),
    DISPMETHOD([dispid(1187), 'propget'], c_int, 'ListHeaderRows'),
    DISPMETHOD([dispid(253)], VARIANT, 'ListNames'),
    DISPMETHOD([dispid(691), 'propget'], XlLocationInTable, 'LocationInTable'),
    DISPMETHOD([dispid(269), 'propget'], VARIANT, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(564)], None, 'Merge',
               ( ['in', 'optional'], VARIANT, 'Across' )),
    DISPMETHOD([dispid(1384)], None, 'UnMerge'),
    DISPMETHOD([dispid(1385), 'propget'], POINTER(Range), 'MergeArea'),
    DISPMETHOD([dispid(208), 'propget'], VARIANT, 'MergeCells'),
    DISPMETHOD([dispid(208), 'propput'], None, 'MergeCells',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], VARIANT, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1032)], VARIANT, 'NavigateArrow',
               ( ['in', 'optional'], VARIANT, 'TowardPrecedent' ),
               ( ['in', 'optional'], VARIANT, 'ArrowNumber' ),
               ( ['in', 'optional'], VARIANT, 'LinkNumber' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(502), 'propget'], POINTER(Range), 'Next'),
    DISPMETHOD([dispid(1127)], BSTR, 'NoteText',
               ( ['in', 'optional'], VARIANT, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(193), 'propget'], VARIANT, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1097), 'propget'], VARIANT, 'NumberFormatLocal'),
    DISPMETHOD([dispid(1097), 'propput'], None, 'NumberFormatLocal',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(254), 'propget'], POINTER(Range), 'Offset',
               ( ['in', 'optional'], VARIANT, 'RowOffset' ),
               ( ['in', 'optional'], VARIANT, 'ColumnOffset' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(271), 'propget'], VARIANT, 'OutlineLevel'),
    DISPMETHOD([dispid(271), 'propput'], None, 'OutlineLevel',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(255), 'propget'], c_int, 'PageBreak'),
    DISPMETHOD([dispid(255), 'propput'], None, 'PageBreak',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(477)], VARIANT, 'Parse',
               ( ['in', 'optional'], VARIANT, 'ParseLine' ),
               ( ['in', 'optional'], VARIANT, 'Destination' )),
    DISPMETHOD([dispid(1027), 'hidden'], VARIANT, '_PasteSpecial',
               ( ['in', 'optional'], XlPasteType, 'Paste', -4104 ),
               ( ['in', 'optional'], XlPasteSpecialOperation, 'Operation', -4142 ),
               ( ['in', 'optional'], VARIANT, 'SkipBlanks' ),
               ( ['in', 'optional'], VARIANT, 'Transpose' )),
    DISPMETHOD([dispid(731), 'propget'], POINTER(PivotField), 'PivotField'),
    DISPMETHOD([dispid(740), 'propget'], POINTER(PivotItem), 'PivotItem'),
    DISPMETHOD([dispid(716), 'propget'], POINTER(PivotTable), 'PivotTable'),
    DISPMETHOD([dispid(544), 'propget'], POINTER(Range), 'Precedents'),
    DISPMETHOD([dispid(504), 'propget'], VARIANT, 'PrefixCharacter'),
    DISPMETHOD([dispid(503), 'propget'], POINTER(Range), 'Previous'),
    DISPMETHOD([dispid(905), 'hidden'], VARIANT, '__PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(281)], VARIANT, 'PrintPreview',
               ( ['in', 'optional'], VARIANT, 'EnableChanges' )),
    DISPMETHOD([dispid(1386), 'propget'], POINTER(QueryTable), 'QueryTable'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range',
               ( ['in'], VARIANT, 'Cell1' ),
               ( ['in', 'optional'], VARIANT, 'Cell2' )),
    DISPMETHOD([dispid(883)], VARIANT, 'RemoveSubtotal'),
    DISPMETHOD([dispid(226)], VARIANT_BOOL, 'Replace',
               ( ['in'], VARIANT, 'What' ),
               ( ['in'], VARIANT, 'Replacement' ),
               ( ['in', 'optional'], VARIANT, 'LookAt' ),
               ( ['in', 'optional'], VARIANT, 'SearchOrder' ),
               ( ['in', 'optional'], VARIANT, 'MatchCase' ),
               ( ['in', 'optional'], VARIANT, 'MatchByte' ),
               ( ['in', 'optional'], VARIANT, 'SearchFormat' ),
               ( ['in', 'optional'], VARIANT, 'ReplaceFormat' )),
    DISPMETHOD([dispid(256), 'propget'], POINTER(Range), 'Resize',
               ( ['in', 'optional'], VARIANT, 'RowSize' ),
               ( ['in', 'optional'], VARIANT, 'ColumnSize' )),
    DISPMETHOD([dispid(257), 'propget'], c_int, 'Row'),
    DISPMETHOD([dispid(511)], POINTER(Range), 'RowDifferences',
               ( ['in'], VARIANT, 'Comparison' )),
    DISPMETHOD([dispid(272), 'propget'], VARIANT, 'RowHeight'),
    DISPMETHOD([dispid(272), 'propput'], None, 'RowHeight',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(258), 'propget'], POINTER(Range), 'Rows'),
    DISPMETHOD([dispid(259)], VARIANT, 'Run',
               ( ['in', 'optional'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(496)], VARIANT, 'Show'),
    DISPMETHOD([dispid(877)], VARIANT, 'ShowDependents',
               ( ['in', 'optional'], VARIANT, 'Remove' )),
    DISPMETHOD([dispid(585), 'propget'], VARIANT, 'ShowDetail'),
    DISPMETHOD([dispid(585), 'propput'], None, 'ShowDetail',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(878)], VARIANT, 'ShowErrors'),
    DISPMETHOD([dispid(879)], VARIANT, 'ShowPrecedents',
               ( ['in', 'optional'], VARIANT, 'Remove' )),
    DISPMETHOD([dispid(209), 'propget'], VARIANT, 'ShrinkToFit'),
    DISPMETHOD([dispid(209), 'propput'], None, 'ShrinkToFit',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(880)], VARIANT, 'Sort',
               ( ['in', 'optional'], VARIANT, 'Key1' ),
               ( ['in', 'optional'], XlSortOrder, 'Order1', 1 ),
               ( ['in', 'optional'], VARIANT, 'Key2' ),
               ( ['in', 'optional'], VARIANT, 'Type' ),
               ( ['in', 'optional'], XlSortOrder, 'Order2', 1 ),
               ( ['in', 'optional'], VARIANT, 'Key3' ),
               ( ['in', 'optional'], XlSortOrder, 'Order3', 1 ),
               ( ['in', 'optional'], XlYesNoGuess, 'Header', 2 ),
               ( ['in', 'optional'], VARIANT, 'OrderCustom' ),
               ( ['in', 'optional'], VARIANT, 'MatchCase' ),
               ( ['in', 'optional'], XlSortOrientation, 'Orientation', 2 ),
               ( ['in', 'optional'], XlSortMethod, 'SortMethod', 1 ),
               ( ['in', 'optional'], XlSortDataOption, 'DataOption1', 0 ),
               ( ['in', 'optional'], XlSortDataOption, 'DataOption2', 0 ),
               ( ['in', 'optional'], XlSortDataOption, 'DataOption3', 0 )),
    DISPMETHOD([dispid(881)], VARIANT, 'SortSpecial',
               ( ['in', 'optional'], XlSortMethod, 'SortMethod', 1 ),
               ( ['in', 'optional'], VARIANT, 'Key1' ),
               ( ['in', 'optional'], XlSortOrder, 'Order1', 1 ),
               ( ['in', 'optional'], VARIANT, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Key2' ),
               ( ['in', 'optional'], XlSortOrder, 'Order2', 1 ),
               ( ['in', 'optional'], VARIANT, 'Key3' ),
               ( ['in', 'optional'], XlSortOrder, 'Order3', 1 ),
               ( ['in', 'optional'], XlYesNoGuess, 'Header', 2 ),
               ( ['in', 'optional'], VARIANT, 'OrderCustom' ),
               ( ['in', 'optional'], VARIANT, 'MatchCase' ),
               ( ['in', 'optional'], XlSortOrientation, 'Orientation', 2 ),
               ( ['in', 'optional'], XlSortDataOption, 'DataOption1', 0 ),
               ( ['in', 'optional'], XlSortDataOption, 'DataOption2', 0 ),
               ( ['in', 'optional'], XlSortDataOption, 'DataOption3', 0 )),
    DISPMETHOD([dispid(916), 'propget'], POINTER(SoundNote), 'SoundNote'),
    DISPMETHOD([dispid(410)], POINTER(Range), 'SpecialCells',
               ( ['in'], XlCellType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Value' )),
    DISPMETHOD([dispid(260), 'propget'], VARIANT, 'Style'),
    DISPMETHOD([dispid(260), 'propput'], None, 'Style',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(481)], VARIANT, 'SubscribeTo',
               ( ['in'], BSTR, 'Edition' ),
               ( ['in', 'optional'], XlSubscribeToFormat, 'Format', -4158 )),
    DISPMETHOD([dispid(882)], VARIANT, 'Subtotal',
               ( ['in'], c_int, 'GroupBy' ),
               ( ['in'], XlConsolidationFunction, 'Function' ),
               ( ['in'], VARIANT, 'TotalList' ),
               ( ['in', 'optional'], VARIANT, 'Replace' ),
               ( ['in', 'optional'], VARIANT, 'PageBreaks' ),
               ( ['in', 'optional'], XlSummaryRow, 'SummaryBelowData', 1 )),
    DISPMETHOD([dispid(273), 'propget'], VARIANT, 'Summary'),
    DISPMETHOD([dispid(497)], VARIANT, 'Table',
               ( ['in', 'optional'], VARIANT, 'RowInput' ),
               ( ['in', 'optional'], VARIANT, 'ColumnInput' )),
    DISPMETHOD([dispid(138), 'propget'], VARIANT, 'Text'),
    DISPMETHOD([dispid(1040)], VARIANT, 'TextToColumns',
               ( ['in', 'optional'], VARIANT, 'Destination' ),
               ( ['in', 'optional'], XlTextParsingType, 'DataType', 1 ),
               ( ['in', 'optional'], XlTextQualifier, 'TextQualifier', 1 ),
               ( ['in', 'optional'], VARIANT, 'ConsecutiveDelimiter' ),
               ( ['in', 'optional'], VARIANT, 'Tab' ),
               ( ['in', 'optional'], VARIANT, 'Semicolon' ),
               ( ['in', 'optional'], VARIANT, 'Comma' ),
               ( ['in', 'optional'], VARIANT, 'Space' ),
               ( ['in', 'optional'], VARIANT, 'Other' ),
               ( ['in', 'optional'], VARIANT, 'OtherChar' ),
               ( ['in', 'optional'], VARIANT, 'FieldInfo' ),
               ( ['in', 'optional'], VARIANT, 'DecimalSeparator' ),
               ( ['in', 'optional'], VARIANT, 'ThousandsSeparator' ),
               ( ['in', 'optional'], VARIANT, 'TrailingMinusNumbers' )),
    DISPMETHOD([dispid(126), 'propget'], VARIANT, 'Top'),
    DISPMETHOD([dispid(244)], VARIANT, 'Ungroup'),
    DISPMETHOD([dispid(274), 'propget'], VARIANT, 'UseStandardHeight'),
    DISPMETHOD([dispid(274), 'propput'], None, 'UseStandardHeight',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(275), 'propget'], VARIANT, 'UseStandardWidth'),
    DISPMETHOD([dispid(275), 'propput'], None, 'UseStandardWidth',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1387), 'propget'], POINTER(Validation), 'Validation'),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value',
               ( ['in', 'optional'], VARIANT, 'RangeValueDataType' )),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in', 'optional'], VARIANT, 'RangeValueDataType' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1388), 'propget'], VARIANT, 'Value2'),
    DISPMETHOD([dispid(1388), 'propput'], None, 'Value2',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], VARIANT, 'Width'),
    DISPMETHOD([dispid(348), 'propget'], POINTER(Worksheet), 'Worksheet'),
    DISPMETHOD([dispid(276), 'propget'], VARIANT, 'WrapText'),
    DISPMETHOD([dispid(276), 'propput'], None, 'WrapText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1389)], POINTER(Comment), 'AddComment',
               ( ['in', 'optional'], VARIANT, 'Text' )),
    DISPMETHOD([dispid(910), 'propget'], POINTER(Comment), 'Comment'),
    DISPMETHOD([dispid(1390)], None, 'ClearComments'),
    DISPMETHOD([dispid(1391), 'propget'], POINTER(Phonetic), 'Phonetic'),
    DISPMETHOD([dispid(1392), 'propget'], POINTER(FormatConditions), 'FormatConditions'),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1393), 'propget'], POINTER(Hyperlinks), 'Hyperlinks'),
    DISPMETHOD([dispid(1811), 'propget'], POINTER(Phonetics), 'Phonetics'),
    DISPMETHOD([dispid(1812)], None, 'SetPhonetic'),
    DISPMETHOD([dispid(1813), 'propget'], BSTR, 'ID'),
    DISPMETHOD([dispid(1813), 'propput'], None, 'ID',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1772), 'hidden'], VARIANT, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2013), 'propget'], POINTER(PivotCell), 'PivotCell'),
    DISPMETHOD([dispid(2014)], None, 'Dirty'),
    DISPMETHOD([dispid(2015), 'propget'], POINTER(Errors), 'Errors'),
    DISPMETHOD([dispid(2016), 'hidden', 'propget'], POINTER(SmartTags), 'SmartTags'),
    DISPMETHOD([dispid(2017)], None, 'Speak',
               ( ['in', 'optional'], VARIANT, 'SpeakDirection' ),
               ( ['in', 'optional'], VARIANT, 'SpeakFormulas' )),
    DISPMETHOD([dispid(1928)], VARIANT, 'PasteSpecial',
               ( ['in', 'optional'], XlPasteType, 'Paste', -4104 ),
               ( ['in', 'optional'], XlPasteSpecialOperation, 'Operation', -4142 ),
               ( ['in', 'optional'], VARIANT, 'SkipBlanks' ),
               ( ['in', 'optional'], VARIANT, 'Transpose' )),
    DISPMETHOD([dispid(2020), 'propget'], VARIANT_BOOL, 'AllowEdit'),
    DISPMETHOD([dispid(2257), 'propget'], POINTER(ListObject), 'ListObject'),
    DISPMETHOD([dispid(2258), 'propget'], POINTER(XPath), 'XPath'),
    DISPMETHOD([dispid(2491), 'propget'], POINTER(Actions), 'ServerActions'),
    DISPMETHOD([dispid(2492)], None, 'RemoveDuplicates',
               ( ['in', 'optional'], VARIANT, 'Columns' ),
               ( ['in', 'optional'], XlYesNoGuess, 'Header', 2 )),
    DISPMETHOD([dispid(2361)], VARIANT, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2123), 'propget'], BSTR, 'MDX'),
    DISPMETHOD([dispid(2493)], None, 'ExportAsFixedFormat',
               ( ['in'], XlFixedFormatType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Quality' ),
               ( ['in', 'optional'], VARIANT, 'IncludeDocProperties' ),
               ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'OpenAfterPublish' ),
               ( ['in', 'optional'], VARIANT, 'FixedFormatExtClassPtr' )),
    DISPMETHOD([dispid(2499), 'propget'], VARIANT, 'CountLarge'),
    DISPMETHOD([dispid(2364)], VARIANT, 'CalculateRowMajorOrder'),
    DISPMETHOD([dispid(2853), 'propget'], POINTER(SparklineGroups), 'SparklineGroups'),
    DISPMETHOD([dispid(2854)], None, 'ClearHyperlinks'),
    DISPMETHOD([dispid(666), 'propget'], POINTER(DisplayFormat), 'DisplayFormat'),
    DISPMETHOD([dispid(2771)], VARIANT, 'BorderAround',
               ( ['in', 'optional'], VARIANT, 'LineStyle' ),
               ( ['in', 'optional'], XlBorderWeight, 'Weight', 2 ),
               ( ['in', 'optional'], XlColorIndex, 'ColorIndex', -4105 ),
               ( ['in', 'optional'], VARIANT, 'Color' ),
               ( ['in', 'optional'], VARIANT, 'ThemeColor' )),
    DISPMETHOD([dispid(2855)], None, 'AllocateChanges'),
    DISPMETHOD([dispid(2856)], None, 'DiscardChanges'),
    DISPMETHOD([dispid(2996)], None, 'FlashFill'),
]
Hyperlink._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
    DISPMETHOD([dispid(1582), 'propget'], POINTER(Shape), 'Shape'),
    DISPMETHOD([dispid(1471), 'propget'], BSTR, 'SubAddress'),
    DISPMETHOD([dispid(1471), 'propput'], None, 'SubAddress',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(236), 'propget'], BSTR, 'Address'),
    DISPMETHOD([dispid(236), 'propput'], None, 'Address',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(1476)], None, 'AddToFavorites'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1616)], None, 'Follow',
               ( ['in', 'optional'], VARIANT, 'NewWindow' ),
               ( ['in', 'optional'], VARIANT, 'AddHistory' ),
               ( ['in', 'optional'], VARIANT, 'ExtraInfo' ),
               ( ['in', 'optional'], VARIANT, 'Method' ),
               ( ['in', 'optional'], VARIANT, 'HeaderInfo' )),
    DISPMETHOD([dispid(1883), 'propget'], BSTR, 'EmailSubject'),
    DISPMETHOD([dispid(1883), 'propput'], None, 'EmailSubject',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1881), 'propget'], BSTR, 'ScreenTip'),
    DISPMETHOD([dispid(1881), 'propput'], None, 'ScreenTip',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1882), 'propget'], BSTR, 'TextToDisplay'),
    DISPMETHOD([dispid(1882), 'propput'], None, 'TextToDisplay',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1884)], None, 'CreateNewDocument',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in'], VARIANT_BOOL, 'EditNow' ),
               ( ['in'], VARIANT_BOOL, 'Overwrite' )),
]

# values for enumeration 'XlPlacement'
xlFreeFloating = 3
xlMove = 2
xlMoveAndSize = 1
XlPlacement = c_int # enum
class ControlFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024440-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ControlFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(851)], None, 'AddItem',
               ( ['in'], BSTR, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(853)], None, 'RemoveAllItems'),
    DISPMETHOD([dispid(852)], None, 'RemoveItem',
               ( ['in'], c_int, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(848), 'propget'], c_int, 'DropDownLines'),
    DISPMETHOD([dispid(848), 'propput'], None, 'DropDownLines',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(845), 'propget'], c_int, 'LargeChange'),
    DISPMETHOD([dispid(845), 'propput'], None, 'LargeChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(861)], VARIANT, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(849), 'propget'], c_int, 'ListCount'),
    DISPMETHOD([dispid(849), 'propput'], None, 'ListCount',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(847), 'propget'], BSTR, 'ListFillRange'),
    DISPMETHOD([dispid(847), 'propput'], None, 'ListFillRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(850), 'propget'], c_int, 'ListIndex'),
    DISPMETHOD([dispid(850), 'propput'], None, 'ListIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(842), 'propget'], c_int, 'Max'),
    DISPMETHOD([dispid(842), 'propput'], None, 'Max',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(843), 'propget'], c_int, 'Min'),
    DISPMETHOD([dispid(843), 'propput'], None, 'Min',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(32), 'propget'], c_int, 'MultiSelect'),
    DISPMETHOD([dispid(32), 'propput'], None, 'MultiSelect',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(844), 'propget'], c_int, 'SmallChange'),
    DISPMETHOD([dispid(844), 'propput'], None, 'SmallChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
]
class LinkFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024442-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
LinkFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1048), 'propget'], VARIANT_BOOL, 'AutoUpdate'),
    DISPMETHOD([dispid(1048), 'propput'], None, 'AutoUpdate',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(680)], None, 'Update'),
]
class OLEFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024441-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
OLEFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(1049), 'propget'], POINTER(IDispatch), 'Object'),
    DISPMETHOD([dispid(1523), 'propget'], BSTR, 'progID'),
    DISPMETHOD([dispid(606)], None, 'Verb',
               ( ['in', 'optional'], VARIANT, 'Verb' )),
]

# values for enumeration 'XlFormControl'
xlButtonControl = 0
xlCheckBox = 1
xlDropDown = 2
xlEditBox = 3
xlGroupBox = 4
xlLabel = 5
xlListBox = 6
xlOptionButton = 7
xlScrollBar = 8
xlSpinner = 9
XlFormControl = c_int # enum
class DiagramNode(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0371-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
class Diagram(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class DiagramNodes(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C036E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
Diagram._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1701), 'propget'], POINTER(DiagramNodes), 'Nodes'),
    DISPMETHOD([dispid(108), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramType, 'Type'),
    DISPMETHOD([dispid(2243), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'AutoLayout'),
    DISPMETHOD([dispid(2243), 'propput'], None, 'AutoLayout',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(2244), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Reverse'),
    DISPMETHOD([dispid(2244), 'propput'], None, 'Reverse',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(114), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'AutoFormat'),
    DISPMETHOD([dispid(114), 'propput'], None, 'AutoFormat',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(1046)], None, 'Convert',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramType, 'Type' )),
    DISPMETHOD([dispid(2304)], None, 'FitText'),
]
class Chart(CoClass):
    _reg_clsid_ = GUID('{00020821-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
class _Chart(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D6-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class ChartEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002440F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Chart._com_interfaces_ = [_Chart]
Chart._outgoing_interfaces_ = [ChartEvents]

Shape._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1675)], None, 'Apply'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(Shape), 'Duplicate'),
    DISPMETHOD([dispid(1676)], None, 'Flip',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFlipCmd, 'FlipCmd' )),
    DISPMETHOD([dispid(1678)], None, 'IncrementLeft',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(1680)], None, 'IncrementRotation',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(1681)], None, 'IncrementTop',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(1682)], None, 'PickUp'),
    DISPMETHOD([dispid(1683)], None, 'RerouteConnections'),
    DISPMETHOD([dispid(1684)], None, 'ScaleHeight',
               ( ['in'], c_float, 'Factor' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
               ( ['in', 'optional'], VARIANT, 'Scale' )),
    DISPMETHOD([dispid(1688)], None, 'ScaleWidth',
               ( ['in'], c_float, 'Factor' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
               ( ['in', 'optional'], VARIANT, 'Scale' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(1689)], None, 'SetShapesDefaultProperties'),
    DISPMETHOD([dispid(244)], POINTER(ShapeRange), 'Ungroup'),
    DISPMETHOD([dispid(622)], None, 'ZOrder',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoZOrderCmd, 'ZOrderCmd' )),
    DISPMETHOD([dispid(1691), 'propget'], POINTER(Adjustments), 'Adjustments'),
    DISPMETHOD([dispid(1692), 'propget'], POINTER(TextFrame), 'TextFrame'),
    DISPMETHOD([dispid(1693), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'AutoShapeType'),
    DISPMETHOD([dispid(1693), 'propput'], None, 'AutoShapeType',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'rhs' )),
    DISPMETHOD([dispid(1694), 'propget'], POINTER(CalloutFormat), 'Callout'),
    DISPMETHOD([dispid(1695), 'propget'], c_int, 'ConnectionSiteCount'),
    DISPMETHOD([dispid(1696), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Connector'),
    DISPMETHOD([dispid(1697), 'propget'], POINTER(ConnectorFormat), 'ConnectorFormat'),
    DISPMETHOD([dispid(1663), 'propget'], POINTER(FillFormat), 'Fill'),
    DISPMETHOD([dispid(1698), 'propget'], POINTER(GroupShapes), 'GroupItems'),
    DISPMETHOD([dispid(123), 'propget'], c_float, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1699), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HorizontalFlip'),
    DISPMETHOD([dispid(127), 'propget'], c_float, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(817), 'propget'], POINTER(LineFormat), 'Line'),
    DISPMETHOD([dispid(1700), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'LockAspectRatio'),
    DISPMETHOD([dispid(1700), 'propput'], None, 'LockAspectRatio',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1701), 'propget'], POINTER(ShapeNodes), 'Nodes'),
    DISPMETHOD([dispid(59), 'propget'], c_float, 'Rotation'),
    DISPMETHOD([dispid(59), 'propput'], None, 'Rotation',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1631), 'propget'], POINTER(PictureFormat), 'PictureFormat'),
    DISPMETHOD([dispid(103), 'propget'], POINTER(ShadowFormat), 'Shadow'),
    DISPMETHOD([dispid(1702), 'propget'], POINTER(TextEffectFormat), 'TextEffect'),
    DISPMETHOD([dispid(1703), 'propget'], POINTER(ThreeDFormat), 'ThreeD'),
    DISPMETHOD([dispid(126), 'propget'], c_float, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeType, 'Type'),
    DISPMETHOD([dispid(1704), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'VerticalFlip'),
    DISPMETHOD([dispid(621), 'propget'], VARIANT, 'Vertices'),
    DISPMETHOD([dispid(558), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_float, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1705), 'propget'], c_int, 'ZOrderPosition'),
    DISPMETHOD([dispid(1706), 'propget'], POINTER(Hyperlink), 'Hyperlink'),
    DISPMETHOD([dispid(1707), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode, 'BlackWhiteMode'),
    DISPMETHOD([dispid(1707), 'propput'], None, 'BlackWhiteMode',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode, 'rhs' )),
    DISPMETHOD([dispid(1708), 'hidden', 'propget'], POINTER(IDispatch), 'DrawingObject'),
    DISPMETHOD([dispid(596), 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(617), 'propget'], XlPlacement, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], XlPlacement, 'rhs' )),
    DISPMETHOD([dispid(551)], None, 'Copy'),
    DISPMETHOD([dispid(565)], None, 'Cut'),
    DISPMETHOD([dispid(213)], None, 'CopyPicture',
               ( ['in', 'optional'], VARIANT, 'Appearance' ),
               ( ['in', 'optional'], VARIANT, 'Format' )),
    DISPMETHOD([dispid(1709), 'propget'], POINTER(ControlFormat), 'ControlFormat'),
    DISPMETHOD([dispid(1710), 'propget'], POINTER(LinkFormat), 'LinkFormat'),
    DISPMETHOD([dispid(1711), 'propget'], POINTER(OLEFormat), 'OLEFormat'),
    DISPMETHOD([dispid(1712), 'propget'], XlFormControl, 'FormControlType'),
    DISPMETHOD([dispid(1891), 'propget'], BSTR, 'AlternativeText'),
    DISPMETHOD([dispid(1891), 'propput'], None, 'AlternativeText',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1892), 'hidden', 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Script), 'Script'),
    DISPMETHOD([dispid(2165), 'hidden', 'propget'], POINTER(DiagramNode), 'DiagramNode'),
    DISPMETHOD([dispid(2166), 'hidden', 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasDiagramNode'),
    DISPMETHOD([dispid(2167), 'hidden', 'propget'], POINTER(Diagram), 'Diagram'),
    DISPMETHOD([dispid(2168), 'hidden', 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasDiagram'),
    DISPMETHOD([dispid(2169), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Child'),
    DISPMETHOD([dispid(2170), 'propget'], POINTER(Shape), 'ParentGroup'),
    DISPMETHOD([dispid(2171), 'hidden', 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CanvasShapes), 'CanvasItems'),
    DISPMETHOD([dispid(570), 'propget'], c_int, 'ID'),
    DISPMETHOD([dispid(2172), 'hidden'], None, 'CanvasCropLeft',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(2173), 'hidden'], None, 'CanvasCropTop',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(2174), 'hidden'], None, 'CanvasCropRight',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(2175), 'hidden'], None, 'CanvasCropBottom',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(7), 'propget'], POINTER(Chart), 'Chart'),
    DISPMETHOD([dispid(2658), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasChart'),
    DISPMETHOD([dispid(2659), 'propget'], POINTER(TextFrame2), 'TextFrame2'),
    DISPMETHOD([dispid(2660), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex, 'ShapeStyle'),
    DISPMETHOD([dispid(2660), 'propput'], None, 'ShapeStyle',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex, 'rhs' )),
    DISPMETHOD([dispid(2661), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex, 'BackgroundStyle'),
    DISPMETHOD([dispid(2661), 'propput'], None, 'BackgroundStyle',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex, 'rhs' )),
    DISPMETHOD([dispid(2662), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SoftEdgeFormat), 'SoftEdge'),
    DISPMETHOD([dispid(2663), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.GlowFormat), 'Glow'),
    DISPMETHOD([dispid(2664), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.ReflectionFormat), 'Reflection'),
    DISPMETHOD([dispid(2918), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasSmartArt'),
    DISPMETHOD([dispid(2919), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartArt), 'SmartArt'),
    DISPMETHOD([dispid(199), 'propget'], BSTR, 'Title'),
    DISPMETHOD([dispid(199), 'propput'], None, 'Title',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(200), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasWebShape'),
]
ShapeRange._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Shape), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0)], POINTER(Shape), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(1740)], None, 'Align',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAlignCmd, 'AlignCmd' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeTo' )),
    DISPMETHOD([dispid(1675)], None, 'Apply'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1742)], None, 'Distribute',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDistributeCmd, 'DistributeCmd' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeTo' )),
    DISPMETHOD([dispid(1039)], POINTER(ShapeRange), 'Duplicate'),
    DISPMETHOD([dispid(1676)], None, 'Flip',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFlipCmd, 'FlipCmd' )),
    DISPMETHOD([dispid(1678)], None, 'IncrementLeft',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(1680)], None, 'IncrementRotation',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(1681)], None, 'IncrementTop',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(46)], POINTER(Shape), 'Group'),
    DISPMETHOD([dispid(1682)], None, 'PickUp'),
    DISPMETHOD([dispid(1683)], None, 'RerouteConnections'),
    DISPMETHOD([dispid(1744)], POINTER(Shape), 'Regroup'),
    DISPMETHOD([dispid(1684)], None, 'ScaleHeight',
               ( ['in'], c_float, 'Factor' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
               ( ['in', 'optional'], VARIANT, 'Scale' )),
    DISPMETHOD([dispid(1688)], None, 'ScaleWidth',
               ( ['in'], c_float, 'Factor' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
               ( ['in', 'optional'], VARIANT, 'Scale' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(1689)], None, 'SetShapesDefaultProperties'),
    DISPMETHOD([dispid(244)], POINTER(ShapeRange), 'Ungroup'),
    DISPMETHOD([dispid(622)], None, 'ZOrder',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoZOrderCmd, 'ZOrderCmd' )),
    DISPMETHOD([dispid(1691), 'propget'], POINTER(Adjustments), 'Adjustments'),
    DISPMETHOD([dispid(1692), 'propget'], POINTER(TextFrame), 'TextFrame'),
    DISPMETHOD([dispid(1693), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'AutoShapeType'),
    DISPMETHOD([dispid(1693), 'propput'], None, 'AutoShapeType',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'rhs' )),
    DISPMETHOD([dispid(1694), 'propget'], POINTER(CalloutFormat), 'Callout'),
    DISPMETHOD([dispid(1695), 'propget'], c_int, 'ConnectionSiteCount'),
    DISPMETHOD([dispid(1696), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Connector'),
    DISPMETHOD([dispid(1697), 'propget'], POINTER(ConnectorFormat), 'ConnectorFormat'),
    DISPMETHOD([dispid(1663), 'propget'], POINTER(FillFormat), 'Fill'),
    DISPMETHOD([dispid(1698), 'propget'], POINTER(GroupShapes), 'GroupItems'),
    DISPMETHOD([dispid(123), 'propget'], c_float, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1699), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HorizontalFlip'),
    DISPMETHOD([dispid(127), 'propget'], c_float, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(817), 'propget'], POINTER(LineFormat), 'Line'),
    DISPMETHOD([dispid(1700), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'LockAspectRatio'),
    DISPMETHOD([dispid(1700), 'propput'], None, 'LockAspectRatio',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1701), 'propget'], POINTER(ShapeNodes), 'Nodes'),
    DISPMETHOD([dispid(59), 'propget'], c_float, 'Rotation'),
    DISPMETHOD([dispid(59), 'propput'], None, 'Rotation',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1631), 'propget'], POINTER(PictureFormat), 'PictureFormat'),
    DISPMETHOD([dispid(103), 'propget'], POINTER(ShadowFormat), 'Shadow'),
    DISPMETHOD([dispid(1702), 'propget'], POINTER(TextEffectFormat), 'TextEffect'),
    DISPMETHOD([dispid(1703), 'propget'], POINTER(ThreeDFormat), 'ThreeD'),
    DISPMETHOD([dispid(126), 'propget'], c_float, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeType, 'Type'),
    DISPMETHOD([dispid(1704), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'VerticalFlip'),
    DISPMETHOD([dispid(621), 'propget'], VARIANT, 'Vertices'),
    DISPMETHOD([dispid(558), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_float, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1705), 'propget'], c_int, 'ZOrderPosition'),
    DISPMETHOD([dispid(1707), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode, 'BlackWhiteMode'),
    DISPMETHOD([dispid(1707), 'propput'], None, 'BlackWhiteMode',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode, 'rhs' )),
    DISPMETHOD([dispid(1891), 'propget'], BSTR, 'AlternativeText'),
    DISPMETHOD([dispid(1891), 'propput'], None, 'AlternativeText',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2165), 'hidden', 'propget'], POINTER(DiagramNode), 'DiagramNode'),
    DISPMETHOD([dispid(2166), 'hidden', 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasDiagramNode'),
    DISPMETHOD([dispid(2167), 'hidden', 'propget'], POINTER(Diagram), 'Diagram'),
    DISPMETHOD([dispid(2168), 'hidden', 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasDiagram'),
    DISPMETHOD([dispid(2169), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Child'),
    DISPMETHOD([dispid(2170), 'propget'], POINTER(Shape), 'ParentGroup'),
    DISPMETHOD([dispid(2171), 'hidden', 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CanvasShapes), 'CanvasItems'),
    DISPMETHOD([dispid(570), 'propget'], c_int, 'ID'),
    DISPMETHOD([dispid(2172), 'hidden'], None, 'CanvasCropLeft',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(2173), 'hidden'], None, 'CanvasCropTop',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(2174), 'hidden'], None, 'CanvasCropRight',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(2175), 'hidden'], None, 'CanvasCropBottom',
               ( ['in'], c_float, 'Increment' )),
    DISPMETHOD([dispid(7), 'propget'], POINTER(Chart), 'Chart'),
    DISPMETHOD([dispid(2658), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'HasChart'),
    DISPMETHOD([dispid(2659), 'propget'], POINTER(TextFrame2), 'TextFrame2'),
    DISPMETHOD([dispid(2660), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex, 'ShapeStyle'),
    DISPMETHOD([dispid(2660), 'propput'], None, 'ShapeStyle',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex, 'rhs' )),
    DISPMETHOD([dispid(2661), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex, 'BackgroundStyle'),
    DISPMETHOD([dispid(2661), 'propput'], None, 'BackgroundStyle',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex, 'rhs' )),
    DISPMETHOD([dispid(2662), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SoftEdgeFormat), 'SoftEdge'),
    DISPMETHOD([dispid(2663), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.GlowFormat), 'Glow'),
    DISPMETHOD([dispid(2664), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.ReflectionFormat), 'Reflection'),
    DISPMETHOD([dispid(199), 'propget'], BSTR, 'Title'),
    DISPMETHOD([dispid(199), 'propput'], None, 'Title',
               ( ['in'], BSTR, 'rhs' )),
]
class ListBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020887-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ListBox._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(851)], VARIANT, 'AddItem',
               ( ['in'], VARIANT, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(862), 'propget'], VARIANT, 'LinkedObject'),
    DISPMETHOD([dispid(861), 'propget'], VARIANT, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(861), 'propput'], None, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(849), 'propget'], c_int, 'ListCount'),
    DISPMETHOD([dispid(847), 'propget'], BSTR, 'ListFillRange'),
    DISPMETHOD([dispid(847), 'propput'], None, 'ListFillRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(850), 'propget'], c_int, 'ListIndex'),
    DISPMETHOD([dispid(850), 'propput'], None, 'ListIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(32), 'propget'], c_int, 'MultiSelect'),
    DISPMETHOD([dispid(32), 'propput'], None, 'MultiSelect',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(853)], VARIANT, 'RemoveAllItems'),
    DISPMETHOD([dispid(852)], VARIANT, 'RemoveItem',
               ( ['in'], c_int, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(1123), 'propget'], VARIANT, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1123), 'propput'], None, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
]
class GroupObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020898-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
GroupObject._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1610743846), 'restricted', 'hidden'], None, '_Dummy27'),
    DISPMETHOD([dispid(1610743847), 'restricted', 'hidden'], None, '_Dummy28'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743850), 'restricted', 'hidden'], None, '_Dummy30'),
    DISPMETHOD([dispid(611), 'propget'], VARIANT, 'ArrowHeadLength'),
    DISPMETHOD([dispid(611), 'propput'], None, 'ArrowHeadLength',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(612), 'propget'], VARIANT, 'ArrowHeadStyle'),
    DISPMETHOD([dispid(612), 'propput'], None, 'ArrowHeadStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(613), 'propget'], VARIANT, 'ArrowHeadWidth'),
    DISPMETHOD([dispid(613), 'propput'], None, 'ArrowHeadWidth',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(1610743860), 'restricted', 'hidden'], None, '_Dummy36'),
    DISPMETHOD([dispid(1610743861), 'restricted', 'hidden'], None, '_Dummy37'),
    DISPMETHOD([dispid(1610743862), 'restricted', 'hidden'], None, '_Dummy38'),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1610743866), 'restricted', 'hidden'], None, '_Dummy41'),
    DISPMETHOD([dispid(1610743867), 'restricted', 'hidden'], None, '_Dummy42'),
    DISPMETHOD([dispid(1610743868), 'restricted', 'hidden'], None, '_Dummy43'),
    DISPMETHOD([dispid(1610743869), 'restricted', 'hidden'], None, '_Dummy44'),
    DISPMETHOD([dispid(1610743870), 'restricted', 'hidden'], None, '_Dummy45'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(1610743872), 'restricted', 'hidden'], None, '_Dummy47'),
    DISPMETHOD([dispid(1610743873), 'restricted', 'hidden'], None, '_Dummy48'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743876), 'restricted', 'hidden'], None, '_Dummy50'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1610743878), 'restricted', 'hidden'], None, '_Dummy52'),
    DISPMETHOD([dispid(1610743879), 'restricted', 'hidden'], None, '_Dummy53'),
    DISPMETHOD([dispid(1610743880), 'restricted', 'hidden'], None, '_Dummy54'),
    DISPMETHOD([dispid(1610743881), 'restricted', 'hidden'], None, '_Dummy55'),
    DISPMETHOD([dispid(1610743882), 'restricted', 'hidden'], None, '_Dummy56'),
    DISPMETHOD([dispid(1610743883), 'restricted', 'hidden'], None, '_Dummy57'),
    DISPMETHOD([dispid(1610743884), 'restricted', 'hidden'], None, '_Dummy58'),
    DISPMETHOD([dispid(1610743885), 'restricted', 'hidden'], None, '_Dummy59'),
    DISPMETHOD([dispid(1610743886), 'restricted', 'hidden'], None, '_Dummy60'),
    DISPMETHOD([dispid(1610743887), 'restricted', 'hidden'], None, '_Dummy61'),
    DISPMETHOD([dispid(1610743888), 'restricted', 'hidden'], None, '_Dummy62'),
    DISPMETHOD([dispid(1610743889), 'restricted', 'hidden'], None, '_Dummy63'),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743892), 'restricted', 'hidden'], None, '_Dummy65'),
    DISPMETHOD([dispid(1610743893), 'restricted', 'hidden'], None, '_Dummy66'),
    DISPMETHOD([dispid(1610743894), 'restricted', 'hidden'], None, '_Dummy67'),
    DISPMETHOD([dispid(1610743895), 'restricted', 'hidden'], None, '_Dummy68'),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743898), 'restricted', 'hidden'], None, '_Dummy70'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743901), 'restricted', 'hidden'], None, '_Dummy72'),
    DISPMETHOD([dispid(1610743902), 'restricted', 'hidden'], None, '_Dummy73'),
    DISPMETHOD([dispid(244)], POINTER(IDispatch), 'Ungroup'),
    DISPMETHOD([dispid(1610743904), 'restricted', 'hidden'], None, '_Dummy75'),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743907), 'restricted', 'hidden'], None, '_Dummy77'),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
]
IListBoxes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddItem',
              ( ['in'], VARIANT, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy31'),
    COMMETHOD(['propget'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy33'),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MultiSelect',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiSelect',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveAllItems',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveItem',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(ListBox)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IListBoxes implementation
##class IListBoxes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiSelect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveAllItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy31(self):
##        '-no docstring-'
##        #return 
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    Selected = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    List = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def AddItem(self, Text, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy33(self):
##        '-no docstring-'
##        #return 
##
##    def RemoveItem(self, Index, Count):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlOrder'
xlDownThenOver = 1
xlOverThenDown = 2
XlOrder = c_int # enum
class IPoints(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020869-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Point(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlDataLabelsType'
xlDataLabelsShowNone = -4142
xlDataLabelsShowValue = 2
xlDataLabelsShowPercent = 3
xlDataLabelsShowLabel = 4
xlDataLabelsShowLabelAndPercent = 5
xlDataLabelsShowBubbleSizes = 6
XlDataLabelsType = c_int # enum
class DataLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlDataLabelPosition'
xlLabelPositionCenter = -4108
xlLabelPositionAbove = 0
xlLabelPositionBelow = 1
xlLabelPositionLeft = -4131
xlLabelPositionRight = -4152
xlLabelPositionOutsideEnd = 2
xlLabelPositionInsideEnd = 3
xlLabelPositionInsideBase = 4
xlLabelPositionBestFit = 5
xlLabelPositionMixed = 6
xlLabelPositionCustom = 7
XlDataLabelPosition = c_int # enum
DataLabel._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(146), 'hidden', 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(135), 'propget'], VARIANT_BOOL, 'AutoText'),
    DISPMETHOD([dispid(135), 'propput'], None, 'AutoText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(193), 'propget'], BSTR, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(194), 'propget'], VARIANT_BOOL, 'NumberFormatLinked'),
    DISPMETHOD([dispid(194), 'propput'], None, 'NumberFormatLinked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1097), 'propget'], VARIANT, 'NumberFormatLocal'),
    DISPMETHOD([dispid(1097), 'propput'], None, 'NumberFormatLocal',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(171), 'propget'], VARIANT_BOOL, 'ShowLegendKey'),
    DISPMETHOD([dispid(171), 'propput'], None, 'ShowLegendKey',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(108), 'hidden', 'propget'], VARIANT, 'Type'),
    DISPMETHOD([dispid(108), 'hidden', 'propput'], None, 'Type',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(133), 'propget'], XlDataLabelPosition, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], XlDataLabelPosition, 'rhs' )),
    DISPMETHOD([dispid(2022), 'propget'], VARIANT_BOOL, 'ShowSeriesName'),
    DISPMETHOD([dispid(2022), 'propput'], None, 'ShowSeriesName',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2023), 'propget'], VARIANT_BOOL, 'ShowCategoryName'),
    DISPMETHOD([dispid(2023), 'propput'], None, 'ShowCategoryName',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2024), 'propget'], VARIANT_BOOL, 'ShowValue'),
    DISPMETHOD([dispid(2024), 'propput'], None, 'ShowValue',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2025), 'propget'], VARIANT_BOOL, 'ShowPercentage'),
    DISPMETHOD([dispid(2025), 'propput'], None, 'ShowPercentage',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2026), 'propget'], VARIANT_BOOL, 'ShowBubbleSize'),
    DISPMETHOD([dispid(2026), 'propput'], None, 'ShowBubbleSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2027), 'propget'], VARIANT, 'Separator'),
    DISPMETHOD([dispid(2027), 'propput'], None, 'Separator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(3084), 'hidden', 'propget'], c_double, '_Height'),
    DISPMETHOD([dispid(3085), 'hidden', 'propget'], c_double, '_Width'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(264), 'propget'], BSTR, 'FormulaR1C1'),
    DISPMETHOD([dispid(264), 'propput'], None, 'FormulaR1C1',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(263), 'propget'], BSTR, 'FormulaLocal'),
    DISPMETHOD([dispid(263), 'propput'], None, 'FormulaLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(265), 'propget'], BSTR, 'FormulaR1C1Local'),
    DISPMETHOD([dispid(265), 'propput'], None, 'FormulaR1C1Local',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(3086), 'propget'], VARIANT_BOOL, 'ShowRange'),
    DISPMETHOD([dispid(3086), 'propput'], None, 'ShowRange',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
]

# values for enumeration 'XlMarkerStyle'
xlMarkerStyleAutomatic = -4105
xlMarkerStyleCircle = 8
xlMarkerStyleDash = -4115
xlMarkerStyleDiamond = 2
xlMarkerStyleDot = -4118
xlMarkerStyleNone = -4142
xlMarkerStylePicture = -4147
xlMarkerStylePlus = 9
xlMarkerStyleSquare = 1
xlMarkerStyleStar = 5
xlMarkerStyleTriangle = 3
xlMarkerStyleX = -4168
XlMarkerStyle = c_int # enum

# values for enumeration 'XlChartPictureType'
xlStackScale = 3
xlStack = 2
xlStretch = 1
XlChartPictureType = c_int # enum

# values for enumeration 'XlPieSliceLocation'
xlHorizontalCoordinate = 1
xlVerticalCoordinate = 2
XlPieSliceLocation = c_int # enum

# values for enumeration 'XlPieSliceIndex'
xlOuterCounterClockwisePoint = 1
xlOuterCenterPoint = 2
xlOuterClockwisePoint = 3
xlMidClockwiseRadiusPoint = 4
xlCenterPoint = 5
xlMidCounterClockwiseRadiusPoint = 6
xlInnerClockwisePoint = 7
xlInnerCenterPoint = 8
xlInnerCounterClockwisePoint = 9
XlPieSliceIndex = c_int # enum
Point._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(151), 'hidden'], VARIANT, '_ApplyDataLabels',
               ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
               ( ['in', 'optional'], VARIANT, 'LegendKey' ),
               ( ['in', 'optional'], VARIANT, 'AutoText' ),
               ( ['in', 'optional'], VARIANT, 'HasLeaderLines' )),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(158), 'propget'], POINTER(DataLabel), 'DataLabel'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(182), 'propget'], c_int, 'Explosion'),
    DISPMETHOD([dispid(182), 'propput'], None, 'Explosion',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(77), 'propget'], VARIANT_BOOL, 'HasDataLabel'),
    DISPMETHOD([dispid(77), 'propput'], None, 'HasDataLabel',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(132), 'propget'], VARIANT_BOOL, 'InvertIfNegative'),
    DISPMETHOD([dispid(132), 'propput'], None, 'InvertIfNegative',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(73), 'propget'], c_int, 'MarkerBackgroundColor'),
    DISPMETHOD([dispid(73), 'propput'], None, 'MarkerBackgroundColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(74), 'propget'], XlColorIndex, 'MarkerBackgroundColorIndex'),
    DISPMETHOD([dispid(74), 'propput'], None, 'MarkerBackgroundColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(75), 'propget'], c_int, 'MarkerForegroundColor'),
    DISPMETHOD([dispid(75), 'propput'], None, 'MarkerForegroundColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(76), 'propget'], XlColorIndex, 'MarkerForegroundColorIndex'),
    DISPMETHOD([dispid(76), 'propput'], None, 'MarkerForegroundColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(231), 'propget'], c_int, 'MarkerSize'),
    DISPMETHOD([dispid(231), 'propput'], None, 'MarkerSize',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(72), 'propget'], XlMarkerStyle, 'MarkerStyle'),
    DISPMETHOD([dispid(72), 'propput'], None, 'MarkerStyle',
               ( ['in'], XlMarkerStyle, 'rhs' )),
    DISPMETHOD([dispid(211)], VARIANT, 'Paste'),
    DISPMETHOD([dispid(161), 'propget'], XlChartPictureType, 'PictureType'),
    DISPMETHOD([dispid(161), 'propput'], None, 'PictureType',
               ( ['in'], XlChartPictureType, 'rhs' )),
    DISPMETHOD([dispid(162), 'hidden', 'propget'], c_int, 'PictureUnit'),
    DISPMETHOD([dispid(162), 'hidden', 'propput'], None, 'PictureUnit',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(1659), 'propget'], VARIANT_BOOL, 'ApplyPictToSides'),
    DISPMETHOD([dispid(1659), 'propput'], None, 'ApplyPictToSides',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1660), 'propget'], VARIANT_BOOL, 'ApplyPictToFront'),
    DISPMETHOD([dispid(1660), 'propput'], None, 'ApplyPictToFront',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1661), 'propget'], VARIANT_BOOL, 'ApplyPictToEnd'),
    DISPMETHOD([dispid(1661), 'propput'], None, 'ApplyPictToEnd',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1662), 'propget'], VARIANT_BOOL, 'SecondaryPlot'),
    DISPMETHOD([dispid(1662), 'propput'], None, 'SecondaryPlot',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(1922)], VARIANT, 'ApplyDataLabels',
               ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
               ( ['in', 'optional'], VARIANT, 'LegendKey' ),
               ( ['in', 'optional'], VARIANT, 'AutoText' ),
               ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
               ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
               ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
               ( ['in', 'optional'], VARIANT, 'ShowValue' ),
               ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
               ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
               ( ['in', 'optional'], VARIANT, 'Separator' )),
    DISPMETHOD([dispid(1665), 'propget'], VARIANT_BOOL, 'Has3DEffect'),
    DISPMETHOD([dispid(1665), 'propput'], None, 'Has3DEffect',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2649), 'propget'], c_double, 'PictureUnit2'),
    DISPMETHOD([dispid(2649), 'propput'], None, 'PictureUnit2',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(2913)], c_double, 'PieSliceLocation',
               ( ['in'], XlPieSliceLocation, 'loc' ),
               ( ['in', 'optional'], XlPieSliceIndex, 'Index', 2 )),
]
IPoints._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Point)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Point)), 'RHS' )),
]
################################################################
## code template for IPoints implementation
##class IPoints_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class SmartTagRecognizers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024463-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class SmartTagRecognizer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024462-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
SmartTagRecognizer._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2216), 'propget'], BSTR, 'progID'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(289), 'propget'], BSTR, 'FullName'),
]
SmartTagRecognizers._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(SmartTagRecognizer), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SmartTagRecognizer), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(2217), 'propget'], VARIANT_BOOL, 'Recognize'),
    DISPMETHOD([dispid(2217), 'propput'], None, 'Recognize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]

# values for enumeration 'XlMouseButton'
xlNoButton = 0
xlPrimaryButton = 1
xlSecondaryButton = 2
XlMouseButton = c_int # enum

# values for enumeration 'XlObjectSize'
xlFitToPage = 2
xlFullPage = 3
xlScreenSize = 1
XlObjectSize = c_int # enum

# values for enumeration 'XlAxisCrosses'
xlAxisCrossesAutomatic = -4105
xlAxisCrossesCustom = -4114
xlAxisCrossesMaximum = 2
xlAxisCrossesMinimum = 4
XlAxisCrosses = c_int # enum
class IMenuBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020863-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class MenuBar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020864-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class Menus(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020865-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class Menu(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020866-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class MenuItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020867-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class MenuItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020868-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
MenuItem._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(599), 'propget'], VARIANT_BOOL, 'Checked'),
    DISPMETHOD([dispid(599), 'propput'], None, 'Checked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(355), 'propget'], c_int, 'HelpContextID'),
    DISPMETHOD([dispid(355), 'propput'], None, 'HelpContextID',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(360), 'propget'], BSTR, 'HelpFile'),
    DISPMETHOD([dispid(360), 'propput'], None, 'HelpFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(596), 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(386), 'propget'], BSTR, 'StatusBar'),
    DISPMETHOD([dispid(386), 'propput'], None, 'StatusBar',
               ( ['in'], BSTR, 'rhs' )),
]
MenuItems._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(MenuItem), 'Add',
               ( ['in'], BSTR, 'Caption' ),
               ( ['in', 'optional'], VARIANT, 'OnAction' ),
               ( ['in', 'optional'], VARIANT, 'ShortcutKey' ),
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'Restore' ),
               ( ['in', 'optional'], VARIANT, 'StatusBar' ),
               ( ['in', 'optional'], VARIANT, 'HelpFile' ),
               ( ['in', 'optional'], VARIANT, 'HelpContextID' )),
    DISPMETHOD([dispid(598)], POINTER(Menu), 'AddMenu',
               ( ['in'], BSTR, 'Caption' ),
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'Restore' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
Menu._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(593), 'propget'], POINTER(MenuItems), 'MenuItems'),
]
Menus._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Menu), 'Add',
               ( ['in'], BSTR, 'Caption' ),
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'Restore' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Menu), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Menu), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
MenuBar._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(553), 'propget'], VARIANT_BOOL, 'BuiltIn'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(591), 'propget'], POINTER(Menus), 'Menus'),
    DISPMETHOD([dispid(555)], None, 'Reset'),
]
IMenuBars._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(MenuBar)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(MenuBar)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(MenuBar)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IMenuBars implementation
##class IMenuBars_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlCommandUnderlines'
xlCommandUnderlinesAutomatic = -4105
xlCommandUnderlinesOff = -4146
xlCommandUnderlinesOn = 1
XlCommandUnderlines = c_int # enum

# values for enumeration 'XlMSApplication'
xlMicrosoftAccess = 4
xlMicrosoftFoxPro = 5
xlMicrosoftMail = 3
xlMicrosoftPowerPoint = 2
xlMicrosoftProject = 6
xlMicrosoftSchedulePlus = 7
xlMicrosoftWord = 1
XlMSApplication = c_int # enum
class IHeaderFooter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Graphic(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024459-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Graphic._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2194), 'propget'], c_float, 'Brightness'),
    DISPMETHOD([dispid(2194), 'propput'], None, 'Brightness',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(2195), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureColorType, 'ColorType'),
    DISPMETHOD([dispid(2195), 'propput'], None, 'ColorType',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureColorType, 'rhs' )),
    DISPMETHOD([dispid(2196), 'propget'], c_float, 'Contrast'),
    DISPMETHOD([dispid(2196), 'propput'], None, 'Contrast',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(2197), 'propget'], c_float, 'CropBottom'),
    DISPMETHOD([dispid(2197), 'propput'], None, 'CropBottom',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(2198), 'propget'], c_float, 'CropLeft'),
    DISPMETHOD([dispid(2198), 'propput'], None, 'CropLeft',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(2199), 'propget'], c_float, 'CropRight'),
    DISPMETHOD([dispid(2199), 'propput'], None, 'CropRight',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(2200), 'propget'], c_float, 'CropTop'),
    DISPMETHOD([dispid(2200), 'propput'], None, 'CropTop',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1415), 'propget'], BSTR, 'Filename'),
    DISPMETHOD([dispid(1415), 'propput'], None, 'Filename',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_float, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_float, 'rhs' )),
    DISPMETHOD([dispid(1700), 'propget'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'LockAspectRatio'),
    DISPMETHOD([dispid(1700), 'propput'], None, 'LockAspectRatio',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_float, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_float, 'rhs' )),
]
IHeaderFooter._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Picture',
              ( ['retval', 'out'], POINTER(POINTER(Graphic)), 'RHS' )),
]
################################################################
## code template for IHeaderFooter implementation
##class IHeaderFooter_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Picture(self):
##        '-no docstring-'
##        #return RHS
##

class IDrawings(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Drawing(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A8-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Drawing._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(601)], VARIANT, 'AddVertex',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' )),
    DISPMETHOD([dispid(604)], VARIANT, 'Reshape',
               ( ['in'], c_int, 'Vertex' ),
               ( ['in'], VARIANT_BOOL, 'Insert' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' )),
    DISPMETHOD([dispid(621), 'propget'], VARIANT, 'Vertices',
               ( ['in', 'optional'], VARIANT, 'Index1' ),
               ( ['in', 'optional'], VARIANT, 'Index2' )),
]
IDrawings._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy44'),
    COMMETHOD([], HRESULT, 'Reshape',
              ( ['in'], c_int, 'Vertex' ),
              ( ['in'], VARIANT_BOOL, 'Insert' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy46'),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'X1' ),
              ( ['in'], c_double, 'Y1' ),
              ( ['in'], c_double, 'X2' ),
              ( ['in'], c_double, 'Y2' ),
              ( ['in'], VARIANT_BOOL, 'Closed' ),
              ( ['retval', 'out'], POINTER(POINTER(Drawing)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IDrawings implementation
##class IDrawings_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Reshape(self, Vertex, Insert, Left, Top):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy44(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy46(self):
##        '-no docstring-'
##        #return 
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, X1, Y1, X2, Y2, Closed):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class PageSetup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlPageOrientation'
xlLandscape = 2
xlPortrait = 1
XlPageOrientation = c_int # enum

# values for enumeration 'XlPaperSize'
xlPaper10x14 = 16
xlPaper11x17 = 17
xlPaperA3 = 8
xlPaperA4 = 9
xlPaperA4Small = 10
xlPaperA5 = 11
xlPaperB4 = 12
xlPaperB5 = 13
xlPaperCsheet = 24
xlPaperDsheet = 25
xlPaperEnvelope10 = 20
xlPaperEnvelope11 = 21
xlPaperEnvelope12 = 22
xlPaperEnvelope14 = 23
xlPaperEnvelope9 = 19
xlPaperEnvelopeB4 = 33
xlPaperEnvelopeB5 = 34
xlPaperEnvelopeB6 = 35
xlPaperEnvelopeC3 = 29
xlPaperEnvelopeC4 = 30
xlPaperEnvelopeC5 = 28
xlPaperEnvelopeC6 = 31
xlPaperEnvelopeC65 = 32
xlPaperEnvelopeDL = 27
xlPaperEnvelopeItaly = 36
xlPaperEnvelopeMonarch = 37
xlPaperEnvelopePersonal = 38
xlPaperEsheet = 26
xlPaperExecutive = 7
xlPaperFanfoldLegalGerman = 41
xlPaperFanfoldStdGerman = 40
xlPaperFanfoldUS = 39
xlPaperFolio = 14
xlPaperLedger = 4
xlPaperLegal = 5
xlPaperLetter = 1
xlPaperLetterSmall = 2
xlPaperNote = 18
xlPaperQuarto = 15
xlPaperStatement = 6
xlPaperTabloid = 3
xlPaperUser = 256
XlPaperSize = c_int # enum

# values for enumeration 'XlPrintLocation'
xlPrintSheetEnd = 1
xlPrintInPlace = 16
xlPrintNoComments = -4142
XlPrintLocation = c_int # enum

# values for enumeration 'XlPrintErrors'
xlPrintErrorsDisplayed = 0
xlPrintErrorsBlank = 1
xlPrintErrorsDash = 2
xlPrintErrorsNA = 3
XlPrintErrors = c_int # enum
class Pages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Page(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class HeaderFooter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
HeaderFooter._disp_methods_ = [
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(479), 'propget'], POINTER(Graphic), 'Picture'),
]
Page._disp_methods_ = [
    DISPMETHOD([dispid(1018), 'propget'], POINTER(HeaderFooter), 'LeftHeader'),
    DISPMETHOD([dispid(1011), 'propget'], POINTER(HeaderFooter), 'CenterHeader'),
    DISPMETHOD([dispid(1026), 'propget'], POINTER(HeaderFooter), 'RightHeader'),
    DISPMETHOD([dispid(1017), 'propget'], POINTER(HeaderFooter), 'LeftFooter'),
    DISPMETHOD([dispid(1010), 'propget'], POINTER(HeaderFooter), 'CenterFooter'),
    DISPMETHOD([dispid(1025), 'propget'], POINTER(HeaderFooter), 'RightFooter'),
]
Pages._disp_methods_ = [
    DISPMETHOD([dispid(170), 'propget'], POINTER(Page), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Page), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
PageSetup._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1009), 'propget'], VARIANT_BOOL, 'BlackAndWhite'),
    DISPMETHOD([dispid(1009), 'propput'], None, 'BlackAndWhite',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1002), 'propget'], c_double, 'BottomMargin'),
    DISPMETHOD([dispid(1002), 'propput'], None, 'BottomMargin',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1010), 'propget'], BSTR, 'CenterFooter'),
    DISPMETHOD([dispid(1010), 'propput'], None, 'CenterFooter',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1011), 'propget'], BSTR, 'CenterHeader'),
    DISPMETHOD([dispid(1011), 'propput'], None, 'CenterHeader',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1005), 'propget'], VARIANT_BOOL, 'CenterHorizontally'),
    DISPMETHOD([dispid(1005), 'propput'], None, 'CenterHorizontally',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1006), 'propget'], VARIANT_BOOL, 'CenterVertically'),
    DISPMETHOD([dispid(1006), 'propput'], None, 'CenterVertically',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1012), 'hidden', 'propget'], XlObjectSize, 'ChartSize'),
    DISPMETHOD([dispid(1012), 'hidden', 'propput'], None, 'ChartSize',
               ( ['in'], XlObjectSize, 'rhs' )),
    DISPMETHOD([dispid(1020), 'propget'], VARIANT_BOOL, 'Draft'),
    DISPMETHOD([dispid(1020), 'propput'], None, 'Draft',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1008), 'propget'], c_int, 'FirstPageNumber'),
    DISPMETHOD([dispid(1008), 'propput'], None, 'FirstPageNumber',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1013), 'propget'], VARIANT, 'FitToPagesTall'),
    DISPMETHOD([dispid(1013), 'propput'], None, 'FitToPagesTall',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1014), 'propget'], VARIANT, 'FitToPagesWide'),
    DISPMETHOD([dispid(1014), 'propput'], None, 'FitToPagesWide',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1015), 'propget'], c_double, 'FooterMargin'),
    DISPMETHOD([dispid(1015), 'propput'], None, 'FooterMargin',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1016), 'propget'], c_double, 'HeaderMargin'),
    DISPMETHOD([dispid(1016), 'propput'], None, 'HeaderMargin',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1017), 'propget'], BSTR, 'LeftFooter'),
    DISPMETHOD([dispid(1017), 'propput'], None, 'LeftFooter',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1018), 'propget'], BSTR, 'LeftHeader'),
    DISPMETHOD([dispid(1018), 'propput'], None, 'LeftHeader',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(999), 'propget'], c_double, 'LeftMargin'),
    DISPMETHOD([dispid(999), 'propput'], None, 'LeftMargin',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(192), 'propget'], XlOrder, 'Order'),
    DISPMETHOD([dispid(192), 'propput'], None, 'Order',
               ( ['in'], XlOrder, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], XlPageOrientation, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], XlPageOrientation, 'rhs' )),
    DISPMETHOD([dispid(1007), 'propget'], XlPaperSize, 'PaperSize'),
    DISPMETHOD([dispid(1007), 'propput'], None, 'PaperSize',
               ( ['in'], XlPaperSize, 'rhs' )),
    DISPMETHOD([dispid(1019), 'propget'], BSTR, 'PrintArea'),
    DISPMETHOD([dispid(1019), 'propput'], None, 'PrintArea',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1004), 'propget'], VARIANT_BOOL, 'PrintGridlines'),
    DISPMETHOD([dispid(1004), 'propput'], None, 'PrintGridlines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1003), 'propget'], VARIANT_BOOL, 'PrintHeadings'),
    DISPMETHOD([dispid(1003), 'propput'], None, 'PrintHeadings',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1021), 'propget'], VARIANT_BOOL, 'PrintNotes'),
    DISPMETHOD([dispid(1021), 'propput'], None, 'PrintNotes',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1022), 'propget'], VARIANT, 'PrintQuality',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1022), 'propput'], None, 'PrintQuality',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1023), 'propget'], BSTR, 'PrintTitleColumns'),
    DISPMETHOD([dispid(1023), 'propput'], None, 'PrintTitleColumns',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1024), 'propget'], BSTR, 'PrintTitleRows'),
    DISPMETHOD([dispid(1024), 'propput'], None, 'PrintTitleRows',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1025), 'propget'], BSTR, 'RightFooter'),
    DISPMETHOD([dispid(1025), 'propput'], None, 'RightFooter',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1026), 'propget'], BSTR, 'RightHeader'),
    DISPMETHOD([dispid(1026), 'propput'], None, 'RightHeader',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1000), 'propget'], c_double, 'RightMargin'),
    DISPMETHOD([dispid(1000), 'propput'], None, 'RightMargin',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1001), 'propget'], c_double, 'TopMargin'),
    DISPMETHOD([dispid(1001), 'propput'], None, 'TopMargin',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(663), 'propget'], VARIANT, 'Zoom'),
    DISPMETHOD([dispid(663), 'propput'], None, 'Zoom',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1524), 'propget'], XlPrintLocation, 'PrintComments'),
    DISPMETHOD([dispid(1524), 'propput'], None, 'PrintComments',
               ( ['in'], XlPrintLocation, 'rhs' )),
    DISPMETHOD([dispid(2149), 'propget'], XlPrintErrors, 'PrintErrors'),
    DISPMETHOD([dispid(2149), 'propput'], None, 'PrintErrors',
               ( ['in'], XlPrintErrors, 'rhs' )),
    DISPMETHOD([dispid(2150), 'propget'], POINTER(Graphic), 'CenterHeaderPicture'),
    DISPMETHOD([dispid(2151), 'propget'], POINTER(Graphic), 'CenterFooterPicture'),
    DISPMETHOD([dispid(2152), 'propget'], POINTER(Graphic), 'LeftHeaderPicture'),
    DISPMETHOD([dispid(2153), 'propget'], POINTER(Graphic), 'LeftFooterPicture'),
    DISPMETHOD([dispid(2154), 'propget'], POINTER(Graphic), 'RightHeaderPicture'),
    DISPMETHOD([dispid(2155), 'propget'], POINTER(Graphic), 'RightFooterPicture'),
    DISPMETHOD([dispid(2600), 'propget'], VARIANT_BOOL, 'OddAndEvenPagesHeaderFooter'),
    DISPMETHOD([dispid(2600), 'propput'], None, 'OddAndEvenPagesHeaderFooter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2601), 'propget'], VARIANT_BOOL, 'DifferentFirstPageHeaderFooter'),
    DISPMETHOD([dispid(2601), 'propput'], None, 'DifferentFirstPageHeaderFooter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2602), 'propget'], VARIANT_BOOL, 'ScaleWithDocHeaderFooter'),
    DISPMETHOD([dispid(2602), 'propput'], None, 'ScaleWithDocHeaderFooter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2603), 'propget'], VARIANT_BOOL, 'AlignMarginsHeaderFooter'),
    DISPMETHOD([dispid(2603), 'propput'], None, 'AlignMarginsHeaderFooter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2604), 'propget'], POINTER(Pages), 'Pages'),
    DISPMETHOD([dispid(2605), 'propget'], POINTER(Page), 'EvenPage'),
    DISPMETHOD([dispid(2606), 'propget'], POINTER(Page), 'FirstPage'),
]
class Speech(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024466-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlSpeakDirection'
xlSpeakByRows = 0
xlSpeakByColumns = 1
XlSpeakDirection = c_int # enum
Speech._disp_methods_ = [
    DISPMETHOD([dispid(2017)], None, 'Speak',
               ( ['in'], BSTR, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'SpeakAsync' ),
               ( ['in', 'optional'], VARIANT, 'SpeakXML' ),
               ( ['in', 'optional'], VARIANT, 'Purge' )),
    DISPMETHOD([dispid(168), 'propget'], XlSpeakDirection, 'Direction'),
    DISPMETHOD([dispid(168), 'propput'], None, 'Direction',
               ( ['in'], XlSpeakDirection, 'rhs' )),
    DISPMETHOD([dispid(2235), 'propget'], VARIANT_BOOL, 'SpeakCellOnEnter'),
    DISPMETHOD([dispid(2235), 'propput'], None, 'SpeakCellOnEnter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]

# values for enumeration 'XlCVError'
xlErrDiv0 = 2007
xlErrNA = 2042
xlErrName = 2029
xlErrNull = 2000
xlErrNum = 2036
xlErrRef = 2023
xlErrValue = 2015
XlCVError = c_int # enum

# values for enumeration 'XlSheetVisibility'
xlSheetVisible = -1
xlSheetHidden = 0
xlSheetVeryHidden = 2
XlSheetVisibility = c_int # enum
class Shapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class FreeformBuilder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443F-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
FreeformBuilder._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1762)], None, 'AddNodes',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSegmentType, 'SegmentType' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEditingType, 'EditingType' ),
               ( ['in'], c_float, 'X1' ),
               ( ['in'], c_float, 'Y1' ),
               ( ['in', 'optional'], VARIANT, 'X2' ),
               ( ['in', 'optional'], VARIANT, 'Y2' ),
               ( ['in', 'optional'], VARIANT, 'X3' ),
               ( ['in', 'optional'], VARIANT, 'Y3' )),
    DISPMETHOD([dispid(1766)], POINTER(Shape), 'ConvertToShape'),
]
Shapes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Shape), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0)], POINTER(Shape), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(1713)], POINTER(Shape), 'AddCallout',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutType, 'Type' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' )),
    DISPMETHOD([dispid(1714)], POINTER(Shape), 'AddConnector',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoConnectorType, 'Type' ),
               ( ['in'], c_float, 'BeginX' ),
               ( ['in'], c_float, 'BeginY' ),
               ( ['in'], c_float, 'EndX' ),
               ( ['in'], c_float, 'EndY' )),
    DISPMETHOD([dispid(1719)], POINTER(Shape), 'AddCurve',
               ( ['in'], VARIANT, 'SafeArrayOfPoints' )),
    DISPMETHOD([dispid(1721)], POINTER(Shape), 'AddLabel',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'Orientation' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' )),
    DISPMETHOD([dispid(1722)], POINTER(Shape), 'AddLine',
               ( ['in'], c_float, 'BeginX' ),
               ( ['in'], c_float, 'BeginY' ),
               ( ['in'], c_float, 'EndX' ),
               ( ['in'], c_float, 'EndY' )),
    DISPMETHOD([dispid(1723)], POINTER(Shape), 'AddPicture',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'LinkToFile' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'SaveWithDocument' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' )),
    DISPMETHOD([dispid(1726)], POINTER(Shape), 'AddPolyline',
               ( ['in'], VARIANT, 'SafeArrayOfPoints' )),
    DISPMETHOD([dispid(1727)], POINTER(Shape), 'AddShape',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'Type' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' )),
    DISPMETHOD([dispid(1728)], POINTER(Shape), 'AddTextEffect',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffect, 'PresetTextEffect' ),
               ( ['in'], BSTR, 'Text' ),
               ( ['in'], BSTR, 'FontName' ),
               ( ['in'], c_float, 'FontSize' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'FontBold' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'FontItalic' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' )),
    DISPMETHOD([dispid(1734)], POINTER(Shape), 'AddTextbox',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'Orientation' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' )),
    DISPMETHOD([dispid(1735)], POINTER(FreeformBuilder), 'BuildFreeform',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEditingType, 'EditingType' ),
               ( ['in'], c_float, 'X1' ),
               ( ['in'], c_float, 'Y1' )),
    DISPMETHOD([dispid(197), 'propget'], POINTER(ShapeRange), 'Range',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1737)], None, 'SelectAll'),
    DISPMETHOD([dispid(1738)], POINTER(Shape), 'AddFormControl',
               ( ['in'], XlFormControl, 'Type' ),
               ( ['in'], c_int, 'Left' ),
               ( ['in'], c_int, 'Top' ),
               ( ['in'], c_int, 'Width' ),
               ( ['in'], c_int, 'Height' )),
    DISPMETHOD([dispid(1739)], POINTER(Shape), 'AddOLEObject',
               ( ['in', 'optional'], VARIANT, 'ClassType' ),
               ( ['in', 'optional'], VARIANT, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Link' ),
               ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
               ( ['in', 'optional'], VARIANT, 'IconFileName' ),
               ( ['in', 'optional'], VARIANT, 'IconIndex' ),
               ( ['in', 'optional'], VARIANT, 'IconLabel' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' )),
    DISPMETHOD([dispid(2176), 'hidden'], POINTER(Shape), 'AddDiagram',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramType, 'Type' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' )),
    DISPMETHOD([dispid(2177), 'hidden'], POINTER(Shape), 'AddCanvas',
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' )),
    DISPMETHOD([dispid(2665), 'hidden'], POINTER(Shape), 'AddChart',
               ( ['in', 'optional'], VARIANT, 'XlChartType' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' )),
    DISPMETHOD([dispid(2920)], POINTER(Shape), 'AddSmartArt',
               ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartArtLayout), 'Layout' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' )),
    DISPMETHOD([dispid(3088)], POINTER(Shape), 'AddChart2',
               ( ['in', 'optional'], VARIANT, 'Style' ),
               ( ['in', 'optional'], VARIANT, 'XlChartType' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' ),
               ( ['in', 'optional'], VARIANT, 'NewLayout' )),
    DISPMETHOD([dispid(3159)], POINTER(Shape), 'AddPicture2',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'LinkToFile' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'SaveWithDocument' ),
               ( ['in'], c_float, 'Left' ),
               ( ['in'], c_float, 'Top' ),
               ( ['in'], c_float, 'Width' ),
               ( ['in'], c_float, 'Height' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureCompress, 'Compress' )),
    DISPMETHOD([dispid(3175)], POINTER(Shape), 'AddWebShape',
               ( ['in'], BSTR, 'Url' ),
               ( ['in'], c_int, 'nBrowserId' ),
               ( ['in'], c_int, 'nFrameId' ),
               ( ['in'], c_int, 'funcId' ),
               ( ['in'], BSTR, 'pKey' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' )),
]

# values for enumeration 'XlEnableSelection'
xlNoRestrictions = 0
xlUnlockedCells = 1
xlNoSelection = -4142
XlEnableSelection = c_int # enum
class Names(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B8-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Name(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B9-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlXLMMacroType'
xlCommand = 2
xlFunction = 1
xlNotXLM = 3
XlXLMMacroType = c_int # enum
Name._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(934), 'propget'], BSTR, 'Category'),
    DISPMETHOD([dispid(934), 'propput'], None, 'Category',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(935), 'propget'], BSTR, 'CategoryLocal'),
    DISPMETHOD([dispid(935), 'propput'], None, 'CategoryLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(936), 'propget'], XlXLMMacroType, 'MacroType'),
    DISPMETHOD([dispid(936), 'propput'], None, 'MacroType',
               ( ['in'], XlXLMMacroType, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(938), 'propget'], VARIANT, 'RefersTo'),
    DISPMETHOD([dispid(938), 'propput'], None, 'RefersTo',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(597), 'propget'], BSTR, 'ShortcutKey'),
    DISPMETHOD([dispid(597), 'propput'], None, 'ShortcutKey',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(937), 'propget'], BSTR, 'NameLocal'),
    DISPMETHOD([dispid(937), 'propput'], None, 'NameLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(939), 'propget'], VARIANT, 'RefersToLocal'),
    DISPMETHOD([dispid(939), 'propput'], None, 'RefersToLocal',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(940), 'propget'], VARIANT, 'RefersToR1C1'),
    DISPMETHOD([dispid(940), 'propput'], None, 'RefersToR1C1',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(941), 'propget'], VARIANT, 'RefersToR1C1Local'),
    DISPMETHOD([dispid(941), 'propput'], None, 'RefersToR1C1Local',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1160), 'propget'], POINTER(Range), 'RefersToRange'),
    DISPMETHOD([dispid(910), 'propget'], BSTR, 'Comment'),
    DISPMETHOD([dispid(910), 'propput'], None, 'Comment',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2607), 'propget'], VARIANT_BOOL, 'WorkbookParameter'),
    DISPMETHOD([dispid(2607), 'propput'], None, 'WorkbookParameter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2608), 'propget'], VARIANT_BOOL, 'ValidWorkbookParameter'),
]
Names._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Name), 'Add',
               ( ['in', 'optional'], VARIANT, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'RefersTo' ),
               ( ['in', 'optional'], VARIANT, 'Visible' ),
               ( ['in', 'optional'], VARIANT, 'MacroType' ),
               ( ['in', 'optional'], VARIANT, 'ShortcutKey' ),
               ( ['in', 'optional'], VARIANT, 'Category' ),
               ( ['in', 'optional'], VARIANT, 'NameLocal' ),
               ( ['in', 'optional'], VARIANT, 'RefersToLocal' ),
               ( ['in', 'optional'], VARIANT, 'CategoryLocal' ),
               ( ['in', 'optional'], VARIANT, 'RefersToR1C1' ),
               ( ['in', 'optional'], VARIANT, 'RefersToR1C1Local' )),
    DISPMETHOD([dispid(170)], POINTER(Name), 'Item',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'IndexLocal' ),
               ( ['in', 'optional'], VARIANT, 'RefersTo' )),
    DISPMETHOD([dispid(0)], POINTER(Name), '_Default',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'IndexLocal' ),
               ( ['in', 'optional'], VARIANT, 'RefersTo' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class Outline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AB-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlSummaryColumn'
xlSummaryOnLeft = -4131
xlSummaryOnRight = -4152
XlSummaryColumn = c_int # enum
Outline._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(959), 'propget'], VARIANT_BOOL, 'AutomaticStyles'),
    DISPMETHOD([dispid(959), 'propput'], None, 'AutomaticStyles',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(960)], VARIANT, 'ShowLevels',
               ( ['in', 'optional'], VARIANT, 'RowLevels' ),
               ( ['in', 'optional'], VARIANT, 'ColumnLevels' )),
    DISPMETHOD([dispid(961), 'propget'], XlSummaryColumn, 'SummaryColumn'),
    DISPMETHOD([dispid(961), 'propput'], None, 'SummaryColumn',
               ( ['in'], XlSummaryColumn, 'rhs' )),
    DISPMETHOD([dispid(902), 'propget'], XlSummaryRow, 'SummaryRow'),
    DISPMETHOD([dispid(902), 'propput'], None, 'SummaryRow',
               ( ['in'], XlSummaryRow, 'rhs' )),
]

# values for enumeration 'XlSheetType'
xlChart = -4109
xlDialogSheet = -4116
xlExcel4IntlMacroSheet = 4
xlExcel4MacroSheet = 3
xlWorksheet = -4167
XlSheetType = c_int # enum
class HPageBreaks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024404-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class HPageBreak(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024401-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlPageBreak'
xlPageBreakAutomatic = -4105
xlPageBreakManual = -4135
xlPageBreakNone = -4142
XlPageBreak = c_int # enum

# values for enumeration 'XlPageBreakExtent'
xlPageBreakFull = 1
xlPageBreakPartial = 2
XlPageBreakExtent = c_int # enum
HPageBreak._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(Worksheet), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1420)], None, 'DragOff',
               ( ['in'], XlDirection, 'Direction' ),
               ( ['in'], c_int, 'RegionIndex' )),
    DISPMETHOD([dispid(108), 'propget'], XlPageBreak, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlPageBreak, 'rhs' )),
    DISPMETHOD([dispid(1422), 'propget'], XlPageBreakExtent, 'Extent'),
    DISPMETHOD([dispid(1397), 'propget'], POINTER(Range), 'Location'),
    DISPMETHOD([dispid(1397), 'propputref'], None, 'Location',
               ( ['in'], POINTER(Range), 'rhs' )),
]
HPageBreaks._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(HPageBreak), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(HPageBreak), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(HPageBreak), 'Add',
               ( ['in'], POINTER(IDispatch), 'Before' )),
]
class VPageBreaks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024405-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class VPageBreak(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024402-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
VPageBreak._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(Worksheet), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1420)], None, 'DragOff',
               ( ['in'], XlDirection, 'Direction' ),
               ( ['in'], c_int, 'RegionIndex' )),
    DISPMETHOD([dispid(108), 'propget'], XlPageBreak, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlPageBreak, 'rhs' )),
    DISPMETHOD([dispid(1422), 'propget'], XlPageBreakExtent, 'Extent'),
    DISPMETHOD([dispid(1397), 'propget'], POINTER(Range), 'Location'),
    DISPMETHOD([dispid(1397), 'propputref'], None, 'Location',
               ( ['in'], POINTER(Range), 'rhs' )),
]
VPageBreaks._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(VPageBreak), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(VPageBreak), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(VPageBreak), 'Add',
               ( ['in'], POINTER(IDispatch), 'Before' )),
]
class QueryTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024429-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
QueryTables._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181)], POINTER(QueryTable), 'Add',
               ( ['in'], VARIANT, 'Connection' ),
               ( ['in'], POINTER(Range), 'Destination' ),
               ( ['in', 'optional'], VARIANT, 'Sql' )),
    DISPMETHOD([dispid(170)], POINTER(QueryTable), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(QueryTable), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class Comments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024426-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Comments._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Comment), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Comment), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class Tab(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024469-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlThemeColor'
xlThemeColorDark1 = 1
xlThemeColorLight1 = 2
xlThemeColorDark2 = 3
xlThemeColorLight2 = 4
xlThemeColorAccent1 = 5
xlThemeColorAccent2 = 6
xlThemeColorAccent3 = 7
xlThemeColorAccent4 = 8
xlThemeColorAccent5 = 9
xlThemeColorAccent6 = 10
xlThemeColorHyperlink = 11
xlThemeColorFollowedHyperlink = 12
XlThemeColor = c_int # enum
Tab._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(99), 'propget'], VARIANT, 'Color'),
    DISPMETHOD([dispid(99), 'propput'], None, 'Color',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(97), 'propget'], XlColorIndex, 'ColorIndex'),
    DISPMETHOD([dispid(97), 'propput'], None, 'ColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(2365), 'propget'], XlThemeColor, 'ThemeColor'),
    DISPMETHOD([dispid(2365), 'propput'], None, 'ThemeColor',
               ( ['in'], XlThemeColor, 'rhs' )),
    DISPMETHOD([dispid(2366), 'propget'], VARIANT, 'TintAndShade'),
    DISPMETHOD([dispid(2366), 'propput'], None, 'TintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
]
class Protection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024467-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class AllowEditRanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class AllowEditRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class UserAccessList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class UserAccess(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
UserAccess._disp_methods_ = [
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(2020), 'propget'], VARIANT_BOOL, 'AllowEdit'),
    DISPMETHOD([dispid(2020), 'propput'], None, 'AllowEdit',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
UserAccessList._disp_methods_ = [
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(UserAccess), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(181)], POINTER(UserAccess), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], VARIANT_BOOL, 'AllowEdit' )),
    DISPMETHOD([dispid(2239)], None, 'DeleteAll'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(UserAccess), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
AllowEditRange._disp_methods_ = [
    DISPMETHOD([dispid(199), 'propget'], BSTR, 'Title'),
    DISPMETHOD([dispid(199), 'propput'], None, 'Title',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(197), 'propget'], POINTER(Range), 'Range'),
    DISPMETHOD([dispid(197), 'propputref'], None, 'Range',
               ( ['in'], POINTER(Range), 'rhs' )),
    DISPMETHOD([dispid(2237)], None, 'ChangePassword',
               ( ['in'], BSTR, 'Password' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(285)], None, 'Unprotect',
               ( ['in', 'optional'], VARIANT, 'Password' )),
    DISPMETHOD([dispid(2238), 'propget'], POINTER(UserAccessList), 'Users'),
]
AllowEditRanges._disp_methods_ = [
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(AllowEditRange), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(181)], POINTER(AllowEditRange), 'Add',
               ( ['in'], BSTR, 'Title' ),
               ( ['in'], POINTER(Range), 'Range' ),
               ( ['in', 'optional'], VARIANT, 'Password' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(AllowEditRange), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
Protection._disp_methods_ = [
    DISPMETHOD([dispid(2032), 'propget'], VARIANT_BOOL, 'AllowFormattingCells'),
    DISPMETHOD([dispid(2033), 'propget'], VARIANT_BOOL, 'AllowFormattingColumns'),
    DISPMETHOD([dispid(2034), 'propget'], VARIANT_BOOL, 'AllowFormattingRows'),
    DISPMETHOD([dispid(2035), 'propget'], VARIANT_BOOL, 'AllowInsertingColumns'),
    DISPMETHOD([dispid(2036), 'propget'], VARIANT_BOOL, 'AllowInsertingRows'),
    DISPMETHOD([dispid(2037), 'propget'], VARIANT_BOOL, 'AllowInsertingHyperlinks'),
    DISPMETHOD([dispid(2038), 'propget'], VARIANT_BOOL, 'AllowDeletingColumns'),
    DISPMETHOD([dispid(2039), 'propget'], VARIANT_BOOL, 'AllowDeletingRows'),
    DISPMETHOD([dispid(2040), 'propget'], VARIANT_BOOL, 'AllowSorting'),
    DISPMETHOD([dispid(2041), 'propget'], VARIANT_BOOL, 'AllowFiltering'),
    DISPMETHOD([dispid(2042), 'propget'], VARIANT_BOOL, 'AllowUsingPivotTables'),
    DISPMETHOD([dispid(2236), 'propget'], POINTER(AllowEditRanges), 'AllowEditRanges'),
]
class ListObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024470-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ListObjects._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2085), 'hidden'], POINTER(ListObject), '_Add',
               ( ['in', 'optional'], XlListObjectSourceType, 'SourceType', 1 ),
               ( ['in', 'optional'], VARIANT, 'Source' ),
               ( ['in', 'optional'], VARIANT, 'LinkSource' ),
               ( ['in', 'optional'], XlYesNoGuess, 'XlListObjectHasHeaders', 0 ),
               ( ['in', 'optional'], VARIANT, 'Destination' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ListObject), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(ListObject), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181)], POINTER(ListObject), 'Add',
               ( ['in', 'optional'], XlListObjectSourceType, 'SourceType', 1 ),
               ( ['in', 'optional'], VARIANT, 'Source' ),
               ( ['in', 'optional'], VARIANT, 'LinkSource' ),
               ( ['in', 'optional'], XlYesNoGuess, 'XlListObjectHasHeaders', 0 ),
               ( ['in', 'optional'], VARIANT, 'Destination' ),
               ( ['in', 'optional'], VARIANT, 'TableStyleName' )),
]
_Worksheet._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(304)], HRESULT, 'Activate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1373), 'propget'], HRESULT, 'CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(-2147418112), 'propget'], HRESULT, '_CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(-2147418112), 'propput'], HRESULT, '_CodeName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'Index',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(637)], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(502), 'propget'], HRESULT, 'Next',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(628), 'hidden', 'propget'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(628), 'hidden', 'propput'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1031), 'hidden', 'propget'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1031), 'hidden', 'propput'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propget'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propput'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(998), 'propget'], HRESULT, 'PageSetup',
              ( ['retval', 'out'], POINTER(POINTER(PageSetup)), 'RHS' )),
    COMMETHOD([dispid(503), 'propget'], HRESULT, 'Previous',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(905), 'hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(281)], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(282), 'hidden'], HRESULT, '_Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(292), 'propget'], HRESULT, 'ProtectContents',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(293), 'propget'], HRESULT, 'ProtectDrawingObjects',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1159), 'propget'], HRESULT, 'ProtectionMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(294), 'propget'], HRESULT, 'ProtectScenarios',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(284), 'hidden'], HRESULT, '_SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(285)], HRESULT, 'Unprotect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(558), 'propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlSheetVisibility), 'RHS' )),
    COMMETHOD([dispid(558), 'propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlSheetVisibility, 'RHS' )),
    COMMETHOD([dispid(1377), 'propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(Shapes)), 'RHS' )),
    COMMETHOD([dispid(401), 'propget'], HRESULT, 'TransitionExpEval',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(401), 'propput'], HRESULT, 'TransitionExpEval',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(760), 'hidden'], HRESULT, 'Arcs',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(792), 'propget'], HRESULT, 'AutoFilterMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(792), 'propput'], HRESULT, 'AutoFilterMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1188)], HRESULT, 'SetBackgroundPicture',
              ( ['in'], BSTR, 'Filename' )),
    COMMETHOD([dispid(557), 'hidden'], HRESULT, 'Buttons',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(279)], HRESULT, 'Calculate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1424), 'propget'], HRESULT, 'EnableCalculation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1424), 'propput'], HRESULT, 'EnableCalculation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(238), 'propget'], HRESULT, 'Cells',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(1060)], HRESULT, 'ChartObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(824), 'hidden'], HRESULT, 'CheckBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(505)], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1069), 'propget'], HRESULT, 'CircularReference',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(970)], HRESULT, 'ClearArrows',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(241), 'propget'], HRESULT, 'Columns',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(789), 'propget'], HRESULT, 'ConsolidationFunction',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlConsolidationFunction), 'RHS' )),
    COMMETHOD([dispid(790), 'propget'], HRESULT, 'ConsolidationOptions',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(791), 'propget'], HRESULT, 'ConsolidationSources',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(643), 'hidden', 'propget'], HRESULT, 'DisplayAutomaticPageBreaks',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(643), 'hidden', 'propput'], HRESULT, 'DisplayAutomaticPageBreaks',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(772), 'hidden'], HRESULT, 'Drawings',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(88), 'hidden'], HRESULT, 'DrawingObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(836), 'hidden'], HRESULT, 'DropDowns',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1156), 'propget'], HRESULT, 'EnableAutoFilter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1156), 'propput'], HRESULT, 'EnableAutoFilter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1425), 'propget'], HRESULT, 'EnableSelection',
              ( ['retval', 'out'], POINTER(XlEnableSelection), 'RHS' )),
    COMMETHOD([dispid(1425), 'propput'], HRESULT, 'EnableSelection',
              ( ['in'], XlEnableSelection, 'RHS' )),
    COMMETHOD([dispid(1157), 'propget'], HRESULT, 'EnableOutlining',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1157), 'propput'], HRESULT, 'EnableOutlining',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1158), 'propget'], HRESULT, 'EnablePivotTable',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1158), 'propput'], HRESULT, 'EnablePivotTable',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1)], HRESULT, 'Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(-5)], HRESULT, '_Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(800), 'propget'], HRESULT, 'FilterMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1426)], HRESULT, 'ResetAllPageBreaks'),
    COMMETHOD([dispid(834), 'hidden'], HRESULT, 'GroupBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1113), 'hidden'], HRESULT, 'GroupObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(841), 'hidden'], HRESULT, 'Labels',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(767), 'hidden'], HRESULT, 'Lines',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(832), 'hidden'], HRESULT, 'ListBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(442), 'propget'], HRESULT, 'Names',
              ( ['retval', 'out'], POINTER(POINTER(Names)), 'RHS' )),
    COMMETHOD([dispid(799)], HRESULT, 'OLEObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(625), 'hidden', 'propget'], HRESULT, 'OnCalculate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(625), 'hidden', 'propput'], HRESULT, 'OnCalculate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(629), 'hidden', 'propget'], HRESULT, 'OnData',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(629), 'hidden', 'propput'], HRESULT, 'OnData',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(627), 'hidden', 'propget'], HRESULT, 'OnEntry',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(627), 'hidden', 'propput'], HRESULT, 'OnEntry',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(826), 'hidden'], HRESULT, 'OptionButtons',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Outline',
              ( ['retval', 'out'], POINTER(POINTER(Outline)), 'RHS' )),
    COMMETHOD([dispid(801), 'hidden'], HRESULT, 'Ovals',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1027), 'hidden'], HRESULT, '_PasteSpecial',
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
              ( ['in', 'optional'], VARIANT, 'IconFileName' ),
              ( ['in', 'optional'], VARIANT, 'IconIndex' ),
              ( ['in', 'optional'], VARIANT, 'IconLabel' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(771), 'hidden'], HRESULT, 'Pictures',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(690)], HRESULT, 'PivotTables',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(684)], HRESULT, 'PivotTableWizard',
              ( ['in', 'optional'], VARIANT, 'SourceType' ),
              ( ['in', 'optional'], VARIANT, 'SourceData' ),
              ( ['in', 'optional'], VARIANT, 'TableDestination' ),
              ( ['in', 'optional'], VARIANT, 'TableName' ),
              ( ['in', 'optional'], VARIANT, 'RowGrand' ),
              ( ['in', 'optional'], VARIANT, 'ColumnGrand' ),
              ( ['in', 'optional'], VARIANT, 'SaveData' ),
              ( ['in', 'optional'], VARIANT, 'HasAutoFormat' ),
              ( ['in', 'optional'], VARIANT, 'AutoPage' ),
              ( ['in', 'optional'], VARIANT, 'Reserved' ),
              ( ['in', 'optional'], VARIANT, 'BackgroundQuery' ),
              ( ['in', 'optional'], VARIANT, 'OptimizeCache' ),
              ( ['in', 'optional'], VARIANT, 'PageFieldOrder' ),
              ( ['in', 'optional'], VARIANT, 'PageFieldWrapCount' ),
              ( ['in', 'optional'], VARIANT, 'ReadData' ),
              ( ['in', 'optional'], VARIANT, 'Connection' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD([dispid(197), 'propget'], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Cell1' ),
              ( ['in', 'optional'], VARIANT, 'Cell2' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(774), 'hidden'], HRESULT, 'Rectangles',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(258), 'propget'], HRESULT, 'Rows',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(908)], HRESULT, 'Scenarios',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1433), 'propget'], HRESULT, 'ScrollArea',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1433), 'propput'], HRESULT, 'ScrollArea',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(830), 'hidden'], HRESULT, 'ScrollBars',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(794)], HRESULT, 'ShowAllData',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(409)], HRESULT, 'ShowDataForm',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(838), 'hidden'], HRESULT, 'Spinners',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(407), 'propget'], HRESULT, 'StandardHeight',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(408), 'propget'], HRESULT, 'StandardWidth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(408), 'propput'], HRESULT, 'StandardWidth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(777), 'hidden'], HRESULT, 'TextBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(402), 'propget'], HRESULT, 'TransitionFormEntry',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(402), 'propput'], HRESULT, 'TransitionFormEntry',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlSheetType), 'RHS' )),
    COMMETHOD([dispid(412), 'propget'], HRESULT, 'UsedRange',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(1418), 'propget'], HRESULT, 'HPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(HPageBreaks)), 'RHS' )),
    COMMETHOD([dispid(1419), 'propget'], HRESULT, 'VPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(VPageBreaks)), 'RHS' )),
    COMMETHOD([dispid(1434), 'propget'], HRESULT, 'QueryTables',
              ( ['retval', 'out'], POINTER(POINTER(QueryTables)), 'RHS' )),
    COMMETHOD([dispid(1435), 'propget'], HRESULT, 'DisplayPageBreaks',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1435), 'propput'], HRESULT, 'DisplayPageBreaks',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(575), 'propget'], HRESULT, 'Comments',
              ( ['retval', 'out'], POINTER(POINTER(Comments)), 'RHS' )),
    COMMETHOD([dispid(1393), 'propget'], HRESULT, 'Hyperlinks',
              ( ['retval', 'out'], POINTER(POINTER(Hyperlinks)), 'RHS' )),
    COMMETHOD([dispid(1436)], HRESULT, 'ClearCircles'),
    COMMETHOD([dispid(1437)], HRESULT, 'CircleInvalid'),
    COMMETHOD([dispid(648), 'hidden', 'propget'], HRESULT, '_DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(648), 'hidden', 'propput'], HRESULT, '_DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(793), 'propget'], HRESULT, 'AutoFilter',
              ( ['retval', 'out'], POINTER(POINTER(AutoFilter)), 'RHS' )),
    COMMETHOD([dispid(1774), 'propget'], HRESULT, 'DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1774), 'propput'], HRESULT, 'DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1816), 'hidden', 'propget'], HRESULT, 'Scripts',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Scripts)), 'RHS' )),
    COMMETHOD([dispid(1772), 'hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1817), 'hidden'], HRESULT, '_CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreFinalYaa' ),
              ( ['in', 'optional'], VARIANT, 'SpellScript' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1041), 'propget'], HRESULT, 'Tab',
              ( ['retval', 'out'], POINTER(POINTER(Tab)), 'RHS' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'MailEnvelope',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEnvelope)), 'RHS' )),
    COMMETHOD([dispid(1925)], HRESULT, 'SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'optional'], VARIANT, 'Local' )),
    COMMETHOD([dispid(2030), 'propget'], HRESULT, 'CustomProperties',
              ( ['retval', 'out'], POINTER(POINTER(CustomProperties)), 'RHS' )),
    COMMETHOD([dispid(2016), 'hidden', 'propget'], HRESULT, 'SmartTags',
              ( ['retval', 'out'], POINTER(POINTER(SmartTags)), 'RHS' )),
    COMMETHOD([dispid(176), 'propget'], HRESULT, 'Protection',
              ( ['retval', 'out'], POINTER(POINTER(Protection)), 'RHS' )),
    COMMETHOD([dispid(1928)], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
              ( ['in', 'optional'], VARIANT, 'IconFileName' ),
              ( ['in', 'optional'], VARIANT, 'IconIndex' ),
              ( ['in', 'optional'], VARIANT, 'IconLabel' ),
              ( ['in', 'optional'], VARIANT, 'NoHTMLFormatting' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2029)], HRESULT, 'Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' ),
              ( ['in', 'optional'], VARIANT, 'AllowFormattingCells' ),
              ( ['in', 'optional'], VARIANT, 'AllowFormattingColumns' ),
              ( ['in', 'optional'], VARIANT, 'AllowFormattingRows' ),
              ( ['in', 'optional'], VARIANT, 'AllowInsertingColumns' ),
              ( ['in', 'optional'], VARIANT, 'AllowInsertingRows' ),
              ( ['in', 'optional'], VARIANT, 'AllowInsertingHyperlinks' ),
              ( ['in', 'optional'], VARIANT, 'AllowDeletingColumns' ),
              ( ['in', 'optional'], VARIANT, 'AllowDeletingRows' ),
              ( ['in', 'optional'], VARIANT, 'AllowSorting' ),
              ( ['in', 'optional'], VARIANT, 'AllowFiltering' ),
              ( ['in', 'optional'], VARIANT, 'AllowUsingPivotTables' )),
    COMMETHOD([dispid(2259), 'propget'], HRESULT, 'ListObjects',
              ( ['retval', 'out'], POINTER(POINTER(ListObjects)), 'RHS' )),
    COMMETHOD([dispid(2260)], HRESULT, 'XmlDataQuery',
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], VARIANT, 'SelectionNamespaces' ),
              ( ['in', 'optional'], VARIANT, 'Map' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(2263)], HRESULT, 'XmlMapQuery',
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], VARIANT, 'SelectionNamespaces' ),
              ( ['in', 'optional'], VARIANT, 'Map' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(2361)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2511), 'propget'], HRESULT, 'EnableFormatConditionsCalculation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2511), 'propput'], HRESULT, 'EnableFormatConditionsCalculation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(880), 'propget'], HRESULT, 'Sort',
              ( ['retval', 'out'], POINTER(POINTER(Sort)), 'RHS' )),
    COMMETHOD([dispid(2493)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], XlFixedFormatType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Quality' ),
              ( ['in', 'optional'], VARIANT, 'IncludeDocProperties' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'OpenAfterPublish' ),
              ( ['in', 'optional'], VARIANT, 'FixedFormatExtClassPtr' )),
    COMMETHOD([dispid(2857), 'propget'], HRESULT, 'PrintedCommentPages',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(5316623)], HRESULT, 'ExportToPNG',
              ( ['in'], VARIANT, 'FilePath' )),
]
################################################################
## code template for _Worksheet implementation
##class _Worksheet_Impl(object):
##    def DrawingObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang, IgnoreFinalYaa, SpellScript, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableCalculation = property(_get, _set, doc = _set.__doc__)
##
##    def ScrollBars(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return RHS
##
##    def Buttons(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnData = property(_get, _set, doc = _set.__doc__)
##
##    def XmlDataQuery(self, XPath, SelectionNamespaces, Map):
##        '-no docstring-'
##        #return RHS
##
##    def ClearCircles(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnCalculate = property(_get, _set, doc = _set.__doc__)
##
##    def _Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ProtectContents(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Pictures(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayRightToLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    def SetBackgroundPicture(self, Filename):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return RHS
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetDeactivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayPageBreaks = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PrintedCommentPages(self):
##        '-no docstring-'
##        #return RHS
##
##    def Scenarios(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Labels(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableFormatConditionsCalculation = property(_get, _set, doc = _set.__doc__)
##
##    def _Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tab(self):
##        '-no docstring-'
##        #return RHS
##
##    def TextBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Index(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def PivotTableWizard(self, SourceType, SourceData, TableDestination, TableName, RowGrand, ColumnGrand, SaveData, HasAutoFormat, AutoPage, Reserved, BackgroundQuery, OptimizeCache, PageFieldOrder, PageFieldWrapCount, ReadData, Connection, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FilterMode(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GroupBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    TransitionExpEval = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    AutoFilterMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnEntry = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def UsedRange(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ChartObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableSelection = property(_get, _set, doc = _set.__doc__)
##
##    def Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ProtectScenarios(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ResetAllPageBreaks(self):
##        '-no docstring-'
##        #return 
##
##    def PivotTables(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, AllowFormattingCells, AllowFormattingColumns, AllowFormattingRows, AllowInsertingColumns, AllowInsertingRows, AllowInsertingHyperlinks, AllowDeletingColumns, AllowDeletingRows, AllowSorting, AllowFiltering, AllowUsingPivotTables):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Outline(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, IgnorePrintAreas, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self, Cell1, Cell2):
##        '-no docstring-'
##        #return RHS
##
##    def OptionButtons(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GroupObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout, Local):
##        '-no docstring-'
##        #return 
##
##    def ShowAllData(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    _DisplayRightToLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProtectionMode(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    TransitionFormEntry = property(_get, _set, doc = _set.__doc__)
##
##    def Ovals(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Calculate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ListObjects(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnDoubleClick = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ConsolidationFunction(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return RHS
##
##    def OLEObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ExportToPNG(self, FilePath):
##        '-no docstring-'
##        #return 
##
##    @property
##    def VPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MailEnvelope(self):
##        '-no docstring-'
##        #return RHS
##
##    def Arcs(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ConsolidationOptions(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def QueryTables(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SmartTags(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ConsolidationSources(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ClearArrows(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang, lcid):
##        '-no docstring-'
##        #return 
##
##    def XmlMapQuery(self, XPath, SelectionNamespaces, Map):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoFilter(self):
##        '-no docstring-'
##        #return RHS
##
##    def _SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    def ListBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    StandardWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CircularReference(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayAutomaticPageBreaks = property(_get, _set, doc = _set.__doc__)
##
##    def Drawings(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Unprotect(self, Password, lcid):
##        '-no docstring-'
##        #return 
##
##    def DropDowns(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Rectangles(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Spinners(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return RHS
##
##    def CircleInvalid(self):
##        '-no docstring-'
##        #return 
##
##    def _PasteSpecial(self, Format, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProtectDrawingObjects(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Sort(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Protection(self):
##        '-no docstring-'
##        #return RHS
##
##    def PasteSpecial(self, Format, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel, NoHTMLFormatting, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnableOutlining = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomProperties(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CodeName(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def Paste(self, Destination, Link, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnablePivotTable = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScrollArea = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Lines(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ShowDataForm(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def Activate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat(self, Type, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From, To, OpenAfterPublish, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    def CheckBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def StandardHeight(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnableAutoFilter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetActivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _CodeName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Names(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PageSetup(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlDVAlertStyle'
xlValidAlertStop = 1
xlValidAlertWarning = 2
xlValidAlertInformation = 3
XlDVAlertStyle = c_int # enum
class IPivotFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020875-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotFields._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IPivotFields implementation
##class IPivotFields_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##

class ModelRelationships(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DA-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelRelationship(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D9-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelRelationship._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(3122), 'propget'], POINTER(ModelTable), 'ForeignKeyTable'),
    DISPMETHOD([dispid(3123), 'propget'], POINTER(ModelTableColumn), 'ForeignKeyColumn'),
    DISPMETHOD([dispid(3124), 'propget'], POINTER(ModelTable), 'PrimaryKeyTable'),
    DISPMETHOD([dispid(3125), 'propget'], POINTER(ModelTableColumn), 'PrimaryKeyColumn'),
    DISPMETHOD([dispid(2312), 'propget'], VARIANT_BOOL, 'Active'),
    DISPMETHOD([dispid(2312), 'propput'], None, 'Active',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
ModelRelationships._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ModelRelationship), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ModelRelationship), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(ModelRelationship), 'Add',
               ( ['in'], POINTER(ModelTableColumn), 'ForeignKeyColumn' ),
               ( ['in'], POINTER(ModelTableColumn), 'PrimaryKeyColumn' )),
]

# values for enumeration 'XlFillWith'
xlFillWithAll = -4104
xlFillWithContents = 2
xlFillWithFormats = -4122
XlFillWith = c_int # enum
class IColorScaleCriteria(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024494-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class ColorScaleCriterion(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024495-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlConditionValueTypes'
xlConditionValueNone = -1
xlConditionValueNumber = 0
xlConditionValueLowestValue = 1
xlConditionValueHighestValue = 2
xlConditionValuePercent = 3
xlConditionValueFormula = 4
xlConditionValuePercentile = 5
xlConditionValueAutomaticMin = 6
xlConditionValueAutomaticMax = 7
XlConditionValueTypes = c_int # enum
ColorScaleCriterion._disp_methods_ = [
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(108), 'propget'], XlConditionValueTypes, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlConditionValueTypes, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2717), 'propget'], POINTER(FormatColor), 'FormatColor'),
]
IColorScaleCriteria._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ColorScaleCriterion)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ColorScaleCriterion)), 'RHS' )),
]
################################################################
## code template for IColorScaleCriteria implementation
##class IColorScaleCriteria_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##

class DialogSheet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AF-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class DialogFrame(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
DialogFrame._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(1610743812), 'restricted', 'hidden'], None, '_Dummy4'),
    DISPMETHOD([dispid(1610743813), 'restricted', 'hidden'], None, '_Dummy5'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(1610743815), 'restricted', 'hidden'], None, '_Dummy7'),
    DISPMETHOD([dispid(1610743816), 'restricted', 'hidden'], None, '_Dummy8'),
    DISPMETHOD([dispid(1610743817), 'restricted', 'hidden'], None, '_Dummy9'),
    DISPMETHOD([dispid(1610743818), 'restricted', 'hidden'], None, '_Dummy10'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743821), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1610743830), 'restricted', 'hidden'], None, '_Dummy17'),
    DISPMETHOD([dispid(1610743831), 'restricted', 'hidden'], None, '_Dummy18'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(1610743833), 'restricted', 'hidden'], None, '_Dummy20'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743836), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(1610743837), 'restricted', 'hidden'], None, '_Dummy23'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743840), 'restricted', 'hidden'], None, '_Dummy25'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
]
DialogSheet._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(551)], None, 'Copy',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1373), 'propget'], BSTR, 'CodeName'),
    DISPMETHOD([dispid(-2147418112), 'propget'], BSTR, '_CodeName'),
    DISPMETHOD([dispid(-2147418112), 'propput'], None, '_CodeName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(637)], None, 'Move',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(502), 'propget'], POINTER(IDispatch), 'Next'),
    DISPMETHOD([dispid(628), 'hidden', 'propget'], BSTR, 'OnDoubleClick'),
    DISPMETHOD([dispid(628), 'hidden', 'propput'], None, 'OnDoubleClick',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1031), 'hidden', 'propget'], BSTR, 'OnSheetActivate'),
    DISPMETHOD([dispid(1031), 'hidden', 'propput'], None, 'OnSheetActivate',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1081), 'hidden', 'propget'], BSTR, 'OnSheetDeactivate'),
    DISPMETHOD([dispid(1081), 'hidden', 'propput'], None, 'OnSheetDeactivate',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(998), 'propget'], POINTER(PageSetup), 'PageSetup'),
    DISPMETHOD([dispid(503), 'propget'], POINTER(IDispatch), 'Previous'),
    DISPMETHOD([dispid(905), 'hidden'], None, '__PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(281)], None, 'PrintPreview',
               ( ['in', 'optional'], VARIANT, 'EnableChanges' )),
    DISPMETHOD([dispid(282), 'hidden'], None, '_Protect',
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
               ( ['in', 'optional'], VARIANT, 'Contents' ),
               ( ['in', 'optional'], VARIANT, 'Scenarios' ),
               ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' )),
    DISPMETHOD([dispid(292), 'propget'], VARIANT_BOOL, 'ProtectContents'),
    DISPMETHOD([dispid(293), 'propget'], VARIANT_BOOL, 'ProtectDrawingObjects'),
    DISPMETHOD([dispid(1159), 'propget'], VARIANT_BOOL, 'ProtectionMode'),
    DISPMETHOD([dispid(294), 'propget'], VARIANT_BOOL, 'ProtectScenarios'),
    DISPMETHOD([dispid(284), 'hidden'], None, '_SaveAs',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'FileFormat' ),
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
               ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
               ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
               ( ['in', 'optional'], VARIANT, 'AddToMru' ),
               ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
               ( ['in', 'optional'], VARIANT, 'TextVisualLayout' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(285)], None, 'Unprotect',
               ( ['in', 'optional'], VARIANT, 'Password' )),
    DISPMETHOD([dispid(558), 'propget'], XlSheetVisibility, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], XlSheetVisibility, 'rhs' )),
    DISPMETHOD([dispid(1377), 'propget'], POINTER(Shapes), 'Shapes'),
    DISPMETHOD([dispid(1610743843), 'restricted', 'hidden'], None, '_Dummy29'),
    DISPMETHOD([dispid(760), 'hidden'], POINTER(IDispatch), 'Arcs',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743845), 'restricted', 'hidden'], None, '_Dummy31'),
    DISPMETHOD([dispid(1610743846), 'restricted', 'hidden'], None, '_Dummy32'),
    DISPMETHOD([dispid(557), 'hidden'], POINTER(IDispatch), 'Buttons',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743848), 'restricted', 'hidden'], None, '_Dummy34'),
    DISPMETHOD([dispid(1424), 'propget'], VARIANT_BOOL, 'EnableCalculation'),
    DISPMETHOD([dispid(1424), 'propput'], None, 'EnableCalculation',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743851), 'restricted', 'hidden'], None, '_Dummy36'),
    DISPMETHOD([dispid(1060)], POINTER(IDispatch), 'ChartObjects',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(824), 'hidden'], POINTER(IDispatch), 'CheckBoxes',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(505)], None, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(1610743855), 'restricted', 'hidden'], None, '_Dummy40'),
    DISPMETHOD([dispid(1610743856), 'restricted', 'hidden'], None, '_Dummy41'),
    DISPMETHOD([dispid(1610743857), 'restricted', 'hidden'], None, '_Dummy42'),
    DISPMETHOD([dispid(1610743858), 'restricted', 'hidden'], None, '_Dummy43'),
    DISPMETHOD([dispid(1610743859), 'restricted', 'hidden'], None, '_Dummy44'),
    DISPMETHOD([dispid(1610743860), 'restricted', 'hidden'], None, '_Dummy45'),
    DISPMETHOD([dispid(643), 'hidden', 'propget'], VARIANT_BOOL, 'DisplayAutomaticPageBreaks'),
    DISPMETHOD([dispid(643), 'hidden', 'propput'], None, 'DisplayAutomaticPageBreaks',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(772), 'hidden'], POINTER(IDispatch), 'Drawings',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(88), 'hidden'], POINTER(IDispatch), 'DrawingObjects',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(836), 'hidden'], POINTER(IDispatch), 'DropDowns',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1156), 'propget'], VARIANT_BOOL, 'EnableAutoFilter'),
    DISPMETHOD([dispid(1156), 'propput'], None, 'EnableAutoFilter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1425), 'propget'], XlEnableSelection, 'EnableSelection'),
    DISPMETHOD([dispid(1425), 'propput'], None, 'EnableSelection',
               ( ['in'], XlEnableSelection, 'rhs' )),
    DISPMETHOD([dispid(1157), 'propget'], VARIANT_BOOL, 'EnableOutlining'),
    DISPMETHOD([dispid(1157), 'propput'], None, 'EnableOutlining',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1158), 'propget'], VARIANT_BOOL, 'EnablePivotTable'),
    DISPMETHOD([dispid(1158), 'propput'], None, 'EnablePivotTable',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1)], VARIANT, 'Evaluate',
               ( ['in'], VARIANT, 'Name' )),
    DISPMETHOD([dispid(-5)], VARIANT, '_Evaluate',
               ( ['in'], VARIANT, 'Name' )),
    DISPMETHOD([dispid(1610743876), 'restricted', 'hidden'], None, '_Dummy56'),
    DISPMETHOD([dispid(1426)], None, 'ResetAllPageBreaks'),
    DISPMETHOD([dispid(834), 'hidden'], POINTER(IDispatch), 'GroupBoxes',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1113), 'hidden'], POINTER(IDispatch), 'GroupObjects',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(841), 'hidden'], POINTER(IDispatch), 'Labels',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(767), 'hidden'], POINTER(IDispatch), 'Lines',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(832), 'hidden'], POINTER(IDispatch), 'ListBoxes',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(442), 'propget'], POINTER(Names), 'Names'),
    DISPMETHOD([dispid(799)], POINTER(IDispatch), 'OLEObjects',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743885), 'restricted', 'hidden'], None, '_Dummy65'),
    DISPMETHOD([dispid(1610743886), 'restricted', 'hidden'], None, '_Dummy66'),
    DISPMETHOD([dispid(1610743887), 'restricted', 'hidden'], None, '_Dummy67'),
    DISPMETHOD([dispid(826), 'hidden'], POINTER(IDispatch), 'OptionButtons',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743889), 'restricted', 'hidden'], None, '_Dummy69'),
    DISPMETHOD([dispid(801), 'hidden'], POINTER(IDispatch), 'Ovals',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(211)], None, 'Paste',
               ( ['in', 'optional'], VARIANT, 'Destination' ),
               ( ['in', 'optional'], VARIANT, 'Link' )),
    DISPMETHOD([dispid(1027), 'hidden'], None, '_PasteSpecial',
               ( ['in', 'optional'], VARIANT, 'Format' ),
               ( ['in', 'optional'], VARIANT, 'Link' ),
               ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
               ( ['in', 'optional'], VARIANT, 'IconFileName' ),
               ( ['in', 'optional'], VARIANT, 'IconIndex' ),
               ( ['in', 'optional'], VARIANT, 'IconLabel' )),
    DISPMETHOD([dispid(771), 'hidden'], POINTER(IDispatch), 'Pictures',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743894), 'restricted', 'hidden'], None, '_Dummy74'),
    DISPMETHOD([dispid(1610743895), 'restricted', 'hidden'], None, '_Dummy75'),
    DISPMETHOD([dispid(1610743896), 'restricted', 'hidden'], None, '_Dummy76'),
    DISPMETHOD([dispid(774), 'hidden'], POINTER(IDispatch), 'Rectangles',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743898), 'restricted', 'hidden'], None, '_Dummy78'),
    DISPMETHOD([dispid(1610743899), 'restricted', 'hidden'], None, '_Dummy79'),
    DISPMETHOD([dispid(1433), 'propget'], BSTR, 'ScrollArea'),
    DISPMETHOD([dispid(1433), 'propput'], None, 'ScrollArea',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(830), 'hidden'], POINTER(IDispatch), 'ScrollBars',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743903), 'restricted', 'hidden'], None, '_Dummy82'),
    DISPMETHOD([dispid(1610743904), 'restricted', 'hidden'], None, '_Dummy83'),
    DISPMETHOD([dispid(838), 'hidden'], POINTER(IDispatch), 'Spinners',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743906), 'restricted', 'hidden'], None, '_Dummy85'),
    DISPMETHOD([dispid(1610743907), 'restricted', 'hidden'], None, '_Dummy86'),
    DISPMETHOD([dispid(777), 'hidden'], POINTER(IDispatch), 'TextBoxes',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743909), 'restricted', 'hidden'], None, '_Dummy88'),
    DISPMETHOD([dispid(1610743910), 'restricted', 'hidden'], None, '_Dummy89'),
    DISPMETHOD([dispid(1610743911), 'restricted', 'hidden'], None, '_Dummy90'),
    DISPMETHOD([dispid(1418), 'propget'], POINTER(HPageBreaks), 'HPageBreaks'),
    DISPMETHOD([dispid(1419), 'propget'], POINTER(VPageBreaks), 'VPageBreaks'),
    DISPMETHOD([dispid(1434), 'propget'], POINTER(QueryTables), 'QueryTables'),
    DISPMETHOD([dispid(1435), 'propget'], VARIANT_BOOL, 'DisplayPageBreaks'),
    DISPMETHOD([dispid(1435), 'propput'], None, 'DisplayPageBreaks',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(575), 'propget'], POINTER(Comments), 'Comments'),
    DISPMETHOD([dispid(1393), 'propget'], POINTER(Hyperlinks), 'Hyperlinks'),
    DISPMETHOD([dispid(1436)], None, 'ClearCircles'),
    DISPMETHOD([dispid(1437)], None, 'CircleInvalid'),
    DISPMETHOD([dispid(648), 'hidden', 'propget'], c_int, '_DisplayRightToLeft'),
    DISPMETHOD([dispid(648), 'hidden', 'propput'], None, '_DisplayRightToLeft',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(793), 'propget'], POINTER(AutoFilter), 'AutoFilter'),
    DISPMETHOD([dispid(1774), 'propget'], VARIANT_BOOL, 'DisplayRightToLeft'),
    DISPMETHOD([dispid(1774), 'propput'], None, 'DisplayRightToLeft',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1816), 'hidden', 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Scripts), 'Scripts'),
    DISPMETHOD([dispid(1772), 'hidden'], None, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(1817), 'hidden'], None, '_CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreFinalYaa' ),
               ( ['in', 'optional'], VARIANT, 'SpellScript' )),
    DISPMETHOD([dispid(1041), 'propget'], POINTER(Tab), 'Tab'),
    DISPMETHOD([dispid(2021), 'propget'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEnvelope), 'MailEnvelope'),
    DISPMETHOD([dispid(1925)], None, 'SaveAs',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'FileFormat' ),
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
               ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
               ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
               ( ['in', 'optional'], VARIANT, 'AddToMru' ),
               ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
               ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
               ( ['in', 'optional'], VARIANT, 'Local' )),
    DISPMETHOD([dispid(2030), 'propget'], POINTER(CustomProperties), 'CustomProperties'),
    DISPMETHOD([dispid(2016), 'hidden', 'propget'], POINTER(SmartTags), 'SmartTags'),
    DISPMETHOD([dispid(176), 'propget'], POINTER(Protection), 'Protection'),
    DISPMETHOD([dispid(1928)], None, 'PasteSpecial',
               ( ['in', 'optional'], VARIANT, 'Format' ),
               ( ['in', 'optional'], VARIANT, 'Link' ),
               ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
               ( ['in', 'optional'], VARIANT, 'IconFileName' ),
               ( ['in', 'optional'], VARIANT, 'IconIndex' ),
               ( ['in', 'optional'], VARIANT, 'IconLabel' ),
               ( ['in', 'optional'], VARIANT, 'NoHTMLFormatting' )),
    DISPMETHOD([dispid(2029)], None, 'Protect',
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
               ( ['in', 'optional'], VARIANT, 'Contents' ),
               ( ['in', 'optional'], VARIANT, 'Scenarios' ),
               ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' ),
               ( ['in', 'optional'], VARIANT, 'AllowFormattingCells' ),
               ( ['in', 'optional'], VARIANT, 'AllowFormattingColumns' ),
               ( ['in', 'optional'], VARIANT, 'AllowFormattingRows' ),
               ( ['in', 'optional'], VARIANT, 'AllowInsertingColumns' ),
               ( ['in', 'optional'], VARIANT, 'AllowInsertingRows' ),
               ( ['in', 'optional'], VARIANT, 'AllowInsertingHyperlinks' ),
               ( ['in', 'optional'], VARIANT, 'AllowDeletingColumns' ),
               ( ['in', 'optional'], VARIANT, 'AllowDeletingRows' ),
               ( ['in', 'optional'], VARIANT, 'AllowSorting' ),
               ( ['in', 'optional'], VARIANT, 'AllowFiltering' ),
               ( ['in', 'optional'], VARIANT, 'AllowUsingPivotTables' )),
    DISPMETHOD([dispid(1610743937), 'restricted', 'hidden'], None, '_Dummy113'),
    DISPMETHOD([dispid(1610743938), 'restricted', 'hidden'], None, '_Dummy114'),
    DISPMETHOD([dispid(1610743939), 'restricted', 'hidden'], None, '_Dummy115'),
    DISPMETHOD([dispid(2361)], None, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2511), 'propget'], VARIANT_BOOL, 'EnableFormatConditionsCalculation'),
    DISPMETHOD([dispid(2511), 'propput'], None, 'EnableFormatConditionsCalculation',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(880), 'propget'], POINTER(Sort), 'Sort'),
    DISPMETHOD([dispid(2493)], None, 'ExportAsFixedFormat',
               ( ['in'], XlFixedFormatType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Quality' ),
               ( ['in', 'optional'], VARIANT, 'IncludeDocProperties' ),
               ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'OpenAfterPublish' ),
               ( ['in', 'optional'], VARIANT, 'FixedFormatExtClassPtr' )),
    DISPMETHOD([dispid(2857), 'propget'], c_int, 'PrintedCommentPages'),
    DISPMETHOD([dispid(857), 'propget'], VARIANT, 'DefaultButton'),
    DISPMETHOD([dispid(857), 'propput'], None, 'DefaultButton',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(839), 'hidden', 'propget'], POINTER(DialogFrame), 'DialogFrame'),
    DISPMETHOD([dispid(828), 'hidden'], POINTER(IDispatch), 'EditBoxes',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(814), 'propget'], VARIANT, 'Focus'),
    DISPMETHOD([dispid(814), 'propput'], None, 'Focus',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(813)], VARIANT_BOOL, 'Hide',
               ( ['in', 'optional'], VARIANT, 'Cancel' )),
    DISPMETHOD([dispid(496)], VARIANT_BOOL, 'Show'),
]
class ISparkPoints(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparkPoints._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Negative',
              ( ['retval', 'out'], POINTER(POINTER(SparkColor)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Markers',
              ( ['retval', 'out'], POINTER(POINTER(SparkColor)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Highpoint',
              ( ['retval', 'out'], POINTER(POINTER(SparkColor)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Lowpoint',
              ( ['retval', 'out'], POINTER(POINTER(SparkColor)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Firstpoint',
              ( ['retval', 'out'], POINTER(POINTER(SparkColor)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Lastpoint',
              ( ['retval', 'out'], POINTER(POINTER(SparkColor)), 'RHS' )),
]
################################################################
## code template for ISparkPoints implementation
##class ISparkPoints_Impl(object):
##    @property
##    def Lowpoint(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Lastpoint(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Negative(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Markers(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Firstpoint(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Highpoint(self):
##        '-no docstring-'
##        #return RHS
##

class IWatch(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024457-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWatch._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Source',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IWatch implementation
##class IWatch_Impl(object):
##    @property
##    def Source(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlModelChangeSource'
xlChangeByExcel = 0
xlChangeByPowerPivotAddIn = 1
XlModelChangeSource = c_int # enum

# values for enumeration 'XlUpdateLinks'
xlUpdateLinksUserSetting = 1
xlUpdateLinksNever = 2
xlUpdateLinksAlways = 3
XlUpdateLinks = c_int # enum
class IResearch(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AC-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IResearch._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Query',
              ( ['in'], BSTR, 'ServiceID' ),
              ( ['in', 'optional'], VARIANT, 'QueryString' ),
              ( ['in', 'optional'], VARIANT, 'QueryLanguage' ),
              ( ['in', 'optional'], VARIANT, 'UseSelection' ),
              ( ['in', 'optional'], VARIANT, 'LaunchQuery' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsResearchService',
              ( ['in'], BSTR, 'ServiceID' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'SetLanguagePair',
              ( ['in'], c_int, 'LanguageFrom' ),
              ( ['in'], c_int, 'LanguageTo' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IResearch implementation
##class IResearch_Impl(object):
##    def IsResearchService(self, ServiceID):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetLanguagePair(self, LanguageFrom, LanguageTo):
##        '-no docstring-'
##        #return RHS
##
##    def Query(self, ServiceID, QueryString, QueryLanguage, UseSelection, LaunchQuery):
##        '-no docstring-'
##        #return RHS
##

class UniqueValues(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449F-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlDupeUnique'
xlUnique = 0
xlDuplicate = 1
XlDupeUnique = c_int # enum

# values for enumeration 'XlPivotConditionScope'
xlSelectionScope = 0
xlFieldsScope = 1
xlDataFieldScope = 2
XlPivotConditionScope = c_int # enum
UniqueValues._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2625), 'propget'], VARIANT_BOOL, 'StopIfTrue'),
    DISPMETHOD([dispid(2625), 'propput'], None, 'StopIfTrue',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2626), 'propget'], POINTER(Range), 'AppliesTo'),
    DISPMETHOD([dispid(2733), 'propget'], XlDupeUnique, 'DupeUnique'),
    DISPMETHOD([dispid(2733), 'propput'], None, 'DupeUnique',
               ( ['in'], XlDupeUnique, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(193), 'propget'], VARIANT, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2629)], None, 'SetFirstPriority'),
    DISPMETHOD([dispid(2630)], None, 'SetLastPriority'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2627)], None, 'ModifyAppliesToRange',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2631), 'propget'], VARIANT_BOOL, 'PTCondition'),
    DISPMETHOD([dispid(2615), 'propget'], XlPivotConditionScope, 'ScopeType'),
    DISPMETHOD([dispid(2615), 'propput'], None, 'ScopeType',
               ( ['in'], XlPivotConditionScope, 'rhs' )),
]
class ICheckBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020880-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class CheckBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CheckBox._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
]
ICheckBoxes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(CheckBox)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ICheckBoxes implementation
##class ICheckBoxes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ITableStyleElement(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A5-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITableStyleElement._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasFormat',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StripeSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StripeSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear'),
]
################################################################
## code template for ITableStyleElement implementation
##class ITableStyleElement_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StripeSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##

class IODBCConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IODBCConnection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BackgroundQuery',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BackgroundQuery',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'CancelRefresh'),
    COMMETHOD(['propget'], HRESULT, 'CommandText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandType',
              ( ['retval', 'out'], POINTER(XlCmdType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandType',
              ( ['in'], XlCmdType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Connection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD(['propget'], HRESULT, 'RefreshDate',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Refreshing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshOnFileOpen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshOnFileOpen',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshPeriod',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshPeriod',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RobustConnect',
              ( ['retval', 'out'], POINTER(XlRobustConnect), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RobustConnect',
              ( ['in'], XlRobustConnect, 'RHS' )),
    COMMETHOD([], HRESULT, 'SaveAsODC',
              ( ['in'], BSTR, 'ODCFileName' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'Keywords' )),
    COMMETHOD(['propget'], HRESULT, 'SavePassword',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SavePassword',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceConnectionFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceConnectionFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceData',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceData',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceDataFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceDataFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerCredentialsMethod',
              ( ['retval', 'out'], POINTER(XlCredentialsMethod), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerCredentialsMethod',
              ( ['in'], XlCredentialsMethod, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerSSOApplicationID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerSSOApplicationID',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AlwaysUseConnectionFile',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlwaysUseConnectionFile',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IODBCConnection implementation
##class IODBCConnection_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableRefresh = property(_get, _set, doc = _set.__doc__)
##
##    def CancelRefresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerSSOApplicationID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceDataFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshOnFileOpen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceData = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RefreshDate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BackgroundQuery = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerCredentialsMethod = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Refreshing(self):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Connection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlwaysUseConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RobustConnect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshPeriod = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandType = property(_get, _set, doc = _set.__doc__)
##
##    def SaveAsODC(self, ODCFileName, Description, Keywords):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SavePassword = property(_get, _set, doc = _set.__doc__)
##

class SpellingOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024465-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlHebrewModes'
xlHebrewFullScript = 0
xlHebrewPartialScript = 1
xlHebrewMixedScript = 2
xlHebrewMixedAuthorizedScript = 3
XlHebrewModes = c_int # enum

# values for enumeration 'XlArabicModes'
xlArabicNone = 0
xlArabicStrictAlefHamza = 1
xlArabicStrictFinalYaa = 2
xlArabicBothStrict = 3
XlArabicModes = c_int # enum

# values for enumeration 'XlSpanishModes'
xlSpanishTuteoOnly = 0
xlSpanishTuteoAndVoseo = 1
xlSpanishVoseoOnly = 2
XlSpanishModes = c_int # enum

# values for enumeration 'XlPortugueseReform'
xlPortuguesePreReform = 1
xlPortuguesePostReform = 2
xlPortugueseBoth = 3
XlPortugueseReform = c_int # enum
SpellingOptions._disp_methods_ = [
    DISPMETHOD([dispid(2220), 'propget'], c_int, 'DictLang'),
    DISPMETHOD([dispid(2220), 'propput'], None, 'DictLang',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2221), 'propget'], BSTR, 'UserDict'),
    DISPMETHOD([dispid(2221), 'propput'], None, 'UserDict',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2222), 'propget'], VARIANT_BOOL, 'IgnoreCaps'),
    DISPMETHOD([dispid(2222), 'propput'], None, 'IgnoreCaps',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2223), 'propget'], VARIANT_BOOL, 'SuggestMainOnly'),
    DISPMETHOD([dispid(2223), 'propput'], None, 'SuggestMainOnly',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2224), 'propget'], VARIANT_BOOL, 'IgnoreMixedDigits'),
    DISPMETHOD([dispid(2224), 'propput'], None, 'IgnoreMixedDigits',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2225), 'propget'], VARIANT_BOOL, 'IgnoreFileNames'),
    DISPMETHOD([dispid(2225), 'propput'], None, 'IgnoreFileNames',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2226), 'propget'], VARIANT_BOOL, 'GermanPostReform'),
    DISPMETHOD([dispid(2226), 'propput'], None, 'GermanPostReform',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2227), 'propget'], VARIANT_BOOL, 'KoreanCombineAux'),
    DISPMETHOD([dispid(2227), 'propput'], None, 'KoreanCombineAux',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2228), 'propget'], VARIANT_BOOL, 'KoreanUseAutoChangeList'),
    DISPMETHOD([dispid(2228), 'propput'], None, 'KoreanUseAutoChangeList',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2229), 'propget'], VARIANT_BOOL, 'KoreanProcessCompound'),
    DISPMETHOD([dispid(2229), 'propput'], None, 'KoreanProcessCompound',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2230), 'propget'], XlHebrewModes, 'HebrewModes'),
    DISPMETHOD([dispid(2230), 'propput'], None, 'HebrewModes',
               ( ['in'], XlHebrewModes, 'rhs' )),
    DISPMETHOD([dispid(2231), 'propget'], XlArabicModes, 'ArabicModes'),
    DISPMETHOD([dispid(2231), 'propput'], None, 'ArabicModes',
               ( ['in'], XlArabicModes, 'rhs' )),
    DISPMETHOD([dispid(2932), 'propget'], VARIANT_BOOL, 'ArabicStrictAlefHamza'),
    DISPMETHOD([dispid(2932), 'propput'], None, 'ArabicStrictAlefHamza',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2933), 'propget'], VARIANT_BOOL, 'ArabicStrictFinalYaa'),
    DISPMETHOD([dispid(2933), 'propput'], None, 'ArabicStrictFinalYaa',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2934), 'propget'], VARIANT_BOOL, 'ArabicStrictTaaMarboota'),
    DISPMETHOD([dispid(2934), 'propput'], None, 'ArabicStrictTaaMarboota',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2935), 'propget'], VARIANT_BOOL, 'RussianStrictE'),
    DISPMETHOD([dispid(2935), 'propput'], None, 'RussianStrictE',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2936), 'propget'], XlSpanishModes, 'SpanishModes'),
    DISPMETHOD([dispid(2936), 'propput'], None, 'SpanishModes',
               ( ['in'], XlSpanishModes, 'rhs' )),
    DISPMETHOD([dispid(2937), 'propget'], XlPortugueseReform, 'PortugalReform'),
    DISPMETHOD([dispid(2937), 'propput'], None, 'PortugalReform',
               ( ['in'], XlPortugueseReform, 'rhs' )),
    DISPMETHOD([dispid(2938), 'propget'], XlPortugueseReform, 'BrazilReform'),
    DISPMETHOD([dispid(2938), 'propput'], None, 'BrazilReform',
               ( ['in'], XlPortugueseReform, 'rhs' )),
]

# values for enumeration 'XlCutCopyMode'
xlCopy = 1
xlCut = 2
XlCutCopyMode = c_int # enum
class IStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020852-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlOrientation'
xlDownward = -4170
xlHorizontal = -4128
xlUpward = -4171
xlVertical = -4166
XlOrientation = c_int # enum
IStyle._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaHidden',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaHidden',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(XlHAlign), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], XlHAlign, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeAlignment',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeAlignment',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeBorder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeBorder',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeFont',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeFont',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeNumber',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeNumber',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludePatterns',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludePatterns',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeProtection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeProtection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IndentLevel',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IndentLevel',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MergeCells',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MergeCells',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NameLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(XlOrientation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], XlOrientation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShrinkToFit',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShrinkToFit',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(XlVAlign), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], XlVAlign, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WrapText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WrapText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IStyle implementation
##class IStyle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeAlignment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NameLocal(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WrapText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShrinkToFit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IndentLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeBorder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeProtection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludePatterns = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Value(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeNumber = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MergeCells = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaHidden = property(_get, _set, doc = _set.__doc__)
##

class IPanes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020894-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Pane(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020895-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Pane._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(304)], VARIANT_BOOL, 'Activate'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(547)], VARIANT, 'LargeScroll',
               ( ['in', 'optional'], VARIANT, 'Down' ),
               ( ['in', 'optional'], VARIANT, 'Up' ),
               ( ['in', 'optional'], VARIANT, 'ToRight' ),
               ( ['in', 'optional'], VARIANT, 'ToLeft' )),
    DISPMETHOD([dispid(654), 'propget'], c_int, 'ScrollColumn'),
    DISPMETHOD([dispid(654), 'propput'], None, 'ScrollColumn',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(655), 'propget'], c_int, 'ScrollRow'),
    DISPMETHOD([dispid(655), 'propput'], None, 'ScrollRow',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(548)], VARIANT, 'SmallScroll',
               ( ['in', 'optional'], VARIANT, 'Down' ),
               ( ['in', 'optional'], VARIANT, 'Up' ),
               ( ['in', 'optional'], VARIANT, 'ToRight' ),
               ( ['in', 'optional'], VARIANT, 'ToLeft' )),
    DISPMETHOD([dispid(1118), 'propget'], POINTER(Range), 'VisibleRange'),
    DISPMETHOD([dispid(1781)], None, 'ScrollIntoView',
               ( ['in'], c_int, 'Left' ),
               ( ['in'], c_int, 'Top' ),
               ( ['in'], c_int, 'Width' ),
               ( ['in'], c_int, 'Height' ),
               ( ['in', 'optional'], VARIANT, 'Start' )),
    DISPMETHOD([dispid(1776)], c_int, 'PointsToScreenPixelsX',
               ( ['in'], c_int, 'Points' )),
    DISPMETHOD([dispid(1777)], c_int, 'PointsToScreenPixelsY',
               ( ['in'], c_int, 'Points' )),
]
IPanes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Pane)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Pane)), 'RHS' )),
]
################################################################
## code template for IPanes implementation
##class IPanes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class DataLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
DataLabels._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(1610743817), 'restricted', 'hidden'], None, '_Dummy9'),
    DISPMETHOD([dispid(1610743818), 'restricted', 'hidden'], None, '_Dummy10'),
    DISPMETHOD([dispid(146), 'hidden', 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy13'),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy16'),
    DISPMETHOD([dispid(1610743828), 'restricted', 'hidden'], None, '_Dummy17'),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(135), 'propget'], VARIANT_BOOL, 'AutoText'),
    DISPMETHOD([dispid(135), 'propput'], None, 'AutoText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(193), 'propget'], BSTR, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(194), 'propget'], VARIANT_BOOL, 'NumberFormatLinked'),
    DISPMETHOD([dispid(194), 'propput'], None, 'NumberFormatLinked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1097), 'propget'], VARIANT, 'NumberFormatLocal'),
    DISPMETHOD([dispid(1097), 'propput'], None, 'NumberFormatLocal',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(171), 'propget'], VARIANT_BOOL, 'ShowLegendKey'),
    DISPMETHOD([dispid(171), 'propput'], None, 'ShowLegendKey',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(108), 'hidden', 'propget'], VARIANT, 'Type'),
    DISPMETHOD([dispid(108), 'hidden', 'propput'], None, 'Type',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(133), 'propget'], XlDataLabelPosition, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], XlDataLabelPosition, 'rhs' )),
    DISPMETHOD([dispid(2022), 'propget'], VARIANT_BOOL, 'ShowSeriesName'),
    DISPMETHOD([dispid(2022), 'propput'], None, 'ShowSeriesName',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2023), 'propget'], VARIANT_BOOL, 'ShowCategoryName'),
    DISPMETHOD([dispid(2023), 'propput'], None, 'ShowCategoryName',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2024), 'propget'], VARIANT_BOOL, 'ShowValue'),
    DISPMETHOD([dispid(2024), 'propput'], None, 'ShowValue',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2025), 'propget'], VARIANT_BOOL, 'ShowPercentage'),
    DISPMETHOD([dispid(2025), 'propput'], None, 'ShowPercentage',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2026), 'propget'], VARIANT_BOOL, 'ShowBubbleSize'),
    DISPMETHOD([dispid(2026), 'propput'], None, 'ShowBubbleSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2027), 'propget'], VARIANT, 'Separator'),
    DISPMETHOD([dispid(2027), 'propput'], None, 'Separator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(DataLabel), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0)], POINTER(DataLabel), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(3087)], None, 'Propagate',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(3086), 'propget'], VARIANT_BOOL, 'ShowRange'),
    DISPMETHOD([dispid(3086), 'propput'], None, 'ShowRange',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class IRtdServer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}')
    _idlflags_ = ['dual', 'oleautomation']
class IRTDUpdateEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{A43788C1-D91B-11D3-8F39-00C04F3651B8}')
    _idlflags_ = ['dual', 'oleautomation']
IRtdServer._methods_ = [
    COMMETHOD([dispid(10)], HRESULT, 'ServerStart',
              ( ['in'], POINTER(IRTDUpdateEvent), 'CallbackObject' ),
              ( ['retval', 'out'], POINTER(c_int), 'pfRes' )),
    COMMETHOD([dispid(11)], HRESULT, 'ConnectData',
              ( ['in'], c_int, 'TopicID' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'Strings' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'GetNewValues' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvarOut' )),
    COMMETHOD([dispid(12)], HRESULT, 'RefreshData',
              ( ['in', 'out'], POINTER(c_int), 'TopicCount' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(VARIANT)), 'parrayOut' )),
    COMMETHOD([dispid(13)], HRESULT, 'DisconnectData',
              ( ['in'], c_int, 'TopicID' )),
    COMMETHOD([dispid(14)], HRESULT, 'Heartbeat',
              ( ['retval', 'out'], POINTER(c_int), 'pfRes' )),
    COMMETHOD([dispid(15)], HRESULT, 'ServerTerminate'),
]
################################################################
## code template for IRtdServer implementation
##class IRtdServer_Impl(object):
##    def ServerTerminate(self):
##        '-no docstring-'
##        #return 
##
##    def ServerStart(self, CallbackObject):
##        '-no docstring-'
##        #return pfRes
##
##    def RefreshData(self):
##        '-no docstring-'
##        #return TopicCount, parrayOut
##
##    def DisconnectData(self, TopicID):
##        '-no docstring-'
##        #return 
##
##    def Heartbeat(self):
##        '-no docstring-'
##        #return pfRes
##
##    def ConnectData(self, TopicID, Strings):
##        '-no docstring-'
##        #return GetNewValues, pvarOut
##

class Library(object):
    u'Upgrade WPS Spreadsheets 3.0 Object Library (Beta)'
    name = u'Excel'
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)

class IEditBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020884-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class EditBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020883-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
EditBox._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(922), 'propget'], VARIANT_BOOL, 'DisplayVerticalScrollBar'),
    DISPMETHOD([dispid(922), 'propput'], None, 'DisplayVerticalScrollBar',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(854), 'propget'], c_int, 'InputType'),
    DISPMETHOD([dispid(854), 'propput'], None, 'InputType',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(862), 'propget'], BSTR, 'LinkedObject'),
    DISPMETHOD([dispid(855), 'propget'], VARIANT_BOOL, 'MultiLine'),
    DISPMETHOD([dispid(855), 'propput'], None, 'MultiLine',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1162), 'propget'], VARIANT_BOOL, 'PasswordEdit'),
    DISPMETHOD([dispid(1162), 'propput'], None, 'PasswordEdit',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
IEditBoxes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InputType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InputType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy34'),
    COMMETHOD(['propget'], HRESULT, 'MultiLine',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiLine',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PasswordEdit',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PasswordEdit',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(EditBox)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IEditBoxes implementation
##class IEditBoxes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy34(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayVerticalScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InputType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PasswordEdit = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IButton(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IButton._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CancelButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CancelButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DismissButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DismissButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HelpButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HelpButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for IButton implementation
##class IButton_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultButton = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HelpButton = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DismissButton = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CancelButton = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IEXCELCtrlExtender(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FD1AEC82-85C4-4FFE-9259-E061915FEC9D}')
    _idlflags_ = ['oleautomation', 'hidden']

# values for enumeration 'XlOLEVerb'
xlVerbOpen = 2
xlVerbPrimary = 1
XlOLEVerb = c_int # enum
IEXCELCtrlExtender._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Object',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoLoad',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoLoad',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoUpdate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoUpdate',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OLEType',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Update',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Verb',
              ( ['in', 'optional'], XlOLEVerb, 'Verb', 1 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'progID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AltHTML',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AltHTML',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IEXCELCtrlExtender implementation
##class IEXCELCtrlExtender_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def Update(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    def Verb(self, Verb):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoLoad = property(_get, _set, doc = _set.__doc__)
##
##    def Activate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoUpdate = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AltHTML = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def OLEType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def progID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlLinkType'
xlLinkTypeExcelLinks = 1
xlLinkTypeOLELinks = 2
XlLinkType = c_int # enum

# values for enumeration 'XlTrendlineType'
xlExponential = 5
xlLinear = -4132
xlLogarithmic = -4133
xlMovingAvg = 6
xlPolynomial = 3
xlPower = 4
XlTrendlineType = c_int # enum
class ITrendlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BD-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Trendline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BE-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Trendline._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(185), 'hidden', 'propget'], c_int, 'Backward'),
    DISPMETHOD([dispid(185), 'hidden', 'propput'], None, 'Backward',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(158), 'propget'], POINTER(DataLabel), 'DataLabel'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(190), 'propget'], VARIANT_BOOL, 'DisplayEquation'),
    DISPMETHOD([dispid(190), 'propput'], None, 'DisplayEquation',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(189), 'propget'], VARIANT_BOOL, 'DisplayRSquared'),
    DISPMETHOD([dispid(189), 'propput'], None, 'DisplayRSquared',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(191), 'hidden', 'propget'], c_int, 'Forward'),
    DISPMETHOD([dispid(191), 'hidden', 'propput'], None, 'Forward',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(186), 'propget'], c_double, 'Intercept'),
    DISPMETHOD([dispid(186), 'propput'], None, 'Intercept',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(187), 'propget'], VARIANT_BOOL, 'InterceptIsAuto'),
    DISPMETHOD([dispid(187), 'propput'], None, 'InterceptIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(188), 'propget'], VARIANT_BOOL, 'NameIsAuto'),
    DISPMETHOD([dispid(188), 'propput'], None, 'NameIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(192), 'propget'], c_int, 'Order'),
    DISPMETHOD([dispid(192), 'propput'], None, 'Order',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(184), 'propget'], c_int, 'Period'),
    DISPMETHOD([dispid(184), 'propput'], None, 'Period',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(108), 'propget'], XlTrendlineType, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlTrendlineType, 'rhs' )),
    DISPMETHOD([dispid(2650), 'propget'], c_double, 'Backward2'),
    DISPMETHOD([dispid(2650), 'propput'], None, 'Backward2',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2651), 'propget'], c_double, 'Forward2'),
    DISPMETHOD([dispid(2651), 'propput'], None, 'Forward2',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
ITrendlines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], XlTrendlineType, 'Type', -4132 ),
              ( ['in', 'optional'], VARIANT, 'Order' ),
              ( ['in', 'optional'], VARIANT, 'Period' ),
              ( ['in', 'optional'], VARIANT, 'Forward' ),
              ( ['in', 'optional'], VARIANT, 'Backward' ),
              ( ['in', 'optional'], VARIANT, 'Intercept' ),
              ( ['in', 'optional'], VARIANT, 'DisplayEquation' ),
              ( ['in', 'optional'], VARIANT, 'DisplayRSquared' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(Trendline)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Trendline)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Trendline)), 'RHS' )),
]
################################################################
## code template for ITrendlines implementation
##class ITrendlines_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Type, Order, Period, Forward, Backward, Intercept, DisplayEquation, DisplayRSquared, Name):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ICalculatedFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024420-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICalculatedFields._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Formula' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Field' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Formula' ),
              ( ['in', 'optional'], VARIANT, 'UseStandardFormula' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
]
################################################################
## code template for ICalculatedFields implementation
##class ICalculatedFields_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Add(self, Name, Formula):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, Formula, UseStandardFormula):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Field):
##        '-no docstring-'
##        #return RHS
##

class ModelTableNameChange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelTableNameChange._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(3143), 'propget'], BSTR, 'TableNameOld'),
    DISPMETHOD([dispid(3144), 'propget'], BSTR, 'TableNameNew'),
]

# values for enumeration 'XlEditionFormat'
xlBIFF = 2
xlPICT = 1
xlRTF = 4
xlVALU = 8
XlEditionFormat = c_int # enum
class IPivotItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020877-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotItems._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IPivotItems implementation
##class IPivotItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlRowCol'
xlColumns = 2
xlRows = 1
XlRowCol = c_int # enum
class RectangularGradient(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B0-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ColorStops(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AE-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ColorStop(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AD-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ColorStop._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(99), 'propget'], VARIANT, 'Color'),
    DISPMETHOD([dispid(99), 'propput'], None, 'Color',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2365), 'propget'], c_int, 'ThemeColor'),
    DISPMETHOD([dispid(2365), 'propput'], None, 'ThemeColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2366), 'propget'], VARIANT, 'TintAndShade'),
    DISPMETHOD([dispid(2366), 'propput'], None, 'TintAndShade',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(133), 'propget'], c_double, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], c_double, 'rhs' )),
]
ColorStops._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181)], POINTER(ColorStop), 'Add',
               ( ['in'], c_double, 'Position' )),
    DISPMETHOD([dispid(170)], POINTER(ColorStop), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ColorStop), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(111)], None, 'Clear'),
]
RectangularGradient._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2761), 'propget'], POINTER(ColorStops), 'ColorStops'),
    DISPMETHOD([dispid(2762), 'propget'], c_double, 'RectangleTop'),
    DISPMETHOD([dispid(2762), 'propput'], None, 'RectangleTop',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2763), 'propget'], c_double, 'RectangleBottom'),
    DISPMETHOD([dispid(2763), 'propput'], None, 'RectangleBottom',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2764), 'propget'], c_double, 'RectangleLeft'),
    DISPMETHOD([dispid(2764), 'propput'], None, 'RectangleLeft',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2765), 'propget'], c_double, 'RectangleRight'),
    DISPMETHOD([dispid(2765), 'propput'], None, 'RectangleRight',
               ( ['in'], c_double, 'rhs' )),
]
class Labels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020891-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class Label(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020890-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Label._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743856), 'restricted', 'hidden'], None, '_Dummy33'),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
]
Labels._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743855), 'restricted', 'hidden'], None, '_Dummy33'),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(Label), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlTabPosition'
xlTabPositionFirst = 0
xlTabPositionLast = 1
XlTabPosition = c_int # enum
class IChartTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020849-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlChartElementPosition'
xlChartElementPositionAutomatic = -4105
xlChartElementPositionCustom = -4114
XlChartElementPosition = c_int # enum
IChartTitle._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeInLayout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1Local',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IChartTitle implementation
##class IChartTitle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class PlotArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CB-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PlotArea._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2654), 'hidden', 'propget'], c_double, '_InsideLeft'),
    DISPMETHOD([dispid(2655), 'hidden', 'propget'], c_double, '_InsideTop'),
    DISPMETHOD([dispid(2656), 'hidden', 'propget'], c_double, '_InsideWidth'),
    DISPMETHOD([dispid(2657), 'hidden', 'propget'], c_double, '_InsideHeight'),
    DISPMETHOD([dispid(1667), 'propget'], c_double, 'InsideLeft'),
    DISPMETHOD([dispid(1667), 'propput'], None, 'InsideLeft',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1668), 'propget'], c_double, 'InsideTop'),
    DISPMETHOD([dispid(1668), 'propput'], None, 'InsideTop',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1669), 'propget'], c_double, 'InsideWidth'),
    DISPMETHOD([dispid(1669), 'propput'], None, 'InsideWidth',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1670), 'propget'], c_double, 'InsideHeight'),
    DISPMETHOD([dispid(1670), 'propput'], None, 'InsideHeight',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(133), 'propget'], XlChartElementPosition, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], XlChartElementPosition, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class ISparkline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparkline._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Location',
              ( ['in'], POINTER(Range), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceData',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceData',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'ModifyLocation',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD([], HRESULT, 'ModifySourceData',
              ( ['in'], BSTR, 'Formula' )),
]
################################################################
## code template for ISparkline implementation
##class ISparkline_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Location(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def ModifySourceData(self, Formula):
##        '-no docstring-'
##        #return 
##
##    def ModifyLocation(self, Range):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceData = property(_get, _set, doc = _set.__doc__)
##

class ISortFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AA-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISortFields._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], POINTER(Range), 'Key' ),
              ( ['in', 'optional'], VARIANT, 'SortOn' ),
              ( ['in', 'optional'], VARIANT, 'Order' ),
              ( ['in', 'optional'], VARIANT, 'CustomOrder' ),
              ( ['in', 'optional'], VARIANT, 'DataOption' ),
              ( ['retval', 'out'], POINTER(POINTER(SortField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SortField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear'),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SortField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ISortFields implementation
##class ISortFields_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Key, SortOn, Order, CustomOrder, DataOption):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IPivotFilter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024483-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotFilter._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Order',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Order',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FilterType',
              ( ['retval', 'out'], POINTER(XlPivotFilterType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Active',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataCubeField',
              ( ['retval', 'out'], POINTER(POINTER(CubeField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value1',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value2',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MemberPropertyField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsMemberPropertyFilter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WholeDayFilter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WholeDayFilter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IPivotFilter implementation
##class IPivotFilter_Impl(object):
##    @property
##    def MemberPropertyField(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsMemberPropertyFilter(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotField(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataCubeField(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FilterType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WholeDayFilter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataField(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value1(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value2(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Order = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return RHS
##

class IScenario(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020897-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IScenario._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChangeScenario',
              ( ['in'], VARIANT, 'ChangingCells' ),
              ( ['in', 'optional'], VARIANT, 'Values' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ChangingCells',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Comment',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Comment',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Hidden',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Hidden',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Values',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IScenario implementation
##class IScenario_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Comment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChangingCells(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Show(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Values(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def ChangeScenario(self, ChangingCells, Values):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class IErrorCheckingOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IErrorCheckingOptions._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BackgroundChecking',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BackgroundChecking',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IndicatorColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IndicatorColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EvaluateToError',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EvaluateToError',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextDate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextDate',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberAsText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberAsText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InconsistentFormula',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InconsistentFormula',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OmittedCells',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OmittedCells',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UnlockedFormulaCells',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UnlockedFormulaCells',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EmptyCellReferences',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EmptyCellReferences',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListDataValidation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListDataValidation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InconsistentTableFormula',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InconsistentTableFormula',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IErrorCheckingOptions implementation
##class IErrorCheckingOptions_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberAsText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IndicatorColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EmptyCellReferences = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EvaluateToError = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextDate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InconsistentFormula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UnlockedFormulaCells = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListDataValidation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OmittedCells = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BackgroundChecking = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InconsistentTableFormula = property(_get, _set, doc = _set.__doc__)
##

class MultiThreadedCalculation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlThreadMode'
xlThreadModeAutomatic = 0
xlThreadModeManual = 1
XlThreadMode = c_int # enum
MultiThreadedCalculation._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2766), 'propget'], XlThreadMode, 'ThreadMode'),
    DISPMETHOD([dispid(2766), 'propput'], None, 'ThreadMode',
               ( ['in'], XlThreadMode, 'rhs' )),
    DISPMETHOD([dispid(2767), 'propget'], c_int, 'ThreadCount'),
    DISPMETHOD([dispid(2767), 'propput'], None, 'ThreadCount',
               ( ['in'], c_int, 'rhs' )),
]
class ChartArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CC-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ChartArea._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(111)], VARIANT, 'Clear'),
    DISPMETHOD([dispid(113)], VARIANT, 'ClearContents'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(146), 'hidden', 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class ChartTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020849-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ChartTitle._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(146), 'hidden', 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2648), 'propget'], VARIANT_BOOL, 'IncludeInLayout'),
    DISPMETHOD([dispid(2648), 'propput'], None, 'IncludeInLayout',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(133), 'propget'], XlChartElementPosition, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], XlChartElementPosition, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(264), 'propget'], BSTR, 'FormulaR1C1'),
    DISPMETHOD([dispid(264), 'propput'], None, 'FormulaR1C1',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(263), 'propget'], BSTR, 'FormulaLocal'),
    DISPMETHOD([dispid(263), 'propput'], None, 'FormulaLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(265), 'propget'], BSTR, 'FormulaR1C1Local'),
    DISPMETHOD([dispid(265), 'propput'], None, 'FormulaR1C1Local',
               ( ['in'], BSTR, 'rhs' )),
]
class Corners(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C0-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Corners._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'hidden', 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'hidden', 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235), 'hidden'], VARIANT, 'Select'),
]
class DataTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020843-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
DataTable._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(171), 'propget'], VARIANT_BOOL, 'ShowLegendKey'),
    DISPMETHOD([dispid(171), 'propput'], None, 'ShowLegendKey',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1671), 'propget'], VARIANT_BOOL, 'HasBorderHorizontal'),
    DISPMETHOD([dispid(1671), 'propput'], None, 'HasBorderHorizontal',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1672), 'propget'], VARIANT_BOOL, 'HasBorderVertical'),
    DISPMETHOD([dispid(1672), 'propput'], None, 'HasBorderVertical',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1673), 'propget'], VARIANT_BOOL, 'HasBorderOutline'),
    DISPMETHOD([dispid(1673), 'propput'], None, 'HasBorderOutline',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(235)], None, 'Select'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class Floor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C7-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Floor._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(161), 'propget'], VARIANT, 'PictureType'),
    DISPMETHOD([dispid(161), 'propput'], None, 'PictureType',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(211)], None, 'Paste'),
    DISPMETHOD([dispid(2652), 'propget'], c_int, 'Thickness'),
    DISPMETHOD([dispid(2652), 'propput'], None, 'Thickness',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class Legend(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CD-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlLegendPosition'
xlLegendPositionBottom = -4107
xlLegendPositionCorner = 2
xlLegendPositionLeft = -4131
xlLegendPositionRight = -4152
xlLegendPositionTop = -4160
xlLegendPositionCustom = -4161
XlLegendPosition = c_int # enum
Legend._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(146), 'hidden', 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(173)], POINTER(IDispatch), 'LegendEntries',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(133), 'propget'], XlLegendPosition, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], XlLegendPosition, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(111)], VARIANT, 'Clear'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2648), 'propget'], VARIANT_BOOL, 'IncludeInLayout'),
    DISPMETHOD([dispid(2648), 'propput'], None, 'IncludeInLayout',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]

# values for enumeration 'XlChartLocation'
xlLocationAsNewSheet = 1
xlLocationAsObject = 2
xlLocationAutomatic = 3
XlChartLocation = c_int # enum

# values for enumeration 'XlChartType'
xlColumnClustered = 51
xlColumnStacked = 52
xlColumnStacked100 = 53
xl3DColumnClustered = 54
xl3DColumnStacked = 55
xl3DColumnStacked100 = 56
xlBarClustered = 57
xlBarStacked = 58
xlBarStacked100 = 59
xl3DBarClustered = 60
xl3DBarStacked = 61
xl3DBarStacked100 = 62
xlLineStacked = 63
xlLineStacked100 = 64
xlLineMarkers = 65
xlLineMarkersStacked = 66
xlLineMarkersStacked100 = 67
xlPieOfPie = 68
xlPieExploded = 69
xl3DPieExploded = 70
xlBarOfPie = 71
xlXYScatterSmooth = 72
xlXYScatterSmoothNoMarkers = 73
xlXYScatterLines = 74
xlXYScatterLinesNoMarkers = 75
xlAreaStacked = 76
xlAreaStacked100 = 77
xl3DAreaStacked = 78
xl3DAreaStacked100 = 79
xlDoughnutExploded = 80
xlRadarMarkers = 81
xlRadarFilled = 82
xlSurface = 83
xlSurfaceWireframe = 84
xlSurfaceTopView = 85
xlSurfaceTopViewWireframe = 86
xlBubble = 15
xlBubble3DEffect = 87
xlStockHLC = 88
xlStockOHLC = 89
xlStockVHLC = 90
xlStockVOHLC = 91
xlCylinderColClustered = 92
xlCylinderColStacked = 93
xlCylinderColStacked100 = 94
xlCylinderBarClustered = 95
xlCylinderBarStacked = 96
xlCylinderBarStacked100 = 97
xlCylinderCol = 98
xlConeColClustered = 99
xlConeColStacked = 100
xlConeColStacked100 = 101
xlConeBarClustered = 102
xlConeBarStacked = 103
xlConeBarStacked100 = 104
xlConeCol = 105
xlPyramidColClustered = 106
xlPyramidColStacked = 107
xlPyramidColStacked100 = 108
xlPyramidBarClustered = 109
xlPyramidBarStacked = 110
xlPyramidBarStacked100 = 111
xlPyramidCol = 112
xl3DColumn = -4100
xlLine = 4
xl3DLine = -4101
xl3DPie = -4102
xlPie = 5
xlXYScatter = -4169
xl3DArea = -4098
xlArea = 1
xlDoughnut = -4120
xlRadar = -4151
XlChartType = c_int # enum
class Walls(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C8-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Walls._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(161), 'propget'], VARIANT, 'PictureType'),
    DISPMETHOD([dispid(161), 'propput'], None, 'PictureType',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(211)], None, 'Paste'),
    DISPMETHOD([dispid(162), 'propget'], VARIANT, 'PictureUnit'),
    DISPMETHOD([dispid(162), 'propput'], None, 'PictureUnit',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2652), 'propget'], c_int, 'Thickness'),
    DISPMETHOD([dispid(2652), 'propput'], None, 'Thickness',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]

# values for enumeration 'XlBarShape'
xlBox = 0
xlPyramidToPoint = 1
xlPyramidToMax = 2
xlCylinder = 3
xlConeToPoint = 4
xlConeToMax = 5
XlBarShape = c_int # enum
class PivotLayout(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002444A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotLayout._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(713), 'hidden', 'propget'], POINTER(IDispatch), 'ColumnFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(715), 'hidden', 'propget'], POINTER(IDispatch), 'DataFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(714), 'hidden', 'propget'], POINTER(IDispatch), 'PageFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(712), 'hidden', 'propget'], POINTER(IDispatch), 'RowFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(711), 'hidden', 'propget'], POINTER(IDispatch), 'HiddenFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(710), 'hidden', 'propget'], POINTER(IDispatch), 'VisibleFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(718), 'hidden', 'propget'], POINTER(IDispatch), 'PivotFields',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1839), 'hidden', 'propget'], POINTER(CubeFields), 'CubeFields'),
    DISPMETHOD([dispid(1496), 'hidden', 'propget'], POINTER(PivotCache), 'PivotCache'),
    DISPMETHOD([dispid(716), 'propget'], POINTER(PivotTable), 'PivotTable'),
    DISPMETHOD([dispid(698), 'hidden', 'propget'], BSTR, 'InnerDetail'),
    DISPMETHOD([dispid(698), 'hidden', 'propput'], None, 'InnerDetail',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(708), 'hidden'], None, 'AddFields',
               ( ['in', 'optional'], VARIANT, 'RowFields' ),
               ( ['in', 'optional'], VARIANT, 'ColumnFields' ),
               ( ['in', 'optional'], VARIANT, 'PageFields' ),
               ( ['in', 'optional'], VARIANT, 'AppendField' )),
]

# values for enumeration 'XlCategoryLabelLevel'
xlCategoryLabelLevelNone = -3
xlCategoryLabelLevelCustom = -2
xlCategoryLabelLevelAll = -1
XlCategoryLabelLevel = c_int # enum

# values for enumeration 'XlSeriesNameLevel'
xlSeriesNameLevelNone = -3
xlSeriesNameLevelCustom = -2
xlSeriesNameLevelAll = -1
XlSeriesNameLevel = c_int # enum
_Chart._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(304)], HRESULT, 'Activate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1373), 'propget'], HRESULT, 'CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(-2147418112), 'propget'], HRESULT, '_CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(-2147418112), 'propput'], HRESULT, '_CodeName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(486), 'propget'], HRESULT, 'Index',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(637)], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(502), 'propget'], HRESULT, 'Next',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(628), 'hidden', 'propget'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(628), 'hidden', 'propput'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1031), 'hidden', 'propget'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1031), 'hidden', 'propput'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propget'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propput'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(998), 'propget'], HRESULT, 'PageSetup',
              ( ['retval', 'out'], POINTER(POINTER(PageSetup)), 'RHS' )),
    COMMETHOD([dispid(503), 'propget'], HRESULT, 'Previous',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(905), 'hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(281)], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(282), 'hidden'], HRESULT, '_Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(292), 'propget'], HRESULT, 'ProtectContents',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(293), 'propget'], HRESULT, 'ProtectDrawingObjects',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1159), 'propget'], HRESULT, 'ProtectionMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(65559), 'restricted', 'hidden'], None, '_Dummy23'),
    COMMETHOD([dispid(284), 'hidden'], HRESULT, '_SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(285)], HRESULT, 'Unprotect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(558), 'propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlSheetVisibility), 'RHS' )),
    COMMETHOD([dispid(558), 'propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlSheetVisibility, 'RHS' )),
    COMMETHOD([dispid(1377), 'propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(Shapes)), 'RHS' )),
    COMMETHOD([dispid(151), 'hidden'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(760), 'hidden'], HRESULT, 'Arcs',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'Area3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(9), 'hidden'], HRESULT, 'AreaGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(114), 'hidden'], HRESULT, 'AutoFormat',
              ( ['in'], c_int, 'Gallery' ),
              ( ['in', 'optional'], VARIANT, 'Format' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'AutoScaling',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'AutoScaling',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(23)], HRESULT, 'Axes',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1188)], HRESULT, 'SetBackgroundPicture',
              ( ['in'], BSTR, 'Filename' )),
    COMMETHOD([dispid(18), 'hidden', 'propget'], HRESULT, 'Bar3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'BarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(557), 'hidden'], HRESULT, 'Buttons',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(80), 'propget'], HRESULT, 'ChartArea',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartArea)), 'RHS' )),
    COMMETHOD([dispid(8)], HRESULT, 'ChartGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1060)], HRESULT, 'ChartObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(81), 'propget'], HRESULT, 'ChartTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartTitle)), 'RHS' )),
    COMMETHOD([dispid(196)], HRESULT, 'ChartWizard',
              ( ['in', 'optional'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'Gallery' ),
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'PlotBy' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'HasLegend' ),
              ( ['in', 'optional'], VARIANT, 'Title' ),
              ( ['in', 'optional'], VARIANT, 'CategoryTitle' ),
              ( ['in', 'optional'], VARIANT, 'ValueTitle' ),
              ( ['in', 'optional'], VARIANT, 'ExtraTitle' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(824), 'hidden'], HRESULT, 'CheckBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(505)], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(19), 'hidden', 'propget'], HRESULT, 'Column3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(11), 'hidden'], HRESULT, 'ColumnGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(213)], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['in', 'optional'], XlPictureAppearance, 'Size', 2 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(79), 'hidden', 'propget'], HRESULT, 'Corners',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Corners)), 'RHS' )),
    COMMETHOD([dispid(458), 'hidden'], HRESULT, 'CreatePublisher',
              ( ['in', 'optional'], VARIANT, 'Edition' ),
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
              ( ['in', 'optional'], XlPictureAppearance, 'Size', 1 ),
              ( ['in', 'optional'], VARIANT, 'ContainsPICT' ),
              ( ['in', 'optional'], VARIANT, 'ContainsBIFF' ),
              ( ['in', 'optional'], VARIANT, 'ContainsRTF' ),
              ( ['in', 'optional'], VARIANT, 'ContainsVALU' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1395), 'propget'], HRESULT, 'DataTable',
              ( ['retval', 'out'], POINTER(POINTER(DataTable)), 'RHS' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'DepthPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(48), 'propput'], HRESULT, 'DepthPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1120), 'hidden'], HRESULT, 'Deselect',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(93), 'propget'], HRESULT, 'DisplayBlanksAs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlDisplayBlanksAs), 'RHS' )),
    COMMETHOD([dispid(93), 'propput'], HRESULT, 'DisplayBlanksAs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlDisplayBlanksAs, 'RHS' )),
    COMMETHOD([dispid(14), 'hidden'], HRESULT, 'DoughnutGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(772), 'hidden'], HRESULT, 'Drawings',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(88), 'hidden'], HRESULT, 'DrawingObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(836), 'hidden'], HRESULT, 'DropDowns',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(49), 'propget'], HRESULT, 'Elevation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(49), 'propput'], HRESULT, 'Elevation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1)], HRESULT, 'Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(-5)], HRESULT, '_Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(83), 'propget'], HRESULT, 'Floor',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Floor)), 'RHS' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'GapDepth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(50), 'propput'], HRESULT, 'GapDepth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(834), 'hidden'], HRESULT, 'GroupBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1113), 'hidden'], HRESULT, 'GroupObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(52), 'propput'], HRESULT, 'HasAxis',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(1396), 'propget'], HRESULT, 'HasDataTable',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1396), 'propput'], HRESULT, 'HasDataTable',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'HasLegend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(53), 'propput'], HRESULT, 'HasLegend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(54), 'propget'], HRESULT, 'HasTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(54), 'propput'], HRESULT, 'HasTitle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'HeightPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(55), 'propput'], HRESULT, 'HeightPercent',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1393), 'propget'], HRESULT, 'Hyperlinks',
              ( ['retval', 'out'], POINTER(POINTER(Hyperlinks)), 'RHS' )),
    COMMETHOD([dispid(841), 'hidden'], HRESULT, 'Labels',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(84), 'propget'], HRESULT, 'Legend',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Legend)), 'RHS' )),
    COMMETHOD([dispid(20), 'hidden', 'propget'], HRESULT, 'Line3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(12), 'hidden'], HRESULT, 'LineGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(767), 'hidden'], HRESULT, 'Lines',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(832), 'hidden'], HRESULT, 'ListBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1397)], HRESULT, 'Location',
              ( ['in'], XlChartLocation, 'Where' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD([dispid(799)], HRESULT, 'OLEObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(826), 'hidden'], HRESULT, 'OptionButtons',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(801), 'hidden'], HRESULT, 'Ovals',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(211)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'Perspective',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(57), 'propput'], HRESULT, 'Perspective',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(771), 'hidden'], HRESULT, 'Pictures',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(21), 'hidden', 'propget'], HRESULT, 'Pie3DGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(13), 'hidden'], HRESULT, 'PieGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(85), 'propget'], HRESULT, 'PlotArea',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(PlotArea)), 'RHS' )),
    COMMETHOD([dispid(92), 'propget'], HRESULT, 'PlotVisibleOnly',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(92), 'propput'], HRESULT, 'PlotVisibleOnly',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(15), 'hidden'], HRESULT, 'RadarGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(774), 'hidden'], HRESULT, 'Rectangles',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'RightAngleAxes',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(58), 'propput'], HRESULT, 'RightAngleAxes',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'Rotation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(59), 'propput'], HRESULT, 'Rotation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(830), 'hidden'], HRESULT, 'ScrollBars',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(68)], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(94), 'hidden', 'propget'], HRESULT, 'SizeWithWindow',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(94), 'hidden', 'propput'], HRESULT, 'SizeWithWindow',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1399), 'hidden', 'propget'], HRESULT, 'ShowWindow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1399), 'hidden', 'propput'], HRESULT, 'ShowWindow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(838), 'hidden'], HRESULT, 'Spinners',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(109), 'hidden', 'propget'], HRESULT, 'SubType',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(109), 'hidden', 'propput'], HRESULT, 'SubType',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(22), 'hidden', 'propget'], HRESULT, 'SurfaceGroup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([dispid(777), 'hidden'], HRESULT, 'TextBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propget'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(108), 'hidden', 'propput'], HRESULT, 'Type',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1400), 'propget'], HRESULT, 'ChartType',
              ( ['retval', 'out'], POINTER(XlChartType), 'RHS' )),
    COMMETHOD([dispid(1400), 'propput'], HRESULT, 'ChartType',
              ( ['in'], XlChartType, 'RHS' )),
    COMMETHOD([dispid(1401), 'hidden'], HRESULT, 'ApplyCustomType',
              ( ['in'], XlChartType, 'ChartType' ),
              ( ['in', 'optional'], VARIANT, 'TypeName' )),
    COMMETHOD([dispid(86), 'propget'], HRESULT, 'Walls',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Walls)), 'RHS' )),
    COMMETHOD([dispid(210), 'hidden', 'propget'], HRESULT, 'WallsAndGridlines2D',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(210), 'hidden', 'propput'], HRESULT, 'WallsAndGridlines2D',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'XYGroups',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1403), 'propget'], HRESULT, 'BarShape',
              ( ['retval', 'out'], POINTER(XlBarShape), 'RHS' )),
    COMMETHOD([dispid(1403), 'propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'RHS' )),
    COMMETHOD([dispid(202), 'propget'], HRESULT, 'PlotBy',
              ( ['retval', 'out'], POINTER(XlRowCol), 'RHS' )),
    COMMETHOD([dispid(202), 'propput'], HRESULT, 'PlotBy',
              ( ['in'], XlRowCol, 'RHS' )),
    COMMETHOD([dispid(1404), 'hidden'], HRESULT, 'CopyChartBuild'),
    COMMETHOD([dispid(1405), 'propget'], HRESULT, 'ProtectFormatting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1405), 'propput'], HRESULT, 'ProtectFormatting',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1406), 'propget'], HRESULT, 'ProtectData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1406), 'propput'], HRESULT, 'ProtectData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1407), 'hidden', 'propget'], HRESULT, 'ProtectGoalSeek',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1407), 'hidden', 'propput'], HRESULT, 'ProtectGoalSeek',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1408), 'propget'], HRESULT, 'ProtectSelection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1408), 'propput'], HRESULT, 'ProtectSelection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1409)], HRESULT, 'GetChartElement',
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' ),
              ( ['in'], POINTER(c_int), 'ElementID' ),
              ( ['in'], POINTER(c_int), 'Arg1' ),
              ( ['in'], POINTER(c_int), 'Arg2' )),
    COMMETHOD([dispid(1413)], HRESULT, 'SetSourceData',
              ( ['in'], POINTER(Range), 'Source' ),
              ( ['in', 'optional'], VARIANT, 'PlotBy' )),
    COMMETHOD([dispid(1414)], HRESULT, 'Export',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FilterName' ),
              ( ['in', 'optional'], VARIANT, 'Interactive' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1417)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(1814), 'propget'], HRESULT, 'PivotLayout',
              ( ['retval', 'out'], POINTER(POINTER(PivotLayout)), 'RHS' )),
    COMMETHOD([dispid(1815), 'hidden', 'propget'], HRESULT, 'HasPivotFields',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1815), 'hidden', 'propput'], HRESULT, 'HasPivotFields',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1816), 'hidden', 'propget'], HRESULT, 'Scripts',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Scripts)), 'RHS' )),
    COMMETHOD([dispid(1772), 'hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1041), 'propget'], HRESULT, 'Tab',
              ( ['retval', 'out'], POINTER(POINTER(Tab)), 'RHS' )),
    COMMETHOD([dispid(2021), 'propget'], HRESULT, 'MailEnvelope',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEnvelope)), 'RHS' )),
    COMMETHOD([dispid(1922)], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1925)], HRESULT, 'SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'optional'], VARIANT, 'Local' )),
    COMMETHOD([dispid(2029)], HRESULT, 'Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' )),
    COMMETHOD([dispid(2500)], HRESULT, 'ApplyLayout',
              ( ['in'], c_int, 'Layout' ),
              ( ['in', 'optional'], VARIANT, 'ChartType' )),
    COMMETHOD([dispid(2502)], HRESULT, 'SetElement',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoChartElementType, 'Element' )),
    COMMETHOD([dispid(2504), 'propget'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2504), 'propput'], HRESULT, 'ShowDataLabelsOverMaximum',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2505), 'propget'], HRESULT, 'SideWall',
              ( ['retval', 'out'], POINTER(POINTER(Walls)), 'RHS' )),
    COMMETHOD([dispid(2506), 'propget'], HRESULT, 'BackWall',
              ( ['retval', 'out'], POINTER(POINTER(Walls)), 'RHS' )),
    COMMETHOD([dispid(2361)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2507)], HRESULT, 'ApplyChartTemplate',
              ( ['in'], BSTR, 'Filename' )),
    COMMETHOD([dispid(2508)], HRESULT, 'SaveChartTemplate',
              ( ['in'], BSTR, 'Filename' )),
    COMMETHOD([dispid(219)], HRESULT, 'SetDefaultChart',
              ( ['in'], VARIANT, 'Name' )),
    COMMETHOD([dispid(2493)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], XlFixedFormatType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Quality' ),
              ( ['in', 'optional'], VARIANT, 'IncludeDocProperties' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'OpenAfterPublish' ),
              ( ['in', 'optional'], VARIANT, 'FixedFormatExtClassPtr' )),
    COMMETHOD([dispid(2509), 'propget'], HRESULT, 'ChartStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2509), 'propput'], HRESULT, 'ChartStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2510)], HRESULT, 'ClearToMatchStyle'),
    COMMETHOD([dispid(2857), 'propget'], HRESULT, 'PrintedCommentPages',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2858), 'hidden', 'propget'], HRESULT, 'Dummy24',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2858), 'hidden', 'propput'], HRESULT, 'Dummy24',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2859), 'hidden', 'propget'], HRESULT, 'Dummy25',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2859), 'hidden', 'propput'], HRESULT, 'Dummy25',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2860), 'propget'], HRESULT, 'ShowReportFilterFieldButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2860), 'propput'], HRESULT, 'ShowReportFilterFieldButtons',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2861), 'propget'], HRESULT, 'ShowLegendFieldButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2861), 'propput'], HRESULT, 'ShowLegendFieldButtons',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2862), 'propget'], HRESULT, 'ShowAxisFieldButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2862), 'propput'], HRESULT, 'ShowAxisFieldButtons',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2863), 'propget'], HRESULT, 'ShowValueFieldButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2863), 'propput'], HRESULT, 'ShowValueFieldButtons',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2864), 'propget'], HRESULT, 'ShowAllFieldButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2864), 'propput'], HRESULT, 'ShowAllFieldButtons',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(3047)], HRESULT, 'FullSeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(3048), 'propget'], HRESULT, 'CategoryLabelLevel',
              ( ['retval', 'out'], POINTER(XlCategoryLabelLevel), 'RHS' )),
    COMMETHOD([dispid(3048), 'propput'], HRESULT, 'CategoryLabelLevel',
              ( ['in'], XlCategoryLabelLevel, 'RHS' )),
    COMMETHOD([dispid(3049), 'propget'], HRESULT, 'SeriesNameLevel',
              ( ['retval', 'out'], POINTER(XlSeriesNameLevel), 'RHS' )),
    COMMETHOD([dispid(3049), 'propput'], HRESULT, 'SeriesNameLevel',
              ( ['in'], XlSeriesNameLevel, 'RHS' )),
    COMMETHOD([dispid(3050), 'hidden', 'propget'], HRESULT, 'HasHiddenContent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(3051), 'hidden'], HRESULT, 'DeleteHiddenContent'),
    COMMETHOD([dispid(3052), 'propget'], HRESULT, 'ChartColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(3052), 'propput'], HRESULT, 'ChartColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(3053)], HRESULT, 'ClearToMatchColorStyle'),
    COMMETHOD([dispid(5316623), 'hidden'], HRESULT, 'ExportToPNG',
              ( ['in'], VARIANT, 'FilePath' )),
]
################################################################
## code template for _Chart implementation
##class _Chart_Impl(object):
##    def DrawingObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Column3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ClearToMatchStyle(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    AutoScaling = property(_get, _set, doc = _set.__doc__)
##
##    def Buttons(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ProtectSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HasLegend = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChartArea(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAxisFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayBlanksAs = property(_get, _set, doc = _set.__doc__)
##
##    def AreaGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Area3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ClearToMatchColorStyle(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProtectContents(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyLayout(self, Layout, ChartType):
##        '-no docstring-'
##        #return 
##
##    def Pictures(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Legend(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ScrollBars(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    def SetBackgroundPicture(self, Filename):
##        '-no docstring-'
##        #return 
##
##    def SaveChartTemplate(self, Filename):
##        '-no docstring-'
##        #return 
##
##    def SetElement(self, Element):
##        '-no docstring-'
##        #return 
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def DoughnutGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetDeactivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAllFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    WallsAndGridlines2D = property(_get, _set, doc = _set.__doc__)
##
##    def Labels(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ChartTitle(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tab(self):
##        '-no docstring-'
##        #return RHS
##
##    def TextBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Index(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator, lcid):
##        '-no docstring-'
##        #return 
##
##    def GroupBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return RHS
##
##    def Location(self, Where, Name):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PlotBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowWindow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def ChartObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Pie3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def CreatePublisher(self, Edition, Appearance, Size, ContainsPICT, ContainsBIFF, ContainsRTF, ContainsVALU, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    SubType = property(_get, _set, doc = _set.__doc__)
##
##    def SeriesCollection(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    def ChartWizard(self, Source, Gallery, Format, PlotBy, CategoryLabels, SeriesLabels, HasLegend, Title, CategoryTitle, ValueTitle, ExtraTitle, lcid):
##        '-no docstring-'
##        #return 
##
##    def Drawings(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format, Size, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PrintedCommentPages(self):
##        '-no docstring-'
##        #return RHS
##
##    def Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SeriesNameLevel = property(_get, _set, doc = _set.__doc__)
##
##    def PieGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return RHS
##
##    def OptionButtons(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def LineGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GroupObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    GapDepth = property(_get, _set, doc = _set.__doc__)
##
##    def SetSourceData(self, Source, PlotBy):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def FullSeriesCollection(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout, Local):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasHiddenContent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy23(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PlotArea(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProtectionMode(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SurfaceGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Deselect(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def Ovals(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnDoubleClick = property(_get, _set, doc = _set.__doc__)
##
##    def Axes(self, Type, AxisGroup, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def BarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ProtectGoalSeek = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasPivotFields = property(_get, _set, doc = _set.__doc__)
##
##    def OLEObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ExportToPNG(self, FilePath):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Elevation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MailEnvelope(self):
##        '-no docstring-'
##        #return RHS
##
##    def Arcs(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GetChartElement(self, x, y, ElementID, Arg1, Arg2):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Walls(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HeightPercent = property(_get, _set, doc = _set.__doc__)
##
##    def RadarGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SideWall(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotLayout(self):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyChartTemplate(self, Filename):
##        '-no docstring-'
##        #return 
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Corners(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    RightAngleAxes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DepthPercent = property(_get, _set, doc = _set.__doc__)
##
##    def _SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowReportFilterFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataTable(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartColor = property(_get, _set, doc = _set.__doc__)
##
##    def _ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Line3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ListBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def DeleteHiddenContent(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Bar3DGroup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ProtectData = property(_get, _set, doc = _set.__doc__)
##
##    def Unprotect(self, Password, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    def DropDowns(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Rectangles(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Spinners(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ChartGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Floor(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ProtectFormatting = property(_get, _set, doc = _set.__doc__)
##
##    def CopyChartBuild(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProtectDrawingObjects(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    SizeWithWindow = property(_get, _set, doc = _set.__doc__)
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BackWall(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetDefaultChart(self, Name):
##        '-no docstring-'
##        #return 
##
##    def _get(self, Index1, Index2, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index1, Index2, lcid, RHS):
##        '-no docstring-'
##    HasAxis = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return RHS
##
##    def Export(self, Filename, FilterName, Interactive):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CodeName(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def Paste(self, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataTable = property(_get, _set, doc = _set.__doc__)
##
##    def XYGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Dummy25 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Dummy24 = property(_get, _set, doc = _set.__doc__)
##
##    def Lines(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyCustomType(self, ChartType, TypeName):
##        '-no docstring-'
##        #return 
##
##    def AutoFormat(self, Gallery, Format):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValueFieldButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    PlotVisibleOnly = property(_get, _set, doc = _set.__doc__)
##
##    def ColumnGroups(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Activate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat(self, Type, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From, To, OpenAfterPublish, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    def CheckBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CategoryLabelLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowDataLabelsOverMaximum = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetActivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _CodeName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PageSetup(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlChartItem'
xlDataLabel = 0
xlChartArea = 2
xlSeries = 3
xlChartTitle = 4
xlWalls = 5
xlCorners = 6
xlDataTable = 7
xlTrendline = 8
xlErrorBars = 9
xlXErrorBars = 10
xlYErrorBars = 11
xlLegendEntry = 12
xlLegendKey = 13
xlShape = 14
xlMajorGridlines = 15
xlMinorGridlines = 16
xlAxisTitle = 17
xlUpBars = 18
xlPlotArea = 19
xlDownBars = 20
xlAxis = 21
xlSeriesLines = 22
xlFloor = 23
xlLegend = 24
xlHiLoLines = 25
xlDropLines = 26
xlRadarAxisLabels = 27
xlNothing = 28
xlLeaderLines = 29
xlDisplayUnitLabel = 30
xlPivotChartFieldButton = 31
xlPivotChartDropZone = 32
XlChartItem = c_int # enum
class PivotTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020873-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotTables._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(PivotTable), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181)], POINTER(PivotTable), 'Add',
               ( ['in'], POINTER(PivotCache), 'PivotCache' ),
               ( ['in'], VARIANT, 'TableDestination' ),
               ( ['in', 'optional'], VARIANT, 'TableName' ),
               ( ['in', 'optional'], VARIANT, 'ReadData' ),
               ( ['in', 'optional'], VARIANT, 'DefaultVersion' )),
]
class ChartObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CF-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ChartObject._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(2609), 'hidden'], VARIANT, '_Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'hidden', 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'hidden', 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(304)], VARIANT, 'Activate'),
    DISPMETHOD([dispid(7), 'propget'], POINTER(Chart), 'Chart'),
    DISPMETHOD([dispid(1529), 'propget'], VARIANT_BOOL, 'ProtectChartObject'),
    DISPMETHOD([dispid(1529), 'propput'], None, 'ProtectChartObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
]
class IGridlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IGridlines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IGridlines implementation
##class IGridlines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlOLEType'
xlOLEControl = 2
xlOLEEmbed = 1
xlOLELink = 0
XlOLEType = c_int # enum

# values for enumeration 'XlInsertFormatOrigin'
xlFormatFromLeftOrAbove = 0
xlFormatFromRightOrBelow = 1
XlInsertFormatOrigin = c_int # enum
class IDialogs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020879-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlBuiltInDialog'
xlDialogOpen = 1
xlDialogOpenLinks = 2
xlDialogSaveAs = 5
xlDialogFileDelete = 6
xlDialogPageSetup = 7
xlDialogPrint = 8
xlDialogPrinterSetup = 9
xlDialogArrangeAll = 12
xlDialogWindowSize = 13
xlDialogWindowMove = 14
xlDialogRun = 17
xlDialogSetPrintTitles = 23
xlDialogFont = 26
xlDialogDisplay = 27
xlDialogProtectDocument = 28
xlDialogCalculation = 32
xlDialogExtract = 35
xlDialogDataDelete = 36
xlDialogSort = 39
xlDialogDataSeries = 40
xlDialogTable = 41
xlDialogFormatNumber = 42
xlDialogAlignment = 43
xlDialogStyle = 44
xlDialogBorder = 45
xlDialogCellProtection = 46
xlDialogColumnWidth = 47
xlDialogClear = 52
xlDialogPasteSpecial = 53
xlDialogEditDelete = 54
xlDialogInsert = 55
xlDialogPasteNames = 58
xlDialogDefineName = 61
xlDialogCreateNames = 62
xlDialogFormulaGoto = 63
xlDialogFormulaFind = 64
xlDialogGalleryArea = 67
xlDialogGalleryBar = 68
xlDialogGalleryColumn = 69
xlDialogGalleryLine = 70
xlDialogGalleryPie = 71
xlDialogGalleryScatter = 72
xlDialogCombination = 73
xlDialogGridlines = 76
xlDialogAxes = 78
xlDialogAttachText = 80
xlDialogPatterns = 84
xlDialogMainChart = 85
xlDialogOverlay = 86
xlDialogScale = 87
xlDialogFormatLegend = 88
xlDialogFormatText = 89
xlDialogParse = 91
xlDialogUnhide = 94
xlDialogWorkspace = 95
xlDialogActivate = 103
xlDialogCopyPicture = 108
xlDialogDeleteName = 110
xlDialogDeleteFormat = 111
xlDialogNew = 119
xlDialogRowHeight = 127
xlDialogFormatMove = 128
xlDialogFormatSize = 129
xlDialogFormulaReplace = 130
xlDialogSelectSpecial = 132
xlDialogApplyNames = 133
xlDialogReplaceFont = 134
xlDialogSplit = 137
xlDialogOutline = 142
xlDialogSaveWorkbook = 145
xlDialogCopyChart = 147
xlDialogFormatFont = 150
xlDialogNote = 154
xlDialogSetUpdateStatus = 159
xlDialogColorPalette = 161
xlDialogChangeLink = 166
xlDialogAppMove = 170
xlDialogAppSize = 171
xlDialogMainChartType = 185
xlDialogOverlayChartType = 186
xlDialogOpenMail = 188
xlDialogSendMail = 189
xlDialogStandardFont = 190
xlDialogConsolidate = 191
xlDialogSortSpecial = 192
xlDialogGallery3dArea = 193
xlDialogGallery3dColumn = 194
xlDialogGallery3dLine = 195
xlDialogGallery3dPie = 196
xlDialogView3d = 197
xlDialogGoalSeek = 198
xlDialogWorkgroup = 199
xlDialogFillGroup = 200
xlDialogUpdateLink = 201
xlDialogPromote = 202
xlDialogDemote = 203
xlDialogShowDetail = 204
xlDialogObjectProperties = 207
xlDialogSaveNewObject = 208
xlDialogApplyStyle = 212
xlDialogAssignToObject = 213
xlDialogObjectProtection = 214
xlDialogCreatePublisher = 217
xlDialogSubscribeTo = 218
xlDialogShowToolbar = 220
xlDialogPrintPreview = 222
xlDialogEditColor = 223
xlDialogFormatMain = 225
xlDialogFormatOverlay = 226
xlDialogEditSeries = 228
xlDialogDefineStyle = 229
xlDialogGalleryRadar = 249
xlDialogEditionOptions = 251
xlDialogZoom = 256
xlDialogInsertObject = 259
xlDialogSize = 261
xlDialogMove = 262
xlDialogFormatAuto = 269
xlDialogGallery3dBar = 272
xlDialogGallery3dSurface = 273
xlDialogCustomizeToolbar = 276
xlDialogWorkbookAdd = 281
xlDialogWorkbookMove = 282
xlDialogWorkbookCopy = 283
xlDialogWorkbookOptions = 284
xlDialogSaveWorkspace = 285
xlDialogChartWizard = 288
xlDialogAssignToTool = 293
xlDialogPlacement = 300
xlDialogFillWorkgroup = 301
xlDialogWorkbookNew = 302
xlDialogScenarioCells = 305
xlDialogScenarioAdd = 307
xlDialogScenarioEdit = 308
xlDialogScenarioSummary = 311
xlDialogPivotTableWizard = 312
xlDialogPivotFieldProperties = 313
xlDialogOptionsCalculation = 318
xlDialogOptionsEdit = 319
xlDialogOptionsView = 320
xlDialogAddinManager = 321
xlDialogMenuEditor = 322
xlDialogAttachToolbars = 323
xlDialogOptionsChart = 325
xlDialogVbaInsertFile = 328
xlDialogVbaProcedureDefinition = 330
xlDialogRoutingSlip = 336
xlDialogMailLogon = 339
xlDialogInsertPicture = 342
xlDialogGalleryDoughnut = 344
xlDialogChartTrend = 350
xlDialogWorkbookInsert = 354
xlDialogOptionsTransition = 355
xlDialogOptionsGeneral = 356
xlDialogFilterAdvanced = 370
xlDialogMailNextLetter = 378
xlDialogDataLabel = 379
xlDialogInsertTitle = 380
xlDialogFontProperties = 381
xlDialogMacroOptions = 382
xlDialogWorkbookUnhide = 384
xlDialogWorkbookName = 386
xlDialogGalleryCustom = 388
xlDialogAddChartAutoformat = 390
xlDialogChartAddData = 392
xlDialogTabOrder = 394
xlDialogSubtotalCreate = 398
xlDialogWorkbookTabSplit = 415
xlDialogWorkbookProtect = 417
xlDialogScrollbarProperties = 420
xlDialogPivotShowPages = 421
xlDialogTextToColumns = 422
xlDialogFormatCharttype = 423
xlDialogPivotFieldGroup = 433
xlDialogPivotFieldUngroup = 434
xlDialogCheckboxProperties = 435
xlDialogLabelProperties = 436
xlDialogListboxProperties = 437
xlDialogEditboxProperties = 438
xlDialogOpenText = 441
xlDialogPushbuttonProperties = 445
xlDialogFilter = 447
xlDialogFunctionWizard = 450
xlDialogSaveCopyAs = 456
xlDialogOptionsListsAdd = 458
xlDialogSeriesAxes = 460
xlDialogSeriesX = 461
xlDialogSeriesY = 462
xlDialogErrorbarX = 463
xlDialogErrorbarY = 464
xlDialogFormatChart = 465
xlDialogSeriesOrder = 466
xlDialogMailEditMailer = 470
xlDialogStandardWidth = 472
xlDialogScenarioMerge = 473
xlDialogProperties = 474
xlDialogSummaryInfo = 474
xlDialogFindFile = 475
xlDialogActiveCellFont = 476
xlDialogVbaMakeAddin = 478
xlDialogFileSharing = 481
xlDialogAutoCorrect = 485
xlDialogCustomViews = 493
xlDialogInsertNameLabel = 496
xlDialogSeriesShape = 504
xlDialogChartOptionsDataLabels = 505
xlDialogChartOptionsDataTable = 506
xlDialogSetBackgroundPicture = 509
xlDialogDataValidation = 525
xlDialogChartType = 526
xlDialogChartLocation = 527
_xlDialogPhonetic = 538
xlDialogChartSourceData = 540
_xlDialogChartSourceData = 541
xlDialogSeriesOptions = 557
xlDialogPivotTableOptions = 567
xlDialogPivotSolveOrder = 568
xlDialogPivotCalculatedField = 570
xlDialogPivotCalculatedItem = 572
xlDialogConditionalFormatting = 583
xlDialogInsertHyperlink = 596
xlDialogProtectSharing = 620
xlDialogOptionsME = 647
xlDialogPublishAsWebPage = 653
xlDialogPhonetic = 656
xlDialogNewWebQuery = 667
xlDialogImportTextFile = 666
xlDialogExternalDataProperties = 530
xlDialogWebOptionsGeneral = 683
xlDialogWebOptionsFiles = 684
xlDialogWebOptionsPictures = 685
xlDialogWebOptionsEncoding = 686
xlDialogWebOptionsFonts = 687
xlDialogPivotClientServerSet = 689
xlDialogPropertyFields = 754
xlDialogSearch = 731
xlDialogEvaluateFormula = 709
xlDialogDataLabelMultiple = 723
xlDialogChartOptionsDataLabelMultiple = 724
xlDialogErrorChecking = 732
xlDialogWebOptionsBrowsers = 773
xlDialogCreateList = 796
xlDialogPermission = 832
xlDialogMyPermission = 834
xlDialogDocumentInspector = 862
xlDialogNameManager = 977
xlDialogNewName = 978
xlDialogSparklineInsertLine = 1133
xlDialogSparklineInsertColumn = 1134
xlDialogSparklineInsertWinLoss = 1135
xlDialogSlicerSettings = 1179
xlDialogSlicerCreation = 1182
xlDialogSlicerPivotTableConnections = 1184
xlDialogPivotTableSlicerConnections = 1183
xlDialogPivotTableWhatIfAnalysisSettings = 1153
xlDialogSetManager = 1109
xlDialogSetMDXEditor = 1208
xlDialogSetTupleEditorOnRows = 1107
xlDialogSetTupleEditorOnColumns = 1108
xlDialogManageRelationships = 1271
xlDialogCreateRelationship = 1272
xlDialogRecommendedPivotTables = 1258
XlBuiltInDialog = c_int # enum
class Dialog(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Dialog._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(496)], VARIANT_BOOL, 'Show',
               ( ['in', 'optional'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
]
IDialogs._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], XlBuiltInDialog, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Dialog)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], XlBuiltInDialog, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Dialog)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IDialogs implementation
##class IDialogs_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IPivotLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024481-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotLines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotLine)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotLine)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IPivotLines implementation
##class IPivotLines_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IHPageBreak(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024401-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IHPageBreak._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(Worksheet)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'DragOff',
              ( ['in'], XlDirection, 'Direction' ),
              ( ['in'], c_int, 'RegionIndex' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlPageBreak), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlPageBreak, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Extent',
              ( ['retval', 'out'], POINTER(XlPageBreakExtent), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Location',
              ( ['in'], POINTER(Range), 'RHS' )),
]
################################################################
## code template for IHPageBreak implementation
##class IHPageBreak_Impl(object):
##    def DragOff(self, Direction, RegionIndex):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Location(self, RHS):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Extent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlLink'
xlExcelLinks = 1
xlOLELinks = 2
xlPublishers = 5
xlSubscribers = 6
XlLink = c_int # enum
class IOLEDBError(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024445-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOLEDBError._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SqlState',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ErrorString',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Native',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Number',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Stage',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IOLEDBError implementation
##class IOLEDBError_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ErrorString(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Number(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SqlState(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Stage(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Native(self):
##        '-no docstring-'
##        #return RHS
##

class ODBCErrors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ODBCError(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ODBCError._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1603), 'propget'], BSTR, 'SqlState'),
    DISPMETHOD([dispid(1490), 'propget'], BSTR, 'ErrorString'),
]
ODBCErrors._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ODBCError), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ODBCError), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class ISpellingOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024465-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISpellingOptions._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'DictLang',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DictLang',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UserDict',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UserDict',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IgnoreCaps',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IgnoreCaps',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SuggestMainOnly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SuggestMainOnly',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IgnoreMixedDigits',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IgnoreMixedDigits',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IgnoreFileNames',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IgnoreFileNames',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GermanPostReform',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'GermanPostReform',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'KoreanCombineAux',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'KoreanCombineAux',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'KoreanUseAutoChangeList',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'KoreanUseAutoChangeList',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'KoreanProcessCompound',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'KoreanProcessCompound',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HebrewModes',
              ( ['retval', 'out'], POINTER(XlHebrewModes), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HebrewModes',
              ( ['in'], XlHebrewModes, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArabicModes',
              ( ['retval', 'out'], POINTER(XlArabicModes), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArabicModes',
              ( ['in'], XlArabicModes, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArabicStrictAlefHamza',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArabicStrictAlefHamza',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArabicStrictFinalYaa',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArabicStrictFinalYaa',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArabicStrictTaaMarboota',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArabicStrictTaaMarboota',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RussianStrictE',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RussianStrictE',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SpanishModes',
              ( ['retval', 'out'], POINTER(XlSpanishModes), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SpanishModes',
              ( ['in'], XlSpanishModes, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PortugalReform',
              ( ['retval', 'out'], POINTER(XlPortugueseReform), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PortugalReform',
              ( ['in'], XlPortugueseReform, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BrazilReform',
              ( ['retval', 'out'], POINTER(XlPortugueseReform), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BrazilReform',
              ( ['in'], XlPortugueseReform, 'RHS' )),
]
################################################################
## code template for ISpellingOptions implementation
##class ISpellingOptions_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArabicStrictFinalYaa = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PortugalReform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IgnoreFileNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HebrewModes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GermanPostReform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArabicStrictAlefHamza = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UserDict = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    KoreanUseAutoChangeList = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IgnoreMixedDigits = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArabicModes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SuggestMainOnly = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RussianStrictE = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    KoreanCombineAux = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    KoreanProcessCompound = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BrazilReform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SpanishModes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IgnoreCaps = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DictLang = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArabicStrictTaaMarboota = property(_get, _set, doc = _set.__doc__)
##

class RecentFiles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024406-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class RecentFile(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024407-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Workbook(CoClass):
    _reg_clsid_ = GUID('{00020819-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
class _Workbook(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208DA-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
class WorkbookEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024412-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Workbook._com_interfaces_ = [_Workbook]
Workbook._outgoing_interfaces_ = [WorkbookEvents]

RecentFile._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(291), 'propget'], BSTR, 'Path'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(1923)], POINTER(Workbook), 'Open'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
RecentFiles._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1423), 'propget'], c_int, 'Maximum'),
    DISPMETHOD([dispid(1423), 'propput'], None, 'Maximum',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(RecentFile), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(RecentFile), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(181)], POINTER(RecentFile), 'Add',
               ( ['in'], BSTR, 'Name' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class ChartObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D0-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ChartObjects._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602), 'hidden'], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(2609), 'hidden'], VARIANT, '_Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'hidden', 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'hidden', 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605), 'hidden'], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743843), 'restricted', 'hidden'], None, '_Dummy25'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1610743845), 'restricted', 'hidden'], None, '_Dummy27'),
    DISPMETHOD([dispid(1610743846), 'restricted', 'hidden'], None, '_Dummy28'),
    DISPMETHOD([dispid(1529), 'propget'], VARIANT_BOOL, 'ProtectChartObject'),
    DISPMETHOD([dispid(1529), 'propput'], None, 'ProtectChartObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(619), 'hidden', 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'hidden', 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'hidden', 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'hidden', 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(181)], POINTER(ChartObject), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46), 'hidden'], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0)], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class IChartObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartObjects._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD(['hidden'], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy25'),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy27'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy28'),
    COMMETHOD(['propget'], HRESULT, 'ProtectChartObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ProtectChartObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(ChartObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IChartObjects implementation
##class IChartObjects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy28(self):
##        '-no docstring-'
##        #return 
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ProtectChartObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy27(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy25(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IPivotItemList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024468-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotItemList._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Field' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IPivotItemList implementation
##class IPivotItemList_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Field):
##        '-no docstring-'
##        #return RHS
##

class IOLEDBErrors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024446-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class OLEDBError(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024445-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
OLEDBError._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1603), 'propget'], BSTR, 'SqlState'),
    DISPMETHOD([dispid(1490), 'propget'], BSTR, 'ErrorString'),
    DISPMETHOD([dispid(1897), 'propget'], c_int, 'Native'),
    DISPMETHOD([dispid(451), 'propget'], c_int, 'Number'),
    DISPMETHOD([dispid(1898), 'propget'], c_int, 'Stage'),
]
IOLEDBErrors._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(OLEDBError)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(OLEDBError)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IOLEDBErrors implementation
##class IOLEDBErrors_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlTickMark'
xlTickMarkCross = 4
xlTickMarkInside = 2
xlTickMarkNone = -4142
xlTickMarkOutside = 3
XlTickMark = c_int # enum
class ISparkAxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BA-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparkAxes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Vertical',
              ( ['retval', 'out'], POINTER(POINTER(SparkVerticalAxis)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Horizontal',
              ( ['retval', 'out'], POINTER(POINTER(SparkHorizontalAxis)), 'RHS' )),
]
################################################################
## code template for ISparkAxes implementation
##class ISparkAxes_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Horizontal(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Vertical(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IFilters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024433-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFilters._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Filter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Filter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IFilters implementation
##class IFilters_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IDummy(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDummy._methods_ = [
    COMMETHOD([], HRESULT, '_ActiveSheetOrChart'),
    COMMETHOD([], HRESULT, 'RGB'),
    COMMETHOD([], HRESULT, 'ChDir'),
    COMMETHOD([], HRESULT, 'DoScript'),
    COMMETHOD([], HRESULT, 'DirectObject'),
    COMMETHOD([], HRESULT, 'RefreshDocument'),
    COMMETHOD([], HRESULT, 'AddSignatureLine',
              ( ['in'], VARIANT, 'SigProv' ),
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Signature)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddNonVisibleSignature',
              ( ['in'], VARIANT, 'SigProv' ),
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Signature)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowSignaturesPane',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowSignaturesPane',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ThemeFontScheme'),
    COMMETHOD([], HRESULT, 'ThemeColorScheme'),
    COMMETHOD([], HRESULT, 'ThemeEffectScheme'),
    COMMETHOD([], HRESULT, 'Load'),
]
################################################################
## code template for IDummy implementation
##class IDummy_Impl(object):
##    def Load(self):
##        '-no docstring-'
##        #return 
##
##    def ChDir(self):
##        '-no docstring-'
##        #return 
##
##    def AddSignatureLine(self, SigProv):
##        '-no docstring-'
##        #return RHS
##
##    def DoScript(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSignaturesPane = property(_get, _set, doc = _set.__doc__)
##
##    def ThemeEffectScheme(self):
##        '-no docstring-'
##        #return 
##
##    def RGB(self):
##        '-no docstring-'
##        #return 
##
##    def RefreshDocument(self):
##        '-no docstring-'
##        #return 
##
##    def DirectObject(self):
##        '-no docstring-'
##        #return 
##
##    def _ActiveSheetOrChart(self):
##        '-no docstring-'
##        #return 
##
##    def ThemeColorScheme(self):
##        '-no docstring-'
##        #return 
##
##    def AddNonVisibleSignature(self, SigProv):
##        '-no docstring-'
##        #return RHS
##
##    def ThemeFontScheme(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlLinkStatus'
xlLinkStatusOK = 0
xlLinkStatusMissingFile = 1
xlLinkStatusMissingSheet = 2
xlLinkStatusOld = 3
xlLinkStatusSourceNotCalculated = 4
xlLinkStatusIndeterminate = 5
xlLinkStatusNotStarted = 6
xlLinkStatusInvalidName = 7
xlLinkStatusSourceNotOpen = 8
xlLinkStatusSourceOpen = 9
xlLinkStatusCopiedValues = 10
XlLinkStatus = c_int # enum

# values for enumeration 'XlCalculation'
xlCalculationAutomatic = -4105
xlCalculationManual = -4135
xlCalculationSemiautomatic = 2
XlCalculation = c_int # enum
class ILegendEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BA-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class LegendKey(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BC-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
LegendKey._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(132), 'propget'], VARIANT_BOOL, 'InvertIfNegative'),
    DISPMETHOD([dispid(132), 'propput'], None, 'InvertIfNegative',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(73), 'propget'], c_int, 'MarkerBackgroundColor'),
    DISPMETHOD([dispid(73), 'propput'], None, 'MarkerBackgroundColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(74), 'propget'], XlColorIndex, 'MarkerBackgroundColorIndex'),
    DISPMETHOD([dispid(74), 'propput'], None, 'MarkerBackgroundColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(75), 'propget'], c_int, 'MarkerForegroundColor'),
    DISPMETHOD([dispid(75), 'propput'], None, 'MarkerForegroundColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(76), 'propget'], XlColorIndex, 'MarkerForegroundColorIndex'),
    DISPMETHOD([dispid(76), 'propput'], None, 'MarkerForegroundColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(231), 'propget'], c_int, 'MarkerSize'),
    DISPMETHOD([dispid(231), 'propput'], None, 'MarkerSize',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(72), 'propget'], XlMarkerStyle, 'MarkerStyle'),
    DISPMETHOD([dispid(72), 'propput'], None, 'MarkerStyle',
               ( ['in'], XlMarkerStyle, 'rhs' )),
    DISPMETHOD([dispid(161), 'propget'], c_int, 'PictureType'),
    DISPMETHOD([dispid(161), 'propput'], None, 'PictureType',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(162), 'hidden', 'propget'], c_int, 'PictureUnit'),
    DISPMETHOD([dispid(162), 'hidden', 'propput'], None, 'PictureUnit',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(235), 'hidden'], VARIANT, 'Select'),
    DISPMETHOD([dispid(163), 'propget'], VARIANT_BOOL, 'Smooth'),
    DISPMETHOD([dispid(163), 'propput'], None, 'Smooth',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2649), 'propget'], c_double, 'PictureUnit2'),
    DISPMETHOD([dispid(2649), 'propput'], None, 'PictureUnit2',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
ILegendEntry._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LegendKey',
              ( ['retval', 'out'], POINTER(POINTER(LegendKey)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for ILegendEntry implementation
##class ILegendEntry_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LegendKey(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class IPivotFormula(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotFormula._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Index',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StandardFormula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StandardFormula',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IPivotFormula implementation
##class IPivotFormula_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Index = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StandardFormula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IError(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IError._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Ignore',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Ignore',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IError implementation
##class IError_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Ignore = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class ISmartTagActions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISmartTagActions._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SmartTagAction)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SmartTagAction)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ISmartTagActions implementation
##class ISmartTagActions_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlGenerateTableRefs'
xlGenerateTableRefA1 = 0
xlGenerateTableRefStruct = 1
XlGenerateTableRefs = c_int # enum
class IChartGroup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020859-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartGroup._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisGroup',
              ( ['retval', 'out'], POINTER(XlAxisGroup), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AxisGroup',
              ( ['in'], XlAxisGroup, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DoughnutHoleSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DoughnutHoleSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DownBars',
              ( ['retval', 'out'], POINTER(POINTER(DownBars)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DropLines',
              ( ['retval', 'out'], POINTER(POINTER(DropLines)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FirstSliceAngle',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FirstSliceAngle',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GapWidth',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'GapWidth',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasDropLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasDropLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasHiLoLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasHiLoLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasRadarAxisLabels',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasRadarAxisLabels',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasSeriesLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasSeriesLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasUpDownBars',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasUpDownBars',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HiLoLines',
              ( ['retval', 'out'], POINTER(POINTER(HiLoLines)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Overlap',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Overlap',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RadarAxisLabels',
              ( ['retval', 'out'], POINTER(POINTER(TickLabels)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SeriesCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SeriesLines',
              ( ['retval', 'out'], POINTER(POINTER(SeriesLines)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'SubType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'SubType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UpBars',
              ( ['retval', 'out'], POINTER(POINTER(UpBars)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VaryByCategories',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VaryByCategories',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SizeRepresents',
              ( ['retval', 'out'], POINTER(XlSizeRepresents), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SizeRepresents',
              ( ['in'], XlSizeRepresents, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BubbleScale',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BubbleScale',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowNegativeBubbles',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowNegativeBubbles',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SplitType',
              ( ['retval', 'out'], POINTER(XlChartSplitType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SplitType',
              ( ['in'], XlChartSplitType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SplitValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SplitValue',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SecondPlotSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SecondPlotSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Has3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Has3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'FullCategoryCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CategoryCollection',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IChartGroup implementation
##class IChartGroup_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FirstSliceAngle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasUpDownBars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RadarAxisLabels(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasHiLoLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Overlap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasSeriesLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DropLines(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SeriesLines(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SubType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DownBars(self):
##        '-no docstring-'
##        #return RHS
##
##    def SeriesCollection(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GapWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SecondPlotSize = property(_get, _set, doc = _set.__doc__)
##
##    def CategoryCollection(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DoughnutHoleSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowNegativeBubbles = property(_get, _set, doc = _set.__doc__)
##
##    def FullCategoryCollection(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def UpBars(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SizeRepresents = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HiLoLines(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VaryByCategories = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDropLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasRadarAxisLabels = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BubbleScale = property(_get, _set, doc = _set.__doc__)
##

class Top10(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlTopBottom'
xlTop10Top = 1
xlTop10Bottom = 0
XlTopBottom = c_int # enum

# values for enumeration 'XlCalcFor'
xlAllValues = 0
xlRowGroups = 1
xlColGroups = 2
XlCalcFor = c_int # enum
Top10._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2625), 'propget'], VARIANT_BOOL, 'StopIfTrue'),
    DISPMETHOD([dispid(2625), 'propput'], None, 'StopIfTrue',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2626), 'propget'], POINTER(Range), 'AppliesTo'),
    DISPMETHOD([dispid(2728), 'propget'], XlTopBottom, 'TopBottom'),
    DISPMETHOD([dispid(2728), 'propput'], None, 'TopBottom',
               ( ['in'], XlTopBottom, 'rhs' )),
    DISPMETHOD([dispid(1290), 'propget'], c_int, 'Rank'),
    DISPMETHOD([dispid(1290), 'propput'], None, 'Rank',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2729), 'propget'], VARIANT_BOOL, 'Percent'),
    DISPMETHOD([dispid(2729), 'propput'], None, 'Percent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(193), 'propget'], VARIANT, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2629)], None, 'SetFirstPriority'),
    DISPMETHOD([dispid(2630)], None, 'SetLastPriority'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2627)], None, 'ModifyAppliesToRange',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2631), 'propget'], VARIANT_BOOL, 'PTCondition'),
    DISPMETHOD([dispid(2615), 'propget'], XlPivotConditionScope, 'ScopeType'),
    DISPMETHOD([dispid(2615), 'propput'], None, 'ScopeType',
               ( ['in'], XlPivotConditionScope, 'rhs' )),
    DISPMETHOD([dispid(2730), 'propget'], XlCalcFor, 'CalcFor'),
    DISPMETHOD([dispid(2730), 'propput'], None, 'CalcFor',
               ( ['in'], XlCalcFor, 'rhs' )),
]

# values for enumeration 'XlSaveAsAccessMode'
xlExclusive = 3
xlNoChange = 1
xlShared = 2
XlSaveAsAccessMode = c_int # enum
class Gridlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Gridlines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class IUserAccess(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IUserAccess._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowEdit',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AllowEdit',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for IUserAccess implementation
##class IUserAccess_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AllowEdit = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlSaveConflictResolution'
xlLocalSessionChanges = 2
xlOtherSessionChanges = 3
xlUserResolution = 1
XlSaveConflictResolution = c_int # enum

# values for enumeration 'XlSearchWithin'
xlWithinSheet = 1
xlWithinWorkbook = 2
XlSearchWithin = c_int # enum

# values for enumeration 'XlWebSelectionType'
xlEntirePage = 1
xlAllTables = 2
xlSpecifiedTables = 3
XlWebSelectionType = c_int # enum
class Scenario(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020897-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Scenario._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(912)], VARIANT, 'ChangeScenario',
               ( ['in'], VARIANT, 'ChangingCells' ),
               ( ['in', 'optional'], VARIANT, 'Values' )),
    DISPMETHOD([dispid(911), 'propget'], POINTER(Range), 'ChangingCells'),
    DISPMETHOD([dispid(910), 'propget'], BSTR, 'Comment'),
    DISPMETHOD([dispid(910), 'propput'], None, 'Comment',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(268), 'propget'], VARIANT_BOOL, 'Hidden'),
    DISPMETHOD([dispid(268), 'propput'], None, 'Hidden',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(496)], VARIANT, 'Show'),
    DISPMETHOD([dispid(164), 'propget'], VARIANT, 'Values',
               ( ['in', 'optional'], VARIANT, 'Index' )),
]

# values for enumeration 'XlWindowType'
xlChartAsWindow = 5
xlChartInPlace = 4
xlClipboard = 3
xlInfo = -4129
xlWorkbook = 1
XlWindowType = c_int # enum
class ColorFormat(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0312-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ShadowFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementOffsetX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementOffsetY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Obscured',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Obscured' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Obscured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Obscured' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'OffsetX',
              ( ['retval', 'out'], POINTER(c_float), 'OffsetX' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'OffsetX',
              ( ['in'], c_float, 'OffsetX' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'OffsetY',
              ( ['retval', 'out'], POINTER(c_float), 'OffsetY' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'OffsetY',
              ( ['in'], c_float, 'OffsetY' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Transparency',
              ( ['retval', 'out'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShadowType), 'Type' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShadowType, 'Type' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShadowStyle), 'ShadowStyle' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Style',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShadowStyle, 'ShadowStyle' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Blur',
              ( ['retval', 'out'], POINTER(c_float), 'Blur' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'Blur',
              ( ['in'], c_float, 'Blur' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(c_float), 'Size' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Size',
              ( ['in'], c_float, 'Size' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotateWithShape',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RotateWithShape' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotateWithShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RotateWithShape' )),
]
################################################################
## code template for ShadowFormat implementation
##class ShadowFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return ShadowStyle
##    def _set(self, ShadowStyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def IncrementOffsetX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementOffsetY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return OffsetX
##    def _set(self, OffsetX):
##        '-no docstring-'
##    OffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return OffsetY
##    def _set(self, OffsetY):
##        '-no docstring-'
##    OffsetY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotateWithShape
##    def _set(self, RotateWithShape):
##        '-no docstring-'
##    RotateWithShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Blur
##    def _set(self, Blur):
##        '-no docstring-'
##    Blur = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Obscured
##    def _set(self, Obscured):
##        '-no docstring-'
##    Obscured = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Size
##    def _set(self, Size):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##

class ICustomViews(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024422-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class CustomView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024423-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
CustomView._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(1577), 'propget'], VARIANT_BOOL, 'PrintSettings'),
    DISPMETHOD([dispid(1578), 'propget'], VARIANT_BOOL, 'RowColSettings'),
    DISPMETHOD([dispid(496)], None, 'Show'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
ICustomViews._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'ViewName' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomView)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'ViewName' ),
              ( ['in', 'optional'], VARIANT, 'PrintSettings' ),
              ( ['in', 'optional'], VARIANT, 'RowColSettings' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomView)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'ViewName' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomView)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ICustomViews implementation
##class ICustomViews_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, ViewName):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, ViewName, PrintSettings, RowColSettings):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, ViewName):
##        '-no docstring-'
##        #return RHS
##

class IQueryTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024429-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IQueryTables._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Connection' ),
              ( ['in'], POINTER(Range), 'Destination' ),
              ( ['in', 'optional'], VARIANT, 'Sql' ),
              ( ['retval', 'out'], POINTER(POINTER(QueryTable)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(QueryTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(QueryTable)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IQueryTables implementation
##class IQueryTables_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Connection, Destination, Sql):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IVPageBreaks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024405-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IVPageBreaks._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(VPageBreak)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(VPageBreak)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], POINTER(IDispatch), 'Before' ),
              ( ['retval', 'out'], POINTER(POINTER(VPageBreak)), 'RHS' )),
]
################################################################
## code template for IVPageBreaks implementation
##class IVPageBreaks_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Before):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ISlicerItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicerItem._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(SlicerCache)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceNameStandard',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Selected',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Selected',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for ISlicerItem implementation
##class ISlicerItem_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Selected = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Caption(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceNameStandard(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasData(self):
##        '-no docstring-'
##        #return RHS
##

class Module(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AD-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Module._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(551)], None, 'Copy',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1373), 'propget'], BSTR, 'CodeName'),
    DISPMETHOD([dispid(-2147418112), 'propget'], BSTR, '_CodeName'),
    DISPMETHOD([dispid(-2147418112), 'propput'], None, '_CodeName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(637)], None, 'Move',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(502), 'propget'], POINTER(IDispatch), 'Next'),
    DISPMETHOD([dispid(628), 'hidden', 'propget'], BSTR, 'OnDoubleClick'),
    DISPMETHOD([dispid(628), 'hidden', 'propput'], None, 'OnDoubleClick',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1031), 'hidden', 'propget'], BSTR, 'OnSheetActivate'),
    DISPMETHOD([dispid(1031), 'hidden', 'propput'], None, 'OnSheetActivate',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1081), 'hidden', 'propget'], BSTR, 'OnSheetDeactivate'),
    DISPMETHOD([dispid(1081), 'hidden', 'propput'], None, 'OnSheetDeactivate',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(998), 'propget'], POINTER(PageSetup), 'PageSetup'),
    DISPMETHOD([dispid(503), 'propget'], POINTER(IDispatch), 'Previous'),
    DISPMETHOD([dispid(905), 'hidden'], None, '__PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(1610743831), 'restricted', 'hidden'], None, '_Dummy18'),
    DISPMETHOD([dispid(282), 'hidden'], None, '_Protect',
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
               ( ['in', 'optional'], VARIANT, 'Contents' ),
               ( ['in', 'optional'], VARIANT, 'Scenarios' ),
               ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' )),
    DISPMETHOD([dispid(292), 'propget'], VARIANT_BOOL, 'ProtectContents'),
    DISPMETHOD([dispid(1610743834), 'restricted', 'hidden'], None, '_Dummy21'),
    DISPMETHOD([dispid(1159), 'propget'], VARIANT_BOOL, 'ProtectionMode'),
    DISPMETHOD([dispid(1610743836), 'restricted', 'hidden'], None, '_Dummy23'),
    DISPMETHOD([dispid(284), 'hidden'], None, '_SaveAs',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'FileFormat' ),
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
               ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
               ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
               ( ['in', 'optional'], VARIANT, 'AddToMru' ),
               ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
               ( ['in', 'optional'], VARIANT, 'TextVisualLayout' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(285)], None, 'Unprotect',
               ( ['in', 'optional'], VARIANT, 'Password' )),
    DISPMETHOD([dispid(558), 'propget'], XlSheetVisibility, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], XlSheetVisibility, 'rhs' )),
    DISPMETHOD([dispid(1377), 'propget'], POINTER(Shapes), 'Shapes'),
    DISPMETHOD([dispid(584)], VARIANT, 'InsertFile',
               ( ['in'], VARIANT, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Merge' )),
    DISPMETHOD([dispid(1925)], None, 'SaveAs',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'FileFormat' ),
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
               ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
               ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
               ( ['in', 'optional'], VARIANT, 'AddToMru' ),
               ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
               ( ['in', 'optional'], VARIANT, 'TextVisualLayout' )),
    DISPMETHOD([dispid(2029)], None, 'Protect',
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
               ( ['in', 'optional'], VARIANT, 'Contents' ),
               ( ['in', 'optional'], VARIANT, 'Scenarios' ),
               ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' )),
    DISPMETHOD([dispid(1772), 'hidden'], None, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(2361)], None, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
]
RefreshEvents._disp_methods_ = [
    DISPMETHOD([dispid(1596)], None, 'BeforeRefresh',
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1597)], None, 'AfterRefresh',
               ( ['in'], VARIANT_BOOL, 'Success' )),
]
class Toolbar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []

# values for enumeration 'XlToolbarProtection'
xlNoButtonChanges = 1
xlNoChanges = 4
xlNoDockingChanges = 3
xlToolbarProtectionNone = -4143
xlNoShapeChanges = 2
XlToolbarProtection = c_int # enum
class ToolbarButtons(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class ToolbarButton(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ToolbarButton._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(553), 'propget'], VARIANT_BOOL, 'BuiltIn'),
    DISPMETHOD([dispid(554), 'propget'], VARIANT_BOOL, 'BuiltInFace'),
    DISPMETHOD([dispid(554), 'propput'], None, 'BuiltInFace',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(551)], None, 'Copy',
               ( ['in'], POINTER(Toolbar), 'Toolbar' ),
               ( ['in'], c_int, 'Before' )),
    DISPMETHOD([dispid(966)], None, 'CopyFace'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(562)], None, 'Edit'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(355), 'propget'], c_int, 'HelpContextID'),
    DISPMETHOD([dispid(355), 'propput'], None, 'HelpContextID',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(360), 'propget'], BSTR, 'HelpFile'),
    DISPMETHOD([dispid(360), 'propput'], None, 'HelpFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(570), 'propget'], c_int, 'ID'),
    DISPMETHOD([dispid(561), 'propget'], VARIANT_BOOL, 'IsGap'),
    DISPMETHOD([dispid(637)], None, 'Move',
               ( ['in'], POINTER(Toolbar), 'Toolbar' ),
               ( ['in'], c_int, 'Before' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(967)], None, 'PasteFace'),
    DISPMETHOD([dispid(560), 'propget'], VARIANT_BOOL, 'Pushed'),
    DISPMETHOD([dispid(560), 'propput'], None, 'Pushed',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(555)], None, 'Reset'),
    DISPMETHOD([dispid(386), 'propget'], BSTR, 'StatusBar'),
    DISPMETHOD([dispid(386), 'propput'], None, 'StatusBar',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_int, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_int, 'rhs' )),
]
ToolbarButtons._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(ToolbarButton), 'Add',
               ( ['in', 'optional'], VARIANT, 'Button' ),
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'OnAction' ),
               ( ['in', 'optional'], VARIANT, 'Pushed' ),
               ( ['in', 'optional'], VARIANT, 'Enabled' ),
               ( ['in', 'optional'], VARIANT, 'StatusBar' ),
               ( ['in', 'optional'], VARIANT, 'HelpFile' ),
               ( ['in', 'optional'], VARIANT, 'HelpContextID' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(ToolbarButton), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ToolbarButton), '_Default',
               ( ['in'], c_int, 'Index' )),
]
Toolbar._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(553), 'propget'], VARIANT_BOOL, 'BuiltIn'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(123), 'propget'], c_int, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_int, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(133), 'propget'], c_int, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(176), 'propget'], XlToolbarProtection, 'Protection'),
    DISPMETHOD([dispid(176), 'propput'], None, 'Protection',
               ( ['in'], XlToolbarProtection, 'rhs' )),
    DISPMETHOD([dispid(555)], None, 'Reset'),
    DISPMETHOD([dispid(964), 'propget'], POINTER(ToolbarButtons), 'ToolbarButtons'),
    DISPMETHOD([dispid(126), 'propget'], c_int, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_int, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_int, 'rhs' )),
]
class IColorStop(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AD-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IColorStop._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for IColorStop implementation
##class IColorStop_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IChartFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(FillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Glow',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.GlowFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(POINTER(LineFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureFormat',
              ( ['retval', 'out'], POINTER(POINTER(PictureFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(POINTER(ShadowFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SoftEdge',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SoftEdgeFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFrame2',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame2)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Adjustments',
              ( ['retval', 'out'], POINTER(POINTER(Adjustments)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoShapeType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'RHS' )),
]
################################################################
## code template for IChartFormat implementation
##class IChartFormat_Impl(object):
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class Button(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Button._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(858), 'propget'], VARIANT_BOOL, 'CancelButton'),
    DISPMETHOD([dispid(858), 'propput'], None, 'CancelButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(857), 'propget'], VARIANT_BOOL, 'DefaultButton'),
    DISPMETHOD([dispid(857), 'propput'], None, 'DefaultButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(859), 'propget'], VARIANT_BOOL, 'DismissButton'),
    DISPMETHOD([dispid(859), 'propput'], None, 'DismissButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(860), 'propget'], VARIANT_BOOL, 'HelpButton'),
    DISPMETHOD([dispid(860), 'propput'], None, 'HelpButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
]
class IODBCErrors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IODBCErrors._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ODBCError)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ODBCError)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IODBCErrors implementation
##class IODBCErrors_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IDataLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDataLabels._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy9'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy10'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy13'),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy16'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy17'),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLinked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowLegendKey',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlDataLabelPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowSeriesName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowCategoryName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowValue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowPercentage',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowBubbleSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Separator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Propagate',
              ( ['in'], VARIANT, 'Index' )),
    COMMETHOD(['propget'], HRESULT, 'ShowRange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowRange',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IDataLabels implementation
##class IDataLabels_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy16(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy17(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy13(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy10(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Propagate(self, Index):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy9(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowRange = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlPictureConvertorType'
xlBMP = 1
xlCGM = 7
xlDRW = 4
xlDXF = 5
xlEPS = 8
xlHGL = 6
xlPCT = 13
xlPCX = 10
xlPIC = 11
xlPLT = 12
xlTIF = 9
xlWMF = 2
xlWPG = 3
XlPictureConvertorType = c_int # enum

# values for enumeration 'XlGradientFillType'
xlGradientFillLinear = 0
xlGradientFillPath = 1
XlGradientFillType = c_int # enum
class IPivotTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020872-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotTable._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddFields',
              ( ['in', 'optional'], VARIANT, 'RowFields' ),
              ( ['in', 'optional'], VARIANT, 'ColumnFields' ),
              ( ['in', 'optional'], VARIANT, 'PageFields' ),
              ( ['in', 'optional'], VARIANT, 'AddToTable' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnGrand',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColumnGrand',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ShowPages',
              ( ['in', 'optional'], VARIANT, 'PageField' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataBodyRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataLabelRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasAutoFormat',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasAutoFormat',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HiddenFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InnerDetail',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InnerDetail',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageRangeCells',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'PivotFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshDate',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'RefreshTable',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowGrand',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RowGrand',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SaveData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SaveData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceData',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceData',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableRange1',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableRange2',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CacheIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CacheIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'CalculatedFields',
              ( ['retval', 'out'], POINTER(POINTER(CalculatedFields)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayErrorString',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayErrorString',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayNullString',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayNullString',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableDrilldown',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableDrilldown',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableFieldDialog',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableFieldDialog',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableWizard',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableWizard',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ErrorString',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ErrorString',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'GetData',
              ( ['in'], BSTR, 'Name' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ListFormulas'),
    COMMETHOD(['propget'], HRESULT, 'ManualUpdate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ManualUpdate',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MergeLabels',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MergeLabels',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NullString',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NullString',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'PivotCache',
              ( ['retval', 'out'], POINTER(POINTER(PivotCache)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotFormulas',
              ( ['retval', 'out'], POINTER(POINTER(PivotFormulas)), 'RHS' )),
    COMMETHOD([], HRESULT, 'PivotTableWizard',
              ( ['in', 'optional'], VARIANT, 'SourceType' ),
              ( ['in', 'optional'], VARIANT, 'SourceData' ),
              ( ['in', 'optional'], VARIANT, 'TableDestination' ),
              ( ['in', 'optional'], VARIANT, 'TableName' ),
              ( ['in', 'optional'], VARIANT, 'RowGrand' ),
              ( ['in', 'optional'], VARIANT, 'ColumnGrand' ),
              ( ['in', 'optional'], VARIANT, 'SaveData' ),
              ( ['in', 'optional'], VARIANT, 'HasAutoFormat' ),
              ( ['in', 'optional'], VARIANT, 'AutoPage' ),
              ( ['in', 'optional'], VARIANT, 'Reserved' ),
              ( ['in', 'optional'], VARIANT, 'BackgroundQuery' ),
              ( ['in', 'optional'], VARIANT, 'OptimizeCache' ),
              ( ['in', 'optional'], VARIANT, 'PageFieldOrder' ),
              ( ['in', 'optional'], VARIANT, 'PageFieldWrapCount' ),
              ( ['in', 'optional'], VARIANT, 'ReadData' ),
              ( ['in', 'optional'], VARIANT, 'Connection' )),
    COMMETHOD(['propget'], HRESULT, 'SubtotalHiddenPageItems',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SubtotalHiddenPageItems',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageFieldOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PageFieldOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageFieldStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PageFieldStyle',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageFieldWrapCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PageFieldWrapCount',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PreserveFormatting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PreserveFormatting',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PivotSelect',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], XlPTSelectionMode, 'Mode', 0 )),
    COMMETHOD(['propget'], HRESULT, 'PivotSelection',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PivotSelection',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SelectionMode',
              ( ['retval', 'out'], POINTER(XlPTSelectionMode), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SelectionMode',
              ( ['in'], XlPTSelectionMode, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'TableStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'TableStyle',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Tag',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Tag',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Update'),
    COMMETHOD(['propget'], HRESULT, 'VacatedStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VacatedStyle',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Format',
              ( ['in'], XlPivotFormatType, 'Format' )),
    COMMETHOD(['propget'], HRESULT, 'PrintTitles',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintTitles',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CubeFields',
              ( ['retval', 'out'], POINTER(POINTER(CubeFields)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GrandTotalName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'GrandTotalName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmallGrid',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SmallGrid',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RepeatItemsOnEachPrintedPage',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RepeatItemsOnEachPrintedPage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TotalsAnnotation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TotalsAnnotation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'PivotSelect',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], XlPTSelectionMode, 'Mode', 0 ),
              ( ['in', 'optional'], VARIANT, 'UseStandardName' )),
    COMMETHOD(['propget'], HRESULT, 'PivotSelectionStandard',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PivotSelectionStandard',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'GetPivotData',
              ( ['in', 'optional'], VARIANT, 'DataField' ),
              ( ['in', 'optional'], VARIANT, 'Field1' ),
              ( ['in', 'optional'], VARIANT, 'Item1' ),
              ( ['in', 'optional'], VARIANT, 'Field2' ),
              ( ['in', 'optional'], VARIANT, 'Item2' ),
              ( ['in', 'optional'], VARIANT, 'Field3' ),
              ( ['in', 'optional'], VARIANT, 'Item3' ),
              ( ['in', 'optional'], VARIANT, 'Field4' ),
              ( ['in', 'optional'], VARIANT, 'Item4' ),
              ( ['in', 'optional'], VARIANT, 'Field5' ),
              ( ['in', 'optional'], VARIANT, 'Item5' ),
              ( ['in', 'optional'], VARIANT, 'Field6' ),
              ( ['in', 'optional'], VARIANT, 'Item6' ),
              ( ['in', 'optional'], VARIANT, 'Field7' ),
              ( ['in', 'optional'], VARIANT, 'Item7' ),
              ( ['in', 'optional'], VARIANT, 'Field8' ),
              ( ['in', 'optional'], VARIANT, 'Item8' ),
              ( ['in', 'optional'], VARIANT, 'Field9' ),
              ( ['in', 'optional'], VARIANT, 'Item9' ),
              ( ['in', 'optional'], VARIANT, 'Field10' ),
              ( ['in', 'optional'], VARIANT, 'Item10' ),
              ( ['in', 'optional'], VARIANT, 'Field11' ),
              ( ['in', 'optional'], VARIANT, 'Item11' ),
              ( ['in', 'optional'], VARIANT, 'Field12' ),
              ( ['in', 'optional'], VARIANT, 'Item12' ),
              ( ['in', 'optional'], VARIANT, 'Field13' ),
              ( ['in', 'optional'], VARIANT, 'Item13' ),
              ( ['in', 'optional'], VARIANT, 'Field14' ),
              ( ['in', 'optional'], VARIANT, 'Item14' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataPivotField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableDataValueEditing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableDataValueEditing',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'AddDataField',
              ( ['in'], POINTER(IDispatch), 'Field' ),
              ( ['in', 'optional'], VARIANT, 'Caption' ),
              ( ['in', 'optional'], VARIANT, 'Function' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MDX',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ViewCalculatedMembers',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ViewCalculatedMembers',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CalculatedMembers',
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMembers)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayImmediateItems',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayImmediateItems',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Dummy15',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableFieldList',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableFieldList',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisualTotals',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VisualTotals',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowPageMultipleItemLabel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowPageMultipleItemLabel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Version',
              ( ['retval', 'out'], POINTER(XlPivotTableVersionList), 'RHS' )),
    COMMETHOD([], HRESULT, 'CreateCubeFile',
              ( ['in'], BSTR, 'File' ),
              ( ['in', 'optional'], VARIANT, 'Measures' ),
              ( ['in', 'optional'], VARIANT, 'Levels' ),
              ( ['in', 'optional'], VARIANT, 'Members' ),
              ( ['in', 'optional'], VARIANT, 'Properties' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayEmptyRow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayEmptyRow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayEmptyColumn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayEmptyColumn',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'ShowCellBackgroundFromOLAP',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'ShowCellBackgroundFromOLAP',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotColumnAxis',
              ( ['retval', 'out'], POINTER(POINTER(PivotAxis)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotRowAxis',
              ( ['retval', 'out'], POINTER(POINTER(PivotAxis)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowDrillIndicators',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowDrillIndicators',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintDrillIndicators',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintDrillIndicators',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayMemberPropertyTooltips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayMemberPropertyTooltips',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayContextTooltips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayContextTooltips',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearTable'),
    COMMETHOD(['propget'], HRESULT, 'CompactRowIndent',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CompactRowIndent',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LayoutRowDefault',
              ( ['retval', 'out'], POINTER(XlLayoutRowType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LayoutRowDefault',
              ( ['in'], XlLayoutRowType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayFieldCaptions',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayFieldCaptions',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'RowAxisLayout',
              ( ['in'], XlLayoutRowType, 'RowLayout' )),
    COMMETHOD([], HRESULT, 'SubtotalLocation',
              ( ['in'], XlSubtototalLocationType, 'Location' )),
    COMMETHOD(['propget'], HRESULT, 'ActiveFilters',
              ( ['retval', 'out'], POINTER(POINTER(PivotFilters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InGridDropZones',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InGridDropZones',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearAllFilters'),
    COMMETHOD(['propget'], HRESULT, 'TableStyle2',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TableStyle2',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleLastColumn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleLastColumn',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleRowStripes',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleRowStripes',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleColumnStripes',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleColumnStripes',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleRowHeaders',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleRowHeaders',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleColumnHeaders',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleColumnHeaders',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ConvertToFormulas',
              ( ['in'], VARIANT_BOOL, 'ConvertFilters' )),
    COMMETHOD(['propget'], HRESULT, 'AllowMultipleFilters',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AllowMultipleFilters',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CompactLayoutRowHeader',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CompactLayoutRowHeader',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CompactLayoutColumnHeader',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CompactLayoutColumnHeader',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FieldListSortAscending',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FieldListSortAscending',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortUsingCustomLists',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SortUsingCustomLists',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ChangeConnection',
              ( ['in'], POINTER(WorkbookConnection), 'conn' )),
    COMMETHOD([], HRESULT, 'ChangePivotCache',
              ( ['in'], VARIANT, 'PivotCache' )),
    COMMETHOD(['propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Location',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableWriteback',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableWriteback',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Allocation',
              ( ['retval', 'out'], POINTER(XlAllocation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Allocation',
              ( ['in'], XlAllocation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllocationValue',
              ( ['retval', 'out'], POINTER(XlAllocationValue), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AllocationValue',
              ( ['in'], XlAllocationValue, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllocationMethod',
              ( ['retval', 'out'], POINTER(XlAllocationMethod), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AllocationMethod',
              ( ['in'], XlAllocationMethod, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllocationWeightExpression',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AllocationWeightExpression',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'AllocateChanges'),
    COMMETHOD([], HRESULT, 'CommitChanges'),
    COMMETHOD([], HRESULT, 'DiscardChanges'),
    COMMETHOD([], HRESULT, 'RefreshDataSourceValues'),
    COMMETHOD([], HRESULT, 'RepeatAllLabels',
              ( ['in'], XlPivotFieldRepeatLabels, 'Repeat' )),
    COMMETHOD(['propget'], HRESULT, 'ChangeList',
              ( ['retval', 'out'], POINTER(POINTER(PivotTableChangeList)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Slicers',
              ( ['retval', 'out'], POINTER(POINTER(Slicers)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AlternativeText',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Summary',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Summary',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisualTotalsForSets',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VisualTotalsForSets',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowValuesRow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowValuesRow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CalculatedMembersInFilters',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CalculatedMembersInFilters',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'PivotValueCell',
              ( ['in', 'optional'], VARIANT, 'rowline' ),
              ( ['in', 'optional'], VARIANT, 'columnline' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotValueCell)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Hidden',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotChart',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'DrillDown',
              ( ['in'], POINTER(PivotItem), 'PivotItem' ),
              ( ['in', 'optional'], VARIANT, 'PivotLine' )),
    COMMETHOD([], HRESULT, 'DrillUp',
              ( ['in'], POINTER(PivotItem), 'PivotItem' ),
              ( ['in', 'optional'], VARIANT, 'PivotLine' ),
              ( ['in', 'optional'], VARIANT, 'LevelUniqueName' )),
    COMMETHOD([], HRESULT, 'DrillTo',
              ( ['in'], POINTER(PivotItem), 'PivotItem' ),
              ( ['in'], POINTER(CubeField), 'CubeField' ),
              ( ['in', 'optional'], VARIANT, 'PivotLine' )),
    COMMETHOD(['hidden'], HRESULT, 'Dummy2',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IPivotTable implementation
##class IPivotTable_Impl(object):
##    def ChangeConnection(self, conn):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ColumnRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InGridDropZones = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PageFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def ShowPages(self, PageField):
##        '-no docstring-'
##        #return RHS
##
##    def DrillDown(self, PivotItem, PivotLine):
##        '-no docstring-'
##        #return 
##
##    def CalculatedFields(self):
##        '-no docstring-'
##        #return RHS
##
##    def PivotFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RowFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableWizard = property(_get, _set, doc = _set.__doc__)
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Allocation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CompactLayoutColumnHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayFieldCaptions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PivotSelection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CalculatedMembers(self):
##        '-no docstring-'
##        #return RHS
##
##    def DiscardChanges(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AllocationWeightExpression = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowDrillIndicators = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CalculatedMembersInFilters = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayEmptyRow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RowRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CacheIndex = property(_get, _set, doc = _set.__doc__)
##
##    def AddFields(self, RowFields, ColumnFields, PageFields, AddToTable):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AllocationValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PivotChart(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearTable(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PageRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def DrillTo(self, PivotItem, CubeField, PivotLine):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FieldListSortAscending = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Tag = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintDrillIndicators = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SubtotalHiddenPageItems = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SelectionMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    def PivotTableWizard(self, SourceType, SourceData, TableDestination, TableName, RowGrand, ColumnGrand, SaveData, HasAutoFormat, AutoPage, Reserved, BackgroundQuery, OptimizeCache, PageFieldOrder, PageFieldWrapCount, ReadData, Connection):
##        '-no docstring-'
##        #return 
##
##    def RowAxisLayout(self, RowLayout):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColumnGrand = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def CommitChanges(self):
##        '-no docstring-'
##        #return 
##
##    def RepeatAllLabels(self, Repeat):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CompactLayoutRowHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayNullString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableFieldList = property(_get, _set, doc = _set.__doc__)
##
##    def ChangePivotCache(self, PivotCache):
##        '-no docstring-'
##        #return 
##
##    def GetPivotData(self, DataField, Field1, Item1, Field2, Item2, Field3, Item3, Field4, Item4, Field5, Item5, Field6, Item6, Field7, Item7, Field8, Item8, Field9, Item9, Field10, Item10, Field11, Item11, Field12, Item12, Field13, Item13, Field14, Item14):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RefreshDate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableRange2(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableRange1(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AllowMultipleFilters = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleColumnHeaders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SmallGrid = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataPivotField(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SortUsingCustomLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AllocationMethod = property(_get, _set, doc = _set.__doc__)
##
##    def GetData(self, Name):
##        '-no docstring-'
##        #return RHS
##
##    def RefreshDataSourceValues(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayImmediateItems = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ErrorString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleColumnStripes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TableStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PageFieldStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ViewCalculatedMembers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleRowHeaders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VisualTotals = property(_get, _set, doc = _set.__doc__)
##
##    def AllocateChanges(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def VisibleFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def CreateCubeFile(self, File, Measures, Levels, Members, Properties):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataBodyRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayEmptyColumn = property(_get, _set, doc = _set.__doc__)
##
##    def RefreshTable(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceData = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableDataValueEditing = property(_get, _set, doc = _set.__doc__)
##
##    def ClearAllFilters(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def MDX(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPageMultipleItemLabel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VacatedStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChangeList(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RowGrand = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GrandTotalName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayErrorString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Summary = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TableStyle2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MergeLabels = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Slicers(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableFieldDialog = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PivotFormulas(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ManualUpdate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def ListFormulas(self):
##        '-no docstring-'
##        #return 
##
##    def PivotSelect(self, Name, Mode, UseStandardName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InnerDetail = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Version(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy2(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def _PivotSelect(self, Name, Mode):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowCellBackgroundFromOLAP = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Hidden(self):
##        '-no docstring-'
##        #return RHS
##
##    def PivotCache(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayMemberPropertyTooltips = property(_get, _set, doc = _set.__doc__)
##
##    def Dummy15(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HiddenFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleLastColumn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CubeFields(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayContextTooltips = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PivotColumnAxis(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotRowAxis(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NullString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutRowDefault = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PageFieldOrder = property(_get, _set, doc = _set.__doc__)
##
##    def Format(self, Format):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintTitles = property(_get, _set, doc = _set.__doc__)
##
##    def PivotValueCell(self, rowline, columnline):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VisualTotalsForSets = property(_get, _set, doc = _set.__doc__)
##
##    def DrillUp(self, PivotItem, PivotLine, LevelUniqueName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ActiveFilters(self):
##        '-no docstring-'
##        #return RHS
##
##    def ConvertToFormulas(self, ConvertFilters):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableDrilldown = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def SubtotalLocation(self, Location):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RepeatItemsOnEachPrintedPage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RefreshName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CompactRowIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableWriteback = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasAutoFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataLabelRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PageRangeCells(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleRowStripes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PageFieldWrapCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValuesRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PreserveFormatting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SaveData = property(_get, _set, doc = _set.__doc__)
##
##    def AddDataField(self, Field, Caption, Function):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TotalsAnnotation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PivotSelectionStandard = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlSortMethodOld'
xlCodePage = 2
xlSyllabary = 1
XlSortMethodOld = c_int # enum
class TreeviewControl(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002444B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
TreeviewControl._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(268), 'propget'], HRESULT, 'Hidden',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(268), 'propput'], HRESULT, 'Hidden',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(1917), 'propget'], HRESULT, 'Drilled',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1917), 'propput'], HRESULT, 'Drilled',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for TreeviewControl implementation
##class TreeviewControl_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Drilled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class ListBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020888-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ListBoxes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(851)], VARIANT, 'AddItem',
               ( ['in'], VARIANT, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1610743852), 'restricted', 'hidden'], None, '_Dummy31'),
    DISPMETHOD([dispid(861), 'propget'], VARIANT, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(861), 'propput'], None, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743855), 'restricted', 'hidden'], None, '_Dummy33'),
    DISPMETHOD([dispid(847), 'propget'], BSTR, 'ListFillRange'),
    DISPMETHOD([dispid(847), 'propput'], None, 'ListFillRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(850), 'propget'], c_int, 'ListIndex'),
    DISPMETHOD([dispid(850), 'propput'], None, 'ListIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(32), 'propget'], c_int, 'MultiSelect'),
    DISPMETHOD([dispid(32), 'propput'], None, 'MultiSelect',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(853)], VARIANT, 'RemoveAllItems'),
    DISPMETHOD([dispid(852)], VARIANT, 'RemoveItem',
               ( ['in'], c_int, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(1123), 'propget'], VARIANT, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1123), 'propput'], None, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(ListBox), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IPlotArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CB-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPlotArea._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_InsideLeft',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_InsideTop',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_InsideWidth',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_InsideHeight',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InsideLeft',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InsideLeft',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InsideTop',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InsideTop',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InsideWidth',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InsideWidth',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InsideHeight',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InsideHeight',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IPlotArea implementation
##class IPlotArea_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideWidth = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideTop = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _InsideLeft(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _InsideTop(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _InsideWidth(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _InsideHeight(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InsideHeight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class IUpBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C5-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IUpBars._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IUpBars implementation
##class IUpBars_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlUnderlineStyle'
xlUnderlineStyleDouble = -4119
xlUnderlineStyleDoubleAccounting = 5
xlUnderlineStyleNone = -4142
xlUnderlineStyleSingle = 2
xlUnderlineStyleSingleAccounting = 4
XlUnderlineStyle = c_int # enum
class LegendEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BA-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
LegendEntry._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(174), 'propget'], POINTER(LegendKey), 'LegendKey'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class IPageSetup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPageSetup._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BlackAndWhite',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BlackAndWhite',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomMargin',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BottomMargin',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterFooter',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CenterFooter',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterHeader',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CenterHeader',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterHorizontally',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CenterHorizontally',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterVertically',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CenterVertically',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'ChartSize',
              ( ['retval', 'out'], POINTER(XlObjectSize), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'ChartSize',
              ( ['in'], XlObjectSize, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Draft',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Draft',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FirstPageNumber',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FirstPageNumber',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FitToPagesTall',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FitToPagesTall',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FitToPagesWide',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FitToPagesWide',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FooterMargin',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FooterMargin',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HeaderMargin',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HeaderMargin',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeftFooter',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LeftFooter',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeftHeader',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LeftHeader',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeftMargin',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LeftMargin',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Order',
              ( ['retval', 'out'], POINTER(XlOrder), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Order',
              ( ['in'], XlOrder, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(XlPageOrientation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], XlPageOrientation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PaperSize',
              ( ['retval', 'out'], POINTER(XlPaperSize), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PaperSize',
              ( ['in'], XlPaperSize, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintArea',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintArea',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintGridlines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintGridlines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintHeadings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintHeadings',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintNotes',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintNotes',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintQuality',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintQuality',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintTitleColumns',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintTitleColumns',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintTitleRows',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintTitleRows',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightFooter',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RightFooter',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightHeader',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RightHeader',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightMargin',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RightMargin',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopMargin',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TopMargin',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Zoom',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Zoom',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintComments',
              ( ['retval', 'out'], POINTER(XlPrintLocation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintComments',
              ( ['in'], XlPrintLocation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintErrors',
              ( ['retval', 'out'], POINTER(XlPrintErrors), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintErrors',
              ( ['in'], XlPrintErrors, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterHeaderPicture',
              ( ['retval', 'out'], POINTER(POINTER(Graphic)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterFooterPicture',
              ( ['retval', 'out'], POINTER(POINTER(Graphic)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeftHeaderPicture',
              ( ['retval', 'out'], POINTER(POINTER(Graphic)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeftFooterPicture',
              ( ['retval', 'out'], POINTER(POINTER(Graphic)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightHeaderPicture',
              ( ['retval', 'out'], POINTER(POINTER(Graphic)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightFooterPicture',
              ( ['retval', 'out'], POINTER(POINTER(Graphic)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OddAndEvenPagesHeaderFooter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OddAndEvenPagesHeaderFooter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DifferentFirstPageHeaderFooter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DifferentFirstPageHeaderFooter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScaleWithDocHeaderFooter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScaleWithDocHeaderFooter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AlignMarginsHeaderFooter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlignMarginsHeaderFooter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Pages',
              ( ['retval', 'out'], POINTER(POINTER(Pages)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EvenPage',
              ( ['retval', 'out'], POINTER(POINTER(Page)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FirstPage',
              ( ['retval', 'out'], POINTER(POINTER(Page)), 'RHS' )),
]
################################################################
## code template for IPageSetup implementation
##class IPageSetup_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FitToPagesWide = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    PrintQuality = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CenterHeaderPicture(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RightFooter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FirstPageNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PaperSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LeftHeaderPicture(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Draft = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FirstPage(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def EvenPage(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintErrors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CenterVertically = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BlackAndWhite = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LeftFooter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintTitleColumns = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintArea = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FooterMargin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Pages(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintNotes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LeftMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CenterHorizontally = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RightFooterPicture(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DifferentFirstPageHeaderFooter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RightHeaderPicture(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HeaderMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TopMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FitToPagesTall = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintHeadings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OddAndEvenPagesHeaderFooter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Zoom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintTitleRows = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlignMarginsHeaderFooter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CenterFooterPicture(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Order = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RightHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BottomMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CenterFooter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CenterHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RightMargin = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintComments = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LeftFooterPicture(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LeftHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScaleWithDocHeaderFooter = property(_get, _set, doc = _set.__doc__)
##

class DataBarBorder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BE-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlDataBarBorderType'
xlDataBarBorderNone = 0
xlDataBarBorderSolid = 1
XlDataBarBorderType = c_int # enum
DataBarBorder._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(108), 'propget'], XlDataBarBorderType, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlDataBarBorderType, 'rhs' )),
    DISPMETHOD([dispid(99), 'propget'], POINTER(IDispatch), 'Color'),
]
class IToolbars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IToolbars._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(Toolbar)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Toolbar)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Toolbar)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IToolbars implementation
##class IToolbars_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlFindLookIn'
xlFormulas = -4123
xlComments = -4144
xlValues = -4163
XlFindLookIn = c_int # enum
class Spinner(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Spinner._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(842), 'propget'], c_int, 'Max'),
    DISPMETHOD([dispid(842), 'propput'], None, 'Max',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(843), 'propget'], c_int, 'Min'),
    DISPMETHOD([dispid(843), 'propput'], None, 'Min',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(844), 'propget'], c_int, 'SmallChange'),
    DISPMETHOD([dispid(844), 'propput'], None, 'SmallChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
]
class CustomViews(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024422-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
CustomViews._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(CustomView), 'Item',
               ( ['in'], VARIANT, 'ViewName' )),
    DISPMETHOD([dispid(181)], POINTER(CustomView), 'Add',
               ( ['in'], BSTR, 'ViewName' ),
               ( ['in', 'optional'], VARIANT, 'PrintSettings' ),
               ( ['in', 'optional'], VARIANT, 'RowColSettings' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(CustomView), '_Default',
               ( ['in'], VARIANT, 'ViewName' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class ISparkHorizontalAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BB-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparkHorizontalAxis._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Axis',
              ( ['retval', 'out'], POINTER(POINTER(SparkColor)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsDateAxis',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightToLeftPlotOrder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RightToLeftPlotOrder',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for ISparkHorizontalAxis implementation
##class ISparkHorizontalAxis_Impl(object):
##    @property
##    def IsDateAxis(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RightToLeftPlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Axis(self):
##        '-no docstring-'
##        #return RHS
##

class ISparklineGroups(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B6-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparklineGroups._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], XlSparkType, 'Type' ),
              ( ['in'], BSTR, 'SourceData' ),
              ( ['retval', 'out'], POINTER(POINTER(SparklineGroup)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SparklineGroup)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SparklineGroup)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear'),
    COMMETHOD([], HRESULT, 'ClearGroups'),
    COMMETHOD([], HRESULT, 'Group',
              ( ['in'], POINTER(Range), 'Location' )),
    COMMETHOD([], HRESULT, 'Ungroup'),
]
################################################################
## code template for ISparklineGroups implementation
##class ISparklineGroups_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Type, SourceData):
##        '-no docstring-'
##        #return RHS
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return 
##
##    def Group(self, Location):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def ClearGroups(self):
##        '-no docstring-'
##        #return 
##

class IListDataFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListDataFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(XlListDataType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Choices',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DecimalPlaces',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsPercent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'lcid',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaxCharacters',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaxNumber',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinNumber',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Required',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlListDataType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadOnly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowFillIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IListDataFormat implementation
##class IListDataFormat_Impl(object):
##    @property
##    def MaxNumber(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Required(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MinNumber(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DefaultValue(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MaxCharacters(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowFillIn(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Choices(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ReadOnly(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def lcid(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DecimalPlaces(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsPercent(self):
##        '-no docstring-'
##        #return RHS
##

class IXPath(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXPath._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Map',
              ( ['retval', 'out'], POINTER(POINTER(XmlMap)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SetValue',
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], BSTR, 'XPath' ),
              ( ['in', 'optional'], VARIANT, 'SelectionNamespace' ),
              ( ['in', 'optional'], VARIANT, 'Repeating' )),
    COMMETHOD([], HRESULT, 'Clear'),
    COMMETHOD(['propget'], HRESULT, 'Repeating',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IXPath implementation
##class IXPath_Impl(object):
##    @property
##    def Map(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetValue(self, Map, XPath, SelectionNamespace, Repeating):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Repeating(self):
##        '-no docstring-'
##        #return RHS
##

class LinearGradient(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AF-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
LinearGradient._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2761), 'propget'], POINTER(ColorStops), 'ColorStops'),
    DISPMETHOD([dispid(1623), 'propget'], c_double, 'Degree'),
    DISPMETHOD([dispid(1623), 'propput'], None, 'Degree',
               ( ['in'], c_double, 'rhs' )),
]

# values for enumeration 'XlColumnDataType'
xlGeneralFormat = 1
xlTextFormat = 2
xlMDYFormat = 3
xlDMYFormat = 4
xlYMDFormat = 5
xlMYDFormat = 6
xlDYMFormat = 7
xlYDMFormat = 8
xlSkipColumn = 9
xlEMDFormat = 10
XlColumnDataType = c_int # enum
ChartEvents._disp_methods_ = [
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(1530)], None, 'Deactivate'),
    DISPMETHOD([dispid(256)], None, 'Resize'),
    DISPMETHOD([dispid(1531)], None, 'MouseDown',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'Shift' ),
               ( ['in'], c_int, 'x' ),
               ( ['in'], c_int, 'y' )),
    DISPMETHOD([dispid(1532)], None, 'MouseUp',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'Shift' ),
               ( ['in'], c_int, 'x' ),
               ( ['in'], c_int, 'y' )),
    DISPMETHOD([dispid(1533)], None, 'MouseMove',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'Shift' ),
               ( ['in'], c_int, 'x' ),
               ( ['in'], c_int, 'y' )),
    DISPMETHOD([dispid(1534)], None, 'BeforeRightClick',
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1535), 'hidden'], None, 'DragPlot'),
    DISPMETHOD([dispid(1536), 'hidden'], None, 'DragOver'),
    DISPMETHOD([dispid(1537)], None, 'BeforeDoubleClick',
               ( ['in'], c_int, 'ElementID' ),
               ( ['in'], c_int, 'Arg1' ),
               ( ['in'], c_int, 'Arg2' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in'], c_int, 'ElementID' ),
               ( ['in'], c_int, 'Arg1' ),
               ( ['in'], c_int, 'Arg2' )),
    DISPMETHOD([dispid(1538)], None, 'SeriesChange',
               ( ['in'], c_int, 'SeriesIndex' ),
               ( ['in'], c_int, 'PointIndex' )),
    DISPMETHOD([dispid(279)], None, 'Calculate'),
]

# values for enumeration 'XlAxisType'
xlCategory = 1
xlSeriesAxis = 3
xlValue = 2
XlAxisType = c_int # enum
class ISoundNote(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISoundNote._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Import',
              ( ['in'], BSTR, 'Filename' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Play',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Record',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for ISoundNote implementation
##class ISoundNote_Impl(object):
##    def Play(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Import(self, Filename):
##        '-no docstring-'
##        #return RHS
##
##    def Record(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class IXmlSchema(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024479-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXmlSchema._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Namespace',
              ( ['retval', 'out'], POINTER(POINTER(XmlNamespace)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'XML',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IXmlSchema implementation
##class IXmlSchema_Impl(object):
##    @property
##    def XML(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Namespace(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##

class IMenu(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020866-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMenu._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MenuItems',
              ( ['retval', 'out'], POINTER(POINTER(MenuItems)), 'RHS' )),
]
################################################################
## code template for IMenu implementation
##class IMenu_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MenuItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IDisplayFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDisplayFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaHidden',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IndentLevel',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MergeCells',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShrinkToFit',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WrapText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IDisplayFormat implementation
##class IDisplayFormat_Impl(object):
##    @property
##    def Style(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FormulaHidden(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Locked(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def NumberFormat(self, lcidIn):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def NumberFormatLocal(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AddIndent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShrinkToFit(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VerticalAlignment(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HorizontalAlignment(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IndentLevel(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MergeCells(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ReadingOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WrapText(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Orientation(self):
##        '-no docstring-'
##        #return RHS
##

class IWorkbookEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024412-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Window(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020893-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Panes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020894-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Panes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Pane), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Pane), '_Default',
               ( ['in'], c_int, 'Index' )),
]
class Sheets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D7-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

# values for enumeration 'XlWindowState'
xlMaximized = -4137
xlMinimized = -4140
xlNormal = -4143
XlWindowState = c_int # enum

# values for enumeration 'XlWindowView'
xlNormalView = 1
xlPageBreakPreview = 2
xlPageLayoutView = 3
XlWindowView = c_int # enum
class SheetViews(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SheetViews._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
Window._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(304)], VARIANT, 'Activate'),
    DISPMETHOD([dispid(1115)], VARIANT, 'ActivateNext'),
    DISPMETHOD([dispid(1116)], VARIANT, 'ActivatePrevious'),
    DISPMETHOD([dispid(305), 'propget'], POINTER(Range), 'ActiveCell'),
    DISPMETHOD([dispid(183), 'propget'], POINTER(Chart), 'ActiveChart'),
    DISPMETHOD([dispid(642), 'propget'], POINTER(Pane), 'ActivePane'),
    DISPMETHOD([dispid(307), 'propget'], POINTER(IDispatch), 'ActiveSheet'),
    DISPMETHOD([dispid(139), 'propget'], VARIANT, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(277)], VARIANT_BOOL, 'Close',
               ( ['in', 'optional'], VARIANT, 'SaveChanges' ),
               ( ['in', 'optional'], VARIANT, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'RouteWorkbook' )),
    DISPMETHOD([dispid(644), 'propget'], VARIANT_BOOL, 'DisplayFormulas'),
    DISPMETHOD([dispid(644), 'propput'], None, 'DisplayFormulas',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(645), 'propget'], VARIANT_BOOL, 'DisplayGridlines'),
    DISPMETHOD([dispid(645), 'propput'], None, 'DisplayGridlines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(646), 'propget'], VARIANT_BOOL, 'DisplayHeadings'),
    DISPMETHOD([dispid(646), 'propput'], None, 'DisplayHeadings',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(921), 'propget'], VARIANT_BOOL, 'DisplayHorizontalScrollBar'),
    DISPMETHOD([dispid(921), 'propput'], None, 'DisplayHorizontalScrollBar',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(647), 'propget'], VARIANT_BOOL, 'DisplayOutline'),
    DISPMETHOD([dispid(647), 'propput'], None, 'DisplayOutline',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(648), 'hidden', 'propget'], VARIANT_BOOL, '_DisplayRightToLeft'),
    DISPMETHOD([dispid(648), 'hidden', 'propput'], None, '_DisplayRightToLeft',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(922), 'propget'], VARIANT_BOOL, 'DisplayVerticalScrollBar'),
    DISPMETHOD([dispid(922), 'propput'], None, 'DisplayVerticalScrollBar',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(923), 'propget'], VARIANT_BOOL, 'DisplayWorkbookTabs'),
    DISPMETHOD([dispid(923), 'propput'], None, 'DisplayWorkbookTabs',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(649), 'propget'], VARIANT_BOOL, 'DisplayZeros'),
    DISPMETHOD([dispid(649), 'propput'], None, 'DisplayZeros',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1192), 'propget'], VARIANT_BOOL, 'EnableResize'),
    DISPMETHOD([dispid(1192), 'propput'], None, 'EnableResize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(650), 'propget'], VARIANT_BOOL, 'FreezePanes'),
    DISPMETHOD([dispid(650), 'propput'], None, 'FreezePanes',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(651), 'propget'], c_int, 'GridlineColor'),
    DISPMETHOD([dispid(651), 'propput'], None, 'GridlineColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(652), 'propget'], XlColorIndex, 'GridlineColorIndex'),
    DISPMETHOD([dispid(652), 'propput'], None, 'GridlineColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(547)], VARIANT, 'LargeScroll',
               ( ['in', 'optional'], VARIANT, 'Down' ),
               ( ['in', 'optional'], VARIANT, 'Up' ),
               ( ['in', 'optional'], VARIANT, 'ToRight' ),
               ( ['in', 'optional'], VARIANT, 'ToLeft' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(280)], POINTER(Window), 'NewWindow'),
    DISPMETHOD([dispid(623), 'propget'], BSTR, 'OnWindow'),
    DISPMETHOD([dispid(623), 'propput'], None, 'OnWindow',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(653), 'propget'], POINTER(Panes), 'Panes'),
    DISPMETHOD([dispid(1772), 'hidden'], VARIANT, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(281)], VARIANT, 'PrintPreview',
               ( ['in', 'optional'], VARIANT, 'EnableChanges' )),
    DISPMETHOD([dispid(1189), 'propget'], POINTER(Range), 'RangeSelection'),
    DISPMETHOD([dispid(654), 'propget'], c_int, 'ScrollColumn'),
    DISPMETHOD([dispid(654), 'propput'], None, 'ScrollColumn',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(655), 'propget'], c_int, 'ScrollRow'),
    DISPMETHOD([dispid(655), 'propput'], None, 'ScrollRow',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(662)], VARIANT, 'ScrollWorkbookTabs',
               ( ['in', 'optional'], VARIANT, 'Sheets' ),
               ( ['in', 'optional'], VARIANT, 'Position' )),
    DISPMETHOD([dispid(656), 'propget'], POINTER(Sheets), 'SelectedSheets'),
    DISPMETHOD([dispid(147), 'propget'], POINTER(IDispatch), 'Selection'),
    DISPMETHOD([dispid(548)], VARIANT, 'SmallScroll',
               ( ['in', 'optional'], VARIANT, 'Down' ),
               ( ['in', 'optional'], VARIANT, 'Up' ),
               ( ['in', 'optional'], VARIANT, 'ToRight' ),
               ( ['in', 'optional'], VARIANT, 'ToLeft' )),
    DISPMETHOD([dispid(657), 'propget'], VARIANT_BOOL, 'Split'),
    DISPMETHOD([dispid(657), 'propput'], None, 'Split',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(658), 'propget'], c_int, 'SplitColumn'),
    DISPMETHOD([dispid(658), 'propput'], None, 'SplitColumn',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(659), 'propget'], c_double, 'SplitHorizontal'),
    DISPMETHOD([dispid(659), 'propput'], None, 'SplitHorizontal',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(660), 'propget'], c_int, 'SplitRow'),
    DISPMETHOD([dispid(660), 'propput'], None, 'SplitRow',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(661), 'propget'], c_double, 'SplitVertical'),
    DISPMETHOD([dispid(661), 'propput'], None, 'SplitVertical',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(673), 'propget'], c_double, 'TabRatio'),
    DISPMETHOD([dispid(673), 'propput'], None, 'TabRatio',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], XlWindowType, 'Type'),
    DISPMETHOD([dispid(389), 'propget'], c_double, 'UsableHeight'),
    DISPMETHOD([dispid(390), 'propget'], c_double, 'UsableWidth'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1118), 'propget'], POINTER(Range), 'VisibleRange'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1119), 'propget'], c_int, 'WindowNumber'),
    DISPMETHOD([dispid(396), 'propget'], XlWindowState, 'WindowState'),
    DISPMETHOD([dispid(396), 'propput'], None, 'WindowState',
               ( ['in'], XlWindowState, 'rhs' )),
    DISPMETHOD([dispid(663), 'propget'], VARIANT, 'Zoom'),
    DISPMETHOD([dispid(663), 'propput'], None, 'Zoom',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1194), 'propget'], XlWindowView, 'View'),
    DISPMETHOD([dispid(1194), 'propput'], None, 'View',
               ( ['in'], XlWindowView, 'rhs' )),
    DISPMETHOD([dispid(1774), 'propget'], VARIANT_BOOL, 'DisplayRightToLeft'),
    DISPMETHOD([dispid(1774), 'propput'], None, 'DisplayRightToLeft',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1776)], c_int, 'PointsToScreenPixelsX',
               ( ['in'], c_int, 'Points' )),
    DISPMETHOD([dispid(1777)], c_int, 'PointsToScreenPixelsY',
               ( ['in'], c_int, 'Points' )),
    DISPMETHOD([dispid(1778)], POINTER(IDispatch), 'RangeFromPoint',
               ( ['in'], c_int, 'x' ),
               ( ['in'], c_int, 'y' )),
    DISPMETHOD([dispid(1781)], None, 'ScrollIntoView',
               ( ['in'], c_int, 'Left' ),
               ( ['in'], c_int, 'Top' ),
               ( ['in'], c_int, 'Width' ),
               ( ['in'], c_int, 'Height' ),
               ( ['in', 'optional'], VARIANT, 'Start' )),
    DISPMETHOD([dispid(2368), 'propget'], POINTER(SheetViews), 'SheetViews'),
    DISPMETHOD([dispid(2369), 'propget'], POINTER(IDispatch), 'ActiveSheetView'),
    DISPMETHOD([dispid(2361)], VARIANT, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2370), 'propget'], VARIANT_BOOL, 'DisplayRuler'),
    DISPMETHOD([dispid(2370), 'propput'], None, 'DisplayRuler',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2371), 'propget'], VARIANT_BOOL, 'AutoFilterDateGrouping'),
    DISPMETHOD([dispid(2371), 'propput'], None, 'AutoFilterDateGrouping',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2372), 'propget'], VARIANT_BOOL, 'DisplayWhitespace'),
    DISPMETHOD([dispid(2372), 'propput'], None, 'DisplayWhitespace',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1950), 'propget'], c_int, 'Hwnd'),
]
class ModelChanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelTableNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelTableNames._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], BSTR, 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class ModelTableNameChanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelTableNameChanges._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ModelTableNameChange), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ModelTableNameChange), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class ModelColumnNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E6-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelColumnName(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E5-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelColumnName._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(688), 'propget'], BSTR, 'TableName'),
    DISPMETHOD([dispid(3156), 'propget'], BSTR, 'ColumnName'),
]
ModelColumnNames._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ModelColumnName), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ModelColumnName), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class ModelColumnChanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E8-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelColumnChange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E7-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelColumnChange._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(688), 'propget'], BSTR, 'TableName'),
    DISPMETHOD([dispid(3156), 'propget'], BSTR, 'ColumnName'),
]
ModelColumnChanges._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ModelColumnChange), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ModelColumnChange), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class ModelMeasureNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244EA-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ModelMeasureName(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E9-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModelMeasureName._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(688), 'propget'], BSTR, 'TableName'),
    DISPMETHOD([dispid(3157), 'propget'], BSTR, 'MeasureName'),
]
ModelMeasureNames._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ModelMeasureName), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ModelMeasureName), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
ModelChanges._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(3145), 'propget'], POINTER(ModelTableNames), 'TablesAdded'),
    DISPMETHOD([dispid(3146), 'propget'], POINTER(ModelTableNames), 'TablesDeleted'),
    DISPMETHOD([dispid(3147), 'propget'], POINTER(ModelTableNames), 'TablesModified'),
    DISPMETHOD([dispid(3148), 'propget'], POINTER(ModelTableNameChanges), 'TableNamesChanged'),
    DISPMETHOD([dispid(3149), 'propget'], VARIANT_BOOL, 'RelationshipChange'),
    DISPMETHOD([dispid(3150), 'propget'], POINTER(ModelColumnNames), 'ColumnsAdded'),
    DISPMETHOD([dispid(3151), 'propget'], POINTER(ModelColumnNames), 'ColumnsDeleted'),
    DISPMETHOD([dispid(3152), 'propget'], POINTER(ModelColumnChanges), 'ColumnsChanged'),
    DISPMETHOD([dispid(3153), 'propget'], POINTER(ModelMeasureNames), 'MeasuresAdded'),
    DISPMETHOD([dispid(3154), 'propget'], VARIANT_BOOL, 'UnknownChange'),
    DISPMETHOD([dispid(222), 'propget'], XlModelChangeSource, 'Source'),
]
IWorkbookEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Open'),
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD([], HRESULT, 'Deactivate'),
    COMMETHOD([], HRESULT, 'BeforeClose',
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'BeforeSave',
              ( ['in'], VARIANT_BOOL, 'SaveAsUI' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'BeforePrint',
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'NewSheet',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'AddinInstall'),
    COMMETHOD([], HRESULT, 'AddinUninstall'),
    COMMETHOD([], HRESULT, 'WindowResize',
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'WindowActivate',
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'WindowDeactivate',
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'SheetSelectionChange',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' )),
    COMMETHOD([], HRESULT, 'SheetBeforeDoubleClick',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetBeforeRightClick',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetActivate',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetDeactivate',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetCalculate',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetChange',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' )),
    COMMETHOD([], HRESULT, 'SheetFollowHyperlink',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Hyperlink), 'Target' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableUpdate',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'PivotTableCloseConnection',
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'PivotTableOpenConnection',
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'Sync',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSyncEventType, 'SyncEventType' )),
    COMMETHOD([], HRESULT, 'BeforeXmlImport',
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'AfterXmlImport',
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
              ( ['in'], XlXmlImportResult, 'Result' )),
    COMMETHOD([], HRESULT, 'BeforeXmlExport',
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'AfterXmlExport',
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in'], XlXmlExportResult, 'Result' )),
    COMMETHOD([], HRESULT, 'RowsetComplete',
              ( ['in'], BSTR, 'Description' ),
              ( ['in'], BSTR, 'Sheet' ),
              ( ['in'], VARIANT_BOOL, 'Success' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableAfterValueChange',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], POINTER(Range), 'TargetRange' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableBeforeAllocateChanges',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableBeforeCommitChanges',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableBeforeDiscardChanges',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableChangeSync',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'AfterSave',
              ( ['in'], VARIANT_BOOL, 'Success' )),
    COMMETHOD([], HRESULT, 'NewChart',
              ( ['in'], POINTER(Chart), 'Ch' )),
    COMMETHOD([], HRESULT, 'SheetLensGalleryRenderComplete',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetTableUpdate',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(TableObject), 'Target' )),
    COMMETHOD([], HRESULT, 'ModelChange',
              ( ['in'], POINTER(ModelChanges), 'Changes' )),
    COMMETHOD([], HRESULT, 'SheetBeforeDelete',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
]
################################################################
## code template for IWorkbookEvents implementation
##class IWorkbookEvents_Impl(object):
##    def Deactivate(self):
##        '-no docstring-'
##        #return 
##
##    def Sync(self, SyncEventType):
##        '-no docstring-'
##        #return 
##
##    def BeforePrint(self):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetBeforeRightClick(self, Sh, Target):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetPivotTableBeforeAllocateChanges(self, Sh, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetFollowHyperlink(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def BeforeXmlImport(self, Map, Url, IsRefresh):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetSelectionChange(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def SheetActivate(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def BeforeSave(self, SaveAsUI):
##        '-no docstring-'
##        #return Cancel
##
##    def AfterXmlImport(self, Map, IsRefresh, Result):
##        '-no docstring-'
##        #return 
##
##    def BeforeXmlExport(self, Map, Url):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetPivotTableAfterValueChange(self, Sh, TargetPivotTable, TargetRange):
##        '-no docstring-'
##        #return 
##
##    def SheetChange(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def AddinUninstall(self):
##        '-no docstring-'
##        #return 
##
##    def SheetPivotTableBeforeDiscardChanges(self, Sh, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return 
##
##    def ModelChange(self, Changes):
##        '-no docstring-'
##        #return 
##
##    def AddinInstall(self):
##        '-no docstring-'
##        #return 
##
##    def PivotTableOpenConnection(self, Target):
##        '-no docstring-'
##        #return 
##
##    def SheetBeforeDelete(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def SheetCalculate(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def SheetBeforeDoubleClick(self, Sh, Target):
##        '-no docstring-'
##        #return Cancel
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def SheetDeactivate(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def WindowDeactivate(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def WindowResize(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def SheetPivotTableUpdate(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def SheetTableUpdate(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def PivotTableCloseConnection(self, Target):
##        '-no docstring-'
##        #return 
##
##    def SheetLensGalleryRenderComplete(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def BeforeClose(self):
##        '-no docstring-'
##        #return Cancel
##
##    def WindowActivate(self, Wn):
##        '-no docstring-'
##        #return 
##
##    def AfterSave(self, Success):
##        '-no docstring-'
##        #return 
##
##    def AfterXmlExport(self, Map, Url, Result):
##        '-no docstring-'
##        #return 
##
##    def SheetPivotTableBeforeCommitChanges(self, Sh, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return Cancel
##
##    def NewSheet(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def Open(self):
##        '-no docstring-'
##        #return 
##
##    def SheetPivotTableChangeSync(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def NewChart(self, Ch):
##        '-no docstring-'
##        #return 
##
##    def RowsetComplete(self, Description, Sheet, Success):
##        '-no docstring-'
##        #return 
##

class IConnectorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IConnectorFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BeginConnect',
              ( ['in'], POINTER(Shape), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([], HRESULT, 'BeginDisconnect'),
    COMMETHOD([], HRESULT, 'EndConnect',
              ( ['in'], POINTER(Shape), 'ConnectedShape' ),
              ( ['in'], c_int, 'ConnectionSite' )),
    COMMETHOD([], HRESULT, 'EndDisconnect'),
    COMMETHOD(['propget'], HRESULT, 'BeginConnected',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BeginConnectedShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BeginConnectionSite',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EndConnected',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EndConnectedShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EndConnectionSite',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoConnectorType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoConnectorType, 'RHS' )),
]
################################################################
## code template for IConnectorFormat implementation
##class IConnectorFormat_Impl(object):
##    @property
##    def BeginConnectedShape(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def EndConnectionSite(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BeginConnectionSite(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EndConnectedShape(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def EndDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    def BeginDisconnect(self):
##        '-no docstring-'
##        #return 
##
##    def EndConnect(self, ConnectedShape, ConnectionSite):
##        '-no docstring-'
##        #return 
##
##    @property
##    def EndConnected(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BeginConnected(self):
##        '-no docstring-'
##        #return RHS
##
##    def BeginConnect(self, ConnectedShape, ConnectionSite):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlPattern'
xlPatternAutomatic = -4105
xlPatternChecker = 9
xlPatternCrissCross = 16
xlPatternDown = -4121
xlPatternGray16 = 17
xlPatternGray25 = -4124
xlPatternGray50 = -4125
xlPatternGray75 = -4126
xlPatternGray8 = 18
xlPatternGrid = 15
xlPatternHorizontal = -4128
xlPatternLightDown = 13
xlPatternLightHorizontal = 11
xlPatternLightUp = 14
xlPatternLightVertical = 12
xlPatternNone = -4142
xlPatternSemiGray75 = 10
xlPatternSolid = 1
xlPatternUp = -4162
xlPatternVertical = -4166
xlPatternLinearGradient = 4000
xlPatternRectangularGradient = 4001
XlPattern = c_int # enum
class OLEObject(CoClass):
    _reg_clsid_ = GUID('{00020818-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
class _OLEObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A2-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class OLEObjectEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024410-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
OLEObject._com_interfaces_ = [_OLEObject]
OLEObject._outgoing_interfaces_ = [OLEObjectEvents]

class IAddIns2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B5-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class AddIn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020857-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
AddIn._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(574), 'hidden', 'propget'], BSTR, 'Author'),
    DISPMETHOD([dispid(575), 'hidden', 'propget'], BSTR, 'Comments'),
    DISPMETHOD([dispid(289), 'propget'], BSTR, 'FullName'),
    DISPMETHOD([dispid(550), 'propget'], VARIANT_BOOL, 'Installed'),
    DISPMETHOD([dispid(550), 'propput'], None, 'Installed',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(577), 'hidden', 'propget'], BSTR, 'Keywords'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(291), 'propget'], BSTR, 'Path'),
    DISPMETHOD([dispid(953), 'hidden', 'propget'], BSTR, 'Subject'),
    DISPMETHOD([dispid(199), 'hidden', 'propget'], BSTR, 'Title'),
    DISPMETHOD([dispid(1523), 'propget'], BSTR, 'progID'),
    DISPMETHOD([dispid(2043), 'propget'], BSTR, 'CLSID'),
    DISPMETHOD([dispid(2865), 'propget'], VARIANT_BOOL, 'IsOpen'),
]
IAddIns2._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'CopyFile' ),
              ( ['retval', 'out'], POINTER(POINTER(AddIn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(AddIn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(AddIn)), 'RHS' )),
]
################################################################
## code template for IAddIns2 implementation
##class IAddIns2_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Filename, CopyFile):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class Rectangles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class Rectangle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Rectangle._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
Rectangles._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(Rectangle), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IRefreshEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRefreshEvents._methods_ = [
    COMMETHOD([], HRESULT, 'BeforeRefresh',
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'AfterRefresh',
              ( ['in'], VARIANT_BOOL, 'Success' )),
]
################################################################
## code template for IRefreshEvents implementation
##class IRefreshEvents_Impl(object):
##    def AfterRefresh(self, Success):
##        '-no docstring-'
##        #return 
##
##    def BeforeRefresh(self):
##        '-no docstring-'
##        #return Cancel
##

class IModelMeasureName(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelMeasureName._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MeasureName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IModelMeasureName implementation
##class IModelMeasureName_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MeasureName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlErrorBarType'
xlErrorBarTypeCustom = -4114
xlErrorBarTypeFixedValue = 1
xlErrorBarTypePercent = 2
xlErrorBarTypeStDev = -4155
xlErrorBarTypeStError = 4
XlErrorBarType = c_int # enum
class ProtectedViewWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CD-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlProtectedViewWindowState'
xlProtectedViewWindowNormal = 0
xlProtectedViewWindowMinimized = 1
xlProtectedViewWindowMaximized = 2
XlProtectedViewWindowState = c_int # enum
ProtectedViewWindow._disp_methods_ = [
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1192), 'propget'], VARIANT_BOOL, 'EnableResize'),
    DISPMETHOD([dispid(1192), 'propput'], None, 'EnableResize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(721), 'propget'], BSTR, 'SourceName'),
    DISPMETHOD([dispid(2993), 'propget'], BSTR, 'SourcePath'),
    DISPMETHOD([dispid(396), 'propget'], XlProtectedViewWindowState, 'WindowState'),
    DISPMETHOD([dispid(396), 'propput'], None, 'WindowState',
               ( ['in'], XlProtectedViewWindowState, 'rhs' )),
    DISPMETHOD([dispid(752), 'propget'], POINTER(Workbook), 'Workbook'),
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(277)], VARIANT_BOOL, 'Close'),
    DISPMETHOD([dispid(562)], POINTER(Workbook), 'Edit',
               ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
               ( ['in', 'optional'], VARIANT, 'UpdateLinks' )),
]

# values for enumeration 'XlFormatConditionOperator'
xlBetween = 1
xlNotBetween = 2
xlEqual = 3
xlNotEqual = 4
xlGreater = 5
xlLess = 6
xlGreaterEqual = 7
xlLessEqual = 8
XlFormatConditionOperator = c_int # enum
class IFilter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024434-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFilter._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'On',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Criteria1',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_Operator',
              ( ['retval', 'out'], POINTER(XlAutoFilterOperator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Criteria2',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Operator',
              ( ['retval', 'out'], POINTER(XlAutoFilterOperator), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Operator',
              ( ['in'], XlAutoFilterOperator, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IFilter implementation
##class IFilter_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def On(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Criteria1(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Operator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Criteria2(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Operator = property(_get, _set, doc = _set.__doc__)
##

class Scenarios(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020896-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlSummaryReportType'
xlSummaryPivotTable = -4148
xlStandardSummary = 1
XlSummaryReportType = c_int # enum
Scenarios._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Scenario), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], VARIANT, 'ChangingCells' ),
               ( ['in', 'optional'], VARIANT, 'Values' ),
               ( ['in', 'optional'], VARIANT, 'Comment' ),
               ( ['in', 'optional'], VARIANT, 'Locked' ),
               ( ['in', 'optional'], VARIANT, 'Hidden' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(913)], VARIANT, 'CreateSummary',
               ( ['in', 'optional'], XlSummaryReportType, 'ReportType', 1 ),
               ( ['in', 'optional'], VARIANT, 'ResultCells' )),
    DISPMETHOD([dispid(170)], POINTER(Scenario), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(564)], VARIANT, 'Merge',
               ( ['in'], VARIANT, 'Source' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IListColumn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024473-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListColumn._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'ListDataFormat',
              ( ['retval', 'out'], POINTER(POINTER(ListDataFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TotalsCalculation',
              ( ['retval', 'out'], POINTER(XlTotalsCalculation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TotalsCalculation',
              ( ['in'], XlTotalsCalculation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'XPath',
              ( ['retval', 'out'], POINTER(POINTER(XPath)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'SharePointFormula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataBodyRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Total',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
]
################################################################
## code template for IListColumn implementation
##class IListColumn_Impl(object):
##    @property
##    def XPath(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataBodyRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ListDataFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SharePointFormula(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TotalsCalculation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Total(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IFullSeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DC-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Series(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlErrorBarDirection'
xlX = -4168
xlY = 1
XlErrorBarDirection = c_int # enum

# values for enumeration 'XlErrorBarInclude'
xlErrorBarIncludeBoth = 1
xlErrorBarIncludeMinusValues = 3
xlErrorBarIncludeNone = -4142
xlErrorBarIncludePlusValues = 2
XlErrorBarInclude = c_int # enum
class ErrorBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CE-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlEndStyleCap'
xlCap = 1
xlNoCap = 2
XlEndStyleCap = c_int # enum
ErrorBars._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(1124), 'propget'], XlEndStyleCap, 'EndStyle'),
    DISPMETHOD([dispid(1124), 'propput'], None, 'EndStyle',
               ( ['in'], XlEndStyleCap, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
class LeaderLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024437-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
LeaderLines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(235)], None, 'Select'),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
Series._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(151), 'hidden'], VARIANT, '_ApplyDataLabels',
               ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
               ( ['in', 'optional'], VARIANT, 'LegendKey' ),
               ( ['in', 'optional'], VARIANT, 'AutoText' ),
               ( ['in', 'optional'], VARIANT, 'HasLeaderLines' )),
    DISPMETHOD([dispid(47), 'propget'], XlAxisGroup, 'AxisGroup'),
    DISPMETHOD([dispid(47), 'propput'], None, 'AxisGroup',
               ( ['in'], XlAxisGroup, 'rhs' )),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(112)], VARIANT, 'ClearFormats'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(157)], POINTER(IDispatch), 'DataLabels',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(152)], VARIANT, 'ErrorBar',
               ( ['in'], XlErrorBarDirection, 'Direction' ),
               ( ['in'], XlErrorBarInclude, 'Include' ),
               ( ['in'], XlErrorBarType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Amount' ),
               ( ['in', 'optional'], VARIANT, 'MinusValues' )),
    DISPMETHOD([dispid(159), 'propget'], POINTER(ErrorBars), 'ErrorBars'),
    DISPMETHOD([dispid(182), 'propget'], c_int, 'Explosion'),
    DISPMETHOD([dispid(182), 'propput'], None, 'Explosion',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(263), 'propget'], BSTR, 'FormulaLocal'),
    DISPMETHOD([dispid(263), 'propput'], None, 'FormulaLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(264), 'propget'], BSTR, 'FormulaR1C1'),
    DISPMETHOD([dispid(264), 'propput'], None, 'FormulaR1C1',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(265), 'propget'], BSTR, 'FormulaR1C1Local'),
    DISPMETHOD([dispid(265), 'propput'], None, 'FormulaR1C1Local',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(78), 'propget'], VARIANT_BOOL, 'HasDataLabels'),
    DISPMETHOD([dispid(78), 'propput'], None, 'HasDataLabels',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(160), 'propget'], VARIANT_BOOL, 'HasErrorBars'),
    DISPMETHOD([dispid(160), 'propput'], None, 'HasErrorBars',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(132), 'propget'], VARIANT_BOOL, 'InvertIfNegative'),
    DISPMETHOD([dispid(132), 'propput'], None, 'InvertIfNegative',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(73), 'propget'], c_int, 'MarkerBackgroundColor'),
    DISPMETHOD([dispid(73), 'propput'], None, 'MarkerBackgroundColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(74), 'propget'], XlColorIndex, 'MarkerBackgroundColorIndex'),
    DISPMETHOD([dispid(74), 'propput'], None, 'MarkerBackgroundColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(75), 'propget'], c_int, 'MarkerForegroundColor'),
    DISPMETHOD([dispid(75), 'propput'], None, 'MarkerForegroundColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(76), 'propget'], XlColorIndex, 'MarkerForegroundColorIndex'),
    DISPMETHOD([dispid(76), 'propput'], None, 'MarkerForegroundColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(231), 'propget'], c_int, 'MarkerSize'),
    DISPMETHOD([dispid(231), 'propput'], None, 'MarkerSize',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(72), 'propget'], XlMarkerStyle, 'MarkerStyle'),
    DISPMETHOD([dispid(72), 'propput'], None, 'MarkerStyle',
               ( ['in'], XlMarkerStyle, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(211)], VARIANT, 'Paste'),
    DISPMETHOD([dispid(161), 'propget'], XlChartPictureType, 'PictureType'),
    DISPMETHOD([dispid(161), 'propput'], None, 'PictureType',
               ( ['in'], XlChartPictureType, 'rhs' )),
    DISPMETHOD([dispid(162), 'hidden', 'propget'], c_int, 'PictureUnit'),
    DISPMETHOD([dispid(162), 'hidden', 'propput'], None, 'PictureUnit',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(228), 'propget'], c_int, 'PlotOrder'),
    DISPMETHOD([dispid(228), 'propput'], None, 'PlotOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(70)], POINTER(IDispatch), 'Points',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(163), 'propget'], VARIANT_BOOL, 'Smooth'),
    DISPMETHOD([dispid(163), 'propput'], None, 'Smooth',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(154)], POINTER(IDispatch), 'Trendlines',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1400), 'propget'], XlChartType, 'ChartType'),
    DISPMETHOD([dispid(1400), 'propput'], None, 'ChartType',
               ( ['in'], XlChartType, 'rhs' )),
    DISPMETHOD([dispid(1401), 'hidden'], None, 'ApplyCustomType',
               ( ['in'], XlChartType, 'ChartType' )),
    DISPMETHOD([dispid(164), 'propget'], VARIANT, 'Values'),
    DISPMETHOD([dispid(164), 'propput'], None, 'Values',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1111), 'propget'], VARIANT, 'XValues'),
    DISPMETHOD([dispid(1111), 'propput'], None, 'XValues',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1664), 'propget'], VARIANT, 'BubbleSizes'),
    DISPMETHOD([dispid(1664), 'propput'], None, 'BubbleSizes',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1403), 'propget'], XlBarShape, 'BarShape'),
    DISPMETHOD([dispid(1403), 'propput'], None, 'BarShape',
               ( ['in'], XlBarShape, 'rhs' )),
    DISPMETHOD([dispid(1659), 'propget'], VARIANT_BOOL, 'ApplyPictToSides'),
    DISPMETHOD([dispid(1659), 'propput'], None, 'ApplyPictToSides',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1660), 'propget'], VARIANT_BOOL, 'ApplyPictToFront'),
    DISPMETHOD([dispid(1660), 'propput'], None, 'ApplyPictToFront',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1661), 'propget'], VARIANT_BOOL, 'ApplyPictToEnd'),
    DISPMETHOD([dispid(1661), 'propput'], None, 'ApplyPictToEnd',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1665), 'propget'], VARIANT_BOOL, 'Has3DEffect'),
    DISPMETHOD([dispid(1665), 'propput'], None, 'Has3DEffect',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1394), 'propget'], VARIANT_BOOL, 'HasLeaderLines'),
    DISPMETHOD([dispid(1394), 'propput'], None, 'HasLeaderLines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1666), 'propget'], POINTER(LeaderLines), 'LeaderLines'),
    DISPMETHOD([dispid(1922)], VARIANT, 'ApplyDataLabels',
               ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
               ( ['in', 'optional'], VARIANT, 'LegendKey' ),
               ( ['in', 'optional'], VARIANT, 'AutoText' ),
               ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
               ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
               ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
               ( ['in', 'optional'], VARIANT, 'ShowValue' ),
               ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
               ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
               ( ['in', 'optional'], VARIANT, 'Separator' )),
    DISPMETHOD([dispid(2649), 'propget'], c_double, 'PictureUnit2'),
    DISPMETHOD([dispid(2649), 'propput'], None, 'PictureUnit2',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(2915), 'propget'], c_int, 'PlotColorIndex'),
    DISPMETHOD([dispid(2916), 'propget'], c_int, 'InvertColor'),
    DISPMETHOD([dispid(2916), 'propput'], None, 'InvertColor',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2917), 'propget'], c_int, 'InvertColorIndex'),
    DISPMETHOD([dispid(2917), 'propput'], None, 'InvertColorIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(3083), 'propget'], VARIANT_BOOL, 'IsFiltered'),
    DISPMETHOD([dispid(3083), 'propput'], None, 'IsFiltered',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
IFullSeriesCollection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Series)), 'RHS' )),
]
################################################################
## code template for IFullSeriesCollection implementation
##class IFullSeriesCollection_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IAboveAverage(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlAboveBelow'
xlAboveAverage = 0
xlBelowAverage = 1
xlEqualAboveAverage = 2
xlEqualBelowAverage = 3
xlAboveStdDev = 4
xlBelowStdDev = 5
XlAboveBelow = c_int # enum
IAboveAverage._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StopIfTrue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StopIfTrue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppliesTo',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AboveBelow',
              ( ['retval', 'out'], POINTER(XlAboveBelow), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AboveBelow',
              ( ['in'], XlAboveBelow, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'SetFirstPriority'),
    COMMETHOD([], HRESULT, 'SetLastPriority'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'ModifyAppliesToRange',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD(['propget'], HRESULT, 'PTCondition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScopeType',
              ( ['retval', 'out'], POINTER(XlPivotConditionScope), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScopeType',
              ( ['in'], XlPivotConditionScope, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CalcFor',
              ( ['retval', 'out'], POINTER(XlCalcFor), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CalcFor',
              ( ['in'], XlCalcFor, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumStdDev',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumStdDev',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IAboveAverage implementation
##class IAboveAverage_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AboveBelow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PTCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumStdDev = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AppliesTo(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StopIfTrue = property(_get, _set, doc = _set.__doc__)
##
##    def ModifyAppliesToRange(self, Range):
##        '-no docstring-'
##        #return 
##
##    def SetFirstPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CalcFor = property(_get, _set, doc = _set.__doc__)
##
##    def SetLastPriority(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScopeType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class ITimelineViewState(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITimelineViewState._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowHeader',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowHeader',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowSelectionLabel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowSelectionLabel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTimeLevel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTimeLevel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowHorizontalScrollbar',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowHorizontalScrollbar',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Level',
              ( ['retval', 'out'], POINTER(XlTimelineLevel), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Level',
              ( ['in'], XlTimelineLevel, 'RHS' )),
]
################################################################
## code template for ITimelineViewState implementation
##class ITimelineViewState_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSelectionLabel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowHeader = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTimeLevel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowHorizontalScrollbar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Level = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlHighlightChangesTime'
xlSinceMyLastSave = 1
xlAllChanges = 2
xlNotYetReviewed = 3
XlHighlightChangesTime = c_int # enum
class IModelTableColumns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D6-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelTableColumns._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelTableColumn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelTableColumn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IModelTableColumns implementation
##class IModelTableColumns_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IIconCriterion(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024499-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlIcon'
xlIconNoCellIcon = -1
xlIconGreenUpArrow = 1
xlIconYellowSideArrow = 2
xlIconRedDownArrow = 3
xlIconGrayUpArrow = 4
xlIconGraySideArrow = 5
xlIconGrayDownArrow = 6
xlIconGreenFlag = 7
xlIconYellowFlag = 8
xlIconRedFlag = 9
xlIconGreenCircle = 10
xlIconYellowCircle = 11
xlIconRedCircleWithBorder = 12
xlIconBlackCircleWithBorder = 13
xlIconGreenTrafficLight = 14
xlIconYellowTrafficLight = 15
xlIconRedTrafficLight = 16
xlIconYellowTriangle = 17
xlIconRedDiamond = 18
xlIconGreenCheckSymbol = 19
xlIconYellowExclamationSymbol = 20
xlIconRedCrossSymbol = 21
xlIconGreenCheck = 22
xlIconYellowExclamation = 23
xlIconRedCross = 24
xlIconYellowUpInclineArrow = 25
xlIconYellowDownInclineArrow = 26
xlIconGrayUpInclineArrow = 27
xlIconGrayDownInclineArrow = 28
xlIconRedCircle = 29
xlIconPinkCircle = 30
xlIconGrayCircle = 31
xlIconBlackCircle = 32
xlIconCircleWithOneWhiteQuarter = 33
xlIconCircleWithTwoWhiteQuarters = 34
xlIconCircleWithThreeWhiteQuarters = 35
xlIconWhiteCircleAllWhiteQuarters = 36
xlIcon0Bars = 37
xlIcon1Bar = 38
xlIcon2Bars = 39
xlIcon3Bars = 40
xlIcon4Bars = 41
xlIconGoldStar = 42
xlIconHalfGoldStar = 43
xlIconSilverStar = 44
xlIconGreenUpTriangle = 45
xlIconYellowDash = 46
xlIconRedDownTriangle = 47
xlIcon4FilledBoxes = 48
xlIcon3FilledBoxes = 49
xlIcon2FilledBoxes = 50
xlIcon1FilledBox = 51
xlIcon0FilledBoxes = 52
XlIcon = c_int # enum
IIconCriterion._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlConditionValueTypes), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlConditionValueTypes, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Operator',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Operator',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Icon',
              ( ['retval', 'out'], POINTER(XlIcon), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Icon',
              ( ['in'], XlIcon, 'RHS' )),
]
################################################################
## code template for IIconCriterion implementation
##class IIconCriterion_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Operator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Icon = property(_get, _set, doc = _set.__doc__)
##

class IConnections(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024486-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IConnections._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_AddFromFile',
              ( ['in'], BSTR, 'Filename' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Description' ),
              ( ['in'], VARIANT, 'ConnectionString' ),
              ( ['in'], VARIANT, 'CommandText' ),
              ( ['in', 'optional'], VARIANT, 'lCmdtype' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add2',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Description' ),
              ( ['in'], VARIANT, 'ConnectionString' ),
              ( ['in'], VARIANT, 'CommandText' ),
              ( ['in', 'optional'], VARIANT, 'lCmdtype' ),
              ( ['in', 'optional'], VARIANT, 'CreateModelConnection' ),
              ( ['in', 'optional'], VARIANT, 'ImportRelationships' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddFromFile',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'CreateModelConnection' ),
              ( ['in', 'optional'], VARIANT, 'ImportRelationships' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
]
################################################################
## code template for IConnections implementation
##class IConnections_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Name, Description, ConnectionString, CommandText, lCmdtype, CreateModelConnection, ImportRelationships):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddFromFile(self, Filename, CreateModelConnection, ImportRelationships):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, Description, ConnectionString, CommandText, lCmdtype):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _AddFromFile(self, Filename):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ShapeNode(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C0318-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
ShapeNode._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'EditingType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEditingType), 'EditingType' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Points',
              ( ['retval', 'out'], POINTER(VARIANT), 'Points' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'SegmentType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSegmentType), 'SegmentType' )),
]
################################################################
## code template for ShapeNode implementation
##class ShapeNode_Impl(object):
##    @property
##    def SegmentType(self):
##        '-no docstring-'
##        #return SegmentType
##
##    @property
##    def Points(self):
##        '-no docstring-'
##        #return Points
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def EditingType(self):
##        '-no docstring-'
##        #return EditingType
##

class CellFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024450-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
CellFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(435), 'propputref'], None, 'Borders',
               ( ['in'], POINTER(Borders), 'rhs' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(146), 'propputref'], None, 'Font',
               ( ['in'], POINTER(Font), 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(129), 'propputref'], None, 'Interior',
               ( ['in'], POINTER(Interior), 'rhs' )),
    DISPMETHOD([dispid(193), 'propget'], VARIANT, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1097), 'propget'], VARIANT, 'NumberFormatLocal'),
    DISPMETHOD([dispid(1097), 'propput'], None, 'NumberFormatLocal',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(201), 'propget'], VARIANT, 'IndentLevel'),
    DISPMETHOD([dispid(201), 'propput'], None, 'IndentLevel',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(209), 'propget'], VARIANT, 'ShrinkToFit'),
    DISPMETHOD([dispid(209), 'propput'], None, 'ShrinkToFit',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(276), 'propget'], VARIANT, 'WrapText'),
    DISPMETHOD([dispid(276), 'propput'], None, 'WrapText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(262), 'propget'], VARIANT, 'FormulaHidden'),
    DISPMETHOD([dispid(262), 'propput'], None, 'FormulaHidden',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(208), 'propget'], VARIANT, 'MergeCells'),
    DISPMETHOD([dispid(208), 'propput'], None, 'MergeCells',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(111)], None, 'Clear'),
]
class IPivotLineCells(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotLineCells._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotCell)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotCell)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Full',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IPivotLineCells implementation
##class IPivotLineCells_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Full(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IMenuItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020868-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMenuItem._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Checked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Checked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HelpContextID',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HelpContextID',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HelpFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HelpFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StatusBar',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StatusBar',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IMenuItem implementation
##class IMenuItem_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Checked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StatusBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HelpContextID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HelpFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IDataLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDataLabel._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLinked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowLegendKey',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Type',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlDataLabelPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlDataLabelPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowSeriesName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowSeriesName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowCategoryName',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowCategoryName',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowValue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowPercentage',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowPercentage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowBubbleSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowBubbleSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Separator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Separator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1Local',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowRange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowRange',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for IDataLabel implementation
##class IDataLabel_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowBubbleSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPercentage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Width(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowRange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSeriesName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowCategoryName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Separator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class IChartView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024488-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartView._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IChartView implementation
##class IChartView_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Sheet(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class Pictures(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A7-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class Picture(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A6-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Picture._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
]
Pictures._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(Picture), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(252)], POINTER(Picture), 'Insert',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Converter' )),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(211)], POINTER(Picture), 'Paste',
               ( ['in', 'optional'], VARIANT, 'Link' )),
]
class ServerViewableItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ServerViewableItems._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181)], POINTER(IDispatch), 'Add',
               ( ['in'], VARIANT, 'Obj' )),
    DISPMETHOD([dispid(117)], None, 'Delete',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(2239)], None, 'DeleteAll'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class ISortField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISortField._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortOn',
              ( ['retval', 'out'], POINTER(XlSortOn), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SortOn',
              ( ['in'], XlSortOn, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortOnValue',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Key',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Order',
              ( ['retval', 'out'], POINTER(XlSortOrder), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Order',
              ( ['in'], XlSortOrder, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CustomOrder',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CustomOrder',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataOption',
              ( ['retval', 'out'], POINTER(XlSortDataOption), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DataOption',
              ( ['in'], XlSortDataOption, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'ModifyKey',
              ( ['in'], POINTER(Range), 'Key' )),
    COMMETHOD([], HRESULT, 'SetIcon',
              ( ['in'], POINTER(Icon), 'Icon' )),
]
################################################################
## code template for ISortField implementation
##class ISortField_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SortOn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def ModifyKey(self, Key):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CustomOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SortOnValue(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Key(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetIcon(self, Icon):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Order = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DataOption = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class Workbooks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208DB-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
Workbooks._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(181)], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Template' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(277)], HRESULT, 'Close',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(682), 'hidden'], HRESULT, '_Open',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'UpdateLinks' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnly' ),
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'Origin' ),
              ( ['in', 'optional'], VARIANT, 'Delimiter' ),
              ( ['in', 'optional'], VARIANT, 'Editable' ),
              ( ['in', 'optional'], VARIANT, 'Notify' ),
              ( ['in', 'optional'], VARIANT, 'Converter' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(683), 'hidden'], HRESULT, '__OpenText',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Origin' ),
              ( ['in', 'optional'], VARIANT, 'StartRow' ),
              ( ['in', 'optional'], VARIANT, 'DataType' ),
              ( ['in', 'optional'], XlTextQualifier, 'TextQualifier', 1 ),
              ( ['in', 'optional'], VARIANT, 'ConsecutiveDelimiter' ),
              ( ['in', 'optional'], VARIANT, 'Tab' ),
              ( ['in', 'optional'], VARIANT, 'Semicolon' ),
              ( ['in', 'optional'], VARIANT, 'Comma' ),
              ( ['in', 'optional'], VARIANT, 'Space' ),
              ( ['in', 'optional'], VARIANT, 'Other' ),
              ( ['in', 'optional'], VARIANT, 'OtherChar' ),
              ( ['in', 'optional'], VARIANT, 'FieldInfo' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(1773), 'hidden'], HRESULT, '_OpenText',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Origin' ),
              ( ['in', 'optional'], VARIANT, 'StartRow' ),
              ( ['in', 'optional'], VARIANT, 'DataType' ),
              ( ['in', 'optional'], XlTextQualifier, 'TextQualifier', 1 ),
              ( ['in', 'optional'], VARIANT, 'ConsecutiveDelimiter' ),
              ( ['in', 'optional'], VARIANT, 'Tab' ),
              ( ['in', 'optional'], VARIANT, 'Semicolon' ),
              ( ['in', 'optional'], VARIANT, 'Comma' ),
              ( ['in', 'optional'], VARIANT, 'Space' ),
              ( ['in', 'optional'], VARIANT, 'Other' ),
              ( ['in', 'optional'], VARIANT, 'OtherChar' ),
              ( ['in', 'optional'], VARIANT, 'FieldInfo' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'optional'], VARIANT, 'DecimalSeparator' ),
              ( ['in', 'optional'], VARIANT, 'ThousandsSeparator' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1923)], HRESULT, 'Open',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'UpdateLinks' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnly' ),
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'Origin' ),
              ( ['in', 'optional'], VARIANT, 'Delimiter' ),
              ( ['in', 'optional'], VARIANT, 'Editable' ),
              ( ['in', 'optional'], VARIANT, 'Notify' ),
              ( ['in', 'optional'], VARIANT, 'Converter' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'Local' ),
              ( ['in', 'optional'], VARIANT, 'CorruptLoad' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(1924)], HRESULT, 'OpenText',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Origin' ),
              ( ['in', 'optional'], VARIANT, 'StartRow' ),
              ( ['in', 'optional'], VARIANT, 'DataType' ),
              ( ['in', 'optional'], XlTextQualifier, 'TextQualifier', 1 ),
              ( ['in', 'optional'], VARIANT, 'ConsecutiveDelimiter' ),
              ( ['in', 'optional'], VARIANT, 'Tab' ),
              ( ['in', 'optional'], VARIANT, 'Semicolon' ),
              ( ['in', 'optional'], VARIANT, 'Comma' ),
              ( ['in', 'optional'], VARIANT, 'Space' ),
              ( ['in', 'optional'], VARIANT, 'Other' ),
              ( ['in', 'optional'], VARIANT, 'OtherChar' ),
              ( ['in', 'optional'], VARIANT, 'FieldInfo' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'optional'], VARIANT, 'DecimalSeparator' ),
              ( ['in', 'optional'], VARIANT, 'ThousandsSeparator' ),
              ( ['in', 'optional'], VARIANT, 'TrailingMinusNumbers' ),
              ( ['in', 'optional'], VARIANT, 'Local' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2067)], HRESULT, 'OpenDatabase',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'CommandText' ),
              ( ['in', 'optional'], VARIANT, 'CommandType' ),
              ( ['in', 'optional'], VARIANT, 'BackgroundQuery' ),
              ( ['in', 'optional'], VARIANT, 'ImportDataAs' ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(2069)], HRESULT, 'CheckOut',
              ( ['in'], BSTR, 'Filename' )),
    COMMETHOD([dispid(2070)], HRESULT, 'CanCheckOut',
              ( ['in'], BSTR, 'Filename' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2071), 'hidden'], HRESULT, '_OpenXML',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Stylesheets' ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(2280)], HRESULT, 'OpenXML',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Stylesheets' ),
              ( ['in', 'optional'], VARIANT, 'LoadOption' ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
]
################################################################
## code template for Workbooks implementation
##class Workbooks_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def OpenXML(self, Filename, Stylesheets, LoadOption):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def CheckOut(self, Filename):
##        '-no docstring-'
##        #return 
##
##    def OpenDatabase(self, Filename, CommandText, CommandType, BackgroundQuery, ImportDataAs):
##        '-no docstring-'
##        #return RHS
##
##    def _Open(self, Filename, UpdateLinks, ReadOnly, Format, Password, WriteResPassword, IgnoreReadOnlyRecommended, Origin, Delimiter, Editable, Notify, Converter, AddToMru, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def OpenText(self, Filename, Origin, StartRow, DataType, TextQualifier, ConsecutiveDelimiter, Tab, Semicolon, Comma, Space, Other, OtherChar, FieldInfo, TextVisualLayout, DecimalSeparator, ThousandsSeparator, TrailingMinusNumbers, Local, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Template, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _OpenXML(self, Filename, Stylesheets):
##        '-no docstring-'
##        #return RHS
##
##    def CanCheckOut(self, Filename):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Close(self, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Open(self, Filename, UpdateLinks, ReadOnly, Format, Password, WriteResPassword, IgnoreReadOnlyRecommended, Origin, Delimiter, Editable, Notify, Converter, AddToMru, Local, CorruptLoad, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def __OpenText(self, Filename, Origin, StartRow, DataType, TextQualifier, ConsecutiveDelimiter, Tab, Semicolon, Comma, Space, Other, OtherChar, FieldInfo, TextVisualLayout, lcid):
##        '-no docstring-'
##        #return 
##
##    def _OpenText(self, Filename, Origin, StartRow, DataType, TextQualifier, ConsecutiveDelimiter, Tab, Semicolon, Comma, Space, Other, OtherChar, FieldInfo, TextVisualLayout, DecimalSeparator, ThousandsSeparator, lcid):
##        '-no docstring-'
##        #return 
##

class ISeriesLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISeriesLines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for ISeriesLines implementation
##class ISeriesLines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlMailSystem'
xlMAPI = 1
xlNoMailSystem = 0
xlPowerTalk = 2
XlMailSystem = c_int # enum
ShapeNodes._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ShapeNode)), 'Item' )),
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), '_NewEnum' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(12)], HRESULT, 'Insert',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSegmentType, 'SegmentType' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], c_float, 'X2', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y2', 0.0 ),
              ( ['in', 'optional'], c_float, 'X3', 0.0 ),
              ( ['in', 'optional'], c_float, 'Y3', 0.0 )),
    COMMETHOD([dispid(13)], HRESULT, 'SetEditingType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEditingType, 'EditingType' )),
    COMMETHOD([dispid(14)], HRESULT, 'SetPosition',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetSegmentType',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSegmentType, 'SegmentType' )),
]
################################################################
## code template for ShapeNodes implementation
##class ShapeNodes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def Insert(self, Index, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return _NewEnum
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def SetSegmentType(self, Index, SegmentType):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return Item
##
##    def SetEditingType(self, Index, EditingType):
##        '-no docstring-'
##        #return 
##
##    def SetPosition(self, Index, X1, Y1):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, Index):
##        '-no docstring-'
##        #return 
##

class IModelTableNameChanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelTableNameChanges._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelTableNameChange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelTableNameChange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IModelTableNameChanges implementation
##class IModelTableNameChanges_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class DropDowns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class DropDown(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
DropDown._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(851)], VARIANT, 'AddItem',
               ( ['in'], VARIANT, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(862), 'propget'], VARIANT, 'LinkedObject'),
    DISPMETHOD([dispid(861), 'propget'], VARIANT, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(861), 'propput'], None, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(849), 'propget'], c_int, 'ListCount'),
    DISPMETHOD([dispid(847), 'propget'], BSTR, 'ListFillRange'),
    DISPMETHOD([dispid(847), 'propput'], None, 'ListFillRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(850), 'propget'], c_int, 'ListIndex'),
    DISPMETHOD([dispid(850), 'propput'], None, 'ListIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1610743861), 'restricted', 'hidden'], None, '_Dummy36'),
    DISPMETHOD([dispid(853)], VARIANT, 'RemoveAllItems'),
    DISPMETHOD([dispid(852)], VARIANT, 'RemoveItem',
               ( ['in'], c_int, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(1123), 'propget'], VARIANT, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1123), 'propput'], None, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(848), 'propget'], c_int, 'DropDownLines'),
    DISPMETHOD([dispid(848), 'propput'], None, 'DropDownLines',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
]
DropDowns._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(851)], VARIANT, 'AddItem',
               ( ['in'], VARIANT, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1610743852), 'restricted', 'hidden'], None, '_Dummy31'),
    DISPMETHOD([dispid(861), 'propget'], VARIANT, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(861), 'propput'], None, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743855), 'restricted', 'hidden'], None, '_Dummy33'),
    DISPMETHOD([dispid(847), 'propget'], BSTR, 'ListFillRange'),
    DISPMETHOD([dispid(847), 'propput'], None, 'ListFillRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(850), 'propget'], c_int, 'ListIndex'),
    DISPMETHOD([dispid(850), 'propput'], None, 'ListIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1610743860), 'restricted', 'hidden'], None, '_Dummy36'),
    DISPMETHOD([dispid(853)], VARIANT, 'RemoveAllItems'),
    DISPMETHOD([dispid(852)], VARIANT, 'RemoveItem',
               ( ['in'], c_int, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(1123), 'propget'], VARIANT, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1123), 'propput'], None, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(848), 'propget'], c_int, 'DropDownLines'),
    DISPMETHOD([dispid(848), 'propput'], None, 'DropDownLines',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(DropDown), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' ),
               ( ['in', 'optional'], VARIANT, 'Editable' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IWorksheetFunction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020845-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWorksheetFunction._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_WSFunction',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Count',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsNA',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsError',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Sum',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Average',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Min',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Max',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Npv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'StDev',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Dollar',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Fixed',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Pi',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ln',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Log10',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Round',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Lookup',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Index',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Rept',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'And',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Or',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'DCount',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DSum',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DAverage',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DMin',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DMax',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DStDev',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Var',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DVar',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Text',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'LinEst',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Trend',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'LogEst',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Growth',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Pv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Fv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NPer',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Pmt',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Rate',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'MIrr',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Irr',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Match',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Weekday',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Search',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Transpose',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Atan2',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Asin',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Acos',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Choose',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'HLookup',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'VLookup',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Log',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Proper',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Trim',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Replace',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], BSTR, 'Arg4' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Substitute',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['in'], BSTR, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Find',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsErr',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsText',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsNumber',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Sln',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Syd',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ddb',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Clean',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'MDeterm',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'MInverse',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'MMult',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ipmt',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ppmt',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CountA',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Product',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Fact',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DProduct',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsNonText',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'StDevP',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'VarP',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DStDevP',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DVarP',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsLogical',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'DCountA',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'USDollar',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'FindB',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SearchB',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ReplaceB',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], BSTR, 'Arg4' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'RoundUp',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'RoundDown',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Rank',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Days360',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Vdb',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['in'], c_double, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Median',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SumProduct',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Sinh',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cosh',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Tanh',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Asinh',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Acosh',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Atanh',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DGet',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Db',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Frequency',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'AveDev',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'BetaDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'GammaLn',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'BetaInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'BinomDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Combin',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Confidence',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CritBinom',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Even',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ExponDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], VARIANT_BOOL, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'FDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'FInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Fisher',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'FisherInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Floor',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'GammaDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'GammaInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ceiling',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'HypGeomDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'LogNormDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'LogInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NegBinomDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NormDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NormSDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NormInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NormSInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Standardize',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Odd',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Permut',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Poisson',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], VARIANT_BOOL, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'TDist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Weibull',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SumXMY2',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SumX2MY2',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SumX2PY2',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiTest',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Correl',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Covar',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Forecast',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'FTest',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Intercept',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Pearson',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'RSq',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'StEyx',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Slope',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'TTest',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Prob',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DevSq',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'GeoMean',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'HarMean',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SumSq',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Kurt',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Skew',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ZTest',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Large',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Small',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Quartile',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Percentile',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'PercentRank',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Mode',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'TrimMean',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'TInv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Power',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Radians',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Degrees',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Subtotal',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SumIf',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CountIf',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CountBlank',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ispmt',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Roman',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Asc',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Dbcs',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Phonetic',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'BahtText',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ThaiDayOfWeek',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ThaiDigit',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ThaiMonthOfYear',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ThaiNumSound',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ThaiNumString',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ThaiStringLength',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'IsThaiDigit',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'RoundBahtDown',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'RoundBahtUp',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ThaiYear',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'RTD',
              ( ['in'], VARIANT, 'progID' ),
              ( ['in'], VARIANT, 'server' ),
              ( ['in'], VARIANT, 'topic1' ),
              ( ['in', 'optional'], VARIANT, 'topic2' ),
              ( ['in', 'optional'], VARIANT, 'topic3' ),
              ( ['in', 'optional'], VARIANT, 'topic4' ),
              ( ['in', 'optional'], VARIANT, 'topic5' ),
              ( ['in', 'optional'], VARIANT, 'topic6' ),
              ( ['in', 'optional'], VARIANT, 'topic7' ),
              ( ['in', 'optional'], VARIANT, 'topic8' ),
              ( ['in', 'optional'], VARIANT, 'topic9' ),
              ( ['in', 'optional'], VARIANT, 'topic10' ),
              ( ['in', 'optional'], VARIANT, 'topic11' ),
              ( ['in', 'optional'], VARIANT, 'topic12' ),
              ( ['in', 'optional'], VARIANT, 'topic13' ),
              ( ['in', 'optional'], VARIANT, 'topic14' ),
              ( ['in', 'optional'], VARIANT, 'topic15' ),
              ( ['in', 'optional'], VARIANT, 'topic16' ),
              ( ['in', 'optional'], VARIANT, 'topic17' ),
              ( ['in', 'optional'], VARIANT, 'topic18' ),
              ( ['in', 'optional'], VARIANT, 'topic19' ),
              ( ['in', 'optional'], VARIANT, 'topic20' ),
              ( ['in', 'optional'], VARIANT, 'topic21' ),
              ( ['in', 'optional'], VARIANT, 'topic22' ),
              ( ['in', 'optional'], VARIANT, 'topic23' ),
              ( ['in', 'optional'], VARIANT, 'topic24' ),
              ( ['in', 'optional'], VARIANT, 'topic25' ),
              ( ['in', 'optional'], VARIANT, 'topic26' ),
              ( ['in', 'optional'], VARIANT, 'topic27' ),
              ( ['in', 'optional'], VARIANT, 'topic28' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Hex2Bin',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Hex2Dec',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Hex2Oct',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Dec2Bin',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Dec2Hex',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Dec2Oct',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Oct2Bin',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Oct2Hex',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Oct2Dec',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bin2Dec',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bin2Oct',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bin2Hex',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImSub',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImDiv',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImPower',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImAbs',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImSqrt',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImLn',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImLog2',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImLog10',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImSin',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImCos',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImExp',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImArgument',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImConjugate',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Imaginary',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImReal',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Complex',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImSum',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImProduct',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'SeriesSum',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'FactDouble',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SqrtPi',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Quotient',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delta',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'GeStep',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsEven',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsOdd',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'MRound',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Erf',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ErfC',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'BesselJ',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'BesselK',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'BesselY',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'BesselI',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Xirr',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Xnpv',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'PriceMat',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'YieldMat',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IntRate',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Received',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Disc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'PriceDisc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'YieldDisc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'TBillEq',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'TBillPrice',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'TBillYield',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Price',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DollarDe',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'DollarFr',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Nominal',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Effect',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CumPrinc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CumIPmt',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'EDate',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'EoMonth',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'YearFrac',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CoupDayBs',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CoupDays',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CoupDaysNc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CoupNcd',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CoupNum',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CoupPcd',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duration',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'MDuration',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'OddLPrice',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'OddLYield',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'OddFPrice',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in'], VARIANT, 'Arg7' ),
              ( ['in'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'OddFYield',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in'], VARIANT, 'Arg7' ),
              ( ['in'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'RandBetween',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'WeekNum',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'AmorDegrc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'AmorLinc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Convert',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'AccrInt',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in'], VARIANT, 'Arg5' ),
              ( ['in'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'AccrIntM',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'WorkDay',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NetworkDays',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Gcd',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'MultiNomial',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Lcm',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'FVSchedule',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'SumIfs',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'CountIfs',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'AverageIf',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'AverageIfs',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IfError',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Aggregate',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], POINTER(Range), 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Confidence_Norm',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Confidence_T',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiSq_Test',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'F_Test',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Covariance_P',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Covariance_S',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Expon_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], VARIANT_BOOL, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Gamma_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Gamma_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Mode_Mult',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Mode_Sngl',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Norm_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Norm_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Percentile_Exc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Percentile_Inc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'PercentRank_Exc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'PercentRank_Inc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Poisson_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], VARIANT_BOOL, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Quartile_Exc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Quartile_Inc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Rank_Avg',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Rank_Eq',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'StDev_S',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'StDev_P',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'T_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], VARIANT_BOOL, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'T_Dist_2T',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'T_Dist_RT',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'T_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'T_Inv_2T',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Var_S',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Var_P',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Weibull_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NetworkDays_Intl',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'WorkDay_Intl',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ISO_Ceiling',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Dummy21',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Dummy19',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Beta_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Beta_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiSq_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], VARIANT_BOOL, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiSq_Dist_RT',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiSq_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChiSq_Inv_RT',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'F_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'F_Dist_RT',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'F_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'F_Inv_RT',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'HypGeom_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['in'], VARIANT_BOOL, 'Arg5' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'LogNorm_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'LogNorm_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NegBinom_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Norm_S_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], VARIANT_BOOL, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Norm_S_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'T_Test',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], c_double, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Z_Test',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Binom_Dist',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in'], VARIANT_BOOL, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Binom_Inv',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Erf_Precise',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ErfC_Precise',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'GammaLn_Precise',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ceiling_Precise',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Floor_Precise',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Acot',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Acoth',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cot',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Coth',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Csc',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Csch',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Sec',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Sech',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImCot',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImTan',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImCsc',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImCsch',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImSec',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImSech',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bitand',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bitor',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bitxor',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bitlshift',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Bitrshift',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Xor',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Combina',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Permutationa',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'PDuration',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Base',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Decimal',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Days',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Binom_Dist_Range',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Gamma',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Gauss',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Phi',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Skew_p',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Rri',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in'], c_double, 'Arg2' ),
              ( ['in'], c_double, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Unichar',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Unicode',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Munit',
              ( ['in'], c_double, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Arabic',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsoWeekNum',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'NumberValue',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['in'], BSTR, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'IsFormula',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'IfNa',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in'], VARIANT, 'Arg2' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ceiling_Math',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'Floor_Math',
              ( ['in'], c_double, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImSinh',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImCosh',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'FilterXML',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['in'], BSTR, 'Arg2' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'WebService',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'EncodeURL',
              ( ['in'], BSTR, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IWorksheetFunction implementation
##class IWorksheetFunction_Impl(object):
##    def Erf_Precise(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def YieldDisc(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def SumXMY2(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Var(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def StEyx(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Ceiling(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def AverageIf(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Substitute(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def AmorDegrc(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7):
##        '-no docstring-'
##        #return RHS
##
##    def Hex2Bin(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Confidence_Norm(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def CumIPmt(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def AveDev(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def VLookup(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def HypGeomDist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Confidence_T(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Mode_Mult(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def LogEst(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def DStDev(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Fixed(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ChiDist(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def CountBlank(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Quartile_Exc(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Rank(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Correl(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def EDate(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Expon_Dist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Index(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Atanh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def TBillEq(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def StDevP(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def TInv(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Standardize(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def OddLYield(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8):
##        '-no docstring-'
##        #return RHS
##
##    def Dec2Bin(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Unichar(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ThaiYear(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImSec(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Atan2(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Phonetic(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Slope(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def CoupDayBs(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def ImDiv(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def SumSq(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Arabic(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def IsNumber(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Quartile(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def SumX2PY2(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def T_Dist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ImProduct(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Fv(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def DVarP(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Bitand(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Base(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Percentile_Exc(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Quartile_Inc(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def DVar(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def T_Test(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Count(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Dec2Oct(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def CumPrinc(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def Weibull(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def ImExp(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Ceiling_Precise(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Acos(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Acot(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImLn(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ChiSq_Inv(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def RoundBahtUp(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def CoupNum(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Text(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Bin2Hex(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def NormDist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Xor(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def SumIfs(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29):
##        '-no docstring-'
##        #return RHS
##
##    def Min(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Ln(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImLog10(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ThaiNumSound(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Oct2Dec(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def RandBetween(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def PercentRank_Exc(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Bitxor(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Floor_Precise(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def LogNormDist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ImSin(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Tanh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Average(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Hex2Oct(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Roman(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ImAbs(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def RSq(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Trim(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def IsOdd(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Skew_p(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Bin2Dec(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def IsError(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Rank_Eq(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Xirr(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def DMax(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Match(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Oct2Hex(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def CritBinom(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def WebService(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def OddFYield(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9):
##        '-no docstring-'
##        #return RHS
##
##    def Hex2Dec(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def DAverage(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Sinh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Subtotal(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Received(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def NegBinom_Dist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Erf(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def SumProduct(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def USDollar(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def F_Inv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Covariance_S(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Covariance_P(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def LogNorm_Dist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def F_Test(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def IsFormula(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Disc(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def DGet(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def NormInv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ExponDist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def SqrtPi(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def SearchB(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Csc(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def DollarFr(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Complex(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def _WSFunction(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def BetaDist(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def RTD(self, progID, server, topic1, topic2, topic3, topic4, topic5, topic6, topic7, topic8, topic9, topic10, topic11, topic12, topic13, topic14, topic15, topic16, topic17, topic18, topic19, topic20, topic21, topic22, topic23, topic24, topic25, topic26, topic27, topic28):
##        '-no docstring-'
##        #return RHS
##
##    def PDuration(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Intercept(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Norm_Dist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def DProduct(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def IfNa(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def StDev(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def PercentRank_Inc(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def AccrInt(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7):
##        '-no docstring-'
##        #return RHS
##
##    def EncodeURL(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def NetworkDays_Intl(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def SumX2MY2(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Even(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Asin(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def MultiNomial(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def NPer(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def Forecast(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Combina(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def MInverse(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Prob(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def TDist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def IsoWeekNum(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Norm_S_Inv(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Effect(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def CountIf(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def NormSDist(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Delta(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Search(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Sln(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Kurt(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def TTest(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def ImPower(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Binom_Dist_Range(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def OddLPrice(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8):
##        '-no docstring-'
##        #return RHS
##
##    def F_Dist_RT(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Sec(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def IsErr(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def BesselI(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def BesselK(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def BesselJ(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Floor(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def BesselY(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def IntRate(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def T_Inv(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def PriceMat(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def Phi(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Power(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Syd(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def NetworkDays(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Gamma_Inv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def F_Dist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Db(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def WorkDay(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Xnpv(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Convert(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Bitlshift(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def LinEst(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Proper(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Mode(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Poisson(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def BinomDist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Bitrshift(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def FindB(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def DStDevP(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Cosh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Growth(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Permutationa(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def FactDouble(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ISO_Ceiling(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def AverageIfs(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29):
##        '-no docstring-'
##        #return RHS
##
##    def GammaLn(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def DMin(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ImSub(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ImSum(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def RoundUp(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Asinh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Acoth(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def FisherInv(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def GammaDist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def FVSchedule(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Percentile(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Fisher(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Lcm(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Beta_Inv(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def Covar(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Munit(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Days(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Large(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ImArgument(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def HLookup(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def SeriesSum(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def NumberValue(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Permut(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ChiTest(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Pv(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def PriceDisc(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def RoundBahtDown(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Csch(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Dbcs(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def MDeterm(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Nominal(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Ddb(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def Pi(self):
##        '-no docstring-'
##        #return RHS
##
##    def Log10(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def RoundDown(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ZTest(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def PercentRank(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Frequency(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Aggregate(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def CoupPcd(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Norm_Inv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ThaiNumString(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def DSum(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def IsEven(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def IsNonText(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def MIrr(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def HarMean(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def FDist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Weibull_Dist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def ImSech(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImConjugate(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Unicode(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def GammaLn_Precise(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Log(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def EoMonth(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def CoupDaysNc(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Binom_Dist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def IsNA(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImSinh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ThaiStringLength(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def VarP(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def MRound(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ImTan(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def YieldMat(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def HypGeom_Dist(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def Bin2Oct(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ChiSq_Test(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Round(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Fact(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def And(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def T_Dist_RT(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Trend(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Dollar(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def NegBinomDist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ThaiDayOfWeek(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def TBillPrice(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ErfC(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ChiSq_Dist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Confidence(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy19(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Irr(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def GammaInv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def GeoMean(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Product(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Rept(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def TBillYield(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Imaginary(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Oct2Bin(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def F_Inv_RT(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Cot(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def FilterXML(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Weekday(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Clean(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def DCount(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Gamma(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Norm_S_Dist(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def T_Inv_2T(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def IsLogical(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Gamma_Dist(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Rate(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def Duration(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def Z_Test(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Price(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7):
##        '-no docstring-'
##        #return RHS
##
##    def T_Dist_2T(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ChiSq_Inv_RT(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ImCos(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def WeekNum(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Lookup(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ImCot(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Asc(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def NormSInv(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def LogNorm_Inv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def OddFPrice(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9):
##        '-no docstring-'
##        #return RHS
##
##    def Gauss(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Percentile_Inc(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Ipmt(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def Pearson(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Sech(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Radians(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImSqrt(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Combin(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def BahtText(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Mode_Sngl(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Or(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Quotient(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Floor_Math(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ChiSq_Dist_RT(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ImCosh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def StDev_P(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def StDev_S(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def FTest(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def AccrIntM(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def AmorLinc(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7):
##        '-no docstring-'
##        #return RHS
##
##    def Find(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def ThaiMonthOfYear(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Sum(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Choose(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def IfError(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Ispmt(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Coth(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def GeStep(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Median(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Beta_Dist(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def Binom_Inv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Poisson_Dist(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Ceiling_Math(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def CountIfs(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def MDuration(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def BetaInv(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def Replace(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def CoupDays(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def ReplaceB(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Bitor(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def DollarDe(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def MMult(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def LogInv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def WorkDay_Intl(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Degrees(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImCsc(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Gcd(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def CoupNcd(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def ThaiDigit(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def DevSq(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def ImLog2(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def IsThaiDigit(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ChiInv(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Dec2Hex(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Var_S(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Skew(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Var_P(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def CountA(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Decimal(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def FInv(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Vdb(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7):
##        '-no docstring-'
##        #return RHS
##
##    def SumIf(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Small(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def Days360(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Rank_Avg(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Pmt(self, Arg1, Arg2, Arg3, Arg4, Arg5):
##        '-no docstring-'
##        #return RHS
##
##    def Rri(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Ppmt(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6):
##        '-no docstring-'
##        #return RHS
##
##    def Odd(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def TrimMean(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def ImReal(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ImCsch(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def IsText(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Max(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Transpose(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def ErfC_Precise(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Npv(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy21(self, Arg1, Arg2):
##        '-no docstring-'
##        #return RHS
##
##    def YearFrac(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def DCountA(self, Arg1, Arg2, Arg3):
##        '-no docstring-'
##        #return RHS
##
##    def Acosh(self, Arg1):
##        '-no docstring-'
##        #return RHS
##

class TextBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A4-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
TextBox._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]

# values for enumeration 'XlPhoneticAlignment'
xlPhoneticAlignNoControl = 0
xlPhoneticAlignLeft = 1
xlPhoneticAlignCenter = 2
xlPhoneticAlignDistributed = 3
XlPhoneticAlignment = c_int # enum
class IModules(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModules._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(POINTER(Module)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy7'),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'HPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(HPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(VPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Add2',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['in', 'optional'], VARIANT, 'NewLayout' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IModules implementation
##class IModules_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, IgnorePrintAreas, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Before, After, Count):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy7(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Before, After, Count, NewLayout):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##

class ICustomProperty(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024453-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICustomProperty._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for ICustomProperty implementation
##class ICustomProperty_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class Lines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class Line(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Line._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(611), 'propget'], VARIANT, 'ArrowHeadLength'),
    DISPMETHOD([dispid(611), 'propput'], None, 'ArrowHeadLength',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(612), 'propget'], VARIANT, 'ArrowHeadStyle'),
    DISPMETHOD([dispid(612), 'propput'], None, 'ArrowHeadStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(613), 'propget'], VARIANT, 'ArrowHeadWidth'),
    DISPMETHOD([dispid(613), 'propput'], None, 'ArrowHeadWidth',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
]
Lines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(611), 'propget'], VARIANT, 'ArrowHeadLength'),
    DISPMETHOD([dispid(611), 'propput'], None, 'ArrowHeadLength',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(612), 'propget'], VARIANT, 'ArrowHeadStyle'),
    DISPMETHOD([dispid(612), 'propput'], None, 'ArrowHeadStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(613), 'propget'], VARIANT, 'ArrowHeadWidth'),
    DISPMETHOD([dispid(613), 'propput'], None, 'ArrowHeadWidth',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(181)], POINTER(Line), 'Add',
               ( ['in'], c_double, 'X1' ),
               ( ['in'], c_double, 'Y1' ),
               ( ['in'], c_double, 'X2' ),
               ( ['in'], c_double, 'Y2' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IRoutingSlip(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AA-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlRoutingSlipDelivery'
xlAllAtOnce = 2
xlOneAfterAnother = 1
XlRoutingSlipDelivery = c_int # enum

# values for enumeration 'XlRoutingSlipStatus'
xlNotYetRouted = 0
xlRoutingComplete = 2
xlRoutingInProgress = 1
XlRoutingSlipStatus = c_int # enum
IRoutingSlip._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Delivery',
              ( ['retval', 'out'], POINTER(XlRoutingSlipDelivery), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Delivery',
              ( ['in'], XlRoutingSlipDelivery, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Message',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Message',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Recipients',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Recipients',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Reset',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReturnWhenDone',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReturnWhenDone',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(XlRoutingSlipStatus), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Subject',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Subject',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TrackStatus',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TrackStatus',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IRoutingSlip implementation
##class IRoutingSlip_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Status(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReturnWhenDone = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    Recipients = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Delivery = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TrackStatus = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Message = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##

class ISpeech(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024466-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISpeech._methods_ = [
    COMMETHOD([], HRESULT, 'Speak',
              ( ['in'], BSTR, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'SpeakAsync' ),
              ( ['in', 'optional'], VARIANT, 'SpeakXML' ),
              ( ['in', 'optional'], VARIANT, 'Purge' )),
    COMMETHOD(['propget'], HRESULT, 'Direction',
              ( ['retval', 'out'], POINTER(XlSpeakDirection), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Direction',
              ( ['in'], XlSpeakDirection, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SpeakCellOnEnter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SpeakCellOnEnter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for ISpeech implementation
##class ISpeech_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SpeakCellOnEnter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Direction = property(_get, _set, doc = _set.__doc__)
##
##    def Speak(self, Text, SpeakAsync, SpeakXML, Purge):
##        '-no docstring-'
##        #return 
##

class IFormatConditions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024424-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFormatConditions._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], XlFormatConditionType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Operator' ),
              ( ['in', 'optional'], VARIANT, 'Formula1' ),
              ( ['in', 'optional'], VARIANT, 'Formula2' ),
              ( ['in', 'optional'], VARIANT, 'String' ),
              ( ['in', 'optional'], VARIANT, 'TextOperator' ),
              ( ['in', 'optional'], VARIANT, 'DateOperator' ),
              ( ['in', 'optional'], VARIANT, 'ScopeType' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'AddColorScale',
              ( ['in'], c_int, 'ColorScaleType' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddDatabar',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddIconSetCondition',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddTop10',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddAboveAverage',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddUniqueValues',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IFormatConditions implementation
##class IFormatConditions_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddColorScale(self, ColorScaleType):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def AddAboveAverage(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddDatabar(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddUniqueValues(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddIconSetCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Type, Operator, Formula1, Formula2, String, TextOperator, DateOperator, ScopeType):
##        '-no docstring-'
##        #return RHS
##
##    def AddTop10(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class ILabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020890-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILabel._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy33'),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for ILabel implementation
##class ILabel_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy33(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class GroupBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class GroupBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020889-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
GroupBox._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
]
GroupBoxes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(GroupBox), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IGroupBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IGroupBoxes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(GroupBox)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IGroupBoxes implementation
##class IGroupBoxes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class WorksheetView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024487-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
WorksheetView._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(751), 'propget'], POINTER(IDispatch), 'Sheet'),
    DISPMETHOD([dispid(645), 'propget'], VARIANT_BOOL, 'DisplayGridlines'),
    DISPMETHOD([dispid(645), 'propput'], None, 'DisplayGridlines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(644), 'propget'], VARIANT_BOOL, 'DisplayFormulas'),
    DISPMETHOD([dispid(644), 'propput'], None, 'DisplayFormulas',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(646), 'propget'], VARIANT_BOOL, 'DisplayHeadings'),
    DISPMETHOD([dispid(646), 'propput'], None, 'DisplayHeadings',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(647), 'propget'], VARIANT_BOOL, 'DisplayOutline'),
    DISPMETHOD([dispid(647), 'propput'], None, 'DisplayOutline',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(649), 'propget'], VARIANT_BOOL, 'DisplayZeros'),
    DISPMETHOD([dispid(649), 'propput'], None, 'DisplayZeros',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class IOLEObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOLEObjects._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy30'),
    COMMETHOD(['propget'], HRESULT, 'AutoLoad',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoLoad',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy32'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy33'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy34'),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy36'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy37'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy38'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy39'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy40'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy41'),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'ClassType' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
              ( ['in', 'optional'], VARIANT, 'IconFileName' ),
              ( ['in', 'optional'], VARIANT, 'IconIndex' ),
              ( ['in', 'optional'], VARIANT, 'IconLabel' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(OLEObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IOLEObjects implementation
##class IOLEObjects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy34(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceName = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy38(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy39(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy30(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy32(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy36(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy37(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoLoad = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy41(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy40(self):
##        '-no docstring-'
##        #return 
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, ClassType, Filename, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy33(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class TextBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A5-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
TextBoxes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(TextBox), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlArrowHeadStyle'
xlArrowHeadStyleClosed = 3
xlArrowHeadStyleDoubleClosed = 5
xlArrowHeadStyleDoubleOpen = 4
xlArrowHeadStyleNone = -4142
xlArrowHeadStyleOpen = 2
XlArrowHeadStyle = c_int # enum

# values for enumeration 'XlLookAt'
xlPart = 2
xlWhole = 1
XlLookAt = c_int # enum
class RoutingSlip(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AA-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
RoutingSlip._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(955), 'propget'], XlRoutingSlipDelivery, 'Delivery'),
    DISPMETHOD([dispid(955), 'propput'], None, 'Delivery',
               ( ['in'], XlRoutingSlipDelivery, 'rhs' )),
    DISPMETHOD([dispid(954), 'propget'], VARIANT, 'Message'),
    DISPMETHOD([dispid(954), 'propput'], None, 'Message',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(952), 'propget'], VARIANT, 'Recipients',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(952), 'propput'], None, 'Recipients',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(555)], VARIANT, 'Reset'),
    DISPMETHOD([dispid(956), 'propget'], VARIANT_BOOL, 'ReturnWhenDone'),
    DISPMETHOD([dispid(956), 'propput'], None, 'ReturnWhenDone',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(958), 'propget'], XlRoutingSlipStatus, 'Status'),
    DISPMETHOD([dispid(953), 'propget'], VARIANT, 'Subject'),
    DISPMETHOD([dispid(953), 'propput'], None, 'Subject',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(957), 'propget'], VARIANT_BOOL, 'TrackStatus'),
    DISPMETHOD([dispid(957), 'propput'], None, 'TrackStatus',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]

# values for enumeration 'XlFileValidationPivotMode'
xlFileValidationPivotDefault = 0
xlFileValidationPivotRun = 1
xlFileValidationPivotSkip = 2
XlFileValidationPivotMode = c_int # enum
class IOLEObjectEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024410-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOLEObjectEvents._methods_ = [
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
]
################################################################
## code template for IOLEObjectEvents implementation
##class IOLEObjectEvents_Impl(object):
##    def GotFocus(self):
##        '-no docstring-'
##        #return 
##
##    def LostFocus(self):
##        '-no docstring-'
##        #return 
##

class Spinners(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Spinners._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(842), 'propget'], c_int, 'Max'),
    DISPMETHOD([dispid(842), 'propput'], None, 'Max',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(843), 'propget'], c_int, 'Min'),
    DISPMETHOD([dispid(843), 'propput'], None, 'Min',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(844), 'propget'], c_int, 'SmallChange'),
    DISPMETHOD([dispid(844), 'propput'], None, 'SmallChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(Spinner), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class ILeaderLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024437-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILeaderLines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Select'),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for ILeaderLines implementation
##class ILeaderLines_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class ChartCategory(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DD-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ChartCategory._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(3083), 'propget'], VARIANT_BOOL, 'IsFiltered'),
    DISPMETHOD([dispid(3083), 'propput'], None, 'IsFiltered',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class ChartView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024488-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ChartView._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(751), 'propget'], POINTER(IDispatch), 'Sheet'),
]
class FileExportConverter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
FileExportConverter._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2769), 'propget'], BSTR, 'Extensions'),
    DISPMETHOD([dispid(218), 'propget'], BSTR, 'Description'),
    DISPMETHOD([dispid(288), 'propget'], c_int, 'FileFormat'),
]
DocEvents._disp_methods_ = [
    DISPMETHOD([dispid(1543)], None, 'SelectionChange',
               ( ['in'], POINTER(Range), 'Target' )),
    DISPMETHOD([dispid(1537)], None, 'BeforeDoubleClick',
               ( ['in'], POINTER(Range), 'Target' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1534)], None, 'BeforeRightClick',
               ( ['in'], POINTER(Range), 'Target' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(1530)], None, 'Deactivate'),
    DISPMETHOD([dispid(279)], None, 'Calculate'),
    DISPMETHOD([dispid(1545)], None, 'Change',
               ( ['in'], POINTER(Range), 'Target' )),
    DISPMETHOD([dispid(1470)], None, 'FollowHyperlink',
               ( ['in'], POINTER(Hyperlink), 'Target' )),
    DISPMETHOD([dispid(2156)], None, 'PivotTableUpdate',
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2886)], None, 'PivotTableAfterValueChange',
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], POINTER(Range), 'TargetRange' )),
    DISPMETHOD([dispid(2889)], None, 'PivotTableBeforeAllocateChanges',
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2892)], None, 'PivotTableBeforeCommitChanges',
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2893)], None, 'PivotTableBeforeDiscardChanges',
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' )),
    DISPMETHOD([dispid(2894)], None, 'PivotTableChangeSync',
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(3072)], None, 'LensGalleryRenderComplete'),
    DISPMETHOD([dispid(3073)], None, 'TableUpdate',
               ( ['in'], POINTER(TableObject), 'Target' )),
    DISPMETHOD([dispid(3074)], None, 'BeforeDelete'),
]
class WebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024449-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
WebOptions._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1899), 'propget'], HRESULT, 'RelyOnCSS',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1899), 'propput'], HRESULT, 'RelyOnCSS',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1902), 'propget'], HRESULT, 'OrganizeInFolder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1902), 'propput'], HRESULT, 'OrganizeInFolder',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1904), 'propget'], HRESULT, 'UseLongFileNames',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1904), 'propput'], HRESULT, 'UseLongFileNames',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1906), 'propget'], HRESULT, 'DownloadComponents',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1906), 'propput'], HRESULT, 'DownloadComponents',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1907), 'propget'], HRESULT, 'RelyOnVML',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1907), 'propput'], HRESULT, 'RelyOnVML',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1908), 'propget'], HRESULT, 'AllowPNG',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1908), 'propput'], HRESULT, 'AllowPNG',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1909), 'propget'], HRESULT, 'ScreenSize',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoScreenSize), 'RHS' )),
    COMMETHOD([dispid(1909), 'propput'], HRESULT, 'ScreenSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoScreenSize, 'RHS' )),
    COMMETHOD([dispid(1910), 'propget'], HRESULT, 'PixelsPerInch',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1910), 'propput'], HRESULT, 'PixelsPerInch',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1911), 'propget'], HRESULT, 'LocationOfComponents',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1911), 'propput'], HRESULT, 'LocationOfComponents',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1822), 'propget'], HRESULT, 'Encoding',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEncoding), 'RHS' )),
    COMMETHOD([dispid(1822), 'propput'], HRESULT, 'Encoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEncoding, 'RHS' )),
    COMMETHOD([dispid(1914), 'propget'], HRESULT, 'FolderSuffix',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1915)], HRESULT, 'UseDefaultFolderSuffix'),
    COMMETHOD([dispid(2179), 'propget'], HRESULT, 'TargetBrowser',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTargetBrowser), 'RHS' )),
    COMMETHOD([dispid(2179), 'propput'], HRESULT, 'TargetBrowser',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTargetBrowser, 'RHS' )),
]
################################################################
## code template for WebOptions implementation
##class WebOptions_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseLongFileNames = property(_get, _set, doc = _set.__doc__)
##
##    def UseDefaultFolderSuffix(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FolderSuffix(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RelyOnVML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AllowPNG = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LocationOfComponents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScreenSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Encoding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RelyOnCSS = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TargetBrowser = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DownloadComponents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PixelsPerInch = property(_get, _set, doc = _set.__doc__)
##

class IXmlSchemas(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXmlSchemas._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(XmlSchema)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(XmlSchema)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IXmlSchemas implementation
##class IXmlSchemas_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IHyperlinks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024430-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IHyperlinks._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], POINTER(IDispatch), 'Anchor' ),
              ( ['in'], BSTR, 'Address' ),
              ( ['in', 'optional'], VARIANT, 'SubAddress' ),
              ( ['in', 'optional'], VARIANT, 'ScreenTip' ),
              ( ['in', 'optional'], VARIANT, 'TextToDisplay' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Hyperlink)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Hyperlink)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for IHyperlinks implementation
##class IHyperlinks_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Anchor, Address, SubAddress, ScreenTip, TextToDisplay):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class Model(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DB-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Model._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(3106), 'propget'], POINTER(ModelTables), 'ModelTables'),
    DISPMETHOD([dispid(3126), 'propget'], POINTER(ModelRelationships), 'ModelRelationships'),
    DISPMETHOD([dispid(1417)], None, 'Refresh'),
    DISPMETHOD([dispid(3127)], POINTER(WorkbookConnection), 'AddConnection',
               ( ['in'], POINTER(WorkbookConnection), 'ConnectionToDataSource' )),
    DISPMETHOD([dispid(3129)], POINTER(WorkbookConnection), 'CreateModelWorkbookConnection',
               ( ['in'], VARIANT, 'ModelTable' )),
    DISPMETHOD([dispid(3131), 'propget'], POINTER(WorkbookConnection), 'DataModelConnection'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(3132)], None, 'Initialize'),
]

# values for enumeration 'XlDisplayDrawingObjects'
xlDisplayShapes = -4104
xlHide = 3
xlPlaceholders = 2
XlDisplayDrawingObjects = c_int # enum
class IXmlNamespaces(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024477-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXmlNamespaces._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(XmlNamespace)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(XmlNamespace)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'InstallManifest',
              ( ['in'], BSTR, 'Path' ),
              ( ['in', 'optional'], VARIANT, 'InstallForAllUsers' )),
]
################################################################
## code template for IXmlNamespaces implementation
##class IXmlNamespaces_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def InstallManifest(self, Path, InstallForAllUsers):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlDataBarFillType'
xlDataBarFillSolid = 0
xlDataBarFillGradient = 1
XlDataBarFillType = c_int # enum
class IPivotCaches(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotCaches._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotCache)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotCache)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Add',
              ( ['in'], XlPivotTableSourceType, 'SourceType' ),
              ( ['in', 'optional'], VARIANT, 'SourceData' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotCache)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Create',
              ( ['in'], XlPivotTableSourceType, 'SourceType' ),
              ( ['in', 'optional'], VARIANT, 'SourceData' ),
              ( ['in', 'optional'], VARIANT, 'Version' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotCache)), 'RHS' )),
]
################################################################
## code template for IPivotCaches implementation
##class IPivotCaches_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Create(self, SourceType, SourceData, Version):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, SourceType, SourceData):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IToolbarButtons(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IToolbarButtons._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Button' ),
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'OnAction' ),
              ( ['in', 'optional'], VARIANT, 'Pushed' ),
              ( ['in', 'optional'], VARIANT, 'Enabled' ),
              ( ['in', 'optional'], VARIANT, 'StatusBar' ),
              ( ['in', 'optional'], VARIANT, 'HelpFile' ),
              ( ['in', 'optional'], VARIANT, 'HelpContextID' ),
              ( ['retval', 'out'], POINTER(POINTER(ToolbarButton)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ToolbarButton)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ToolbarButton)), 'RHS' )),
]
################################################################
## code template for IToolbarButtons implementation
##class IToolbarButtons_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Button, Before, OnAction, Pushed, Enabled, StatusBar, HelpFile, HelpContextID):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IChartObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CF-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartObject._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Chart',
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ProtectChartObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ProtectChartObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IChartObject implementation
##class IChartObject_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def Activate(self):
##        '-no docstring-'
##        #return RHS
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ProtectChartObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class _DebugTools(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{45541F00-5750-5300-4B49-4E47534F4655}')
    _idlflags_ = ['dual', 'oleautomation']
class Solver(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{45541089-5750-5300-4B49-4E47534F4655}')
    _idlflags_ = ['dual', 'oleautomation']
_DebugTools._methods_ = [
    COMMETHOD([dispid(268369921)], HRESULT, 'Dump',
              ( ['in'], BSTR, 'Path' )),
    COMMETHOD([dispid(268369922)], HRESULT, 'Do'),
    COMMETHOD([dispid(268369923)], HRESULT, 'Diagnose'),
    COMMETHOD([dispid(268369924)], HRESULT, 'Report'),
    COMMETHOD([dispid(268369925)], HRESULT, 'Profile'),
    COMMETHOD([dispid(268369926)], HRESULT, 'RunCommand',
              ( ['in'], c_int, 'cmdid' ),
              ( ['in', 'optional'], VARIANT, 'param1' ),
              ( ['in', 'optional'], VARIANT, 'param2' ),
              ( ['in', 'optional'], VARIANT, 'param3' )),
    COMMETHOD([dispid(268369927)], HRESULT, 'GetResult',
              ( ['in'], c_int, 'cmdid' ),
              ( ['in'], VARIANT, 'param' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'res' )),
    COMMETHOD([dispid(268369928), 'propget'], HRESULT, 'Solver',
              ( ['retval', 'out'], POINTER(POINTER(Solver)), 'prop' )),
    COMMETHOD([dispid(268369929), 'propput'], HRESULT, 'DisableMsgBox',
              ( ['in'], VARIANT_BOOL, 'rhs' )),
    COMMETHOD([dispid(268369930)], HRESULT, 'UndoTransBegin',
              ( ['in'], POINTER(Workbook), 'book' )),
    COMMETHOD([dispid(268369931)], HRESULT, 'UndoTransEnd',
              ( ['in'], POINTER(Workbook), 'book' ),
              ( ['in'], VARIANT_BOOL, 'cancelTrans' ),
              ( ['in'], BSTR, 'desc' )),
]
################################################################
## code template for _DebugTools implementation
##class _DebugTools_Impl(object):
##    def Diagnose(self):
##        '-no docstring-'
##        #return 
##
##    def Do(self):
##        '-no docstring-'
##        #return 
##
##    def Dump(self, Path):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Solver(self):
##        '-no docstring-'
##        #return prop
##
##    def _set(self, rhs):
##        '-no docstring-'
##    DisableMsgBox = property(fset = _set, doc = _set.__doc__)
##
##    def GetResult(self, cmdid, param):
##        '-no docstring-'
##        #return res
##
##    def Profile(self):
##        '-no docstring-'
##        #return 
##
##    def Report(self):
##        '-no docstring-'
##        #return 
##
##    def UndoTransBegin(self, book):
##        '-no docstring-'
##        #return 
##
##    def UndoTransEnd(self, book, cancelTrans, desc):
##        '-no docstring-'
##        #return 
##
##    def RunCommand(self, cmdid, param1, param2, param3):
##        '-no docstring-'
##        #return 
##

class IComments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024426-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IComments._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Comment)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Comment)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IComments implementation
##class IComments_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IAllowEditRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAllowEditRange._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Range',
              ( ['in'], POINTER(Range), 'RHS' )),
    COMMETHOD([], HRESULT, 'ChangePassword',
              ( ['in'], BSTR, 'Password' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Unprotect',
              ( ['in', 'optional'], VARIANT, 'Password' )),
    COMMETHOD(['propget'], HRESULT, 'Users',
              ( ['retval', 'out'], POINTER(POINTER(UserAccessList)), 'RHS' )),
]
################################################################
## code template for IAllowEditRange implementation
##class IAllowEditRange_Impl(object):
##    @property
##    def Users(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def Range(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def ChangePassword(self, Password):
##        '-no docstring-'
##        #return 
##
##    def Unprotect(self, Password):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class EditBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020884-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
EditBoxes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(922), 'propget'], VARIANT_BOOL, 'DisplayVerticalScrollBar'),
    DISPMETHOD([dispid(922), 'propput'], None, 'DisplayVerticalScrollBar',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(854), 'propget'], c_int, 'InputType'),
    DISPMETHOD([dispid(854), 'propput'], None, 'InputType',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1610743857), 'restricted', 'hidden'], None, '_Dummy34'),
    DISPMETHOD([dispid(855), 'propget'], VARIANT_BOOL, 'MultiLine'),
    DISPMETHOD([dispid(855), 'propput'], None, 'MultiLine',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1162), 'propget'], VARIANT_BOOL, 'PasswordEdit'),
    DISPMETHOD([dispid(1162), 'propput'], None, 'PasswordEdit',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(EditBox), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], VARIANT, 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlMousePointer'
xlIBeam = 3
xlDefault = -4143
xlNorthwestArrow = 1
xlWait = 2
XlMousePointer = c_int # enum

# values for enumeration 'XlFileAccess'
xlReadOnly = 3
xlReadWrite = 2
XlFileAccess = c_int # enum
class ISmartTagAction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISmartTagAction._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Execute'),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlSmartTagControlType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PresentInPane',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ExpandHelp',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ExpandHelp',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CheckboxState',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CheckboxState',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextboxText',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextboxText',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListSelection',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListSelection',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RadioGroupSelection',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RadioGroupSelection',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ActiveXControl',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for ISmartTagAction implementation
##class ISmartTagAction_Impl(object):
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CheckboxState = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PresentInPane(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListSelection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ExpandHelp = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveXControl(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RadioGroupSelection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextboxText = property(_get, _set, doc = _set.__doc__)
##

Sheets._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(181)], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(551)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(469)], HRESULT, 'FillAcrossSheets',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], XlFillWith, 'Type', -4104 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(170), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(637)], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(905), 'hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(281)], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(235)], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1418), 'propget'], HRESULT, 'HPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(HPageBreaks)), 'RHS' )),
    COMMETHOD([dispid(1419), 'propget'], HRESULT, 'VPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(VPageBreaks)), 'RHS' )),
    COMMETHOD([dispid(558), 'propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(558), 'propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1772), 'hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2361)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(3054)], HRESULT, 'Add2',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['in', 'optional'], VARIANT, 'NewLayout' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for Sheets implementation
##class Sheets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, IgnorePrintAreas, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def FillAcrossSheets(self, Range, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Before, After, Count, Type, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Before, After, Count, NewLayout):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##

class IParameter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlParameterDataType'
xlParamTypeUnknown = 0
xlParamTypeChar = 1
xlParamTypeNumeric = 2
xlParamTypeDecimal = 3
xlParamTypeInteger = 4
xlParamTypeSmallInt = 5
xlParamTypeFloat = 6
xlParamTypeReal = 7
xlParamTypeDouble = 8
xlParamTypeVarChar = 12
xlParamTypeDate = 9
xlParamTypeTime = 10
xlParamTypeTimestamp = 11
xlParamTypeLongVarChar = -1
xlParamTypeBinary = -2
xlParamTypeVarBinary = -3
xlParamTypeLongVarBinary = -4
xlParamTypeBigInt = -5
xlParamTypeTinyInt = -6
xlParamTypeBit = -7
xlParamTypeWChar = -8
XlParameterDataType = c_int # enum

# values for enumeration 'XlParameterType'
xlPrompt = 0
xlConstant = 1
xlRange = 2
XlParameterType = c_int # enum
IParameter._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataType',
              ( ['retval', 'out'], POINTER(XlParameterDataType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DataType',
              ( ['in'], XlParameterDataType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlParameterType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PromptString',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'SetParam',
              ( ['in'], XlParameterType, 'Type' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshOnChange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshOnChange',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IParameter implementation
##class IParameter_Impl(object):
##    def SetParam(self, Type, Value):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PromptString(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DataType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshOnChange = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##

class ITextConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITextConnection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Connection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileHeaderRow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileHeaderRow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileColumnDataTypes',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileColumnDataTypes',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileCommaDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileCommaDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileConsecutiveDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileConsecutiveDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileDecimalSeparator',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileDecimalSeparator',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileFixedColumnWidths',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileFixedColumnWidths',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileOtherDelimiter',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileOtherDelimiter',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileParseType',
              ( ['retval', 'out'], POINTER(XlTextParsingType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileParseType',
              ( ['in'], XlTextParsingType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFilePlatform',
              ( ['retval', 'out'], POINTER(XlPlatform), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFilePlatform',
              ( ['in'], XlPlatform, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFilePromptOnRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFilePromptOnRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileSemicolonDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileSemicolonDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileSpaceDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileSpaceDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileStartRow',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileStartRow',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileTabDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileTabDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileTextQualifier',
              ( ['retval', 'out'], POINTER(XlTextQualifier), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileTextQualifier',
              ( ['in'], XlTextQualifier, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileThousandsSeparator',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileThousandsSeparator',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileTrailingMinusNumbers',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileTrailingMinusNumbers',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileVisualLayout',
              ( ['retval', 'out'], POINTER(XlTextVisualLayoutType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileVisualLayout',
              ( ['in'], XlTextVisualLayoutType, 'RHS' )),
]
################################################################
## code template for ITextConnection implementation
##class ITextConnection_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileConsecutiveDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileHeaderRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileCommaDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileColumnDataTypes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFilePromptOnRefresh = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileTextQualifier = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileParseType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileStartRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileTrailingMinusNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileVisualLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Connection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileSpaceDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileFixedColumnWidths = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileDecimalSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileTabDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileSemicolonDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFilePlatform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileThousandsSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileOtherDelimiter = property(_get, _set, doc = _set.__doc__)
##

class IModelColumnChanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelColumnChanges._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelColumnChange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelColumnChange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IModelColumnChanges implementation
##class IModelColumnChanges_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlCubeFieldSubType'
xlCubeHierarchy = 1
xlCubeMeasure = 2
xlCubeSet = 3
xlCubeAttribute = 4
xlCubeCalculatedMeasure = 5
xlCubeKPIValue = 6
xlCubeKPIGoal = 7
xlCubeKPIStatus = 8
xlCubeKPITrend = 9
xlCubeKPIWeight = 10
xlCubeImplicitMeasure = 11
XlCubeFieldSubType = c_int # enum
class ICharts(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICharts._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy7'),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'HPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(HPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(VPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    COMMETHOD([], HRESULT, 'Add2',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['in', 'optional'], VARIANT, 'NewLayout' ),
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
]
################################################################
## code template for ICharts implementation
##class ICharts_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Before, After, Count):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy7(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Before, After, Count, NewLayout):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##

class IModelTableNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelTableNames._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IModelTableNames implementation
##class IModelTableNames_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IAddIns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020858-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAddIns._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'CopyFile' ),
              ( ['retval', 'out'], POINTER(POINTER(AddIn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(AddIn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(AddIn)), 'RHS' )),
]
################################################################
## code template for IAddIns implementation
##class IAddIns_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Filename, CopyFile):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IMenus(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020865-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMenus._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Caption' ),
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'Restore' ),
              ( ['retval', 'out'], POINTER(POINTER(Menu)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Menu)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Menu)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IMenus implementation
##class IMenus_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Caption, Before, Restore):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ITableStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class TableStyleElements(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A6-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlTableStyleElementType'
xlWholeTable = 0
xlHeaderRow = 1
xlTotalRow = 2
xlGrandTotalRow = 2
xlFirstColumn = 3
xlLastColumn = 4
xlGrandTotalColumn = 4
xlRowStripe1 = 5
xlRowStripe2 = 6
xlColumnStripe1 = 7
xlColumnStripe2 = 8
xlFirstHeaderCell = 9
xlLastHeaderCell = 10
xlFirstTotalCell = 11
xlLastTotalCell = 12
xlSubtotalColumn1 = 13
xlSubtotalColumn2 = 14
xlSubtotalColumn3 = 15
xlSubtotalRow1 = 16
xlSubtotalRow2 = 17
xlSubtotalRow3 = 18
xlBlankRow = 19
xlColumnSubheading1 = 20
xlColumnSubheading2 = 21
xlColumnSubheading3 = 22
xlRowSubheading1 = 23
xlRowSubheading2 = 24
xlRowSubheading3 = 25
xlPageFieldLabels = 26
xlPageFieldValues = 27
xlSlicerUnselectedItemWithData = 28
xlSlicerUnselectedItemWithNoData = 29
xlSlicerSelectedItemWithData = 30
xlSlicerSelectedItemWithNoData = 31
xlSlicerHoveredUnselectedItemWithData = 32
xlSlicerHoveredSelectedItemWithData = 33
xlSlicerHoveredUnselectedItemWithNoData = 34
xlSlicerHoveredSelectedItemWithNoData = 35
xlTimelineSelectionLabel = 36
xlTimelineTimeLevel = 37
xlTimelinePeriodLabels1 = 38
xlTimelinePeriodLabels2 = 39
xlTimelineSelectedTimeBlock = 40
xlTimelineUnselectedTimeBlock = 41
xlTimelineSelectedTimeBlockSpace = 42
XlTableStyleElementType = c_int # enum
class TableStyleElement(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A5-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
TableStyleElement._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2735), 'propget'], VARIANT_BOOL, 'HasFormat'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(2736), 'propget'], c_int, 'StripeSize'),
    DISPMETHOD([dispid(2736), 'propput'], None, 'StripeSize',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(111)], None, 'Clear'),
]
TableStyleElements._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(TableStyleElement), 'Item',
               ( ['in'], XlTableStyleElementType, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(TableStyleElement), '_Default',
               ( ['in'], XlTableStyleElementType, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class TableStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A7-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
TableStyle._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(937), 'propget'], BSTR, 'NameLocal'),
    DISPMETHOD([dispid(553), 'propget'], VARIANT_BOOL, 'BuiltIn'),
    DISPMETHOD([dispid(2737), 'propget'], POINTER(TableStyleElements), 'TableStyleElements'),
    DISPMETHOD([dispid(2738), 'propget'], VARIANT_BOOL, 'ShowAsAvailableTableStyle'),
    DISPMETHOD([dispid(2738), 'propput'], None, 'ShowAsAvailableTableStyle',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2739), 'propget'], VARIANT_BOOL, 'ShowAsAvailablePivotTableStyle'),
    DISPMETHOD([dispid(2739), 'propput'], None, 'ShowAsAvailablePivotTableStyle',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(TableStyle), 'Duplicate',
               ( ['in', 'optional'], VARIANT, 'NewTableStyleName' )),
    DISPMETHOD([dispid(2946), 'propget'], VARIANT_BOOL, 'ShowAsAvailableSlicerStyle'),
    DISPMETHOD([dispid(2946), 'propput'], None, 'ShowAsAvailableSlicerStyle',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(3110), 'propget'], VARIANT_BOOL, 'ShowAsAvailableTimelineStyle'),
    DISPMETHOD([dispid(3110), 'propput'], None, 'ShowAsAvailableTimelineStyle',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
ITableStyle._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NameLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableStyleElements',
              ( ['retval', 'out'], POINTER(POINTER(TableStyleElements)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAsAvailableTableStyle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAsAvailableTableStyle',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAsAvailablePivotTableStyle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAsAvailablePivotTableStyle',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['in', 'optional'], VARIANT, 'NewTableStyleName' ),
              ( ['retval', 'out'], POINTER(POINTER(TableStyle)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAsAvailableSlicerStyle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAsAvailableSlicerStyle',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAsAvailableTimelineStyle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAsAvailableTimelineStyle',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for ITableStyle implementation
##class ITableStyle_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAsAvailableSlicerStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TableStyleElements(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAsAvailablePivotTableStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAsAvailableTableStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def NameLocal(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAsAvailableTimelineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Duplicate(self, NewTableStyleName):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IRanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRanges._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IRanges implementation
##class IRanges_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IModelTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelTables._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IModelTables implementation
##class IModelTables_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class Toolbars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Toolbars._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Toolbar), 'Add',
               ( ['in', 'optional'], VARIANT, 'Name' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Toolbar), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Toolbar), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class IGroupObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020898-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IGroupObject._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy27'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy28'),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy30'),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadLength',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadLength',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadWidth',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadWidth',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy36'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy37'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy38'),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy41'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy42'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy43'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy44'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy45'),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy47'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy48'),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy50'),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy52'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy53'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy54'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy55'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy56'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy57'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy58'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy59'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy60'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy61'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy62'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy63'),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy65'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy66'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy67'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy68'),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy70'),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy72'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy73'),
    COMMETHOD([], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy75'),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy77'),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IGroupObject implementation
##class IGroupObject_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy42(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy59(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy53(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy68(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy56(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy50(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy54(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy55(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy38(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy75(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy77(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy70(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy30(self):
##        '-no docstring-'
##        #return 
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy36(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy37(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy43(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy57(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadLength = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy65(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy28(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy48(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy45(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy44(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy47(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy41(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy72(self):
##        '-no docstring-'
##        #return 
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy67(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy66(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy62(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy61(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy60(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy27(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy58(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy73(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy52(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy63(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IDataFeedConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDataFeedConnection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AlwaysUseConnectionFile',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlwaysUseConnectionFile',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandType',
              ( ['retval', 'out'], POINTER(XlCmdType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandType',
              ( ['in'], XlCmdType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Connection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshDate',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Refreshing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshOnFileOpen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshOnFileOpen',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshPeriod',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshPeriod',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SavePassword',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SavePassword',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerCredentialsMethod',
              ( ['retval', 'out'], POINTER(XlCredentialsMethod), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerCredentialsMethod',
              ( ['in'], XlCredentialsMethod, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceConnectionFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceConnectionFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceDataFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceDataFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'CancelRefresh'),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD([], HRESULT, 'SaveAsODC',
              ( ['in'], BSTR, 'ODCFileName' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'Keywords' )),
]
################################################################
## code template for IDataFeedConnection implementation
##class IDataFeedConnection_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerCredentialsMethod = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshPeriod = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def CancelRefresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableRefresh = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RefreshDate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceDataFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Connection = property(_get, _set, doc = _set.__doc__)
##
##    def SaveAsODC(self, ODCFileName, Description, Keywords):
##        '-no docstring-'
##        #return 
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshOnFileOpen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlwaysUseConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SavePassword = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Refreshing(self):
##        '-no docstring-'
##        #return RHS
##

class IAxisTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002084A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAxisTitle._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeInLayout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1Local',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IAxisTitle implementation
##class IAxisTitle_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlProtectedViewCloseReason'
xlProtectedViewCloseNormal = 0
xlProtectedViewCloseEdit = 1
xlProtectedViewCloseForced = 2
XlProtectedViewCloseReason = c_int # enum
AppEvents._disp_methods_ = [
    DISPMETHOD([dispid(1565)], None, 'NewWorkbook',
               ( ['in'], POINTER(Workbook), 'Wb' )),
    DISPMETHOD([dispid(1558)], None, 'SheetSelectionChange',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' )),
    DISPMETHOD([dispid(1559)], None, 'SheetBeforeDoubleClick',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1560)], None, 'SheetBeforeRightClick',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1561)], None, 'SheetActivate',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1562)], None, 'SheetDeactivate',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1563)], None, 'SheetCalculate',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1564)], None, 'SheetChange',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' )),
    DISPMETHOD([dispid(1567)], None, 'WorkbookOpen',
               ( ['in'], POINTER(Workbook), 'Wb' )),
    DISPMETHOD([dispid(1568)], None, 'WorkbookActivate',
               ( ['in'], POINTER(Workbook), 'Wb' )),
    DISPMETHOD([dispid(1569)], None, 'WorkbookDeactivate',
               ( ['in'], POINTER(Workbook), 'Wb' )),
    DISPMETHOD([dispid(1570)], None, 'WorkbookBeforeClose',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1571)], None, 'WorkbookBeforeSave',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], VARIANT_BOOL, 'SaveAsUI' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1572)], None, 'WorkbookBeforePrint',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1573)], None, 'WorkbookNewSheet',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1574)], None, 'WorkbookAddinInstall',
               ( ['in'], POINTER(Workbook), 'Wb' )),
    DISPMETHOD([dispid(1575)], None, 'WorkbookAddinUninstall',
               ( ['in'], POINTER(Workbook), 'Wb' )),
    DISPMETHOD([dispid(1554)], None, 'WindowResize',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(1556)], None, 'WindowActivate',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(1557)], None, 'WindowDeactivate',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(1854)], None, 'SheetFollowHyperlink',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Hyperlink), 'Target' )),
    DISPMETHOD([dispid(2157)], None, 'SheetPivotTableUpdate',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2160)], None, 'WorkbookPivotTableCloseConnection',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2161)], None, 'WorkbookPivotTableOpenConnection',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2289)], None, 'WorkbookSync',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSyncEventType, 'SyncEventType' )),
    DISPMETHOD([dispid(2290)], None, 'WorkbookBeforeXmlImport',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], BSTR, 'Url' ),
               ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2291)], None, 'WorkbookAfterXmlImport',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
               ( ['in'], XlXmlImportResult, 'Result' )),
    DISPMETHOD([dispid(2292)], None, 'WorkbookBeforeXmlExport',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], BSTR, 'Url' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2293)], None, 'WorkbookAfterXmlExport',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], BSTR, 'Url' ),
               ( ['in'], XlXmlExportResult, 'Result' )),
    DISPMETHOD([dispid(2611)], None, 'WorkbookRowsetComplete',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], BSTR, 'Description' ),
               ( ['in'], BSTR, 'Sheet' ),
               ( ['in'], VARIANT_BOOL, 'Success' )),
    DISPMETHOD([dispid(2612)], None, 'AfterCalculate'),
    DISPMETHOD([dispid(2895)], None, 'SheetPivotTableAfterValueChange',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], POINTER(Range), 'TargetRange' )),
    DISPMETHOD([dispid(2896)], None, 'SheetPivotTableBeforeAllocateChanges',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2897)], None, 'SheetPivotTableBeforeCommitChanges',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2898)], None, 'SheetPivotTableBeforeDiscardChanges',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' )),
    DISPMETHOD([dispid(2903)], None, 'ProtectedViewWindowOpen',
               ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    DISPMETHOD([dispid(2905)], None, 'ProtectedViewWindowBeforeEdit',
               ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2906)], None, 'ProtectedViewWindowBeforeClose',
               ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' ),
               ( ['in'], XlProtectedViewCloseReason, 'Reason' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2908)], None, 'ProtectedViewWindowResize',
               ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    DISPMETHOD([dispid(2909)], None, 'ProtectedViewWindowActivate',
               ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    DISPMETHOD([dispid(2910)], None, 'ProtectedViewWindowDeactivate',
               ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    DISPMETHOD([dispid(2911)], None, 'WorkbookAfterSave',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], VARIANT_BOOL, 'Success' )),
    DISPMETHOD([dispid(2912)], None, 'WorkbookNewChart',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(Chart), 'Ch' )),
    DISPMETHOD([dispid(3075)], None, 'SheetLensGalleryRenderComplete',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(3076)], None, 'SheetTableUpdate',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(TableObject), 'Target' )),
    DISPMETHOD([dispid(3080)], None, 'WorkbookModelChange',
               ( ['in'], POINTER(Workbook), 'Wb' ),
               ( ['in'], POINTER(ModelChanges), 'Changes' )),
    DISPMETHOD([dispid(3079)], None, 'SheetBeforeDelete',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
]
Adjustments._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(c_float), 'Val' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['in'], c_float, 'Val' )),
]
################################################################
## code template for Adjustments implementation
##class Adjustments_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return Val
##    def _set(self, Index, Val):
##        '-no docstring-'
##    Item = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##

class IModelTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelTable._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ModelTableColumns',
              ( ['retval', 'out'], POINTER(POINTER(ModelTableColumns)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceWorkbookConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy7'),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD(['propget'], HRESULT, 'RecordCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IModelTable implementation
##class IModelTable_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ModelTableColumns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy7(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RecordCount(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceWorkbookConnection(self):
##        '-no docstring-'
##        #return RHS
##

class IFreeformBuilder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFreeformBuilder._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddNodes',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSegmentType, 'SegmentType' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['in', 'optional'], VARIANT, 'X2' ),
              ( ['in', 'optional'], VARIANT, 'Y2' ),
              ( ['in', 'optional'], VARIANT, 'X3' ),
              ( ['in', 'optional'], VARIANT, 'Y3' )),
    COMMETHOD([], HRESULT, 'ConvertToShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
]
################################################################
## code template for IFreeformBuilder implementation
##class IFreeformBuilder_Impl(object):
##    def AddNodes(self, SegmentType, EditingType, X1, Y1, X2, Y2, X3, Y3):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def ConvertToShape(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class ChartGroups(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ChartGroups._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ChartGroup), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IAllowEditRanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAllowEditRanges._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(AllowEditRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Title' ),
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['retval', 'out'], POINTER(POINTER(AllowEditRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(AllowEditRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IAllowEditRanges implementation
##class IAllowEditRanges_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Title, Range, Password):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class AboveAverage(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449E-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
AboveAverage._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2625), 'propget'], VARIANT_BOOL, 'StopIfTrue'),
    DISPMETHOD([dispid(2625), 'propput'], None, 'StopIfTrue',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2626), 'propget'], POINTER(Range), 'AppliesTo'),
    DISPMETHOD([dispid(2731), 'propget'], XlAboveBelow, 'AboveBelow'),
    DISPMETHOD([dispid(2731), 'propput'], None, 'AboveBelow',
               ( ['in'], XlAboveBelow, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(193), 'propget'], VARIANT, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2629)], None, 'SetFirstPriority'),
    DISPMETHOD([dispid(2630)], None, 'SetLastPriority'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2627)], None, 'ModifyAppliesToRange',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2631), 'propget'], VARIANT_BOOL, 'PTCondition'),
    DISPMETHOD([dispid(2615), 'propget'], XlPivotConditionScope, 'ScopeType'),
    DISPMETHOD([dispid(2615), 'propput'], None, 'ScopeType',
               ( ['in'], XlPivotConditionScope, 'rhs' )),
    DISPMETHOD([dispid(2730), 'propget'], XlCalcFor, 'CalcFor'),
    DISPMETHOD([dispid(2730), 'propput'], None, 'CalcFor',
               ( ['in'], XlCalcFor, 'rhs' )),
    DISPMETHOD([dispid(2732), 'propget'], c_int, 'NumStdDev'),
    DISPMETHOD([dispid(2732), 'propput'], None, 'NumStdDev',
               ( ['in'], c_int, 'rhs' )),
]
class ISmartTagRecognizer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024462-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISmartTagRecognizer._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'progID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FullName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for ISmartTagRecognizer implementation
##class ISmartTagRecognizer_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def progID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return RHS
##

class Axes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Axis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020848-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class AxisTitle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002084A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
AxisTitle._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(146), 'hidden', 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2648), 'propget'], VARIANT_BOOL, 'IncludeInLayout'),
    DISPMETHOD([dispid(2648), 'propput'], None, 'IncludeInLayout',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(133), 'propget'], XlChartElementPosition, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], XlChartElementPosition, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(264), 'propget'], BSTR, 'FormulaR1C1'),
    DISPMETHOD([dispid(264), 'propput'], None, 'FormulaR1C1',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(263), 'propget'], BSTR, 'FormulaLocal'),
    DISPMETHOD([dispid(263), 'propput'], None, 'FormulaLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(265), 'propget'], BSTR, 'FormulaR1C1Local'),
    DISPMETHOD([dispid(265), 'propput'], None, 'FormulaR1C1Local',
               ( ['in'], BSTR, 'rhs' )),
]

# values for enumeration 'XlScaleType'
xlScaleLinear = -4132
xlScaleLogarithmic = -4133
XlScaleType = c_int # enum

# values for enumeration 'XlTickLabelPosition'
xlTickLabelPositionHigh = -4127
xlTickLabelPositionLow = -4134
xlTickLabelPositionNextToAxis = 4
xlTickLabelPositionNone = -4142
XlTickLabelPosition = c_int # enum

# values for enumeration 'XlTimeUnit'
xlDays = 0
xlMonths = 1
xlYears = 2
XlTimeUnit = c_int # enum

# values for enumeration 'XlCategoryType'
xlCategoryScale = 2
xlTimeScale = 3
xlAutomaticScale = -4105
XlCategoryType = c_int # enum

# values for enumeration 'XlDisplayUnit'
xlHundreds = -2
xlThousands = -3
xlTenThousands = -4
xlHundredThousands = -5
xlMillions = -6
xlTenMillions = -7
xlHundredMillions = -8
xlThousandMillions = -9
xlMillionMillions = -10
XlDisplayUnit = c_int # enum
class DisplayUnitLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002084C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
DisplayUnitLabel._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(128), 'hidden', 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(129), 'hidden', 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1663), 'hidden', 'propget'], POINTER(ChartFillFormat), 'Fill'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(146), 'hidden', 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1525), 'hidden', 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'hidden', 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743839), 'restricted', 'hidden'], None, '_Dummy21'),
    DISPMETHOD([dispid(133), 'propget'], XlChartElementPosition, 'Position'),
    DISPMETHOD([dispid(133), 'propput'], None, 'Position',
               ( ['in'], XlChartElementPosition, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(264), 'propget'], BSTR, 'FormulaR1C1'),
    DISPMETHOD([dispid(264), 'propput'], None, 'FormulaR1C1',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(263), 'propget'], BSTR, 'FormulaLocal'),
    DISPMETHOD([dispid(263), 'propput'], None, 'FormulaLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(265), 'propget'], BSTR, 'FormulaR1C1Local'),
    DISPMETHOD([dispid(265), 'propput'], None, 'FormulaR1C1Local',
               ( ['in'], BSTR, 'rhs' )),
]
Axis._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(45), 'propget'], VARIANT_BOOL, 'AxisBetweenCategories'),
    DISPMETHOD([dispid(45), 'propput'], None, 'AxisBetweenCategories',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(47), 'propget'], XlAxisGroup, 'AxisGroup'),
    DISPMETHOD([dispid(82), 'propget'], POINTER(AxisTitle), 'AxisTitle'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(156), 'propget'], VARIANT, 'CategoryNames'),
    DISPMETHOD([dispid(156), 'propput'], None, 'CategoryNames',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(42), 'propget'], XlAxisCrosses, 'Crosses'),
    DISPMETHOD([dispid(42), 'propput'], None, 'Crosses',
               ( ['in'], XlAxisCrosses, 'rhs' )),
    DISPMETHOD([dispid(43), 'propget'], c_double, 'CrossesAt'),
    DISPMETHOD([dispid(43), 'propput'], None, 'CrossesAt',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(24), 'propget'], VARIANT_BOOL, 'HasMajorGridlines'),
    DISPMETHOD([dispid(24), 'propput'], None, 'HasMajorGridlines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(25), 'propget'], VARIANT_BOOL, 'HasMinorGridlines'),
    DISPMETHOD([dispid(25), 'propput'], None, 'HasMinorGridlines',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(54), 'propget'], VARIANT_BOOL, 'HasTitle'),
    DISPMETHOD([dispid(54), 'propput'], None, 'HasTitle',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(89), 'propget'], POINTER(Gridlines), 'MajorGridlines'),
    DISPMETHOD([dispid(26), 'propget'], XlTickMark, 'MajorTickMark'),
    DISPMETHOD([dispid(26), 'propput'], None, 'MajorTickMark',
               ( ['in'], XlTickMark, 'rhs' )),
    DISPMETHOD([dispid(37), 'propget'], c_double, 'MajorUnit'),
    DISPMETHOD([dispid(37), 'propput'], None, 'MajorUnit',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(38), 'propget'], VARIANT_BOOL, 'MajorUnitIsAuto'),
    DISPMETHOD([dispid(38), 'propput'], None, 'MajorUnitIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(35), 'propget'], c_double, 'MaximumScale'),
    DISPMETHOD([dispid(35), 'propput'], None, 'MaximumScale',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(36), 'propget'], VARIANT_BOOL, 'MaximumScaleIsAuto'),
    DISPMETHOD([dispid(36), 'propput'], None, 'MaximumScaleIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(33), 'propget'], c_double, 'MinimumScale'),
    DISPMETHOD([dispid(33), 'propput'], None, 'MinimumScale',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(34), 'propget'], VARIANT_BOOL, 'MinimumScaleIsAuto'),
    DISPMETHOD([dispid(34), 'propput'], None, 'MinimumScaleIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(90), 'propget'], POINTER(Gridlines), 'MinorGridlines'),
    DISPMETHOD([dispid(27), 'propget'], XlTickMark, 'MinorTickMark'),
    DISPMETHOD([dispid(27), 'propput'], None, 'MinorTickMark',
               ( ['in'], XlTickMark, 'rhs' )),
    DISPMETHOD([dispid(39), 'propget'], c_double, 'MinorUnit'),
    DISPMETHOD([dispid(39), 'propput'], None, 'MinorUnit',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(40), 'propget'], VARIANT_BOOL, 'MinorUnitIsAuto'),
    DISPMETHOD([dispid(40), 'propput'], None, 'MinorUnitIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(44), 'propget'], VARIANT_BOOL, 'ReversePlotOrder'),
    DISPMETHOD([dispid(44), 'propput'], None, 'ReversePlotOrder',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(41), 'propget'], XlScaleType, 'ScaleType'),
    DISPMETHOD([dispid(41), 'propput'], None, 'ScaleType',
               ( ['in'], XlScaleType, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select'),
    DISPMETHOD([dispid(28), 'propget'], XlTickLabelPosition, 'TickLabelPosition'),
    DISPMETHOD([dispid(28), 'propput'], None, 'TickLabelPosition',
               ( ['in'], XlTickLabelPosition, 'rhs' )),
    DISPMETHOD([dispid(91), 'propget'], POINTER(TickLabels), 'TickLabels'),
    DISPMETHOD([dispid(29), 'propget'], c_int, 'TickLabelSpacing'),
    DISPMETHOD([dispid(29), 'propput'], None, 'TickLabelSpacing',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(31), 'propget'], c_int, 'TickMarkSpacing'),
    DISPMETHOD([dispid(31), 'propput'], None, 'TickMarkSpacing',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], XlAxisType, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlAxisType, 'rhs' )),
    DISPMETHOD([dispid(1647), 'propget'], XlTimeUnit, 'BaseUnit'),
    DISPMETHOD([dispid(1647), 'propput'], None, 'BaseUnit',
               ( ['in'], XlTimeUnit, 'rhs' )),
    DISPMETHOD([dispid(1648), 'propget'], VARIANT_BOOL, 'BaseUnitIsAuto'),
    DISPMETHOD([dispid(1648), 'propput'], None, 'BaseUnitIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1649), 'propget'], XlTimeUnit, 'MajorUnitScale'),
    DISPMETHOD([dispid(1649), 'propput'], None, 'MajorUnitScale',
               ( ['in'], XlTimeUnit, 'rhs' )),
    DISPMETHOD([dispid(1650), 'propget'], XlTimeUnit, 'MinorUnitScale'),
    DISPMETHOD([dispid(1650), 'propput'], None, 'MinorUnitScale',
               ( ['in'], XlTimeUnit, 'rhs' )),
    DISPMETHOD([dispid(1651), 'propget'], XlCategoryType, 'CategoryType'),
    DISPMETHOD([dispid(1651), 'propput'], None, 'CategoryType',
               ( ['in'], XlCategoryType, 'rhs' )),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(1886), 'propget'], XlDisplayUnit, 'DisplayUnit'),
    DISPMETHOD([dispid(1886), 'propput'], None, 'DisplayUnit',
               ( ['in'], XlDisplayUnit, 'rhs' )),
    DISPMETHOD([dispid(1887), 'propget'], c_double, 'DisplayUnitCustom'),
    DISPMETHOD([dispid(1887), 'propput'], None, 'DisplayUnitCustom',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1888), 'propget'], VARIANT_BOOL, 'HasDisplayUnitLabel'),
    DISPMETHOD([dispid(1888), 'propput'], None, 'HasDisplayUnitLabel',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1889), 'propget'], POINTER(DisplayUnitLabel), 'DisplayUnitLabel'),
    DISPMETHOD([dispid(2646), 'propget'], c_double, 'LogBase'),
    DISPMETHOD([dispid(2646), 'propput'], None, 'LogBase',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(2647), 'propget'], VARIANT_BOOL, 'TickLabelSpacingIsAuto'),
    DISPMETHOD([dispid(2647), 'propput'], None, 'TickLabelSpacingIsAuto',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(116), 'propget'], POINTER(ChartFormat), 'Format'),
]
Axes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Axis), 'Item',
               ( ['in'], XlAxisType, 'Type' ),
               ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0)], POINTER(Axis), '_Default',
               ( ['in'], XlAxisType, 'Type' ),
               ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 )),
]
class IDropDown(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDropDown._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddItem',
              ( ['in'], VARIANT, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedObject',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy36'),
    COMMETHOD([], HRESULT, 'RemoveAllItems',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveItem',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DropDownLines',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DropDownLines',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IDropDown implementation
##class IDropDown_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LinkedObject(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    Selected = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveAllItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListCount(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy36(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DropDownLines = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    List = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def AddItem(self, Text, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveItem(self, Index, Count):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ICellFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024450-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICellFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Borders',
              ( ['in'], POINTER(Borders), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Font',
              ( ['in'], POINTER(Font), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Interior',
              ( ['in'], POINTER(Interior), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IndentLevel',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IndentLevel',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShrinkToFit',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShrinkToFit',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WrapText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WrapText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaHidden',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaHidden',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MergeCells',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MergeCells',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear'),
]
################################################################
## code template for ICellFormat implementation
##class ICellFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WrapText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShrinkToFit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MergeCells = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaHidden = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IndentLevel = property(_get, _set, doc = _set.__doc__)
##
##    def Interior(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def Borders(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def Font(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##

class IRTD(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRTD._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'ThrottleInterval',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThrottleInterval',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'RefreshData'),
    COMMETHOD([], HRESULT, 'RestartServers'),
]
################################################################
## code template for IRTD implementation
##class IRTD_Impl(object):
##    def RefreshData(self):
##        '-no docstring-'
##        #return 
##
##    def RestartServers(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThrottleInterval = property(_get, _set, doc = _set.__doc__)
##

class IAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020848-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAxis._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisBetweenCategories',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AxisBetweenCategories',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisGroup',
              ( ['retval', 'out'], POINTER(XlAxisGroup), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisTitle',
              ( ['retval', 'out'], POINTER(POINTER(AxisTitle)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CategoryNames',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CategoryNames',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Crosses',
              ( ['retval', 'out'], POINTER(XlAxisCrosses), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Crosses',
              ( ['in'], XlAxisCrosses, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CrossesAt',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CrossesAt',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasMajorGridlines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasMajorGridlines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasMinorGridlines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasMinorGridlines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasTitle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasTitle',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MajorGridlines',
              ( ['retval', 'out'], POINTER(POINTER(Gridlines)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MajorTickMark',
              ( ['retval', 'out'], POINTER(XlTickMark), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MajorTickMark',
              ( ['in'], XlTickMark, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MajorUnit',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MajorUnit',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MajorUnitIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MajorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaximumScale',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MaximumScale',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaximumScaleIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MaximumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinimumScale',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MinimumScale',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinimumScaleIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MinimumScaleIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinorGridlines',
              ( ['retval', 'out'], POINTER(POINTER(Gridlines)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinorTickMark',
              ( ['retval', 'out'], POINTER(XlTickMark), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MinorTickMark',
              ( ['in'], XlTickMark, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinorUnit',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MinorUnit',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinorUnitIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MinorUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReversePlotOrder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReversePlotOrder',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScaleType',
              ( ['retval', 'out'], POINTER(XlScaleType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScaleType',
              ( ['in'], XlScaleType, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TickLabelPosition',
              ( ['retval', 'out'], POINTER(XlTickLabelPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TickLabelPosition',
              ( ['in'], XlTickLabelPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TickLabels',
              ( ['retval', 'out'], POINTER(POINTER(TickLabels)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TickLabelSpacing',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TickLabelSpacing',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TickMarkSpacing',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TickMarkSpacing',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlAxisType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlAxisType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BaseUnit',
              ( ['retval', 'out'], POINTER(XlTimeUnit), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BaseUnit',
              ( ['in'], XlTimeUnit, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BaseUnitIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BaseUnitIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MajorUnitScale',
              ( ['retval', 'out'], POINTER(XlTimeUnit), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MajorUnitScale',
              ( ['in'], XlTimeUnit, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinorUnitScale',
              ( ['retval', 'out'], POINTER(XlTimeUnit), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MinorUnitScale',
              ( ['in'], XlTimeUnit, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CategoryType',
              ( ['retval', 'out'], POINTER(XlCategoryType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CategoryType',
              ( ['in'], XlCategoryType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayUnit',
              ( ['retval', 'out'], POINTER(XlDisplayUnit), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayUnit',
              ( ['in'], XlDisplayUnit, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayUnitCustom',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayUnitCustom',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasDisplayUnitLabel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasDisplayUnitLabel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayUnitLabel',
              ( ['retval', 'out'], POINTER(POINTER(DisplayUnitLabel)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LogBase',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LogBase',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TickLabelSpacingIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IAxis implementation
##class IAxis_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayUnitCustom = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AxisGroup(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CategoryNames = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MinorGridlines(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisBetweenCategories = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaximumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickLabelSpacingIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CrossesAt = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickLabelSpacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BaseUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasMajorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CategoryType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TickLabels(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasMinorGridlines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayUnit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScaleType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasTitle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Crosses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinimumScale = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DisplayUnitLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorTickMark = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDisplayUnitLabel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BaseUnitIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LogBase = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MajorGridlines(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaximumScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickMarkSpacing = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReversePlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorUnitScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MajorUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinimumScaleIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AxisTitle(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TickLabelPosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##

class FileExportConverters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
FileExportConverters._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(FileExportConverter), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(FileExportConverter), 'Item',
               ( ['in'], VARIANT, 'Index' )),
]

# values for enumeration 'XlInsertShiftDirection'
xlShiftDown = -4121
xlShiftToRight = -4161
XlInsertShiftDirection = c_int # enum
class XmlMaps(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
XmlMaps._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(XmlMap), 'Add',
               ( ['in'], BSTR, 'Schema' ),
               ( ['in', 'optional'], VARIANT, 'RootElementName' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(XmlMap), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(XmlMap), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlDeleteShiftDirection'
xlShiftToLeft = -4159
xlShiftUp = -4162
XlDeleteShiftDirection = c_int # enum
class ISlicer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicer._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisableMoveResizeUI',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisableMoveResizeUI',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowHeight',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RowHeight',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnWidth',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColumnWidth',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberOfColumns',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberOfColumns',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayHeader',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayHeader',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SlicerCache',
              ( ['retval', 'out'], POINTER(POINTER(SlicerCache)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SlicerCacheLevel',
              ( ['retval', 'out'], POINTER(POINTER(SlicerCacheLevel)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Style',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Cut'),
    COMMETHOD([], HRESULT, 'Copy'),
    COMMETHOD(['propget'], HRESULT, 'ActiveItem',
              ( ['retval', 'out'], POINTER(POINTER(SlicerItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TimelineViewState',
              ( ['retval', 'out'], POINTER(POINTER(TimelineViewState)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SlicerCacheType',
              ( ['retval', 'out'], POINTER(XlSlicerCacheType), 'RHS' )),
]
################################################################
## code template for ISlicer implementation
##class ISlicer_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RowHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColumnWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SlicerCache(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayHeader = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisableMoveResizeUI = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberOfColumns = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveItem(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TimelineViewState(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SlicerCacheType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SlicerCacheLevel(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return RHS
##

class SmartTagOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024464-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []

# values for enumeration 'XlSmartTagDisplayMode'
xlIndicatorAndButton = 0
xlDisplayNone = 1
xlButtonOnly = 2
XlSmartTagDisplayMode = c_int # enum
SmartTagOptions._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2218), 'propget'], XlSmartTagDisplayMode, 'DisplaySmartTags'),
    DISPMETHOD([dispid(2218), 'propput'], None, 'DisplaySmartTags',
               ( ['in'], XlSmartTagDisplayMode, 'rhs' )),
    DISPMETHOD([dispid(2219), 'propget'], VARIANT_BOOL, 'EmbedSmartTags'),
    DISPMETHOD([dispid(2219), 'propput'], None, 'EmbedSmartTags',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class OLEDBErrors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024446-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
OLEDBErrors._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(OLEDBError), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(OLEDBError), '_Default',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class Parameters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Parameter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Parameter._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(722), 'propget'], XlParameterDataType, 'DataType'),
    DISPMETHOD([dispid(722), 'propput'], None, 'DataType',
               ( ['in'], XlParameterDataType, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], XlParameterType, 'Type'),
    DISPMETHOD([dispid(1599), 'propget'], BSTR, 'PromptString'),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(1600), 'propget'], POINTER(Range), 'SourceRange'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1601)], None, 'SetParam',
               ( ['in'], XlParameterType, 'Type' ),
               ( ['in'], VARIANT, 'Value' )),
    DISPMETHOD([dispid(1879), 'propget'], VARIANT_BOOL, 'RefreshOnChange'),
    DISPMETHOD([dispid(1879), 'propput'], None, 'RefreshOnChange',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
Parameters._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Parameter), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'iDataType' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Parameter), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Parameter), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlWebFormatting'
xlWebFormattingAll = 1
xlWebFormattingRTF = 2
xlWebFormattingNone = 3
XlWebFormatting = c_int # enum
_QueryTable._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1584), 'propget'], VARIANT_BOOL, 'FieldNames'),
    DISPMETHOD([dispid(1584), 'propput'], None, 'FieldNames',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1585), 'propget'], VARIANT_BOOL, 'RowNumbers'),
    DISPMETHOD([dispid(1585), 'propput'], None, 'RowNumbers',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1586), 'propget'], VARIANT_BOOL, 'FillAdjacentFormulas'),
    DISPMETHOD([dispid(1586), 'propput'], None, 'FillAdjacentFormulas',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(695), 'hidden', 'propget'], VARIANT_BOOL, 'HasAutoFormat'),
    DISPMETHOD([dispid(695), 'hidden', 'propput'], None, 'HasAutoFormat',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1479), 'propget'], VARIANT_BOOL, 'RefreshOnFileOpen'),
    DISPMETHOD([dispid(1479), 'propput'], None, 'RefreshOnFileOpen',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1587), 'propget'], VARIANT_BOOL, 'Refreshing'),
    DISPMETHOD([dispid(1588), 'propget'], VARIANT_BOOL, 'FetchedRowOverflow'),
    DISPMETHOD([dispid(1427), 'propget'], VARIANT_BOOL, 'BackgroundQuery'),
    DISPMETHOD([dispid(1427), 'propput'], None, 'BackgroundQuery',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1589)], None, 'CancelRefresh'),
    DISPMETHOD([dispid(1590), 'propget'], XlCellInsertionMode, 'RefreshStyle'),
    DISPMETHOD([dispid(1590), 'propput'], None, 'RefreshStyle',
               ( ['in'], XlCellInsertionMode, 'rhs' )),
    DISPMETHOD([dispid(1477), 'propget'], VARIANT_BOOL, 'EnableRefresh'),
    DISPMETHOD([dispid(1477), 'propput'], None, 'EnableRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1481), 'propget'], VARIANT_BOOL, 'SavePassword'),
    DISPMETHOD([dispid(1481), 'propput'], None, 'SavePassword',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(681), 'propget'], POINTER(Range), 'Destination'),
    DISPMETHOD([dispid(1432), 'propget'], VARIANT, 'Connection'),
    DISPMETHOD([dispid(1432), 'propput'], None, 'Connection',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1480), 'hidden', 'propget'], VARIANT, 'Sql'),
    DISPMETHOD([dispid(1480), 'hidden', 'propput'], None, 'Sql',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1591), 'propget'], BSTR, 'PostText'),
    DISPMETHOD([dispid(1591), 'propput'], None, 'PostText',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1592), 'propget'], POINTER(Range), 'ResultRange'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1417)], VARIANT_BOOL, 'Refresh',
               ( ['in', 'optional'], VARIANT, 'BackgroundQuery' )),
    DISPMETHOD([dispid(1593), 'propget'], POINTER(Parameters), 'Parameters'),
    DISPMETHOD([dispid(1165), 'propget'], POINTER(IDispatch), 'Recordset'),
    DISPMETHOD([dispid(1165), 'propputref'], None, 'Recordset',
               ( ['in'], POINTER(IDispatch), 'rhs' )),
    DISPMETHOD([dispid(692), 'propget'], VARIANT_BOOL, 'SaveData'),
    DISPMETHOD([dispid(692), 'propput'], None, 'SaveData',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1594), 'hidden', 'propget'], VARIANT_BOOL, 'TablesOnlyFromHTML'),
    DISPMETHOD([dispid(1594), 'hidden', 'propput'], None, 'TablesOnlyFromHTML',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1595), 'propget'], VARIANT_BOOL, 'EnableEditing'),
    DISPMETHOD([dispid(1595), 'propput'], None, 'EnableEditing',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1855), 'propget'], c_int, 'TextFilePlatform'),
    DISPMETHOD([dispid(1855), 'propput'], None, 'TextFilePlatform',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1856), 'propget'], c_int, 'TextFileStartRow'),
    DISPMETHOD([dispid(1856), 'propput'], None, 'TextFileStartRow',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1857), 'propget'], XlTextParsingType, 'TextFileParseType'),
    DISPMETHOD([dispid(1857), 'propput'], None, 'TextFileParseType',
               ( ['in'], XlTextParsingType, 'rhs' )),
    DISPMETHOD([dispid(1858), 'propget'], XlTextQualifier, 'TextFileTextQualifier'),
    DISPMETHOD([dispid(1858), 'propput'], None, 'TextFileTextQualifier',
               ( ['in'], XlTextQualifier, 'rhs' )),
    DISPMETHOD([dispid(1859), 'propget'], VARIANT_BOOL, 'TextFileConsecutiveDelimiter'),
    DISPMETHOD([dispid(1859), 'propput'], None, 'TextFileConsecutiveDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1860), 'propget'], VARIANT_BOOL, 'TextFileTabDelimiter'),
    DISPMETHOD([dispid(1860), 'propput'], None, 'TextFileTabDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1861), 'propget'], VARIANT_BOOL, 'TextFileSemicolonDelimiter'),
    DISPMETHOD([dispid(1861), 'propput'], None, 'TextFileSemicolonDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1862), 'propget'], VARIANT_BOOL, 'TextFileCommaDelimiter'),
    DISPMETHOD([dispid(1862), 'propput'], None, 'TextFileCommaDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1863), 'propget'], VARIANT_BOOL, 'TextFileSpaceDelimiter'),
    DISPMETHOD([dispid(1863), 'propput'], None, 'TextFileSpaceDelimiter',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1864), 'propget'], BSTR, 'TextFileOtherDelimiter'),
    DISPMETHOD([dispid(1864), 'propput'], None, 'TextFileOtherDelimiter',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1865), 'propget'], VARIANT, 'TextFileColumnDataTypes'),
    DISPMETHOD([dispid(1865), 'propput'], None, 'TextFileColumnDataTypes',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1866), 'propget'], VARIANT, 'TextFileFixedColumnWidths'),
    DISPMETHOD([dispid(1866), 'propput'], None, 'TextFileFixedColumnWidths',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1867), 'propget'], VARIANT_BOOL, 'PreserveColumnInfo'),
    DISPMETHOD([dispid(1867), 'propput'], None, 'PreserveColumnInfo',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1500), 'propget'], VARIANT_BOOL, 'PreserveFormatting'),
    DISPMETHOD([dispid(1500), 'propput'], None, 'PreserveFormatting',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1868), 'propget'], VARIANT_BOOL, 'AdjustColumnWidth'),
    DISPMETHOD([dispid(1868), 'propput'], None, 'AdjustColumnWidth',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1829), 'propget'], VARIANT, 'CommandText'),
    DISPMETHOD([dispid(1829), 'propput'], None, 'CommandText',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1830), 'propget'], XlCmdType, 'CommandType'),
    DISPMETHOD([dispid(1830), 'propput'], None, 'CommandType',
               ( ['in'], XlCmdType, 'rhs' )),
    DISPMETHOD([dispid(1869), 'propget'], VARIANT_BOOL, 'TextFilePromptOnRefresh'),
    DISPMETHOD([dispid(1869), 'propput'], None, 'TextFilePromptOnRefresh',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1831), 'propget'], XlQueryType, 'QueryType'),
    DISPMETHOD([dispid(1832), 'propget'], VARIANT_BOOL, 'MaintainConnection'),
    DISPMETHOD([dispid(1832), 'propput'], None, 'MaintainConnection',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1870), 'propget'], BSTR, 'TextFileDecimalSeparator'),
    DISPMETHOD([dispid(1870), 'propput'], None, 'TextFileDecimalSeparator',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1871), 'propget'], BSTR, 'TextFileThousandsSeparator'),
    DISPMETHOD([dispid(1871), 'propput'], None, 'TextFileThousandsSeparator',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1833), 'propget'], c_int, 'RefreshPeriod'),
    DISPMETHOD([dispid(1833), 'propput'], None, 'RefreshPeriod',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1834)], None, 'ResetTimer'),
    DISPMETHOD([dispid(1872), 'propget'], XlWebSelectionType, 'WebSelectionType'),
    DISPMETHOD([dispid(1872), 'propput'], None, 'WebSelectionType',
               ( ['in'], XlWebSelectionType, 'rhs' )),
    DISPMETHOD([dispid(1873), 'propget'], XlWebFormatting, 'WebFormatting'),
    DISPMETHOD([dispid(1873), 'propput'], None, 'WebFormatting',
               ( ['in'], XlWebFormatting, 'rhs' )),
    DISPMETHOD([dispid(1874), 'propget'], BSTR, 'WebTables'),
    DISPMETHOD([dispid(1874), 'propput'], None, 'WebTables',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1875), 'propget'], VARIANT_BOOL, 'WebPreFormattedTextToColumns'),
    DISPMETHOD([dispid(1875), 'propput'], None, 'WebPreFormattedTextToColumns',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1876), 'propget'], VARIANT_BOOL, 'WebSingleBlockTextImport'),
    DISPMETHOD([dispid(1876), 'propput'], None, 'WebSingleBlockTextImport',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1877), 'propget'], VARIANT_BOOL, 'WebDisableDateRecognition'),
    DISPMETHOD([dispid(1877), 'propput'], None, 'WebDisableDateRecognition',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1878), 'propget'], VARIANT_BOOL, 'WebConsecutiveDelimitersAsOne'),
    DISPMETHOD([dispid(1878), 'propput'], None, 'WebConsecutiveDelimitersAsOne',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2162), 'propget'], VARIANT_BOOL, 'WebDisableRedirections'),
    DISPMETHOD([dispid(2162), 'propput'], None, 'WebDisableRedirections',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2163), 'propget'], VARIANT, 'EditWebPage'),
    DISPMETHOD([dispid(2163), 'propput'], None, 'EditWebPage',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2079), 'propget'], BSTR, 'SourceConnectionFile'),
    DISPMETHOD([dispid(2079), 'propput'], None, 'SourceConnectionFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2080), 'propget'], BSTR, 'SourceDataFile'),
    DISPMETHOD([dispid(2080), 'propput'], None, 'SourceDataFile',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2081), 'propget'], XlRobustConnect, 'RobustConnect'),
    DISPMETHOD([dispid(2081), 'propput'], None, 'RobustConnect',
               ( ['in'], XlRobustConnect, 'rhs' )),
    DISPMETHOD([dispid(2164), 'propget'], VARIANT_BOOL, 'TextFileTrailingMinusNumbers'),
    DISPMETHOD([dispid(2164), 'propput'], None, 'TextFileTrailingMinusNumbers',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2082)], None, 'SaveAsODC',
               ( ['in'], BSTR, 'ODCFileName' ),
               ( ['in', 'optional'], VARIANT, 'Description' ),
               ( ['in', 'optional'], VARIANT, 'Keywords' )),
    DISPMETHOD([dispid(2257), 'propget'], POINTER(ListObject), 'ListObject'),
    DISPMETHOD([dispid(2245), 'propget'], XlTextVisualLayoutType, 'TextFileVisualLayout'),
    DISPMETHOD([dispid(2245), 'propput'], None, 'TextFileVisualLayout',
               ( ['in'], XlTextVisualLayoutType, 'rhs' )),
    DISPMETHOD([dispid(2544), 'propget'], POINTER(WorkbookConnection), 'WorkbookConnection'),
    DISPMETHOD([dispid(880), 'propget'], POINTER(Sort), 'Sort'),
]
class IListRows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024474-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListRows._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Add',
              ( ['in', 'optional'], VARIANT, 'Position' ),
              ( ['retval', 'out'], POINTER(POINTER(ListRow)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ListRow)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ListRow)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Position' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysInsert' ),
              ( ['retval', 'out'], POINTER(POINTER(ListRow)), 'RHS' )),
]
################################################################
## code template for IListRows implementation
##class IListRows_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Position, AlwaysInsert):
##        '-no docstring-'
##        #return RHS
##
##    def _Add(self, Position):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class Mailer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Mailer._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(983), 'propget'], VARIANT, 'BCCRecipients'),
    DISPMETHOD([dispid(983), 'propput'], None, 'BCCRecipients',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(982), 'propget'], VARIANT, 'CCRecipients'),
    DISPMETHOD([dispid(982), 'propput'], None, 'CCRecipients',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(984), 'propget'], VARIANT, 'Enclosures'),
    DISPMETHOD([dispid(984), 'propput'], None, 'Enclosures',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(986), 'propget'], VARIANT_BOOL, 'Received'),
    DISPMETHOD([dispid(987), 'propget'], c_double, 'SendDateTime'),
    DISPMETHOD([dispid(988), 'propget'], BSTR, 'Sender'),
    DISPMETHOD([dispid(953), 'propget'], BSTR, 'Subject'),
    DISPMETHOD([dispid(953), 'propput'], None, 'Subject',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(981), 'propget'], VARIANT, 'ToRecipients'),
    DISPMETHOD([dispid(981), 'propput'], None, 'ToRecipients',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(974), 'propget'], VARIANT, 'WhichAddress'),
    DISPMETHOD([dispid(974), 'propput'], None, 'WhichAddress',
               ( ['in'], VARIANT, 'rhs' )),
]
class DiagramNodeChildren(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1._IMsoDispObj):
    _case_insensitive_ = True
    _iid_ = GUID('{000C036F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
DiagramNodeChildren._methods_ = [
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppNode' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], VARIANT, 'Index', -1 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramNodeType, 'nodeType', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppNewNode' )),
    COMMETHOD([dispid(11)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcDiagramNodes' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FirstChild',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'pFirst' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'LastChild',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'pLast' )),
]
################################################################
## code template for DiagramNodeChildren implementation
##class DiagramNodeChildren_Impl(object):
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcDiagramNodes
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    def AddNode(self, Index, nodeType):
##        '-no docstring-'
##        #return ppNewNode
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def FirstChild(self):
##        '-no docstring-'
##        #return pFirst
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppNode
##
##    @property
##    def LastChild(self):
##        '-no docstring-'
##        #return pLast
##

PictureFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementBrightness',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementContrast',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Brightness',
              ( ['retval', 'out'], POINTER(c_float), 'Brightness' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'Brightness' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ColorType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureColorType), 'ColorType' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'ColorType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureColorType, 'ColorType' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Contrast',
              ( ['retval', 'out'], POINTER(c_float), 'Contrast' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'Contrast',
              ( ['in'], c_float, 'Contrast' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'CropBottom',
              ( ['retval', 'out'], POINTER(c_float), 'CropBottom' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'CropBottom',
              ( ['in'], c_float, 'CropBottom' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'CropLeft',
              ( ['retval', 'out'], POINTER(c_float), 'CropLeft' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'CropLeft',
              ( ['in'], c_float, 'CropLeft' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'CropRight',
              ( ['retval', 'out'], POINTER(c_float), 'CropRight' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'CropRight',
              ( ['in'], c_float, 'CropRight' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'CropTop',
              ( ['retval', 'out'], POINTER(c_float), 'CropTop' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'CropTop',
              ( ['in'], c_float, 'CropTop' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'TransparencyColor',
              ( ['retval', 'out'], POINTER(c_int), 'TransparencyColor' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'TransparencyColor',
              ( ['in'], c_int, 'TransparencyColor' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'TransparentBackground',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'TransparentBackground' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'TransparentBackground',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'TransparentBackground' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Crop',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Crop)), 'Crop' )),
]
################################################################
## code template for PictureFormat implementation
##class PictureFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return CropLeft
##    def _set(self, CropLeft):
##        '-no docstring-'
##    CropLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TransparentBackground
##    def _set(self, TransparentBackground):
##        '-no docstring-'
##    TransparentBackground = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropTop
##    def _set(self, CropTop):
##        '-no docstring-'
##    CropTop = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementBrightness(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Brightness
##    def _set(self, Brightness):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementContrast(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Crop(self):
##        '-no docstring-'
##        #return Crop
##
##    def _get(self):
##        '-no docstring-'
##        #return TransparencyColor
##    def _set(self, TransparencyColor):
##        '-no docstring-'
##    TransparencyColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ColorType
##    def _set(self, ColorType):
##        '-no docstring-'
##    ColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropBottom
##    def _set(self, CropBottom):
##        '-no docstring-'
##    CropBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Contrast
##    def _set(self, Contrast):
##        '-no docstring-'
##    Contrast = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return CropRight
##    def _set(self, CropRight):
##        '-no docstring-'
##    CropRight = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlCubeFieldType'
xlHierarchy = 1
xlMeasure = 2
xlSet = 3
XlCubeFieldType = c_int # enum
class IPivotItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020876-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotItem._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ChildItems',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LabelRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentItem',
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentShowDetail',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowDetail',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowDetail',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'IsCalculated',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RecordCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DrilledDown',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DrilledDown',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StandardFormula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StandardFormula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceNameStandard',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'DrillTo',
              ( ['in'], BSTR, 'Field' )),
]
################################################################
## code template for IPivotItem implementation
##class IPivotItem_Impl(object):
##    @property
##    def RecordCount(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DrilledDown = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ParentShowDetail(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LabelRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ParentItem(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsCalculated(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SourceNameStandard(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ChildItems(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowDetail = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def DrillTo(self, Field):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StandardFormula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlFormatFilterTypes'
xlFilterBottom = 0
xlFilterTop = 1
xlFilterBottomPercent = 2
xlFilterTopPercent = 3
XlFormatFilterTypes = c_int # enum
class ISort(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AB-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISort._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Rng',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Header',
              ( ['retval', 'out'], POINTER(XlYesNoGuess), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Header',
              ( ['in'], XlYesNoGuess, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MatchCase',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MatchCase',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(XlSortOrientation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], XlSortOrientation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortMethod',
              ( ['retval', 'out'], POINTER(XlSortMethod), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SortMethod',
              ( ['in'], XlSortMethod, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortFields',
              ( ['retval', 'out'], POINTER(POINTER(SortFields)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SetRange',
              ( ['in'], POINTER(Range), 'Rng' )),
    COMMETHOD([], HRESULT, 'Apply'),
]
################################################################
## code template for ISort implementation
##class ISort_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Header = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Rng(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SortMethod = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MatchCase = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SortFields(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetRange(self, Rng):
##        '-no docstring-'
##        #return 
##

class IRecentFile(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024407-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRecentFile._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Open',
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for IRecentFile implementation
##class IRecentFile_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return RHS
##
##    def Open(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlQuickAnalysisMode'
xlLensOnly = 0
xlFormatConditions = 1
xlRecommendedCharts = 2
xlTotals = 3
xlTables = 4
xlSparklines = 5
XlQuickAnalysisMode = c_int # enum

# values for enumeration 'XlLinkInfoType'
xlLinkInfoOLELinks = 2
xlLinkInfoPublishers = 5
xlLinkInfoSubscribers = 6
XlLinkInfoType = c_int # enum
class ITrendline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITrendline._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Backward',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Backward',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataLabel',
              ( ['retval', 'out'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayEquation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayEquation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayRSquared',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayRSquared',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Forward',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Forward',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Intercept',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Intercept',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InterceptIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InterceptIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NameIsAuto',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NameIsAuto',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Order',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Order',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Period',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Period',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlTrendlineType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlTrendlineType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Backward2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Backward2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Forward2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Forward2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for ITrendline implementation
##class ITrendline_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Backward2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Forward = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayEquation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NameIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Forward2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Intercept = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Backward = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InterceptIsAuto = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Order = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayRSquared = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Period = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##

class Dialogs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020879-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Dialogs._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Dialog), 'Item',
               ( ['in'], XlBuiltInDialog, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Dialog), '_Default',
               ( ['in'], XlBuiltInDialog, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class IWatches(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024456-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class Watch(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024457-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Watch._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(222), 'propget'], VARIANT, 'Source'),
]
IWatches._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Source' ),
              ( ['retval', 'out'], POINTER(POINTER(Watch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Watch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Watch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for IWatches implementation
##class IWatches_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Source):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IFileExportConverter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFileExportConverter._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Extensions',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FileFormat',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IFileExportConverter implementation
##class IFileExportConverter_Impl(object):
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Extensions(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FileFormat(self):
##        '-no docstring-'
##        #return RHS
##

class IModelConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelConnection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandType',
              ( ['retval', 'out'], POINTER(XlCmdType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandType',
              ( ['in'], XlCmdType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ADOConnection',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CalculatedMembers',
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMembers)), 'RHS' )),
]
################################################################
## code template for IModelConnection implementation
##class IModelConnection_Impl(object):
##    @property
##    def CalculatedMembers(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ADOConnection(self):
##        '-no docstring-'
##        #return RHS
##

class ISparklineGroup(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparklineGroup._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Sparkline)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Location',
              ( ['in'], POINTER(Range), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceData',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceData',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DateRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DateRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'ModifyLocation',
              ( ['in'], POINTER(Range), 'Location' )),
    COMMETHOD([], HRESULT, 'ModifySourceData',
              ( ['in'], BSTR, 'SourceData' )),
    COMMETHOD([], HRESULT, 'Modify',
              ( ['in'], POINTER(Range), 'Location' ),
              ( ['in'], BSTR, 'SourceData' )),
    COMMETHOD([], HRESULT, 'ModifyDateRange',
              ( ['in'], BSTR, 'DateRange' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlSparkType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlSparkType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SeriesColor',
              ( ['retval', 'out'], POINTER(POINTER(FormatColor)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Points',
              ( ['retval', 'out'], POINTER(POINTER(SparkPoints)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Axes',
              ( ['retval', 'out'], POINTER(POINTER(SparkAxes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayBlanksAs',
              ( ['retval', 'out'], POINTER(XlDisplayBlanksAs), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayBlanksAs',
              ( ['in'], XlDisplayBlanksAs, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayHidden',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayHidden',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LineWeight',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LineWeight',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PlotBy',
              ( ['retval', 'out'], POINTER(XlSparklineRowCol), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PlotBy',
              ( ['in'], XlSparklineRowCol, 'RHS' )),
]
################################################################
## code template for ISparklineGroup implementation
##class ISparklineGroup_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DateRange = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Axes(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Location(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PlotBy = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceData = property(_get, _set, doc = _set.__doc__)
##
##    def ModifyDateRange(self, DateRange):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayBlanksAs = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SeriesColor(self):
##        '-no docstring-'
##        #return RHS
##
##    def Modify(self, Location, SourceData):
##        '-no docstring-'
##        #return 
##
##    def ModifyLocation(self, Location):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayHidden = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Points(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LineWeight = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def ModifySourceData(self, SourceData):
##        '-no docstring-'
##        #return 
##

class ISmartTagOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024464-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISmartTagOptions._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplaySmartTags',
              ( ['retval', 'out'], POINTER(XlSmartTagDisplayMode), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplaySmartTags',
              ( ['in'], XlSmartTagDisplayMode, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EmbedSmartTags',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EmbedSmartTags',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for ISmartTagOptions implementation
##class ISmartTagOptions_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplaySmartTags = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EmbedSmartTags = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IDialogFrame(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDialogFrame._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy4'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy5'),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy7'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy8'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy9'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy10'),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy17'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy18'),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy20'),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy23'),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy25'),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IDialogFrame implementation
##class IDialogFrame_Impl(object):
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy18(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy17(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy10(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy4(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy5(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy7(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy8(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy9(self):
##        '-no docstring-'
##        #return 
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy23(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy20(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy25(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlXmlLoadOption'
xlXmlLoadPromptUser = 0
xlXmlLoadOpenXml = 1
xlXmlLoadImportToList = 2
xlXmlLoadMapXml = 3
XlXmlLoadOption = c_int # enum
class IFormatColor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024491-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFormatColor._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for IFormatColor implementation
##class IFormatColor_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlChartGallery'
xlBuiltIn = 21
xlUserDefined = 22
xlAnyGallery = 23
XlChartGallery = c_int # enum
class IXmlMaps(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXmlMaps._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Schema' ),
              ( ['in', 'optional'], VARIANT, 'RootElementName' ),
              ( ['retval', 'out'], POINTER(POINTER(XmlMap)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(XmlMap)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(XmlMap)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IXmlMaps implementation
##class IXmlMaps_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Schema, RootElementName):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class Points(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020869-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Points._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Point), 'Item',
               ( ['in'], c_int, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0)], POINTER(Point), '_Default',
               ( ['in'], c_int, 'Index' )),
]
class IXmlNamespace(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024476-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXmlNamespace._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Uri',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Prefix',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IXmlNamespace implementation
##class IXmlNamespace_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Uri(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Prefix(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'Constants'
xlAll = -4104
xlAutomatic = -4105
xlBoth = 1
xlCenter = -4108
xlChecker = 9
xlCircle = 8
xlCorner = 2
xlCrissCross = 16
xlCross = 4
xlDiamond = 2
xlDistributed = -4117
xlDoubleAccounting = 5
xlFixedValue = 1
xlFormats = -4122
xlGray16 = 17
xlGray8 = 18
xlGrid = 15
xlHigh = -4127
xlInside = 2
xlJustify = -4130
xlLightDown = 13
xlLightHorizontal = 11
xlLightUp = 14
xlLightVertical = 12
xlLow = -4134
xlManual = -4135
xlMinusValues = 3
xlModule = -4141
xlNextToAxis = 4
xlNone = -4142
xlNotes = -4144
xlOff = -4146
xlOn = 1
xlPercent = 2
xlPlus = 9
xlPlusValues = 2
xlSemiGray75 = 10
xlShowLabel = 4
xlShowLabelAndPercent = 5
xlShowPercent = 3
xlShowValue = 2
xlSimple = -4154
xlSingle = 2
xlSingleAccounting = 4
xlSolid = 1
xlSquare = 1
xlStar = 5
xlStError = 4
xlToolbarButton = 2
xlTriangle = 3
xlGray25 = -4124
xlGray50 = -4125
xlGray75 = -4126
xlBottom = -4107
xlLeft = -4131
xlRight = -4152
xlTop = -4160
xl3DBar = -4099
xl3DSurface = -4103
xlBar = 2
xlColumn = 3
xlCombination = -4111
xlCustom = -4114
xlDefaultAutoFormat = -1
xlMaximum = 2
xlMinimum = 4
xlOpaque = 3
xlTransparent = 2
xlBidi = -5000
xlLatin = -5001
xlContext = -5002
xlLTR = -5003
xlRTL = -5004
xlFullScript = 1
xlPartialScript = 2
xlMixedScript = 3
xlMixedAuthorizedScript = 4
xlVisualCursor = 2
xlLogicalCursor = 1
xlSystem = 1
xlPartial = 3
xlHindiNumerals = 3
xlBidiCalendar = 3
xlGregorian = 2
xlComplete = 4
xlScale = 3
xlClosed = 3
xlColor1 = 7
xlColor2 = 8
xlColor3 = 9
xlConstants = 2
xlContents = 2
xlBelow = 1
xlCascade = 7
xlCenterAcrossSelection = 7
xlChart4 = 2
xlChartSeries = 17
xlChartShort = 6
xlChartTitles = 18
xlClassic1 = 1
xlClassic2 = 2
xlClassic3 = 3
xl3DEffects1 = 13
xl3DEffects2 = 14
xlAbove = 0
xlAccounting1 = 4
xlAccounting2 = 5
xlAccounting3 = 6
xlAccounting4 = 17
xlAdd = 2
xlDebugCodePane = 13
xlDesktop = 9
xlDirect = 1
xlDivide = 5
xlDoubleClosed = 5
xlDoubleOpen = 4
xlDoubleQuote = 1
xlEntireChart = 20
xlExcelMenus = 1
xlExtended = 3
xlFill = 5
xlFirst = 0
xlFloating = 5
xlFormula = 5
xlGeneral = 1
xlGridline = 22
xlIcons = 1
xlImmediatePane = 12
xlInteger = 2
xlLast = 1
xlLastCell = 11
xlList1 = 10
xlList2 = 11
xlList3 = 12
xlLocalFormat1 = 15
xlLocalFormat2 = 16
xlLong = 3
xlLotusHelp = 2
xlMacrosheetCell = 7
xlMixed = 2
xlMultiply = 4
xlNarrow = 1
xlNoDocuments = 3
xlOpen = 2
xlOutside = 3
xlReference = 4
xlSemiautomatic = 2
xlShort = 1
xlSingleQuote = 2
xlStrict = 2
xlSubtract = 3
xlTextBox = 16
xlTiled = 1
xlTitleBar = 8
xlToolbar = 1
xlVisible = 12
xlWatchPane = 11
xlWide = 3
xlWorkbookTab = 6
xlWorksheet4 = 1
xlWorksheetCell = 3
xlWorksheetShort = 5
xlAllExceptBorders = 7
xlLeftToRight = 2
xlTopToBottom = 1
xlVeryHidden = 2
xlDrawingObject = 14
Constants = c_int # enum
class IOval(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOval._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IOval implementation
##class IOval_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ICalculatedMembers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024454-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICalculatedMembers._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMember)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMember)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Formula' ),
              ( ['in', 'optional'], VARIANT, 'SolveOrder' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMember)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], VARIANT, 'Formula' ),
              ( ['in', 'optional'], VARIANT, 'SolveOrder' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Dynamic' ),
              ( ['in', 'optional'], VARIANT, 'DisplayFolder' ),
              ( ['in', 'optional'], VARIANT, 'HierarchizeDistinct' ),
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMember)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddCalculatedMember',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], VARIANT, 'Formula' ),
              ( ['in', 'optional'], VARIANT, 'SolveOrder' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'DisplayFolder' ),
              ( ['in', 'optional'], VARIANT, 'MeasureGroup' ),
              ( ['in', 'optional'], VARIANT, 'ParentHierarchy' ),
              ( ['in', 'optional'], VARIANT, 'ParentMember' ),
              ( ['in', 'optional'], VARIANT, 'NumberFormat' ),
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMember)), 'RHS' )),
]
################################################################
## code template for ICalculatedMembers implementation
##class ICalculatedMembers_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Add(self, Name, Formula, SolveOrder, Type):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, Formula, SolveOrder, Type, Dynamic, DisplayFolder, HierarchizeDistinct):
##        '-no docstring-'
##        #return RHS
##
##    def AddCalculatedMember(self, Name, Formula, SolveOrder, Type, DisplayFolder, MeasureGroup, ParentHierarchy, ParentMember, NumberFormat):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlSortType'
xlSortLabels = 2
xlSortValues = 1
XlSortType = c_int # enum
class IChartArea(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CC-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartArea._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearContents',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IChartArea implementation
##class IChartArea_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearContents(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlMeasurementUnits'
xlInches = 0
xlCentimeters = 1
xlMillimeters = 2
XlMeasurementUnits = c_int # enum
class IWorkbookConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024485-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWorkbookConnection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlConnectionType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OLEDBConnection',
              ( ['retval', 'out'], POINTER(POINTER(OLEDBConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ODBCConnection',
              ( ['retval', 'out'], POINTER(POINTER(ODBCConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Ranges',
              ( ['retval', 'out'], POINTER(POINTER(Ranges)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD(['propget'], HRESULT, 'ModelConnection',
              ( ['retval', 'out'], POINTER(POINTER(ModelConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WorksheetDataConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorksheetDataConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshWithRefreshAll',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshWithRefreshAll',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextConnection',
              ( ['retval', 'out'], POINTER(POINTER(TextConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataFeedConnection',
              ( ['retval', 'out'], POINTER(POINTER(DataFeedConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InModel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ModelTables',
              ( ['retval', 'out'], POINTER(POINTER(ModelTables)), 'RHS' )),
]
################################################################
## code template for IWorkbookConnection implementation
##class IWorkbookConnection_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshWithRefreshAll = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ModelConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WorksheetDataConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ODBCConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ModelTables(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Ranges(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def InModel(self):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OLEDBConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataFeedConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##

class ICanvasShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002444F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICanvasShapes._methods_ = [
]
################################################################
## code template for ICanvasShapes implementation
##class ICanvasShapes_Impl(object):


# values for enumeration 'XlPhoneticCharacterType'
xlKatakanaHalf = 0
xlKatakana = 1
xlHiragana = 2
xlNoConversion = 3
XlPhoneticCharacterType = c_int # enum
class IFont(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002084D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFont._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Background',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Background',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Bold',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Bold',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FontStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FontStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Italic',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Italic',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OutlineFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OutlineFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Size',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Strikethrough',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Strikethrough',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Subscript',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Subscript',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Superscript',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Superscript',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Underline',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Underline',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeFont',
              ( ['retval', 'out'], POINTER(XlThemeFont), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeFont',
              ( ['in'], XlThemeFont, 'RHS' )),
]
################################################################
## code template for IFont implementation
##class IFont_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Subscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FontStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Bold = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Strikethrough = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Italic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Underline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Background = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Size = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OutlineFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Superscript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##

class ITableStyleElements(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A6-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITableStyleElements._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], XlTableStyleElementType, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(TableStyleElement)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], XlTableStyleElementType, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(TableStyleElement)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ITableStyleElements implementation
##class ITableStyleElements_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ICheckBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICheckBox._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for ICheckBox implementation
##class ICheckBox_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class GroupObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020899-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
GroupObjects._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1610743845), 'restricted', 'hidden'], None, '_Dummy27'),
    DISPMETHOD([dispid(1610743846), 'restricted', 'hidden'], None, '_Dummy28'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743849), 'restricted', 'hidden'], None, '_Dummy30'),
    DISPMETHOD([dispid(611), 'propget'], VARIANT, 'ArrowHeadLength'),
    DISPMETHOD([dispid(611), 'propput'], None, 'ArrowHeadLength',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(612), 'propget'], VARIANT, 'ArrowHeadStyle'),
    DISPMETHOD([dispid(612), 'propput'], None, 'ArrowHeadStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(613), 'propget'], VARIANT, 'ArrowHeadWidth'),
    DISPMETHOD([dispid(613), 'propput'], None, 'ArrowHeadWidth',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(1610743859), 'restricted', 'hidden'], None, '_Dummy36'),
    DISPMETHOD([dispid(1610743860), 'restricted', 'hidden'], None, '_Dummy37'),
    DISPMETHOD([dispid(1610743861), 'restricted', 'hidden'], None, '_Dummy38'),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1610743865), 'restricted', 'hidden'], None, '_Dummy41'),
    DISPMETHOD([dispid(1610743866), 'restricted', 'hidden'], None, '_Dummy42'),
    DISPMETHOD([dispid(1610743867), 'restricted', 'hidden'], None, '_Dummy43'),
    DISPMETHOD([dispid(1610743868), 'restricted', 'hidden'], None, '_Dummy44'),
    DISPMETHOD([dispid(1610743869), 'restricted', 'hidden'], None, '_Dummy45'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(1610743871), 'restricted', 'hidden'], None, '_Dummy47'),
    DISPMETHOD([dispid(1610743872), 'restricted', 'hidden'], None, '_Dummy48'),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743875), 'restricted', 'hidden'], None, '_Dummy50'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1610743877), 'restricted', 'hidden'], None, '_Dummy52'),
    DISPMETHOD([dispid(1610743878), 'restricted', 'hidden'], None, '_Dummy53'),
    DISPMETHOD([dispid(1610743879), 'restricted', 'hidden'], None, '_Dummy54'),
    DISPMETHOD([dispid(1610743880), 'restricted', 'hidden'], None, '_Dummy55'),
    DISPMETHOD([dispid(1610743881), 'restricted', 'hidden'], None, '_Dummy56'),
    DISPMETHOD([dispid(1610743882), 'restricted', 'hidden'], None, '_Dummy57'),
    DISPMETHOD([dispid(1610743883), 'restricted', 'hidden'], None, '_Dummy58'),
    DISPMETHOD([dispid(1610743884), 'restricted', 'hidden'], None, '_Dummy59'),
    DISPMETHOD([dispid(1610743885), 'restricted', 'hidden'], None, '_Dummy60'),
    DISPMETHOD([dispid(1610743886), 'restricted', 'hidden'], None, '_Dummy61'),
    DISPMETHOD([dispid(1610743887), 'restricted', 'hidden'], None, '_Dummy62'),
    DISPMETHOD([dispid(1610743888), 'restricted', 'hidden'], None, '_Dummy63'),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743891), 'restricted', 'hidden'], None, '_Dummy65'),
    DISPMETHOD([dispid(1610743892), 'restricted', 'hidden'], None, '_Dummy66'),
    DISPMETHOD([dispid(1610743893), 'restricted', 'hidden'], None, '_Dummy67'),
    DISPMETHOD([dispid(1610743894), 'restricted', 'hidden'], None, '_Dummy68'),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743897), 'restricted', 'hidden'], None, '_Dummy70'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743900), 'restricted', 'hidden'], None, '_Dummy72'),
    DISPMETHOD([dispid(1610743901), 'restricted', 'hidden'], None, '_Dummy73'),
    DISPMETHOD([dispid(244)], POINTER(IDispatch), 'Ungroup'),
    DISPMETHOD([dispid(1610743903), 'restricted', 'hidden'], None, '_Dummy75'),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743906), 'restricted', 'hidden'], None, '_Dummy77'),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class ILegend(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CD-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILegend._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD([], HRESULT, 'LegendEntries',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlLegendPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlLegendPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeInLayout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeInLayout',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for ILegend implementation
##class ILegend_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def LegendEntries(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeInLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class ISlicerCache(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicerCache._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OLAP',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceType',
              ( ['retval', 'out'], POINTER(XlPivotTableSourceType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WorkbookConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Slicers',
              ( ['retval', 'out'], POINTER(POINTER(Slicers)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotTables',
              ( ['retval', 'out'], POINTER(POINTER(SlicerPivotTables)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SlicerCacheLevels',
              ( ['retval', 'out'], POINTER(POINTER(SlicerCacheLevels)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleSlicerItems',
              ( ['retval', 'out'], POINTER(POINTER(SlicerItems)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleSlicerItemsList',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VisibleSlicerItemsList',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SlicerItems',
              ( ['retval', 'out'], POINTER(POINTER(SlicerItems)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CrossFilterType',
              ( ['retval', 'out'], POINTER(XlSlicerCrossFilterType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CrossFilterType',
              ( ['in'], XlSlicerCrossFilterType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortItems',
              ( ['retval', 'out'], POINTER(XlSlicerSort), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SortItems',
              ( ['in'], XlSlicerSort, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortUsingCustomLists',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SortUsingCustomLists',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAllItems',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAllItems',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearManualFilter'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'TimelineState',
              ( ['retval', 'out'], POINTER(POINTER(TimelineState)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearAllFilters'),
    COMMETHOD(['propget'], HRESULT, 'SlicerCacheType',
              ( ['retval', 'out'], POINTER(XlSlicerCacheType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FilterCleared',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'List',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RequireManualUpdate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RequireManualUpdate',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListObject',
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearDateFilter'),
]
################################################################
## code template for ISlicerCache implementation
##class ISlicerCache_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TimelineState(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ListObject(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotTables(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RequireManualUpdate = property(_get, _set, doc = _set.__doc__)
##
##    def ClearAllFilters(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAllItems = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CrossFilterType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OLAP(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FilterCleared(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VisibleSlicerItemsList = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SlicerCacheLevels(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def List(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Slicers(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WorkbookConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VisibleSlicerItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SlicerCacheType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SortItems = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SlicerItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearDateFilter(self):
##        '-no docstring-'
##        #return 
##
##    def ClearManualFilter(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SortUsingCustomLists = property(_get, _set, doc = _set.__doc__)
##

class IFloor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFloor._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste'),
    COMMETHOD(['propget'], HRESULT, 'Thickness',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IFloor implementation
##class IFloor_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##

class IFileExportConverters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IFileExportConverters._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(FileExportConverter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(FileExportConverter)), 'RHS' )),
]
################################################################
## code template for IFileExportConverters implementation
##class IFileExportConverters_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IDialogSheet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AF-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDialogSheet._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_CodeName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Next',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageSetup',
              ( ['retval', 'out'], POINTER(POINTER(PageSetup)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Previous',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['hidden'], HRESULT, '_Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'ProtectContents',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ProtectDrawingObjects',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ProtectionMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ProtectScenarios',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Unprotect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlSheetVisibility), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlSheetVisibility, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(Shapes)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy29'),
    COMMETHOD(['hidden'], HRESULT, 'Arcs',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy31'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy32'),
    COMMETHOD(['hidden'], HRESULT, 'Buttons',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy34'),
    COMMETHOD(['propget'], HRESULT, 'EnableCalculation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableCalculation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy36'),
    COMMETHOD([], HRESULT, 'ChartObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'CheckBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy40'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy41'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy42'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy43'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy44'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy45'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'DisplayAutomaticPageBreaks',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'DisplayAutomaticPageBreaks',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Drawings',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'DrawingObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'DropDowns',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableAutoFilter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableAutoFilter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableSelection',
              ( ['retval', 'out'], POINTER(XlEnableSelection), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableSelection',
              ( ['in'], XlEnableSelection, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableOutlining',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableOutlining',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnablePivotTable',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnablePivotTable',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, '_Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy56'),
    COMMETHOD([], HRESULT, 'ResetAllPageBreaks'),
    COMMETHOD(['hidden'], HRESULT, 'GroupBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'GroupObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Labels',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Lines',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ListBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Names',
              ( ['retval', 'out'], POINTER(POINTER(Names)), 'RHS' )),
    COMMETHOD([], HRESULT, 'OLEObjects',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy65'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy66'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy67'),
    COMMETHOD(['hidden'], HRESULT, 'OptionButtons',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy69'),
    COMMETHOD(['hidden'], HRESULT, 'Ovals',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['hidden'], HRESULT, '_PasteSpecial',
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
              ( ['in', 'optional'], VARIANT, 'IconFileName' ),
              ( ['in', 'optional'], VARIANT, 'IconIndex' ),
              ( ['in', 'optional'], VARIANT, 'IconLabel' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['hidden'], HRESULT, 'Pictures',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy74'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy75'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy76'),
    COMMETHOD(['hidden'], HRESULT, 'Rectangles',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy78'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy79'),
    COMMETHOD(['propget'], HRESULT, 'ScrollArea',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScrollArea',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ScrollBars',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy82'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy83'),
    COMMETHOD(['hidden'], HRESULT, 'Spinners',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy85'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy86'),
    COMMETHOD(['hidden'], HRESULT, 'TextBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy88'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy89'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy90'),
    COMMETHOD(['propget'], HRESULT, 'HPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(HPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(VPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'QueryTables',
              ( ['retval', 'out'], POINTER(POINTER(QueryTables)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayPageBreaks',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayPageBreaks',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Comments',
              ( ['retval', 'out'], POINTER(POINTER(Comments)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Hyperlinks',
              ( ['retval', 'out'], POINTER(POINTER(Hyperlinks)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearCircles'),
    COMMETHOD([], HRESULT, 'CircleInvalid'),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, '_DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoFilter',
              ( ['retval', 'out'], POINTER(POINTER(AutoFilter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayRightToLeft',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Scripts',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Scripts)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['hidden'], HRESULT, '_CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreFinalYaa' ),
              ( ['in', 'optional'], VARIANT, 'SpellScript' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Tab',
              ( ['retval', 'out'], POINTER(POINTER(Tab)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MailEnvelope',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEnvelope)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'optional'], VARIANT, 'Local' )),
    COMMETHOD(['propget'], HRESULT, 'CustomProperties',
              ( ['retval', 'out'], POINTER(POINTER(CustomProperties)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'SmartTags',
              ( ['retval', 'out'], POINTER(POINTER(SmartTags)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Protection',
              ( ['retval', 'out'], POINTER(POINTER(Protection)), 'RHS' )),
    COMMETHOD([], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
              ( ['in', 'optional'], VARIANT, 'IconFileName' ),
              ( ['in', 'optional'], VARIANT, 'IconIndex' ),
              ( ['in', 'optional'], VARIANT, 'IconLabel' ),
              ( ['in', 'optional'], VARIANT, 'NoHTMLFormatting' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' ),
              ( ['in', 'optional'], VARIANT, 'AllowFormattingCells' ),
              ( ['in', 'optional'], VARIANT, 'AllowFormattingColumns' ),
              ( ['in', 'optional'], VARIANT, 'AllowFormattingRows' ),
              ( ['in', 'optional'], VARIANT, 'AllowInsertingColumns' ),
              ( ['in', 'optional'], VARIANT, 'AllowInsertingRows' ),
              ( ['in', 'optional'], VARIANT, 'AllowInsertingHyperlinks' ),
              ( ['in', 'optional'], VARIANT, 'AllowDeletingColumns' ),
              ( ['in', 'optional'], VARIANT, 'AllowDeletingRows' ),
              ( ['in', 'optional'], VARIANT, 'AllowSorting' ),
              ( ['in', 'optional'], VARIANT, 'AllowFiltering' ),
              ( ['in', 'optional'], VARIANT, 'AllowUsingPivotTables' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy113'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy114'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy115'),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    COMMETHOD(['propget'], HRESULT, 'EnableFormatConditionsCalculation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableFormatConditionsCalculation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sort',
              ( ['retval', 'out'], POINTER(POINTER(Sort)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], XlFixedFormatType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Quality' ),
              ( ['in', 'optional'], VARIANT, 'IncludeDocProperties' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'OpenAfterPublish' ),
              ( ['in', 'optional'], VARIANT, 'FixedFormatExtClassPtr' )),
    COMMETHOD(['propget'], HRESULT, 'PrintedCommentPages',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultButton',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultButton',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'DialogFrame',
              ( ['retval', 'out'], POINTER(POINTER(DialogFrame)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'EditBoxes',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Focus',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Focus',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Hide',
              ( ['in', 'optional'], VARIANT, 'Cancel' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IDialogSheet implementation
##class IDialogSheet_Impl(object):
##    def DrawingObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang, IgnoreFinalYaa, SpellScript, lcid):
##        '-no docstring-'
##        #return 
##
##    def Hide(self, Cancel):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableCalculation = property(_get, _set, doc = _set.__doc__)
##
##    def ScrollBars(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return RHS
##
##    def Buttons(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy56(self):
##        '-no docstring-'
##        #return 
##
##    def ClearCircles(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ProtectContents(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Pictures(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayRightToLeft = property(_get, _set, doc = _set.__doc__)
##
##    def EditBoxes(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetDeactivate = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy45(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy44(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayPageBreaks = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy41(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy40(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy43(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy42(self):
##        '-no docstring-'
##        #return 
##
##    def Show(self):
##        '-no docstring-'
##        #return RHS
##
##    def Labels(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableFormatConditionsCalculation = property(_get, _set, doc = _set.__doc__)
##
##    def _Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Tab(self):
##        '-no docstring-'
##        #return RHS
##
##    def TextBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Index(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def GroupBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return RHS
##
##    def ChartObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PrintedCommentPages(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy31(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy32(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy34(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy36(self):
##        '-no docstring-'
##        #return 
##
##    def ResetAllPageBreaks(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def QueryTables(self):
##        '-no docstring-'
##        #return RHS
##
##    def Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, AllowFormattingCells, AllowFormattingColumns, AllowFormattingRows, AllowInsertingColumns, AllowInsertingRows, AllowInsertingHyperlinks, AllowDeletingColumns, AllowDeletingRows, AllowSorting, AllowFiltering, AllowUsingPivotTables):
##        '-no docstring-'
##        #return 
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return RHS
##
##    def OptionButtons(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GroupObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout, Local):
##        '-no docstring-'
##        #return 
##
##    def _Dummy29(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    _DisplayRightToLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy115(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Focus = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProtectionMode(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Ovals(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy114(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnDoubleClick = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultButton = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy113(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy90(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProtectScenarios(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def OLEObjects(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MailEnvelope(self):
##        '-no docstring-'
##        #return RHS
##
##    def Arcs(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Protection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SmartTags(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy89(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy88(self):
##        '-no docstring-'
##        #return 
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang, lcid):
##        '-no docstring-'
##        #return 
##
##    def _Dummy83(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy82(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy85(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy86(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AutoFilter(self):
##        '-no docstring-'
##        #return RHS
##
##    def _SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    def ListBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayAutomaticPageBreaks = property(_get, _set, doc = _set.__doc__)
##
##    def Drawings(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Unprotect(self, Password, lcid):
##        '-no docstring-'
##        #return 
##
##    def DropDowns(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Rectangles(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Spinners(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def CircleInvalid(self):
##        '-no docstring-'
##        #return 
##
##    def _PasteSpecial(self, Format, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProtectDrawingObjects(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy74(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy75(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy76(self):
##        '-no docstring-'
##        #return 
##
##    def PasteSpecial(self, Format, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel, NoHTMLFormatting, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnableOutlining = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy78(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy79(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DialogFrame(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CustomProperties(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Scripts(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CodeName(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def Paste(self, Destination, Link, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnablePivotTable = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Sort(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScrollArea = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Lines(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy67(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy66(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy65(self):
##        '-no docstring-'
##        #return 
##
##    def Activate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat(self, Type, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From, To, OpenAfterPublish, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    def CheckBoxes(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnableAutoFilter = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy69(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetActivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _CodeName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Names(self):
##        '-no docstring-'
##        #return RHS
##
##    def Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PageSetup(self):
##        '-no docstring-'
##        #return RHS
##

class IScrollBar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020885-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IScrollBar._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Max',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Max',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Min',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Min',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmallChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SmallChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LargeChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LargeChange',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IScrollBar implementation
##class IScrollBar_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Min = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Max = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SmallChange = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LargeChange = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ILinkFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024442-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILinkFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoUpdate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoUpdate',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Update'),
]
################################################################
## code template for ILinkFormat implementation
##class ILinkFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Update(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoUpdate = property(_get, _set, doc = _set.__doc__)
##

class XmlNamespaces(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024477-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
XmlNamespaces._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(XmlNamespace), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(XmlNamespace), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(2327)], None, 'InstallManifest',
               ( ['in'], BSTR, 'Path' ),
               ( ['in', 'optional'], VARIANT, 'InstallForAllUsers' )),
]
class Styles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020853-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class Style(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020852-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Style._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(553), 'propget'], VARIANT_BOOL, 'BuiltIn'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(262), 'propget'], VARIANT_BOOL, 'FormulaHidden'),
    DISPMETHOD([dispid(262), 'propput'], None, 'FormulaHidden',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], XlHAlign, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], XlHAlign, 'rhs' )),
    DISPMETHOD([dispid(413), 'propget'], VARIANT_BOOL, 'IncludeAlignment'),
    DISPMETHOD([dispid(413), 'propput'], None, 'IncludeAlignment',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(414), 'propget'], VARIANT_BOOL, 'IncludeBorder'),
    DISPMETHOD([dispid(414), 'propput'], None, 'IncludeBorder',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(415), 'propget'], VARIANT_BOOL, 'IncludeFont'),
    DISPMETHOD([dispid(415), 'propput'], None, 'IncludeFont',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(416), 'propget'], VARIANT_BOOL, 'IncludeNumber'),
    DISPMETHOD([dispid(416), 'propput'], None, 'IncludeNumber',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(417), 'propget'], VARIANT_BOOL, 'IncludePatterns'),
    DISPMETHOD([dispid(417), 'propput'], None, 'IncludePatterns',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(418), 'propget'], VARIANT_BOOL, 'IncludeProtection'),
    DISPMETHOD([dispid(418), 'propput'], None, 'IncludeProtection',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(201), 'propget'], c_int, 'IndentLevel'),
    DISPMETHOD([dispid(201), 'propput'], None, 'IndentLevel',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(208), 'propget'], VARIANT, 'MergeCells'),
    DISPMETHOD([dispid(208), 'propput'], None, 'MergeCells',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(937), 'propget'], BSTR, 'NameLocal'),
    DISPMETHOD([dispid(193), 'propget'], BSTR, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1097), 'propget'], BSTR, 'NumberFormatLocal'),
    DISPMETHOD([dispid(1097), 'propput'], None, 'NumberFormatLocal',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], XlOrientation, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], XlOrientation, 'rhs' )),
    DISPMETHOD([dispid(209), 'propget'], VARIANT_BOOL, 'ShrinkToFit'),
    DISPMETHOD([dispid(209), 'propput'], None, 'ShrinkToFit',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], BSTR, 'Value'),
    DISPMETHOD([dispid(137), 'propget'], XlVAlign, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], XlVAlign, 'rhs' )),
    DISPMETHOD([dispid(276), 'propget'], VARIANT_BOOL, 'WrapText'),
    DISPMETHOD([dispid(276), 'propput'], None, 'WrapText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], BSTR, '_Default'),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
]
Styles._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Style), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'BasedOn' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Style), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(564)], VARIANT, 'Merge',
               ( ['in'], VARIANT, 'Workbook' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Style), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class IMailer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMailer._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BCCRecipients',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BCCRecipients',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CCRecipients',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CCRecipients',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enclosures',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enclosures',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Received',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SendDateTime',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sender',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Subject',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Subject',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ToRecipients',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ToRecipients',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WhichAddress',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WhichAddress',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for IMailer implementation
##class IMailer_Impl(object):
##    @property
##    def Received(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CCRecipients = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enclosures = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ToRecipients = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Sender(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WhichAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BCCRecipients = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SendDateTime(self):
##        '-no docstring-'
##        #return RHS
##

class Research(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AC-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Research._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2751)], VARIANT, 'Query',
               ( ['in'], BSTR, 'ServiceID' ),
               ( ['in', 'optional'], VARIANT, 'QueryString' ),
               ( ['in', 'optional'], VARIANT, 'QueryLanguage' ),
               ( ['in', 'optional'], VARIANT, 'UseSelection' ),
               ( ['in', 'optional'], VARIANT, 'LaunchQuery' )),
    DISPMETHOD([dispid(2757)], VARIANT_BOOL, 'IsResearchService',
               ( ['in'], BSTR, 'ServiceID' )),
    DISPMETHOD([dispid(2758)], VARIANT, 'SetLanguagePair',
               ( ['in'], c_int, 'LanguageFrom' ),
               ( ['in'], c_int, 'LanguageTo' )),
]
class IDatabar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024496-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class ConditionValue(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024492-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ConditionValue._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1581)], None, 'Modify',
               ( ['in'], XlConditionValueTypes, 'newtype' ),
               ( ['in', 'optional'], VARIANT, 'newvalue' )),
    DISPMETHOD([dispid(108), 'propget'], XlConditionValueTypes, 'Type'),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
]

# values for enumeration 'XlDataBarAxisPosition'
xlDataBarAxisAutomatic = 0
xlDataBarAxisMidpoint = 1
xlDataBarAxisNone = 2
XlDataBarAxisPosition = c_int # enum
class NegativeBarFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BF-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlDataBarNegativeColorType'
xlDataBarColor = 0
xlDataBarSameAsPositive = 1
XlDataBarNegativeColorType = c_int # enum
NegativeBarFormat._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2195), 'propget'], XlDataBarNegativeColorType, 'ColorType'),
    DISPMETHOD([dispid(2195), 'propput'], None, 'ColorType',
               ( ['in'], XlDataBarNegativeColorType, 'rhs' )),
    DISPMETHOD([dispid(2969), 'propget'], XlDataBarNegativeColorType, 'BorderColorType'),
    DISPMETHOD([dispid(2969), 'propput'], None, 'BorderColorType',
               ( ['in'], XlDataBarNegativeColorType, 'rhs' )),
    DISPMETHOD([dispid(99), 'propget'], POINTER(IDispatch), 'Color'),
    DISPMETHOD([dispid(2970), 'propget'], POINTER(IDispatch), 'BorderColor'),
]
IDatabar._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StopIfTrue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppliesTo',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinPoint',
              ( ['retval', 'out'], POINTER(POINTER(ConditionValue)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaxPoint',
              ( ['retval', 'out'], POINTER(POINTER(ConditionValue)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PercentMin',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PercentMin',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PercentMax',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PercentMax',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BarColor',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowValue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowValue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'SetFirstPriority'),
    COMMETHOD([], HRESULT, 'SetLastPriority'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'ModifyAppliesToRange',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD(['propget'], HRESULT, 'PTCondition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScopeType',
              ( ['retval', 'out'], POINTER(XlPivotConditionScope), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScopeType',
              ( ['in'], XlPivotConditionScope, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Direction',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Direction',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BarFillType',
              ( ['retval', 'out'], POINTER(XlDataBarFillType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BarFillType',
              ( ['in'], XlDataBarFillType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisPosition',
              ( ['retval', 'out'], POINTER(XlDataBarAxisPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AxisPosition',
              ( ['in'], XlDataBarAxisPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisColor',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BarBorder',
              ( ['retval', 'out'], POINTER(POINTER(DataBarBorder)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NegativeBarFormat',
              ( ['retval', 'out'], POINTER(POINTER(NegativeBarFormat)), 'RHS' )),
]
################################################################
## code template for IDatabar implementation
##class IDatabar_Impl(object):
##    @property
##    def MaxPoint(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AppliesTo(self):
##        '-no docstring-'
##        #return RHS
##
##    def ModifyAppliesToRange(self, Range):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PercentMax = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Direction = property(_get, _set, doc = _set.__doc__)
##
##    def SetFirstPriority(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BarColor(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetLastPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScopeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def StopIfTrue(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MinPoint(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def NegativeBarFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BarBorder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AxisColor(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PercentMin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PTCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BarFillType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisPosition = property(_get, _set, doc = _set.__doc__)
##

class IChartGroups(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartGroups._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ChartGroup)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IChartGroups implementation
##class IChartGroups_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlCheckInVersionType'
xlCheckInMinorVersion = 0
xlCheckInMajorVersion = 1
xlCheckInOverwriteVersion = 2
XlCheckInVersionType = c_int # enum
class IChartCategory(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DD-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartCategory._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsFiltered',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IsFiltered',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IChartCategory implementation
##class IChartCategory_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IsFiltered = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class ErrorCheckingOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445B-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ErrorCheckingOptions._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2201), 'propget'], VARIANT_BOOL, 'BackgroundChecking'),
    DISPMETHOD([dispid(2201), 'propput'], None, 'BackgroundChecking',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2202), 'propget'], XlColorIndex, 'IndicatorColorIndex'),
    DISPMETHOD([dispid(2202), 'propput'], None, 'IndicatorColorIndex',
               ( ['in'], XlColorIndex, 'rhs' )),
    DISPMETHOD([dispid(2203), 'propget'], VARIANT_BOOL, 'EvaluateToError'),
    DISPMETHOD([dispid(2203), 'propput'], None, 'EvaluateToError',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2204), 'propget'], VARIANT_BOOL, 'TextDate'),
    DISPMETHOD([dispid(2204), 'propput'], None, 'TextDate',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2205), 'propget'], VARIANT_BOOL, 'NumberAsText'),
    DISPMETHOD([dispid(2205), 'propput'], None, 'NumberAsText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2206), 'propget'], VARIANT_BOOL, 'InconsistentFormula'),
    DISPMETHOD([dispid(2206), 'propput'], None, 'InconsistentFormula',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2207), 'propget'], VARIANT_BOOL, 'OmittedCells'),
    DISPMETHOD([dispid(2207), 'propput'], None, 'OmittedCells',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2208), 'propget'], VARIANT_BOOL, 'UnlockedFormulaCells'),
    DISPMETHOD([dispid(2208), 'propput'], None, 'UnlockedFormulaCells',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2209), 'propget'], VARIANT_BOOL, 'EmptyCellReferences'),
    DISPMETHOD([dispid(2209), 'propput'], None, 'EmptyCellReferences',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2296), 'propget'], VARIANT_BOOL, 'ListDataValidation'),
    DISPMETHOD([dispid(2296), 'propput'], None, 'ListDataValidation',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2675), 'propget'], VARIANT_BOOL, 'InconsistentTableFormula'),
    DISPMETHOD([dispid(2675), 'propput'], None, 'InconsistentTableFormula',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class ISparkVerticalAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BC-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparkVerticalAxis._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MinScaleType',
              ( ['retval', 'out'], POINTER(XlSparkScale), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MinScaleType',
              ( ['in'], XlSparkScale, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CustomMinScaleValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CustomMinScaleValue',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaxScaleType',
              ( ['retval', 'out'], POINTER(XlSparkScale), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MaxScaleType',
              ( ['in'], XlSparkScale, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CustomMaxScaleValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CustomMaxScaleValue',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for ISparkVerticalAxis implementation
##class ISparkVerticalAxis_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaxScaleType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CustomMaxScaleValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CustomMinScaleValue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MinScaleType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##

class IProtectedViewWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CD-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IProtectedViewWindow._methods_ = [
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableResize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableResize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourcePath',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WindowState',
              ( ['retval', 'out'], POINTER(XlProtectedViewWindowState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WindowState',
              ( ['in'], XlProtectedViewWindowState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Workbook',
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD([], HRESULT, 'Close',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Edit',
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'UpdateLinks' ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
]
################################################################
## code template for IProtectedViewWindow implementation
##class IProtectedViewWindow_Impl(object):
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableResize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SourcePath(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def Edit(self, WriteResPassword, UpdateLinks):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Workbook(self):
##        '-no docstring-'
##        #return RHS
##
##    def Close(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##

DiagramNodes._methods_ = [
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunkEnum' )),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppdn' )),
    COMMETHOD([dispid(10)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'pcDiagramNodes' )),
]
################################################################
## code template for DiagramNodes implementation
##class DiagramNodes_Impl(object):
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppdn
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppunkEnum
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return pcDiagramNodes
##

class IUsedObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024451-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IUsedObjects._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IUsedObjects implementation
##class IUsedObjects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ITop10(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITop10._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StopIfTrue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StopIfTrue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppliesTo',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopBottom',
              ( ['retval', 'out'], POINTER(XlTopBottom), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TopBottom',
              ( ['in'], XlTopBottom, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Rank',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Rank',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Percent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Percent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'SetFirstPriority'),
    COMMETHOD([], HRESULT, 'SetLastPriority'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'ModifyAppliesToRange',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD(['propget'], HRESULT, 'PTCondition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScopeType',
              ( ['retval', 'out'], POINTER(XlPivotConditionScope), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScopeType',
              ( ['in'], XlPivotConditionScope, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CalcFor',
              ( ['retval', 'out'], POINTER(XlCalcFor), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CalcFor',
              ( ['in'], XlCalcFor, 'RHS' )),
]
################################################################
## code template for ITop10 implementation
##class ITop10_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PTCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    def ModifyAppliesToRange(self, Range):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AppliesTo(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StopIfTrue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Percent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Rank = property(_get, _set, doc = _set.__doc__)
##
##    def SetFirstPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CalcFor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TopBottom = property(_get, _set, doc = _set.__doc__)
##
##    def SetLastPriority(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScopeType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IModelTableNameChange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelTableNameChange._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableNameOld',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableNameNew',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IModelTableNameChange implementation
##class IModelTableNameChange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableNameNew(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableNameOld(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class ILines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadLength',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadLength',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadWidth',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadWidth',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'X1' ),
              ( ['in'], c_double, 'Y1' ),
              ( ['in'], c_double, 'X2' ),
              ( ['in'], c_double, 'Y2' ),
              ( ['retval', 'out'], POINTER(POINTER(Line)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ILines implementation
##class ILines_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadLength = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, X1, Y1, X2, Y2):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlFixedFormatQuality'
xlQualityStandard = 0
xlQualityMinimum = 1
XlFixedFormatQuality = c_int # enum
class IBorders(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020855-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IBorders._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], XlBordersIndex, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LineStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LineStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Weight',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Weight',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], XlBordersIndex, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for IBorders implementation
##class IBorders_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##

class IPivotFilters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024484-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotFilters._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFilter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFilter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Add',
              ( ['in'], XlPivotFilterType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'DataField' ),
              ( ['in', 'optional'], VARIANT, 'Value1' ),
              ( ['in', 'optional'], VARIANT, 'Value2' ),
              ( ['in', 'optional'], VARIANT, 'Order' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'MemberPropertyField' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFilter)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add2',
              ( ['in'], XlPivotFilterType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'DataField' ),
              ( ['in', 'optional'], VARIANT, 'Value1' ),
              ( ['in', 'optional'], VARIANT, 'Value2' ),
              ( ['in', 'optional'], VARIANT, 'Order' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'MemberPropertyField' ),
              ( ['in', 'optional'], VARIANT, 'WholeDayFilter' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFilter)), 'RHS' )),
]
################################################################
## code template for IPivotFilters implementation
##class IPivotFilters_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Type, DataField, Value1, Value2, Order, Name, Description, MemberPropertyField, WholeDayFilter):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Type, DataField, Value1, Value2, Order, Name, Description, MemberPropertyField):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IPivotTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020873-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotTables._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], POINTER(PivotCache), 'PivotCache' ),
              ( ['in'], VARIANT, 'TableDestination' ),
              ( ['in', 'optional'], VARIANT, 'TableName' ),
              ( ['in', 'optional'], VARIANT, 'ReadData' ),
              ( ['in', 'optional'], VARIANT, 'DefaultVersion' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
]
################################################################
## code template for IPivotTables implementation
##class IPivotTables_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, PivotCache, TableDestination, TableName, ReadData, DefaultVersion):
##        '-no docstring-'
##        #return RHS
##

class ILegendEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BB-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILegendEntries._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(LegendEntry)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(LegendEntry)), 'RHS' )),
]
################################################################
## code template for ILegendEntries implementation
##class ILegendEntries_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class OptionButton(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020881-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
OptionButton._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(833), 'propget'], POINTER(GroupBox), 'GroupBox'),
]
class IModelColumnChange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelColumnChange._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IModelColumnChange implementation
##class IModelColumnChange_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IRecentFiles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024406-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRecentFiles._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Maximum',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Maximum',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(RecentFile)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(RecentFile)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(RecentFile)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IRecentFiles implementation
##class IRecentFiles_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Maximum = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IListRow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024475-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListRow._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'InvalidData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
]
################################################################
## code template for IListRow implementation
##class IListRow_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def InvalidData(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlSourceType'
xlSourceWorkbook = 0
xlSourceSheet = 1
xlSourcePrintArea = 2
xlSourceAutoFilter = 3
xlSourceRange = 4
xlSourceChart = 5
xlSourcePivotTable = 6
xlSourceQuery = 7
XlSourceType = c_int # enum
class _Global(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D9-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
class AddIns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020858-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
AddIns._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(AddIn), 'Add',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'CopyFile' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(AddIn), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(AddIn), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class MenuBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020863-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
MenuBars._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(MenuBar), 'Add',
               ( ['in', 'optional'], VARIANT, 'Name' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(MenuBar), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(MenuBar), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class Modules(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AE-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Modules._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Module), 'Add',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(551)], None, 'Copy',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1610743815), 'restricted', 'hidden'], None, '_Dummy7'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(637)], None, 'Move',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(905), 'hidden'], None, '__PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(1610743820), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(1418), 'propget'], POINTER(HPageBreaks), 'HPageBreaks'),
    DISPMETHOD([dispid(1419), 'propget'], POINTER(VPageBreaks), 'VPageBreaks'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1772), 'hidden'], None, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2361)], None, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
               ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' )),
    DISPMETHOD([dispid(3054)], POINTER(IDispatch), 'Add2',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' ),
               ( ['in', 'optional'], VARIANT, 'NewLayout' )),
]
class Windows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020892-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []

# values for enumeration 'XlArrangeStyle'
xlArrangeStyleCascade = 7
xlArrangeStyleHorizontal = -4128
xlArrangeStyleTiled = 1
xlArrangeStyleVertical = -4166
XlArrangeStyle = c_int # enum
Windows._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(638)], VARIANT, 'Arrange',
               ( ['in', 'optional'], XlArrangeStyle, 'ArrangeStyle', 1 ),
               ( ['in', 'optional'], VARIANT, 'ActiveWorkbook' ),
               ( ['in', 'optional'], VARIANT, 'SyncHorizontal' ),
               ( ['in', 'optional'], VARIANT, 'SyncVertical' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Window), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Window), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(2246)], VARIANT_BOOL, 'CompareSideBySideWith',
               ( ['in'], VARIANT, 'WindowName' )),
    DISPMETHOD([dispid(2248)], VARIANT_BOOL, 'BreakSideBySide'),
    DISPMETHOD([dispid(2249), 'propget'], VARIANT_BOOL, 'SyncScrollingSideBySide'),
    DISPMETHOD([dispid(2249), 'propput'], None, 'SyncScrollingSideBySide',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2250)], None, 'ResetPositionsSideBySide'),
]
class WorksheetFunction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020845-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
WorksheetFunction._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(169), 'hidden'], VARIANT, '_WSFunction',
               ( ['in', 'optional'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16384)], c_double, 'Count',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16386)], VARIANT_BOOL, 'IsNA',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16387)], VARIANT_BOOL, 'IsError',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16388)], c_double, 'Sum',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16389)], c_double, 'Average',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16390)], c_double, 'Min',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16391)], c_double, 'Max',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16395)], c_double, 'Npv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16396)], c_double, 'StDev',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16397)], BSTR, 'Dollar',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16398)], BSTR, 'Fixed',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16403)], c_double, 'Pi'),
    DISPMETHOD([dispid(16406)], c_double, 'Ln',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16407)], c_double, 'Log10',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16411)], c_double, 'Round',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16412)], VARIANT, 'Lookup',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16413)], VARIANT, 'Index',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16414)], BSTR, 'Rept',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16420)], VARIANT_BOOL, 'And',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16421)], VARIANT_BOOL, 'Or',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16424)], c_double, 'DCount',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16425)], c_double, 'DSum',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16426)], c_double, 'DAverage',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16427)], c_double, 'DMin',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16428)], c_double, 'DMax',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16429)], c_double, 'DStDev',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16430)], c_double, 'Var',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16431)], c_double, 'DVar',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16432)], BSTR, 'Text',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' )),
    DISPMETHOD([dispid(16433)], VARIANT, 'LinEst',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16434)], VARIANT, 'Trend',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16435)], VARIANT, 'LogEst',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16436)], VARIANT, 'Growth',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16440)], c_double, 'Pv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16441)], c_double, 'Fv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16442)], c_double, 'NPer',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16443)], c_double, 'Pmt',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16444)], c_double, 'Rate',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16445)], c_double, 'MIrr',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16446)], c_double, 'Irr',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16448)], c_double, 'Match',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16454)], c_double, 'Weekday',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16466)], c_double, 'Search',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16467)], VARIANT, 'Transpose',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16481)], c_double, 'Atan2',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16482)], c_double, 'Asin',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16483)], c_double, 'Acos',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16484)], VARIANT, 'Choose',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16485)], VARIANT, 'HLookup',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16486)], VARIANT, 'VLookup',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16493)], c_double, 'Log',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16498)], BSTR, 'Proper',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16502)], BSTR, 'Trim',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16503)], BSTR, 'Replace',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], BSTR, 'Arg4' )),
    DISPMETHOD([dispid(16504)], BSTR, 'Substitute',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' ),
               ( ['in'], BSTR, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16508)], c_double, 'Find',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16510)], VARIANT_BOOL, 'IsErr',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16511)], VARIANT_BOOL, 'IsText',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16512)], VARIANT_BOOL, 'IsNumber',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16526)], c_double, 'Sln',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16527)], c_double, 'Syd',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' )),
    DISPMETHOD([dispid(16528)], c_double, 'Ddb',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16546)], BSTR, 'Clean',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16547)], c_double, 'MDeterm',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16548)], VARIANT, 'MInverse',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16549)], VARIANT, 'MMult',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16551)], c_double, 'Ipmt',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16552)], c_double, 'Ppmt',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16553)], c_double, 'CountA',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16567)], c_double, 'Product',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16568)], c_double, 'Fact',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16573)], c_double, 'DProduct',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16574)], VARIANT_BOOL, 'IsNonText',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16577)], c_double, 'StDevP',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16578)], c_double, 'VarP',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16579)], c_double, 'DStDevP',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16580)], c_double, 'DVarP',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16582)], VARIANT_BOOL, 'IsLogical',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16583)], c_double, 'DCountA',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16588)], BSTR, 'USDollar',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16589)], c_double, 'FindB',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16590)], c_double, 'SearchB',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16591)], BSTR, 'ReplaceB',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], BSTR, 'Arg4' )),
    DISPMETHOD([dispid(16596)], c_double, 'RoundUp',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16597)], c_double, 'RoundDown',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16600)], c_double, 'Rank',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], POINTER(Range), 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16604)], c_double, 'Days360',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16606)], c_double, 'Vdb',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' ),
               ( ['in'], c_double, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' )),
    DISPMETHOD([dispid(16611)], c_double, 'Median',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16612)], c_double, 'SumProduct',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16613)], c_double, 'Sinh',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16614)], c_double, 'Cosh',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16615)], c_double, 'Tanh',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16616)], c_double, 'Asinh',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16617)], c_double, 'Acosh',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16618)], c_double, 'Atanh',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16619)], VARIANT, 'DGet',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16631)], c_double, 'Db',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16636)], VARIANT, 'Frequency',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16653)], c_double, 'AveDev',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16654)], c_double, 'BetaDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16655)], c_double, 'GammaLn',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16656)], c_double, 'BetaInv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16657)], c_double, 'BinomDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16658)], c_double, 'ChiDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16659)], c_double, 'ChiInv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16660)], c_double, 'Combin',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16661)], c_double, 'Confidence',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16662)], c_double, 'CritBinom',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16663)], c_double, 'Even',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16664)], c_double, 'ExponDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], VARIANT_BOOL, 'Arg3' )),
    DISPMETHOD([dispid(16665)], c_double, 'FDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16666)], c_double, 'FInv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16667)], c_double, 'Fisher',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16668)], c_double, 'FisherInv',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16669)], c_double, 'Floor',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16670)], c_double, 'GammaDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16671)], c_double, 'GammaInv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16672)], c_double, 'Ceiling',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16673)], c_double, 'HypGeomDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' )),
    DISPMETHOD([dispid(16674)], c_double, 'LogNormDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16675)], c_double, 'LogInv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16676)], c_double, 'NegBinomDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16677)], c_double, 'NormDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16678)], c_double, 'NormSDist',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16679)], c_double, 'NormInv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16680)], c_double, 'NormSInv',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16681)], c_double, 'Standardize',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16682)], c_double, 'Odd',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16683)], c_double, 'Permut',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16684)], c_double, 'Poisson',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], VARIANT_BOOL, 'Arg3' )),
    DISPMETHOD([dispid(16685)], c_double, 'TDist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16686)], c_double, 'Weibull',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16687)], c_double, 'SumXMY2',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16688)], c_double, 'SumX2MY2',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16689)], c_double, 'SumX2PY2',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16690)], c_double, 'ChiTest',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16691)], c_double, 'Correl',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16692)], c_double, 'Covar',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16693)], c_double, 'Forecast',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16694)], c_double, 'FTest',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16695)], c_double, 'Intercept',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16696)], c_double, 'Pearson',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16697)], c_double, 'RSq',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16698)], c_double, 'StEyx',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16699)], c_double, 'Slope',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16700)], c_double, 'TTest',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' )),
    DISPMETHOD([dispid(16701)], c_double, 'Prob',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16702)], c_double, 'DevSq',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16703)], c_double, 'GeoMean',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16704)], c_double, 'HarMean',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16705)], c_double, 'SumSq',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16706)], c_double, 'Kurt',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16707)], c_double, 'Skew',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16708)], c_double, 'ZTest',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16709)], c_double, 'Large',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16710)], c_double, 'Small',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16711)], c_double, 'Quartile',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16712)], c_double, 'Percentile',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16713)], c_double, 'PercentRank',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16714)], c_double, 'Mode',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16715)], c_double, 'TrimMean',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16716)], c_double, 'TInv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16721)], c_double, 'Power',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16726)], c_double, 'Radians',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16727)], c_double, 'Degrees',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16728)], c_double, 'Subtotal',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], POINTER(Range), 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16729)], c_double, 'SumIf',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16730)], c_double, 'CountIf',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16731)], c_double, 'CountBlank',
               ( ['in'], POINTER(Range), 'Arg1' )),
    DISPMETHOD([dispid(16734)], c_double, 'Ispmt',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' )),
    DISPMETHOD([dispid(16738)], BSTR, 'Roman',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16598)], BSTR, 'Asc',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16599)], BSTR, 'Dbcs',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16744)], BSTR, 'Phonetic',
               ( ['in'], POINTER(Range), 'Arg1' )),
    DISPMETHOD([dispid(16752)], BSTR, 'BahtText',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16753), 'hidden'], BSTR, 'ThaiDayOfWeek',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16754), 'hidden'], BSTR, 'ThaiDigit',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16755), 'hidden'], BSTR, 'ThaiMonthOfYear',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16756), 'hidden'], BSTR, 'ThaiNumSound',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16757), 'hidden'], BSTR, 'ThaiNumString',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16758), 'hidden'], c_double, 'ThaiStringLength',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16759), 'hidden'], VARIANT_BOOL, 'IsThaiDigit',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16760), 'hidden'], c_double, 'RoundBahtDown',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16761), 'hidden'], c_double, 'RoundBahtUp',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16762), 'hidden'], c_double, 'ThaiYear',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16763)], VARIANT, 'RTD',
               ( ['in'], VARIANT, 'progID' ),
               ( ['in'], VARIANT, 'server' ),
               ( ['in'], VARIANT, 'topic1' ),
               ( ['in', 'optional'], VARIANT, 'topic2' ),
               ( ['in', 'optional'], VARIANT, 'topic3' ),
               ( ['in', 'optional'], VARIANT, 'topic4' ),
               ( ['in', 'optional'], VARIANT, 'topic5' ),
               ( ['in', 'optional'], VARIANT, 'topic6' ),
               ( ['in', 'optional'], VARIANT, 'topic7' ),
               ( ['in', 'optional'], VARIANT, 'topic8' ),
               ( ['in', 'optional'], VARIANT, 'topic9' ),
               ( ['in', 'optional'], VARIANT, 'topic10' ),
               ( ['in', 'optional'], VARIANT, 'topic11' ),
               ( ['in', 'optional'], VARIANT, 'topic12' ),
               ( ['in', 'optional'], VARIANT, 'topic13' ),
               ( ['in', 'optional'], VARIANT, 'topic14' ),
               ( ['in', 'optional'], VARIANT, 'topic15' ),
               ( ['in', 'optional'], VARIANT, 'topic16' ),
               ( ['in', 'optional'], VARIANT, 'topic17' ),
               ( ['in', 'optional'], VARIANT, 'topic18' ),
               ( ['in', 'optional'], VARIANT, 'topic19' ),
               ( ['in', 'optional'], VARIANT, 'topic20' ),
               ( ['in', 'optional'], VARIANT, 'topic21' ),
               ( ['in', 'optional'], VARIANT, 'topic22' ),
               ( ['in', 'optional'], VARIANT, 'topic23' ),
               ( ['in', 'optional'], VARIANT, 'topic24' ),
               ( ['in', 'optional'], VARIANT, 'topic25' ),
               ( ['in', 'optional'], VARIANT, 'topic26' ),
               ( ['in', 'optional'], VARIANT, 'topic27' ),
               ( ['in', 'optional'], VARIANT, 'topic28' )),
    DISPMETHOD([dispid(16768)], BSTR, 'Hex2Bin',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16769)], BSTR, 'Hex2Dec',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16770)], BSTR, 'Hex2Oct',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16771)], BSTR, 'Dec2Bin',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16772)], BSTR, 'Dec2Hex',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16773)], BSTR, 'Dec2Oct',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16774)], BSTR, 'Oct2Bin',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16775)], BSTR, 'Oct2Hex',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16776)], BSTR, 'Oct2Dec',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16777)], BSTR, 'Bin2Dec',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16778)], BSTR, 'Bin2Oct',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16779)], BSTR, 'Bin2Hex',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16780)], BSTR, 'ImSub',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16781)], BSTR, 'ImDiv',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16782)], BSTR, 'ImPower',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16783)], BSTR, 'ImAbs',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16784)], BSTR, 'ImSqrt',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16785)], BSTR, 'ImLn',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16786)], BSTR, 'ImLog2',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16787)], BSTR, 'ImLog10',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16788)], BSTR, 'ImSin',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16789)], BSTR, 'ImCos',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16790)], BSTR, 'ImExp',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16791)], BSTR, 'ImArgument',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16792)], BSTR, 'ImConjugate',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16793)], c_double, 'Imaginary',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16794)], c_double, 'ImReal',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16795)], BSTR, 'Complex',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16796)], BSTR, 'ImSum',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16797)], BSTR, 'ImProduct',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16798)], c_double, 'SeriesSum',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16799)], c_double, 'FactDouble',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16800)], c_double, 'SqrtPi',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16801)], c_double, 'Quotient',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16802)], c_double, 'Delta',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16803)], c_double, 'GeStep',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16804)], VARIANT_BOOL, 'IsEven',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16805)], VARIANT_BOOL, 'IsOdd',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16806)], c_double, 'MRound',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16807)], c_double, 'Erf',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16808)], c_double, 'ErfC',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16809)], c_double, 'BesselJ',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16810)], c_double, 'BesselK',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16811)], c_double, 'BesselY',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16812)], c_double, 'BesselI',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16813)], c_double, 'Xirr',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16814)], c_double, 'Xnpv',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16815)], c_double, 'PriceMat',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16816)], c_double, 'YieldMat',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16817)], c_double, 'IntRate',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16818)], c_double, 'Received',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16819)], c_double, 'Disc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16820)], c_double, 'PriceDisc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16821)], c_double, 'YieldDisc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16822)], c_double, 'TBillEq',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16823)], c_double, 'TBillPrice',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16824)], c_double, 'TBillYield',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16825)], c_double, 'Price',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' )),
    DISPMETHOD([dispid(16827)], c_double, 'DollarDe',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16828)], c_double, 'DollarFr',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16829)], c_double, 'Nominal',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16830)], c_double, 'Effect',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16831)], c_double, 'CumPrinc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16832)], c_double, 'CumIPmt',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16833)], c_double, 'EDate',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16834)], c_double, 'EoMonth',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16835)], c_double, 'YearFrac',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16836)], c_double, 'CoupDayBs',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16837)], c_double, 'CoupDays',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16838)], c_double, 'CoupDaysNc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16839)], c_double, 'CoupNcd',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16840)], c_double, 'CoupNum',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16841)], c_double, 'CoupPcd',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16842)], c_double, 'Duration',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16843)], c_double, 'MDuration',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16844)], c_double, 'OddLPrice',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' )),
    DISPMETHOD([dispid(16845)], c_double, 'OddLYield',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' )),
    DISPMETHOD([dispid(16846)], c_double, 'OddFPrice',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in'], VARIANT, 'Arg7' ),
               ( ['in'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' )),
    DISPMETHOD([dispid(16847)], c_double, 'OddFYield',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in'], VARIANT, 'Arg7' ),
               ( ['in'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' )),
    DISPMETHOD([dispid(16848)], c_double, 'RandBetween',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16849)], c_double, 'WeekNum',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16850)], c_double, 'AmorDegrc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' )),
    DISPMETHOD([dispid(16851)], c_double, 'AmorLinc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' )),
    DISPMETHOD([dispid(16852)], c_double, 'Convert',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16853)], c_double, 'AccrInt',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in'], VARIANT, 'Arg5' ),
               ( ['in'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' )),
    DISPMETHOD([dispid(16854)], c_double, 'AccrIntM',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16855)], c_double, 'WorkDay',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16856)], c_double, 'NetworkDays',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16857)], c_double, 'Gcd',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16858)], c_double, 'MultiNomial',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16859)], c_double, 'Lcm',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16860)], c_double, 'FVSchedule',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16866)], c_double, 'SumIfs',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], POINTER(Range), 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' )),
    DISPMETHOD([dispid(16865)], c_double, 'CountIfs',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16867)], c_double, 'AverageIf',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16868)], c_double, 'AverageIfs',
               ( ['in'], POINTER(Range), 'Arg1' ),
               ( ['in'], POINTER(Range), 'Arg2' ),
               ( ['in'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' )),
    DISPMETHOD([dispid(16864)], VARIANT, 'IfError',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16869)], c_double, 'Aggregate',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], POINTER(Range), 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16872)], c_double, 'Confidence_Norm',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16873)], c_double, 'Confidence_T',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16874)], c_double, 'ChiSq_Test',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16875)], c_double, 'F_Test',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16876)], c_double, 'Covariance_P',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16877)], c_double, 'Covariance_S',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16878)], c_double, 'Expon_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], VARIANT_BOOL, 'Arg3' )),
    DISPMETHOD([dispid(16879)], c_double, 'Gamma_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16880)], c_double, 'Gamma_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16881)], VARIANT, 'Mode_Mult',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16882)], c_double, 'Mode_Sngl',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16883)], c_double, 'Norm_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16884)], c_double, 'Norm_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16885)], c_double, 'Percentile_Exc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16886)], c_double, 'Percentile_Inc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16887)], c_double, 'PercentRank_Exc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16888)], c_double, 'PercentRank_Inc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16889)], c_double, 'Poisson_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], VARIANT_BOOL, 'Arg3' )),
    DISPMETHOD([dispid(16890)], c_double, 'Quartile_Exc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16891)], c_double, 'Quartile_Inc',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16892)], c_double, 'Rank_Avg',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], POINTER(Range), 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16893)], c_double, 'Rank_Eq',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], POINTER(Range), 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16894)], c_double, 'StDev_S',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16895)], c_double, 'StDev_P',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16896)], c_double, 'T_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], VARIANT_BOOL, 'Arg3' )),
    DISPMETHOD([dispid(16897)], c_double, 'T_Dist_2T',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16898)], c_double, 'T_Dist_RT',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16899)], c_double, 'T_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16900)], c_double, 'T_Inv_2T',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16901)], c_double, 'Var_S',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16902)], c_double, 'Var_P',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16903)], c_double, 'Weibull_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16904)], c_double, 'NetworkDays_Intl',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16905)], c_double, 'WorkDay_Intl',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16907)], c_double, 'ISO_Ceiling',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(2826), 'hidden'], c_double, 'Dummy21',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(2827), 'hidden'], VARIANT, 'Dummy19',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16909)], c_double, 'Beta_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' )),
    DISPMETHOD([dispid(16910)], c_double, 'Beta_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' )),
    DISPMETHOD([dispid(16911)], c_double, 'ChiSq_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], VARIANT_BOOL, 'Arg3' )),
    DISPMETHOD([dispid(16912)], c_double, 'ChiSq_Dist_RT',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16913)], c_double, 'ChiSq_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16914)], c_double, 'ChiSq_Inv_RT',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16915)], c_double, 'F_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16916)], c_double, 'F_Dist_RT',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16917)], c_double, 'F_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16918)], c_double, 'F_Inv_RT',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16919)], c_double, 'HypGeom_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' ),
               ( ['in'], VARIANT_BOOL, 'Arg5' )),
    DISPMETHOD([dispid(16920)], c_double, 'LogNorm_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16921)], c_double, 'LogNorm_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16922)], c_double, 'NegBinom_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16923)], c_double, 'Norm_S_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], VARIANT_BOOL, 'Arg2' )),
    DISPMETHOD([dispid(16924)], c_double, 'Norm_S_Inv',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16925)], c_double, 'T_Test',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], c_double, 'Arg4' )),
    DISPMETHOD([dispid(16926)], c_double, 'Z_Test',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16870)], c_double, 'Binom_Dist',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in'], VARIANT_BOOL, 'Arg4' )),
    DISPMETHOD([dispid(16871)], c_double, 'Binom_Inv',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16927)], c_double, 'Erf_Precise',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16928)], c_double, 'ErfC_Precise',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16929)], c_double, 'GammaLn_Precise',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16930)], c_double, 'Ceiling_Precise',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16931)], c_double, 'Floor_Precise',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16932)], c_double, 'Acot',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16933)], c_double, 'Acoth',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16934)], c_double, 'Cot',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16935)], c_double, 'Coth',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16936)], c_double, 'Csc',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16937)], c_double, 'Csch',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16938)], c_double, 'Sec',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16939)], c_double, 'Sech',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16941)], BSTR, 'ImCot',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16940)], BSTR, 'ImTan',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16942)], BSTR, 'ImCsc',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16943)], BSTR, 'ImCsch',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16944)], BSTR, 'ImSec',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16945)], BSTR, 'ImSech',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16946)], c_double, 'Bitand',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16947)], c_double, 'Bitor',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16948)], c_double, 'Bitxor',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16949)], c_double, 'Bitlshift',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16950)], c_double, 'Bitrshift',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16953)], VARIANT_BOOL, 'Xor',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16952)], c_double, 'Combina',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16951)], c_double, 'Permutationa',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16954)], c_double, 'PDuration',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16955)], BSTR, 'Base',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16956)], c_double, 'Decimal',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' )),
    DISPMETHOD([dispid(16957)], c_double, 'Days',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16958)], c_double, 'Binom_Dist_Range',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' )),
    DISPMETHOD([dispid(16959)], c_double, 'Gamma',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16961)], c_double, 'Gauss',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16962)], c_double, 'Phi',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16960)], c_double, 'Skew_p',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' ),
               ( ['in', 'optional'], VARIANT, 'Arg4' ),
               ( ['in', 'optional'], VARIANT, 'Arg5' ),
               ( ['in', 'optional'], VARIANT, 'Arg6' ),
               ( ['in', 'optional'], VARIANT, 'Arg7' ),
               ( ['in', 'optional'], VARIANT, 'Arg8' ),
               ( ['in', 'optional'], VARIANT, 'Arg9' ),
               ( ['in', 'optional'], VARIANT, 'Arg10' ),
               ( ['in', 'optional'], VARIANT, 'Arg11' ),
               ( ['in', 'optional'], VARIANT, 'Arg12' ),
               ( ['in', 'optional'], VARIANT, 'Arg13' ),
               ( ['in', 'optional'], VARIANT, 'Arg14' ),
               ( ['in', 'optional'], VARIANT, 'Arg15' ),
               ( ['in', 'optional'], VARIANT, 'Arg16' ),
               ( ['in', 'optional'], VARIANT, 'Arg17' ),
               ( ['in', 'optional'], VARIANT, 'Arg18' ),
               ( ['in', 'optional'], VARIANT, 'Arg19' ),
               ( ['in', 'optional'], VARIANT, 'Arg20' ),
               ( ['in', 'optional'], VARIANT, 'Arg21' ),
               ( ['in', 'optional'], VARIANT, 'Arg22' ),
               ( ['in', 'optional'], VARIANT, 'Arg23' ),
               ( ['in', 'optional'], VARIANT, 'Arg24' ),
               ( ['in', 'optional'], VARIANT, 'Arg25' ),
               ( ['in', 'optional'], VARIANT, 'Arg26' ),
               ( ['in', 'optional'], VARIANT, 'Arg27' ),
               ( ['in', 'optional'], VARIANT, 'Arg28' ),
               ( ['in', 'optional'], VARIANT, 'Arg29' ),
               ( ['in', 'optional'], VARIANT, 'Arg30' )),
    DISPMETHOD([dispid(16963)], c_double, 'Rri',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in'], c_double, 'Arg2' ),
               ( ['in'], c_double, 'Arg3' )),
    DISPMETHOD([dispid(16964)], BSTR, 'Unichar',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16965)], c_double, 'Unicode',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16966)], VARIANT, 'Munit',
               ( ['in'], c_double, 'Arg1' )),
    DISPMETHOD([dispid(16967)], c_double, 'Arabic',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16968)], c_double, 'IsoWeekNum',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16969)], c_double, 'NumberValue',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' ),
               ( ['in'], BSTR, 'Arg3' )),
    DISPMETHOD([dispid(16973)], VARIANT_BOOL, 'IsFormula',
               ( ['in'], POINTER(Range), 'Arg1' )),
    DISPMETHOD([dispid(16974)], VARIANT, 'IfNa',
               ( ['in'], VARIANT, 'Arg1' ),
               ( ['in'], VARIANT, 'Arg2' )),
    DISPMETHOD([dispid(16975)], c_double, 'Ceiling_Math',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16976)], c_double, 'Floor_Math',
               ( ['in'], c_double, 'Arg1' ),
               ( ['in', 'optional'], VARIANT, 'Arg2' ),
               ( ['in', 'optional'], VARIANT, 'Arg3' )),
    DISPMETHOD([dispid(16977)], BSTR, 'ImSinh',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16978)], BSTR, 'ImCosh',
               ( ['in'], VARIANT, 'Arg1' )),
    DISPMETHOD([dispid(16979)], VARIANT, 'FilterXML',
               ( ['in'], BSTR, 'Arg1' ),
               ( ['in'], BSTR, 'Arg2' )),
    DISPMETHOD([dispid(16980)], VARIANT, 'WebService',
               ( ['in'], BSTR, 'Arg1' )),
    DISPMETHOD([dispid(16981)], VARIANT, 'EncodeURL',
               ( ['in'], BSTR, 'Arg1' )),
]
_Global._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(305), 'propget'], HRESULT, 'ActiveCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(183), 'propget'], HRESULT, 'ActiveChart',
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD([dispid(815), 'hidden', 'propget'], HRESULT, 'ActiveDialog',
              ( ['retval', 'out'], POINTER(POINTER(DialogSheet)), 'RHS' )),
    COMMETHOD([dispid(758), 'hidden', 'propget'], HRESULT, 'ActiveMenuBar',
              ( ['retval', 'out'], POINTER(POINTER(MenuBar)), 'RHS' )),
    COMMETHOD([dispid(306), 'propget'], HRESULT, 'ActivePrinter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(306), 'propput'], HRESULT, 'ActivePrinter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(307), 'propget'], HRESULT, 'ActiveSheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(759), 'propget'], HRESULT, 'ActiveWindow',
              ( ['retval', 'out'], POINTER(POINTER(Window)), 'RHS' )),
    COMMETHOD([dispid(308), 'propget'], HRESULT, 'ActiveWorkbook',
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(549), 'propget'], HRESULT, 'AddIns',
              ( ['retval', 'out'], POINTER(POINTER(AddIns)), 'RHS' )),
    COMMETHOD([dispid(1438), 'hidden', 'propget'], HRESULT, 'Assistant',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Assistant)), 'RHS' )),
    COMMETHOD([dispid(279)], HRESULT, 'Calculate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(238), 'propget'], HRESULT, 'Cells',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'Charts',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(241), 'propget'], HRESULT, 'Columns',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(1439), 'propget'], HRESULT, 'CommandBars',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CommandBars)), 'RHS' )),
    COMMETHOD([dispid(332), 'propget'], HRESULT, 'DDEAppReturnCode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(333)], HRESULT, 'DDEExecute',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'String' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(334)], HRESULT, 'DDEInitiate',
              ( ['in'], BSTR, 'App' ),
              ( ['in'], BSTR, 'Topic' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(335)], HRESULT, 'DDEPoke',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], VARIANT, 'Item' ),
              ( ['in'], VARIANT, 'Data' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(336)], HRESULT, 'DDERequest',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Item' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(337)], HRESULT, 'DDETerminate',
              ( ['in'], c_int, 'Channel' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(764), 'hidden', 'propget'], HRESULT, 'DialogSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(1)], HRESULT, 'Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(-5)], HRESULT, '_Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(350)], HRESULT, 'ExecuteExcel4Macro',
              ( ['in'], BSTR, 'String' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(766)], HRESULT, 'Intersect',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(589), 'hidden', 'propget'], HRESULT, 'MenuBars',
              ( ['retval', 'out'], POINTER(POINTER(MenuBars)), 'RHS' )),
    COMMETHOD([dispid(582), 'hidden', 'propget'], HRESULT, 'Modules',
              ( ['retval', 'out'], POINTER(POINTER(Modules)), 'RHS' )),
    COMMETHOD([dispid(442), 'propget'], HRESULT, 'Names',
              ( ['retval', 'out'], POINTER(POINTER(Names)), 'RHS' )),
    COMMETHOD([dispid(197), 'propget'], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Cell1' ),
              ( ['in', 'optional'], VARIANT, 'Cell2' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(258), 'propget'], HRESULT, 'Rows',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(259)], HRESULT, 'Run',
              ( ['in', 'optional'], VARIANT, 'Macro' ),
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(806)], HRESULT, '_Run2',
              ( ['in', 'optional'], VARIANT, 'Macro' ),
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(147), 'propget'], HRESULT, 'Selection',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(383)], HRESULT, 'SendKeys',
              ( ['in'], VARIANT, 'Keys' ),
              ( ['in', 'optional'], VARIANT, 'Wait' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(485), 'propget'], HRESULT, 'Sheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(776), 'hidden', 'propget'], HRESULT, 'ShortcutMenus',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Menu)), 'RHS' )),
    COMMETHOD([dispid(778), 'propget'], HRESULT, 'ThisWorkbook',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(552), 'hidden', 'propget'], HRESULT, 'Toolbars',
              ( ['retval', 'out'], POINTER(POINTER(Toolbars)), 'RHS' )),
    COMMETHOD([dispid(779)], HRESULT, 'Union',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(430), 'propget'], HRESULT, 'Windows',
              ( ['retval', 'out'], POINTER(POINTER(Windows)), 'RHS' )),
    COMMETHOD([dispid(572), 'propget'], HRESULT, 'Workbooks',
              ( ['retval', 'out'], POINTER(POINTER(Workbooks)), 'RHS' )),
    COMMETHOD([dispid(1440), 'propget'], HRESULT, 'WorksheetFunction',
              ( ['retval', 'out'], POINTER(POINTER(WorksheetFunction)), 'RHS' )),
    COMMETHOD([dispid(494), 'propget'], HRESULT, 'Worksheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(581), 'propget'], HRESULT, 'Excel4IntlMacroSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(579), 'propget'], HRESULT, 'Excel4MacroSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
]
################################################################
## code template for _Global implementation
##class _Global_Impl(object):
##    def ExecuteExcel4Macro(self, String, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ThisWorkbook(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DDEAppReturnCode(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Calculate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    ActivePrinter = property(_get, _set, doc = _set.__doc__)
##
##    def Union(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DialogSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def DDETerminate(self, Channel, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Charts(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Toolbars(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def DDEInitiate(self, App, Topic, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Intersect(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveChart(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveDialog(self):
##        '-no docstring-'
##        #return RHS
##
##    def Run(self, Macro, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def SendKeys(self, Keys, Wait, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Assistant(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Excel4IntlMacroSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveSheet(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MenuBars(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AddIns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Sheets(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Worksheets(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Workbooks(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Run2(self, Macro, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShortcutMenus(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Modules(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveWorkbook(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self, Cell1, Cell2):
##        '-no docstring-'
##        #return RHS
##
##    def DDEExecute(self, Channel, String, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Excel4MacroSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return RHS
##
##    def DDERequest(self, Channel, Item, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Selection(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveMenuBar(self):
##        '-no docstring-'
##        #return RHS
##
##    def DDEPoke(self, Channel, Item, Data, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ActiveCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Names(self):
##        '-no docstring-'
##        #return RHS
##
##    def Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WorksheetFunction(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return RHS
##

class IListObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024471-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListObject._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Publish',
              ( ['in'], VARIANT, 'Target' ),
              ( ['in'], VARIANT_BOOL, 'LinkSource' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD([], HRESULT, 'Unlink'),
    COMMETHOD([], HRESULT, 'Unlist'),
    COMMETHOD(['hidden'], HRESULT, 'UpdateChanges',
              ( ['in', 'optional'], XlListConflict, 'iConflictType', 0 )),
    COMMETHOD([], HRESULT, 'Resize',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Active',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataBodyRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayRightToLeft',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HeaderRowRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InsertRowRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListColumns',
              ( ['retval', 'out'], POINTER(POINTER(ListColumns)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListRows',
              ( ['retval', 'out'], POINTER(POINTER(ListRows)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'QueryTable',
              ( ['retval', 'out'], POINTER(POINTER(QueryTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAutoFilter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAutoFilter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTotals',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTotals',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceType',
              ( ['retval', 'out'], POINTER(XlListObjectSourceType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TotalsRowRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SharePointURL',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'XmlMap',
              ( ['retval', 'out'], POINTER(POINTER(XmlMap)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowHeaders',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowHeaders',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoFilter',
              ( ['retval', 'out'], POINTER(POINTER(AutoFilter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TableStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleFirstColumn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleFirstColumn',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleLastColumn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleLastColumn',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleRowStripes',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleRowStripes',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowTableStyleColumnStripes',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowTableStyleColumnStripes',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sort',
              ( ['retval', 'out'], POINTER(POINTER(Sort)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Comment',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Comment',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'ExportToVisio'),
    COMMETHOD(['propget'], HRESULT, 'AlternativeText',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Summary',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Summary',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableObject',
              ( ['retval', 'out'], POINTER(POINTER(TableObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Slicers',
              ( ['retval', 'out'], POINTER(POINTER(Slicers)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAutoFilterDropDown',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAutoFilterDropDown',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IListObject implementation
##class IListObject_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleLastColumn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataBodyRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ListColumns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Sort(self):
##        '-no docstring-'
##        #return RHS
##
##    def ExportToVisio(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def InsertRowRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleFirstColumn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowHeaders = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAutoFilterDropDown = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DisplayRightToLeft(self):
##        '-no docstring-'
##        #return RHS
##
##    def Unlink(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HeaderRowRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTotals = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def QueryTable(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAutoFilter = property(_get, _set, doc = _set.__doc__)
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Summary = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SharePointURL(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TotalsRowRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def Publish(self, Target, LinkSource):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ListRows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableObject(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Comment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SourceType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TableStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleColumnStripes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowTableStyleRowStripes = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AutoFilter(self):
##        '-no docstring-'
##        #return RHS
##
##    def UpdateChanges(self, iConflictType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def XmlMap(self):
##        '-no docstring-'
##        #return RHS
##
##    def Resize(self, Range):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Slicers(self):
##        '-no docstring-'
##        #return RHS
##
##    def Unlist(self):
##        '-no docstring-'
##        #return 
##

class Oval(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Oval._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]
class ISeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISeriesCollection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], XlRowCol, 'Rowcol', -4105 ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Extend',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'Rowcol' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['in', 'optional'], XlRowCol, 'Rowcol', -4105 ),
              ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'optional'], VARIANT, 'NewSeries' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'NewSeries',
              ( ['retval', 'out'], POINTER(POINTER(Series)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Series)), 'RHS' )),
]
################################################################
## code template for ISeriesCollection implementation
##class ISeriesCollection_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Extend(self, Source, Rowcol, CategoryLabels):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Source, Rowcol, SeriesLabels, CategoryLabels, Replace):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def NewSeries(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self, Rowcol, SeriesLabels, CategoryLabels, Replace, NewSeries):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlArrowHeadWidth'
xlArrowHeadWidthMedium = -4138
xlArrowHeadWidthNarrow = 1
xlArrowHeadWidthWide = 3
XlArrowHeadWidth = c_int # enum
class IUserAccessList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IUserAccessList._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(UserAccess)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], VARIANT_BOOL, 'AllowEdit' ),
              ( ['retval', 'out'], POINTER(POINTER(UserAccess)), 'RHS' )),
    COMMETHOD([], HRESULT, 'DeleteAll'),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(UserAccess)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IUserAccessList implementation
##class IUserAccessList_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, AllowEdit):
##        '-no docstring-'
##        #return RHS
##
##    def DeleteAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ITableStyles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITableStyles._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'TableStyleName' ),
              ( ['retval', 'out'], POINTER(POINTER(TableStyle)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(TableStyle)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(TableStyle)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ITableStyles implementation
##class ITableStyles_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, TableStyleName):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ICharacters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020878-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICharacters._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Insert',
              ( ['in'], BSTR, 'String' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticCharacters',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticCharacters',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for ICharacters implementation
##class ICharacters_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Insert(self, String):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticCharacters = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class PivotFields(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020875-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotFields._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(PivotTable), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IXmlDataBinding(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024478-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXmlDataBinding._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Refresh',
              ( ['retval', 'out'], POINTER(XlXmlImportResult), 'RHS' )),
    COMMETHOD([], HRESULT, 'LoadSettings',
              ( ['in'], BSTR, 'Url' )),
    COMMETHOD([], HRESULT, 'ClearSettings'),
    COMMETHOD(['propget'], HRESULT, 'SourceUrl',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IXmlDataBinding implementation
##class IXmlDataBinding_Impl(object):
##    @property
##    def SourceUrl(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def LoadSettings(self, Url):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearSettings(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlLineStyle'
xlContinuous = 1
xlDash = -4115
xlDashDot = 4
xlDashDotDot = 5
xlDot = -4118
xlDouble = -4119
xlSlantDashDot = 13
xlLineStyleNone = -4142
XlLineStyle = c_int # enum
class LegendEntries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BB-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
LegendEntries._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(LegendEntry), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0)], POINTER(LegendEntry), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]

# values for enumeration 'XlImportDataAs'
xlQueryTable = 0
xlPivotTableReport = 1
xlTable = 2
XlImportDataAs = c_int # enum
TextFrame2._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'MarginBottom',
              ( ['retval', 'out'], POINTER(c_float), 'MarginBottom' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'MarginBottom',
              ( ['in'], c_float, 'MarginBottom' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'MarginLeft',
              ( ['retval', 'out'], POINTER(c_float), 'MarginLeft' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'MarginLeft',
              ( ['in'], c_float, 'MarginLeft' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'MarginRight',
              ( ['retval', 'out'], POINTER(c_float), 'MarginRight' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'MarginRight',
              ( ['in'], c_float, 'MarginRight' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'MarginTop',
              ( ['retval', 'out'], POINTER(c_float), 'MarginTop' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'MarginTop',
              ( ['in'], c_float, 'MarginTop' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation), 'Orientation' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Orientation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'Orientation' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'HorizontalAnchor',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoHorizontalAnchor), 'HorizontalAnchor' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'HorizontalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoHorizontalAnchor, 'HorizontalAnchor' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'VerticalAnchor',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoVerticalAnchor), 'VerticalAnchor' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'VerticalAnchor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoVerticalAnchor, 'VerticalAnchor' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PathFormat',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPathFormat), 'PathFormat' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PathFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPathFormat, 'PathFormat' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'WarpFormat',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoWarpFormat), 'WarpFormat' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'WarpFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoWarpFormat, 'WarpFormat' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'WordArtformat',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffect), 'WordArtformat' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'WordArtformat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffect, 'WordArtformat' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'WordWrap',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'WordWrap' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'WordWrap',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'WordWrap' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoSize), 'AutoSize' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'AutoSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoSize, 'AutoSize' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'ThreeD' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'HasText',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'pHasText' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'TextRange',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.TextRange2)), 'Range' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'Column',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.TextColumn2)), 'Column' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'Ruler',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Ruler2)), 'Ruler' )),
    COMMETHOD([dispid(117)], HRESULT, 'DeleteText'),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'NoTextRotation',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'NoTextRotation' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'NoTextRotation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'NoTextRotation' )),
]
################################################################
## code template for TextFrame2 implementation
##class TextFrame2_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return AutoSize
##    def _set(self, AutoSize):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordArtformat
##    def _set(self, WordArtformat):
##        '-no docstring-'
##    WordArtformat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NoTextRotation
##    def _set(self, NoTextRotation):
##        '-no docstring-'
##    NoTextRotation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Orientation
##    def _set(self, Orientation):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return VerticalAnchor
##    def _set(self, VerticalAnchor):
##        '-no docstring-'
##    VerticalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return Column
##
##    @property
##    def Ruler(self):
##        '-no docstring-'
##        #return Ruler
##
##    def _get(self):
##        '-no docstring-'
##        #return PathFormat
##    def _set(self, PathFormat):
##        '-no docstring-'
##    PathFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginBottom
##    def _set(self, MarginBottom):
##        '-no docstring-'
##    MarginBottom = property(_get, _set, doc = _set.__doc__)
##
##    def DeleteText(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextRange(self):
##        '-no docstring-'
##        #return Range
##
##    @property
##    def HasText(self):
##        '-no docstring-'
##        #return pHasText
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginLeft
##    def _set(self, MarginLeft):
##        '-no docstring-'
##    MarginLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return WordWrap
##    def _set(self, WordWrap):
##        '-no docstring-'
##    WordWrap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginRight
##    def _set(self, MarginRight):
##        '-no docstring-'
##    MarginRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return MarginTop
##    def _set(self, MarginTop):
##        '-no docstring-'
##    MarginTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizontalAnchor
##    def _set(self, HorizontalAnchor):
##        '-no docstring-'
##    HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return ThreeD
##
##    def _get(self):
##        '-no docstring-'
##        #return WarpFormat
##    def _set(self, WarpFormat):
##        '-no docstring-'
##    WarpFormat = property(_get, _set, doc = _set.__doc__)
##

class IPictures(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPictures._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Picture)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Insert',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Converter' ),
              ( ['retval', 'out'], POINTER(POINTER(Picture)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['retval', 'out'], POINTER(POINTER(Picture)), 'RHS' )),
]
################################################################
## code template for IPictures implementation
##class IPictures_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self, Link):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def Insert(self, Filename, Converter):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IRectangularGradient(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRectangularGradient._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorStops',
              ( ['retval', 'out'], POINTER(POINTER(ColorStops)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RectangleTop',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RectangleTop',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RectangleBottom',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RectangleBottom',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RectangleLeft',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RectangleLeft',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RectangleRight',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RectangleRight',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for IRectangularGradient implementation
##class IRectangularGradient_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RectangleBottom = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColorStops(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RectangleTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RectangleLeft = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RectangleRight = property(_get, _set, doc = _set.__doc__)
##

OLEObjectEvents._disp_methods_ = [
    DISPMETHOD([dispid(1541)], None, 'GotFocus'),
    DISPMETHOD([dispid(1542)], None, 'LostFocus'),
]
class FullSeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DC-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
FullSeriesCollection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Series), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0)], POINTER(Series), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]

# values for enumeration 'XlCorruptLoad'
xlNormalLoad = 0
xlRepairFile = 1
xlExtractData = 2
XlCorruptLoad = c_int # enum

# values for enumeration 'XlChartPicturePlacement'
xlSides = 1
xlEnd = 2
xlEndSides = 3
xlFront = 4
xlFrontSides = 5
xlFrontEnd = 6
xlAllFaces = 7
XlChartPicturePlacement = c_int # enum
class IQuickAnalysis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IQuickAnalysis._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Show',
              ( ['in', 'optional'], XlQuickAnalysisMode, 'XlQuickAnalysisMode', 0 )),
    COMMETHOD([], HRESULT, 'Hide',
              ( ['in', 'optional'], XlQuickAnalysisMode, 'XlQuickAnalysisMode', 0 )),
]
################################################################
## code template for IQuickAnalysis implementation
##class IQuickAnalysis_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Show(self, XlQuickAnalysisMode):
##        '-no docstring-'
##        #return 
##
##    def Hide(self, XlQuickAnalysisMode):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IPage(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPage._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'LeftHeader',
              ( ['retval', 'out'], POINTER(POINTER(HeaderFooter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterHeader',
              ( ['retval', 'out'], POINTER(POINTER(HeaderFooter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightHeader',
              ( ['retval', 'out'], POINTER(POINTER(HeaderFooter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeftFooter',
              ( ['retval', 'out'], POINTER(POINTER(HeaderFooter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CenterFooter',
              ( ['retval', 'out'], POINTER(POINTER(HeaderFooter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RightFooter',
              ( ['retval', 'out'], POINTER(POINTER(HeaderFooter)), 'RHS' )),
]
################################################################
## code template for IPage implementation
##class IPage_Impl(object):
##    @property
##    def RightHeader(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LeftHeader(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CenterFooter(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CenterHeader(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RightFooter(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LeftFooter(self):
##        '-no docstring-'
##        #return RHS
##

class ISlicerPivotTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CB-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicerPivotTables._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddPivotTable',
              ( ['in'], POINTER(PivotTable), 'PivotTable' )),
    COMMETHOD([], HRESULT, 'RemovePivotTable',
              ( ['in'], VARIANT, 'PivotTable' )),
]
################################################################
## code template for ISlicerPivotTables implementation
##class ISlicerPivotTables_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def RemovePivotTable(self, PivotTable):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def AddPivotTable(self, PivotTable):
##        '-no docstring-'
##        #return 
##

class IModel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DB-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModel._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ModelTables',
              ( ['retval', 'out'], POINTER(POINTER(ModelTables)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ModelRelationships',
              ( ['retval', 'out'], POINTER(POINTER(ModelRelationships)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD([], HRESULT, 'AddConnection',
              ( ['in'], POINTER(WorkbookConnection), 'ConnectionToDataSource' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CreateModelWorkbookConnection',
              ( ['in'], VARIANT, 'ModelTable' ),
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataModelConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Initialize'),
]
################################################################
## code template for IModel implementation
##class IModel_Impl(object):
##    @property
##    def ModelRelationships(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def CreateModelWorkbookConnection(self, ModelTable):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ModelTables(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataModelConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Initialize(self):
##        '-no docstring-'
##        #return 
##
##    def AddConnection(self, ConnectionToDataSource):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlHtmlType'
xlHtmlStatic = 0
xlHtmlCalc = 1
xlHtmlList = 2
xlHtmlChart = 3
XlHtmlType = c_int # enum
class IControlFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024440-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IControlFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddItem',
              ( ['in'], BSTR, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Index' )),
    COMMETHOD([], HRESULT, 'RemoveAllItems'),
    COMMETHOD([], HRESULT, 'RemoveItem',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'Count' )),
    COMMETHOD(['propget'], HRESULT, 'DropDownLines',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DropDownLines',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LargeChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LargeChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListCount',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Max',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Max',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Min',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Min',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MultiSelect',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiSelect',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmallChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SmallChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IControlFormat implementation
##class IControlFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Min = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SmallChange = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveAllItems(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Max = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DropDownLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiSelect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def List(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddItem(self, Text, Index):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LargeChange = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveItem(self, Index, Count):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##

class IXmlMap(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002447B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IXmlMap._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsExportable',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowImportExportValidationErrors',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowImportExportValidationErrors',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SaveDataSourceDefinition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SaveDataSourceDefinition',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AdjustColumnWidth',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AdjustColumnWidth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PreserveColumnFilter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PreserveColumnFilter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PreserveNumberFormatting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PreserveNumberFormatting',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppendOnImport',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AppendOnImport',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RootElementName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RootElementNamespace',
              ( ['retval', 'out'], POINTER(POINTER(XmlNamespace)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Schemas',
              ( ['retval', 'out'], POINTER(POINTER(XmlSchemas)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataBinding',
              ( ['retval', 'out'], POINTER(POINTER(XmlDataBinding)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Import',
              ( ['in'], BSTR, 'Url' ),
              ( ['in', 'optional'], VARIANT, 'Overwrite' ),
              ( ['retval', 'out'], POINTER(XlXmlImportResult), 'RHS' )),
    COMMETHOD([], HRESULT, 'ImportXml',
              ( ['in'], BSTR, 'XmlData' ),
              ( ['in', 'optional'], VARIANT, 'Overwrite' ),
              ( ['retval', 'out'], POINTER(XlXmlImportResult), 'RHS' )),
    COMMETHOD([], HRESULT, 'Export',
              ( ['in'], BSTR, 'Url' ),
              ( ['in', 'optional'], VARIANT, 'Overwrite' ),
              ( ['retval', 'out'], POINTER(XlXmlExportResult), 'RHS' )),
    COMMETHOD([], HRESULT, 'ExportXml',
              ( ['out'], POINTER(BSTR), 'Data' ),
              ( ['retval', 'out'], POINTER(XlXmlExportResult), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WorkbookConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
]
################################################################
## code template for IXmlMap implementation
##class IXmlMap_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AppendOnImport = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RootElementName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Import(self, Url, Overwrite):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsExportable(self):
##        '-no docstring-'
##        #return RHS
##
##    def ImportXml(self, XmlData, Overwrite):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PreserveColumnFilter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RootElementNamespace(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PreserveNumberFormatting = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataBinding(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WorkbookConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AdjustColumnWidth = property(_get, _set, doc = _set.__doc__)
##
##    def ExportXml(self):
##        '-no docstring-'
##        #return Data, RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowImportExportValidationErrors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SaveDataSourceDefinition = property(_get, _set, doc = _set.__doc__)
##
##    def Export(self, Url, Overwrite):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Schemas(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlWBATemplate'
xlWBATChart = -4109
xlWBATExcel4IntlMacroSheet = 4
xlWBATExcel4MacroSheet = 3
xlWBATWorksheet = -4167
XlWBATemplate = c_int # enum

# values for enumeration 'XlPriority'
xlPriorityHigh = -4127
xlPriorityLow = -4134
xlPriorityNormal = -4143
XlPriority = c_int # enum

# values for enumeration 'XlFilterAllDatesInPeriod'
xlFilterAllDatesInPeriodYear = 0
xlFilterAllDatesInPeriodMonth = 1
xlFilterAllDatesInPeriodDay = 2
xlFilterAllDatesInPeriodHour = 3
xlFilterAllDatesInPeriodMinute = 4
xlFilterAllDatesInPeriodSecond = 5
XlFilterAllDatesInPeriod = c_int # enum
class INames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
INames._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'RefersTo' ),
              ( ['in', 'optional'], VARIANT, 'Visible' ),
              ( ['in', 'optional'], VARIANT, 'MacroType' ),
              ( ['in', 'optional'], VARIANT, 'ShortcutKey' ),
              ( ['in', 'optional'], VARIANT, 'Category' ),
              ( ['in', 'optional'], VARIANT, 'NameLocal' ),
              ( ['in', 'optional'], VARIANT, 'RefersToLocal' ),
              ( ['in', 'optional'], VARIANT, 'CategoryLocal' ),
              ( ['in', 'optional'], VARIANT, 'RefersToR1C1' ),
              ( ['in', 'optional'], VARIANT, 'RefersToR1C1Local' ),
              ( ['retval', 'out'], POINTER(POINTER(Name)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'IndexLocal' ),
              ( ['in', 'optional'], VARIANT, 'RefersTo' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Name)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'IndexLocal' ),
              ( ['in', 'optional'], VARIANT, 'RefersTo' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Name)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for INames implementation
##class INames_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index, IndexLocal, RefersTo, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, RefersTo, Visible, MacroType, ShortcutKey, Category, NameLocal, RefersToLocal, CategoryLocal, RefersToR1C1, RefersToR1C1Local):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index, IndexLocal, RefersTo, lcid):
##        '-no docstring-'
##        #return RHS
##

class TableStyles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A8-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
TableStyles._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(181)], POINTER(TableStyle), 'Add',
               ( ['in'], BSTR, 'TableStyleName' )),
    DISPMETHOD([dispid(170)], POINTER(TableStyle), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(TableStyle), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
]
class Buttons(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Buttons._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(858), 'propget'], VARIANT_BOOL, 'CancelButton'),
    DISPMETHOD([dispid(858), 'propput'], None, 'CancelButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(857), 'propget'], VARIANT_BOOL, 'DefaultButton'),
    DISPMETHOD([dispid(857), 'propput'], None, 'DefaultButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(859), 'propget'], VARIANT_BOOL, 'DismissButton'),
    DISPMETHOD([dispid(859), 'propput'], None, 'DismissButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(860), 'propget'], VARIANT_BOOL, 'HelpButton'),
    DISPMETHOD([dispid(860), 'propput'], None, 'HelpButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(Button), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]

# values for enumeration 'XlDynamicFilterCriteria'
xlFilterToday = 1
xlFilterYesterday = 2
xlFilterTomorrow = 3
xlFilterThisWeek = 4
xlFilterLastWeek = 5
xlFilterNextWeek = 6
xlFilterThisMonth = 7
xlFilterLastMonth = 8
xlFilterNextMonth = 9
xlFilterThisQuarter = 10
xlFilterLastQuarter = 11
xlFilterNextQuarter = 12
xlFilterThisYear = 13
xlFilterLastYear = 14
xlFilterNextYear = 15
xlFilterYearToDate = 16
xlFilterAllDatesInPeriodQuarter1 = 17
xlFilterAllDatesInPeriodQuarter2 = 18
xlFilterAllDatesInPeriodQuarter3 = 19
xlFilterAllDatesInPeriodQuarter4 = 20
xlFilterAllDatesInPeriodJanuary = 21
xlFilterAllDatesInPeriodFebruray = 22
xlFilterAllDatesInPeriodMarch = 23
xlFilterAllDatesInPeriodApril = 24
xlFilterAllDatesInPeriodMay = 25
xlFilterAllDatesInPeriodJune = 26
xlFilterAllDatesInPeriodJuly = 27
xlFilterAllDatesInPeriodAugust = 28
xlFilterAllDatesInPeriodSeptember = 29
xlFilterAllDatesInPeriodOctober = 30
xlFilterAllDatesInPeriodNovember = 31
xlFilterAllDatesInPeriodDecember = 32
xlFilterAboveAverage = 33
xlFilterBelowAverage = 34
XlDynamicFilterCriteria = c_int # enum
class IWorksheets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWorksheets._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'FillAcrossSheets',
              ( ['in'], POINTER(Range), 'Range' ),
              ( ['in', 'optional'], XlFillWith, 'Type', -4104 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'HPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(HPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(VPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Add2',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['in', 'optional'], VARIANT, 'NewLayout' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IWorksheets implementation
##class IWorksheets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, IgnorePrintAreas, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def FillAcrossSheets(self, Range, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Before, After, Count, Type, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Before, After, Count, NewLayout):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##

class IOLEDBConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOLEDBConnection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ADOConnection',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BackgroundQuery',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BackgroundQuery',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'CancelRefresh'),
    COMMETHOD(['propget'], HRESULT, 'CommandText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandType',
              ( ['retval', 'out'], POINTER(XlCmdType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandType',
              ( ['in'], XlCmdType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Connection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LocalConnection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LocalConnection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaintainConnection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MaintainConnection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'MakeConnection'),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD(['propget'], HRESULT, 'RefreshDate',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Refreshing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshOnFileOpen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshOnFileOpen',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshPeriod',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshPeriod',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RobustConnect',
              ( ['retval', 'out'], POINTER(XlRobustConnect), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RobustConnect',
              ( ['in'], XlRobustConnect, 'RHS' )),
    COMMETHOD([], HRESULT, 'SaveAsODC',
              ( ['in'], BSTR, 'ODCFileName' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'Keywords' )),
    COMMETHOD(['propget'], HRESULT, 'SavePassword',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SavePassword',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceConnectionFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceConnectionFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceDataFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceDataFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OLAP',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UseLocalConnection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UseLocalConnection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaxDrillthroughRecords',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MaxDrillthroughRecords',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsConnected',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerCredentialsMethod',
              ( ['retval', 'out'], POINTER(XlCredentialsMethod), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerCredentialsMethod',
              ( ['in'], XlCredentialsMethod, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerSSOApplicationID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerSSOApplicationID',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AlwaysUseConnectionFile',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlwaysUseConnectionFile',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerFillColor',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerFillColor',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerFontStyle',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerFontStyle',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerNumberFormat',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerNumberFormat',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerTextColor',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerTextColor',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RetrieveInOfficeUILang',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RetrieveInOfficeUILang',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Reconnect'),
    COMMETHOD(['propget'], HRESULT, 'CalculatedMembers',
              ( ['retval', 'out'], POINTER(POINTER(CalculatedMembers)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LocaleID',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LocaleID',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IOLEDBConnection implementation
##class IOLEDBConnection_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerFillColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableRefresh = property(_get, _set, doc = _set.__doc__)
##
##    def MakeConnection(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LocaleID = property(_get, _set, doc = _set.__doc__)
##
##    def CancelRefresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerSSOApplicationID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceDataFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseLocalConnection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ADOConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsConnected(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshOnFileOpen = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaxDrillthroughRecords = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RefreshDate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BackgroundQuery = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OLAP(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LocalConnection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerCredentialsMethod = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Refreshing(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerNumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RetrieveInOfficeUILang = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Connection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlwaysUseConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerTextColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CalculatedMembers(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerFontStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RobustConnect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshPeriod = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaintainConnection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandType = property(_get, _set, doc = _set.__doc__)
##
##    def SaveAsODC(self, ODCFileName, Description, Keywords):
##        '-no docstring-'
##        #return 
##
##    def Reconnect(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SavePassword = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlStdColorScale'
xlColorScaleRYG = 1
xlColorScaleGYR = 2
xlColorScaleBlackWhite = 3
xlColorScaleWhiteBlack = 4
XlStdColorScale = c_int # enum
class IChartFillFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024435-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartFillFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'OneColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([], HRESULT, 'TwoColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([], HRESULT, 'PresetTextured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTexture, 'PresetTexture' )),
    COMMETHOD([], HRESULT, 'Solid'),
    COMMETHOD([], HRESULT, 'Patterned',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType, 'Pattern' )),
    COMMETHOD([], HRESULT, 'UserPicture',
              ( ['in', 'optional'], VARIANT, 'PictureFile' ),
              ( ['in', 'optional'], VARIANT, 'PictureFormat' ),
              ( ['in', 'optional'], VARIANT, 'PictureStackUnit' ),
              ( ['in', 'optional'], VARIANT, 'PicturePlacement' )),
    COMMETHOD([], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([], HRESULT, 'PresetGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetGradientType, 'PresetGradientType' )),
    COMMETHOD(['propget'], HRESULT, 'BackColor',
              ( ['retval', 'out'], POINTER(POINTER(ChartColorFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ChartColorFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GradientColorType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientColorType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GradientDegree',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GradientStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GradientVariant',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PresetGradientType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetGradientType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PresetTexture',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTexture), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextureName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextureType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextureType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFillType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
]
################################################################
## code template for IChartFillFormat implementation
##class IChartFillFormat_Impl(object):
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return RHS
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def UserPicture(self, PictureFile, PictureFormat, PictureStackUnit, PicturePlacement):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return RHS
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BackColor(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return RHS
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##

class PublishObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024444-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
PublishObject._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1895)], HRESULT, 'Publish',
              ( ['in', 'optional'], VARIANT, 'Create' )),
    COMMETHOD([dispid(1894), 'propget'], HRESULT, 'DivID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(751), 'propget'], HRESULT, 'Sheet',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(685), 'propget'], HRESULT, 'SourceType',
              ( ['retval', 'out'], POINTER(XlSourceType), 'RHS' )),
    COMMETHOD([dispid(222), 'propget'], HRESULT, 'Source',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1893), 'propget'], HRESULT, 'HtmlType',
              ( ['retval', 'out'], POINTER(XlHtmlType), 'RHS' )),
    COMMETHOD([dispid(1893), 'propput'], HRESULT, 'HtmlType',
              ( ['in'], XlHtmlType, 'RHS' )),
    COMMETHOD([dispid(199), 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(199), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1415), 'propget'], HRESULT, 'Filename',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1415), 'propput'], HRESULT, 'Filename',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2178), 'propget'], HRESULT, 'AutoRepublish',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2178), 'propput'], HRESULT, 'AutoRepublish',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for PublishObject implementation
##class PublishObject_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoRepublish = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Sheet(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DivID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Source(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Publish(self, Create):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Filename = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HtmlType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IServerViewableItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IServerViewableItems._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Obj' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in'], VARIANT, 'Index' )),
    COMMETHOD([], HRESULT, 'DeleteAll'),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IServerViewableItems implementation
##class IServerViewableItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Obj):
##        '-no docstring-'
##        #return RHS
##
##    def DeleteAll(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self, Index):
##        '-no docstring-'
##        #return 
##

class QuickAnalysis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D0-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
QuickAnalysis._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(496)], None, 'Show',
               ( ['in', 'optional'], XlQuickAnalysisMode, 'XlQuickAnalysisMode', 0 )),
    DISPMETHOD([dispid(813)], None, 'Hide',
               ( ['in', 'optional'], XlQuickAnalysisMode, 'XlQuickAnalysisMode', 0 )),
]
class ISlicerCacheLevels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C5-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicerCacheLevels._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in', 'optional'], VARIANT, 'Level' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerCacheLevel)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'Level' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerCacheLevel)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ISlicerCacheLevels implementation
##class ISlicerCacheLevels_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Level):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Level):
##        '-no docstring-'
##        #return RHS
##

class IAxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAxes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(Axis)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], XlAxisType, 'Type' ),
              ( ['in', 'optional'], XlAxisGroup, 'AxisGroup', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(Axis)), 'RHS' )),
]
################################################################
## code template for IAxes implementation
##class IAxes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Type, AxisGroup):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Type, AxisGroup):
##        '-no docstring-'
##        #return RHS
##

class IHPageBreaks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024404-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IHPageBreaks._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(HPageBreak)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(HPageBreak)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], POINTER(IDispatch), 'Before' ),
              ( ['retval', 'out'], POINTER(POINTER(HPageBreak)), 'RHS' )),
]
################################################################
## code template for IHPageBreaks implementation
##class IHPageBreaks_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Before):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ColorScale(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024493-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class ColorScaleCriteria(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024494-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ColorScaleCriteria._disp_methods_ = [
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ColorScaleCriterion), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(ColorScaleCriterion), 'Item',
               ( ['in'], VARIANT, 'Index' )),
]
ColorScale._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2625), 'propget'], VARIANT_BOOL, 'StopIfTrue'),
    DISPMETHOD([dispid(2626), 'propget'], POINTER(Range), 'AppliesTo'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(2629)], None, 'SetFirstPriority'),
    DISPMETHOD([dispid(2630)], None, 'SetLastPriority'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2627)], None, 'ModifyAppliesToRange',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2631), 'propget'], VARIANT_BOOL, 'PTCondition'),
    DISPMETHOD([dispid(2615), 'propget'], XlPivotConditionScope, 'ScopeType'),
    DISPMETHOD([dispid(2615), 'propput'], None, 'ScopeType',
               ( ['in'], XlPivotConditionScope, 'rhs' )),
    DISPMETHOD([dispid(2716), 'propget'], POINTER(ColorScaleCriteria), 'ColorScaleCriteria'),
]
class IChartColorFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024436-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartColorFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SchemeColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SchemeColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RGB',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IChartColorFormat implementation
##class IChartColorFormat_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RGB(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##

class ICalculatedMember(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024455-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICalculatedMember._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SolveOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsValid',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlCalculatedMemberType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Dynamic',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayFolder',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HierarchizeDistinct',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HierarchizeDistinct',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FlattenHierarchies',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FlattenHierarchies',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MeasureGroup',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentHierarchy',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentMember',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(XlCalcMemNumberFormatType), 'RHS' )),
]
################################################################
## code template for ICalculatedMember implementation
##class ICalculatedMember_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HierarchizeDistinct = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ParentMember(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsValid(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Dynamic(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SolveOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ParentHierarchy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MeasureGroup(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def NumberFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DisplayFolder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Formula(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FlattenHierarchies = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class ITextBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A5-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITextBoxes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(TextBox)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ITextBoxes implementation
##class ITextBoxes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IPicture(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A6-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPicture._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IPicture implementation
##class IPicture_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IColorScaleCriterion(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024495-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IColorScaleCriterion._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlConditionValueTypes), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlConditionValueTypes, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormatColor',
              ( ['retval', 'out'], POINTER(POINTER(FormatColor)), 'RHS' )),
]
################################################################
## code template for IColorScaleCriterion implementation
##class IColorScaleCriterion_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FormatColor(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlPropertyDisplayedIn'
xlDisplayPropertyInPivotTable = 1
xlDisplayPropertyInTooltip = 2
xlDisplayPropertyInPivotTableAndTooltip = 3
XlPropertyDisplayedIn = c_int # enum
class DebugTools(CoClass):
    _reg_clsid_ = GUID('{45540F00-5750-5300-4B49-4E47534F4655}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
DebugTools._com_interfaces_ = [_DebugTools]

class Trendlines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BD-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Trendlines._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Trendline), 'Add',
               ( ['in', 'optional'], XlTrendlineType, 'Type', -4132 ),
               ( ['in', 'optional'], VARIANT, 'Order' ),
               ( ['in', 'optional'], VARIANT, 'Period' ),
               ( ['in', 'optional'], VARIANT, 'Forward' ),
               ( ['in', 'optional'], VARIANT, 'Backward' ),
               ( ['in', 'optional'], VARIANT, 'Intercept' ),
               ( ['in', 'optional'], VARIANT, 'DisplayEquation' ),
               ( ['in', 'optional'], VARIANT, 'DisplayRSquared' ),
               ( ['in', 'optional'], VARIANT, 'Name' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(Trendline), 'Item',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0)], POINTER(Trendline), '_Default',
               ( ['in', 'optional'], VARIANT, 'Index' )),
]
class IShape(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024439-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IShape._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Apply'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Flip',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([], HRESULT, 'PickUp'),
    COMMETHOD([], HRESULT, 'RerouteConnections'),
    COMMETHOD([], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], VARIANT, 'Scale' )),
    COMMETHOD([], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], VARIANT, 'Scale' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' )),
    COMMETHOD([], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ZOrder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD(['propget'], HRESULT, 'Adjustments',
              ( ['retval', 'out'], POINTER(POINTER(Adjustments)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFrame',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoShapeType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Callout',
              ( ['retval', 'out'], POINTER(POINTER(CalloutFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ConnectionSiteCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connector',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ConnectorFormat',
              ( ['retval', 'out'], POINTER(POINTER(ConnectorFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(FillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GroupItems',
              ( ['retval', 'out'], POINTER(POINTER(GroupShapes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalFlip',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(POINTER(LineFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockAspectRatio',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Nodes',
              ( ['retval', 'out'], POINTER(POINTER(ShapeNodes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Rotation',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureFormat',
              ( ['retval', 'out'], POINTER(POINTER(PictureFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(POINTER(ShadowFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextEffect',
              ( ['retval', 'out'], POINTER(POINTER(TextEffectFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalFlip',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Vertices',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrderPosition',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Hyperlink',
              ( ['retval', 'out'], POINTER(POINTER(Hyperlink)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BlackWhiteMode',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BlackWhiteMode',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'DrawingObject',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(XlPlacement), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], XlPlacement, 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy'),
    COMMETHOD([], HRESULT, 'Cut'),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], VARIANT, 'Appearance' ),
              ( ['in', 'optional'], VARIANT, 'Format' )),
    COMMETHOD(['propget'], HRESULT, 'ControlFormat',
              ( ['retval', 'out'], POINTER(POINTER(ControlFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkFormat',
              ( ['retval', 'out'], POINTER(POINTER(LinkFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OLEFormat',
              ( ['retval', 'out'], POINTER(POINTER(OLEFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormControlType',
              ( ['retval', 'out'], POINTER(XlFormControl), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AlternativeText',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Script',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Script)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Diagram',
              ( ['retval', 'out'], POINTER(POINTER(Diagram)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Child',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentGroup',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'CanvasItems',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CanvasShapes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['propget'], HRESULT, 'Chart',
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasChart',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFrame2',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame2)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShapeStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BackgroundStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SoftEdge',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SoftEdgeFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Glow',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.GlowFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Reflection',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.ReflectionFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasSmartArt',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmartArt',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartArt)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasWebShape',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'prop' )),
]
################################################################
## code template for IShape implementation
##class IShape_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ControlFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DrawingObject(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return RHS
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return RHS
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SmartArt(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Script(self):
##        '-no docstring-'
##        #return RHS
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    @property
##    def LinkFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return RHS
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return RHS
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OLEFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasSmartArt(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return RHS
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return RHS
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Hyperlink(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FormControlType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasWebShape(self):
##        '-no docstring-'
##        #return prop
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return RHS
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BlackWhiteMode = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class OLEObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
OLEObjects._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743849), 'restricted', 'hidden'], None, '_Dummy30'),
    DISPMETHOD([dispid(1186), 'propget'], VARIANT_BOOL, 'AutoLoad'),
    DISPMETHOD([dispid(1186), 'propput'], None, 'AutoLoad',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743852), 'restricted', 'hidden'], None, '_Dummy32'),
    DISPMETHOD([dispid(1610743853), 'restricted', 'hidden'], None, '_Dummy33'),
    DISPMETHOD([dispid(1610743854), 'restricted', 'hidden'], None, '_Dummy34'),
    DISPMETHOD([dispid(721), 'propget'], BSTR, 'SourceName'),
    DISPMETHOD([dispid(721), 'propput'], None, 'SourceName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1610743857), 'restricted', 'hidden'], None, '_Dummy36'),
    DISPMETHOD([dispid(1610743858), 'restricted', 'hidden'], None, '_Dummy37'),
    DISPMETHOD([dispid(1610743859), 'restricted', 'hidden'], None, '_Dummy38'),
    DISPMETHOD([dispid(1610743860), 'restricted', 'hidden'], None, '_Dummy39'),
    DISPMETHOD([dispid(1610743861), 'restricted', 'hidden'], None, '_Dummy40'),
    DISPMETHOD([dispid(1610743862), 'restricted', 'hidden'], None, '_Dummy41'),
    DISPMETHOD([dispid(181)], POINTER(OLEObject), 'Add',
               ( ['in', 'optional'], VARIANT, 'ClassType' ),
               ( ['in', 'optional'], VARIANT, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Link' ),
               ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
               ( ['in', 'optional'], VARIANT, 'IconFileName' ),
               ( ['in', 'optional'], VARIANT, 'IconIndex' ),
               ( ['in', 'optional'], VARIANT, 'IconLabel' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' ),
               ( ['in', 'optional'], VARIANT, 'Width' ),
               ( ['in', 'optional'], VARIANT, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46), 'hidden'], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class ModuleView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024489-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ModuleView._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(751), 'propget'], POINTER(IDispatch), 'Sheet'),
]
class IWindows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020892-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWindows._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Arrange',
              ( ['in', 'optional'], XlArrangeStyle, 'ArrangeStyle', 1 ),
              ( ['in', 'optional'], VARIANT, 'ActiveWorkbook' ),
              ( ['in', 'optional'], VARIANT, 'SyncHorizontal' ),
              ( ['in', 'optional'], VARIANT, 'SyncVertical' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Window)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Window)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CompareSideBySideWith',
              ( ['in'], VARIANT, 'WindowName' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'BreakSideBySide',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SyncScrollingSideBySide',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SyncScrollingSideBySide',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ResetPositionsSideBySide'),
]
################################################################
## code template for IWindows implementation
##class IWindows_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def BreakSideBySide(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def CompareSideBySideWith(self, WindowName):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SyncScrollingSideBySide = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def ResetPositionsSideBySide(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Arrange(self, ArrangeStyle, ActiveWorkbook, SyncHorizontal, SyncVertical):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlSaveAction'
xlDoNotSaveChanges = 2
xlSaveChanges = 1
XlSaveAction = c_int # enum
class IMultiThreadedCalculation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMultiThreadedCalculation._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThreadMode',
              ( ['retval', 'out'], POINTER(XlThreadMode), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThreadMode',
              ( ['in'], XlThreadMode, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThreadCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThreadCount',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IMultiThreadedCalculation implementation
##class IMultiThreadedCalculation_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThreadCount = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThreadMode = property(_get, _set, doc = _set.__doc__)
##

CubeFields._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(170), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CubeField)), 'RHS' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CubeField)), 'RHS' )),
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([dispid(2186)], HRESULT, 'AddSet',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Caption' ),
              ( ['retval', 'out'], POINTER(POINTER(CubeField)), 'RHS' )),
    COMMETHOD([dispid(3089)], HRESULT, 'GetMeasure',
              ( ['in'], VARIANT, 'AttributeHierarchy' ),
              ( ['in'], XlConsolidationFunction, 'Function' ),
              ( ['in', 'optional'], VARIANT, 'Caption' ),
              ( ['retval', 'out'], POINTER(POINTER(CubeField)), 'RHS' )),
]
################################################################
## code template for CubeFields implementation
##class CubeFields_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def GetMeasure(self, AttributeHierarchy, Function, Caption):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def AddSet(self, Name, Caption):
##        '-no docstring-'
##        #return RHS
##

class IODBCError(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IODBCError._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SqlState',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ErrorString',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IODBCError implementation
##class IODBCError_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SqlState(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ErrorString(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IAutoRecover(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAutoRecover._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Time',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Time',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Path',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IAutoRecover implementation
##class IAutoRecover_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Time = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Path = property(_get, _set, doc = _set.__doc__)
##

class IAutoFilter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024432-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAutoFilter._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Filters',
              ( ['retval', 'out'], POINTER(POINTER(Filters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FilterMode',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sort',
              ( ['retval', 'out'], POINTER(POINTER(Sort)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyFilter'),
    COMMETHOD([], HRESULT, 'ShowAllData'),
]
################################################################
## code template for IAutoFilter implementation
##class IAutoFilter_Impl(object):
##    @property
##    def Sort(self):
##        '-no docstring-'
##        #return RHS
##
##    def ShowAllData(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FilterMode(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Filters(self):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyFilter(self):
##        '-no docstring-'
##        #return 
##

IRTDUpdateEvent._methods_ = [
    COMMETHOD([dispid(10)], HRESULT, 'UpdateNotify'),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'HeartbeatInterval',
              ( ['retval', 'out'], POINTER(c_int), 'plRetVal' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'HeartbeatInterval',
              ( ['in'], c_int, 'plRetVal' )),
    COMMETHOD([dispid(12)], HRESULT, 'Disconnect'),
]
################################################################
## code template for IRTDUpdateEvent implementation
##class IRTDUpdateEvent_Impl(object):
##    def Disconnect(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return plRetVal
##    def _set(self, plRetVal):
##        '-no docstring-'
##    HeartbeatInterval = property(_get, _set, doc = _set.__doc__)
##
##    def UpdateNotify(self):
##        '-no docstring-'
##        #return 
##

class Ovals(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Ovals._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(Oval), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IToolbarButton(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IToolbarButton._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BuiltInFace',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BuiltInFace',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in'], POINTER(Toolbar), 'Toolbar' ),
              ( ['in'], c_int, 'Before' )),
    COMMETHOD([], HRESULT, 'CopyFace'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Edit'),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HelpContextID',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HelpContextID',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HelpFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HelpFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsGap',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Move',
              ( ['in'], POINTER(Toolbar), 'Toolbar' ),
              ( ['in'], c_int, 'Before' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'PasteFace'),
    COMMETHOD(['propget'], HRESULT, 'Pushed',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Pushed',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD(['propget'], HRESULT, 'StatusBar',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StatusBar',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IToolbarButton implementation
##class IToolbarButton_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def PasteFace(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HelpContextID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Toolbar, Before):
##        '-no docstring-'
##        #return 
##
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def Edit(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def CopyFace(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HelpFile = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsGap(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StatusBar = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, Toolbar, Before):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Pushed = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BuiltInFace = property(_get, _set, doc = _set.__doc__)
##

class IPivotCell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024458-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotCell._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotCellType',
              ( ['retval', 'out'], POINTER(XlPivotCellType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotTable',
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotItem',
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowItems',
              ( ['retval', 'out'], POINTER(POINTER(PivotItemList)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnItems',
              ( ['retval', 'out'], POINTER(POINTER(PivotItemList)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Dummy18',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CustomSubtotalFunction',
              ( ['retval', 'out'], POINTER(XlConsolidationFunction), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotRowLine',
              ( ['retval', 'out'], POINTER(POINTER(PivotLine)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotColumnLine',
              ( ['retval', 'out'], POINTER(POINTER(PivotLine)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AllocateChange'),
    COMMETHOD([], HRESULT, 'DiscardChange'),
    COMMETHOD(['propget'], HRESULT, 'DataSourceValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CellChanged',
              ( ['retval', 'out'], POINTER(XlCellChangedState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MDX',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerActions',
              ( ['retval', 'out'], POINTER(POINTER(Actions)), 'RHS' )),
]
################################################################
## code template for IPivotCell implementation
##class IPivotCell_Impl(object):
##    @property
##    def PivotItem(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RowItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotTable(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotColumnLine(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Dummy18(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CustomSubtotalFunction(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotField(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MDX(self):
##        '-no docstring-'
##        #return RHS
##
##    def AllocateChange(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PivotRowLine(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CellChanged(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ServerActions(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataField(self):
##        '-no docstring-'
##        #return RHS
##
##    def DiscardChange(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DataSourceValue(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotCellType(self):
##        '-no docstring-'
##        #return RHS
##

class ITickLabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITickLabels._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLinked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLinked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(XlTickLabelOrientation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], XlTickLabelOrientation, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Depth',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Offset',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Offset',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Alignment',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Alignment',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MultiLevel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiLevel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for ITickLabels implementation
##class ITickLabels_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiLevel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Offset = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLinked = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Depth(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlLookFor'
xlLookForBlanks = 0
xlLookForErrors = 1
xlLookForFormulas = 2
XlLookFor = c_int # enum

# values for enumeration 'XlContainsOperator'
xlContains = 0
xlDoesNotContain = 1
xlBeginsWith = 2
xlEndsWith = 3
XlContainsOperator = c_int # enum
class IOptionButton(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020881-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOptionButton._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GroupBox',
              ( ['retval', 'out'], POINTER(POINTER(GroupBox)), 'RHS' )),
]
################################################################
## code template for IOptionButton implementation
##class IOptionButton_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def GroupBox(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class Arcs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A1-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class Arc(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A0-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Arc._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1610743873), 'restricted', 'hidden'], None, '_Dummy43'),
]
Arcs._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1610743872), 'restricted', 'hidden'], None, '_Dummy43'),
    DISPMETHOD([dispid(181)], POINTER(Arc), 'Add',
               ( ['in'], c_double, 'X1' ),
               ( ['in'], c_double, 'Y1' ),
               ( ['in'], c_double, 'X2' ),
               ( ['in'], c_double, 'Y2' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IInterior(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020870-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IInterior._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Pattern',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PatternColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PatternColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PatternColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PatternColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PatternThemeColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PatternThemeColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PatternTintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PatternTintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Gradient',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IInterior implementation
##class IInterior_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PatternColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PatternColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Gradient(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PatternTintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PatternThemeColor = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlEnableCancelKey'
xlDisabled = 0
xlErrorHandler = 2
xlInterrupt = 1
XlEnableCancelKey = c_int # enum
ThreeDFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'IncrementRotationX',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(11)], HRESULT, 'IncrementRotationY',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(12)], HRESULT, 'ResetRotation'),
    COMMETHOD([dispid(13)], HRESULT, 'SetThreeDFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetThreeDFormat, 'PresetThreeDFormat' )),
    COMMETHOD([dispid(14)], HRESULT, 'SetExtrusionDirection',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetExtrusionDirection, 'PresetExtrusionDirection' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Depth',
              ( ['retval', 'out'], POINTER(c_float), 'Depth' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Depth',
              ( ['in'], c_float, 'Depth' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ExtrusionColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ExtrusionColor' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'ExtrusionColorType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoExtrusionColorType), 'ExtrusionColorType' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'ExtrusionColorType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoExtrusionColorType, 'ExtrusionColorType' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Perspective',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Perspective' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'Perspective',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Perspective' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'PresetExtrusionDirection',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetExtrusionDirection), 'PresetExtrusionDirection' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'PresetLightingDirection',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetLightingDirection), 'PresetLightingDirection' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'PresetLightingDirection',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetLightingDirection, 'PresetLightingDirection' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'PresetLightingSoftness',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetLightingSoftness), 'PresetLightingSoftness' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'PresetLightingSoftness',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetLightingSoftness, 'PresetLightingSoftness' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetMaterial',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetMaterial), 'PresetMaterial' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetMaterial',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetMaterial, 'PresetMaterial' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetThreeDFormat',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetThreeDFormat), 'PresetThreeDFormat' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotationX',
              ( ['retval', 'out'], POINTER(c_float), 'RotationX' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotationX',
              ( ['in'], c_float, 'RotationX' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'RotationY',
              ( ['retval', 'out'], POINTER(c_float), 'RotationY' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'RotationY',
              ( ['in'], c_float, 'RotationY' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(15)], HRESULT, 'SetPresetCamera',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetCamera, 'PresetCamera' )),
    COMMETHOD([dispid(16)], HRESULT, 'IncrementRotationZ',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(17)], HRESULT, 'IncrementRotationHorizontal',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(18)], HRESULT, 'IncrementRotationVertical',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'PresetLighting',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoLightRigType), 'PresetLightRigType' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'PresetLighting',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoLightRigType, 'PresetLightRigType' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Z',
              ( ['retval', 'out'], POINTER(c_float), 'Z' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Z',
              ( ['in'], c_float, 'Z' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'BevelTopType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBevelType), 'BevelTopType' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'BevelTopType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBevelType, 'BevelTopType' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'BevelTopInset',
              ( ['retval', 'out'], POINTER(c_float), 'BevelTopInset' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'BevelTopInset',
              ( ['in'], c_float, 'BevelTopInset' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'BevelTopDepth',
              ( ['retval', 'out'], POINTER(c_float), 'BevelTopDepth' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'BevelTopDepth',
              ( ['in'], c_float, 'BevelTopDepth' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'BevelBottomType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBevelType), 'BevelBottomType' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'BevelBottomType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBevelType, 'BevelBottomType' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'BevelBottomInset',
              ( ['retval', 'out'], POINTER(c_float), 'BevelBottomInset' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'BevelBottomInset',
              ( ['in'], c_float, 'BevelBottomInset' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'BevelBottomDepth',
              ( ['retval', 'out'], POINTER(c_float), 'BevelBottomDepth' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'BevelBottomDepth',
              ( ['in'], c_float, 'BevelBottomDepth' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'PresetCamera',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetCamera), 'PresetCamera' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotationZ',
              ( ['retval', 'out'], POINTER(c_float), 'RotationZ' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotationZ',
              ( ['in'], c_float, 'RotationZ' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'ContourWidth',
              ( ['retval', 'out'], POINTER(c_float), 'Width' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'ContourWidth',
              ( ['in'], c_float, 'Width' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'ContourColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ContourColor' )),
    COMMETHOD([dispid(124), 'propget'], HRESULT, 'FieldOfView',
              ( ['retval', 'out'], POINTER(c_float), 'FOV' )),
    COMMETHOD([dispid(124), 'propput'], HRESULT, 'FieldOfView',
              ( ['in'], c_float, 'FOV' )),
    COMMETHOD([dispid(125), 'propget'], HRESULT, 'ProjectText',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'ProjectText' )),
    COMMETHOD([dispid(125), 'propput'], HRESULT, 'ProjectText',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'ProjectText' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'LightAngle',
              ( ['retval', 'out'], POINTER(c_float), 'LightAngle' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'LightAngle',
              ( ['in'], c_float, 'LightAngle' )),
]
################################################################
## code template for ThreeDFormat implementation
##class ThreeDFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return FOV
##    def _set(self, FOV):
##        '-no docstring-'
##    FieldOfView = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightingDirection
##    def _set(self, PresetLightingDirection):
##        '-no docstring-'
##    PresetLightingDirection = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementRotationY(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationX(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def IncrementRotationZ(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Width
##    def _set(self, Width):
##        '-no docstring-'
##    ContourWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightRigType
##    def _set(self, PresetLightRigType):
##        '-no docstring-'
##    PresetLighting = property(_get, _set, doc = _set.__doc__)
##
##    def SetExtrusionDirection(self, PresetExtrusionDirection):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomType
##    def _set(self, BevelBottomType):
##        '-no docstring-'
##    BevelBottomType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetLightingSoftness
##    def _set(self, PresetLightingSoftness):
##        '-no docstring-'
##    PresetLightingSoftness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopDepth
##    def _set(self, BevelTopDepth):
##        '-no docstring-'
##    BevelTopDepth = property(_get, _set, doc = _set.__doc__)
##
##    def ResetRotation(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopType
##    def _set(self, BevelTopType):
##        '-no docstring-'
##    BevelTopType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelTopInset
##    def _set(self, BevelTopInset):
##        '-no docstring-'
##    BevelTopInset = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContourColor(self):
##        '-no docstring-'
##        #return ContourColor
##
##    def _get(self):
##        '-no docstring-'
##        #return LightAngle
##    def _set(self, LightAngle):
##        '-no docstring-'
##    LightAngle = property(_get, _set, doc = _set.__doc__)
##
##    def SetThreeDFormat(self, PresetThreeDFormat):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationZ
##    def _set(self, RotationZ):
##        '-no docstring-'
##    RotationZ = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationY
##    def _set(self, RotationY):
##        '-no docstring-'
##    RotationY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotationX
##    def _set(self, RotationX):
##        '-no docstring-'
##    RotationX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomInset
##    def _set(self, BevelBottomInset):
##        '-no docstring-'
##    BevelBottomInset = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetThreeDFormat(self):
##        '-no docstring-'
##        #return PresetThreeDFormat
##
##    def SetPresetCamera(self, PresetCamera):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return ExtrusionColorType
##    def _set(self, ExtrusionColorType):
##        '-no docstring-'
##    ExtrusionColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ProjectText
##    def _set(self, ProjectText):
##        '-no docstring-'
##    ProjectText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Depth
##    def _set(self, Depth):
##        '-no docstring-'
##    Depth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetExtrusionDirection(self):
##        '-no docstring-'
##        #return PresetExtrusionDirection
##
##    def IncrementRotationVertical(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Z
##    def _set(self, Z):
##        '-no docstring-'
##    Z = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetMaterial
##    def _set(self, PresetMaterial):
##        '-no docstring-'
##    PresetMaterial = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BevelBottomDepth
##    def _set(self, BevelBottomDepth):
##        '-no docstring-'
##    BevelBottomDepth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def IncrementRotationHorizontal(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetCamera(self):
##        '-no docstring-'
##        #return PresetCamera
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Perspective
##    def _set(self, Perspective):
##        '-no docstring-'
##    Perspective = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ExtrusionColor(self):
##        '-no docstring-'
##        #return ExtrusionColor
##

class IWorksheetDataConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWorksheetDataConnection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandType',
              ( ['retval', 'out'], POINTER(XlCmdType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandType',
              ( ['in'], XlCmdType, 'RHS' )),
]
################################################################
## code template for IWorksheetDataConnection implementation
##class IWorksheetDataConnection_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Connection(self):
##        '-no docstring-'
##        #return RHS
##

class IOLEFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024441-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOLEFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD(['propget'], HRESULT, 'Object',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'progID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Verb',
              ( ['in', 'optional'], VARIANT, 'Verb' )),
]
################################################################
## code template for IOLEFormat implementation
##class IOLEFormat_Impl(object):
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Verb(self, Verb):
##        '-no docstring-'
##        #return 
##
##    @property
##    def progID(self):
##        '-no docstring-'
##        #return RHS
##

class IStyles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020853-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IStyles._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'BasedOn' ),
              ( ['retval', 'out'], POINTER(POINTER(Style)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Style)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Merge',
              ( ['in'], VARIANT, 'Workbook' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Style)), 'RHS' )),
]
################################################################
## code template for IStyles implementation
##class IStyles_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Merge(self, Workbook):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, BasedOn):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##

class IDialogSheetView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDialogSheetView._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IDialogSheetView implementation
##class IDialogSheetView_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Sheet(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IDiagram(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDiagram._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Nodes',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNodes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoLayout',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoLayout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Reverse',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Reverse',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoFormat',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoFormat',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD([], HRESULT, 'Convert',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramType, 'Type' )),
    COMMETHOD([], HRESULT, 'FitText'),
]
################################################################
## code template for IDiagram implementation
##class IDiagram_Impl(object):
##    def Convert(self, Type):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Reverse = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoLayout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoFormat = property(_get, _set, doc = _set.__doc__)
##
##    def FitText(self):
##        '-no docstring-'
##        #return 
##

class ITimelineState(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DF-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITimelineState._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StartDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EndDate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FilterType',
              ( ['retval', 'out'], POINTER(XlPivotFilterType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FilterValue1',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FilterValue2',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SingleRangeFilterState',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'SetFilterDateRange',
              ( ['in'], VARIANT, 'StartDate' ),
              ( ['in'], VARIANT, 'EndDate' ),
              ( ['retval', 'out'], POINTER(XlFilterStatus), 'RHS' )),
]
################################################################
## code template for ITimelineState implementation
##class ITimelineState_Impl(object):
##    @property
##    def StartDate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def EndDate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FilterValue1(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FilterType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetFilterDateRange(self, StartDate, EndDate):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SingleRangeFilterState(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FilterValue2(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlBackground'
xlBackgroundAutomatic = -4105
xlBackgroundOpaque = 3
xlBackgroundTransparent = 2
XlBackground = c_int # enum
class IIcon(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IIcon._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IconSet)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IIcon implementation
##class IIcon_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class AutoCorrect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D4-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
AutoCorrect._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1146)], VARIANT, 'AddReplacement',
               ( ['in'], BSTR, 'What' ),
               ( ['in'], BSTR, 'Replacement' )),
    DISPMETHOD([dispid(1150), 'propget'], VARIANT_BOOL, 'CapitalizeNamesOfDays'),
    DISPMETHOD([dispid(1150), 'propput'], None, 'CapitalizeNamesOfDays',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1147)], VARIANT, 'DeleteReplacement',
               ( ['in'], BSTR, 'What' )),
    DISPMETHOD([dispid(1151), 'propget'], VARIANT, 'ReplacementList',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1151), 'propput'], None, 'ReplacementList',
               ( ['in', 'optional'], VARIANT, 'Index' ),
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1148), 'propget'], VARIANT_BOOL, 'ReplaceText'),
    DISPMETHOD([dispid(1148), 'propput'], None, 'ReplaceText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1149), 'propget'], VARIANT_BOOL, 'TwoInitialCapitals'),
    DISPMETHOD([dispid(1149), 'propput'], None, 'TwoInitialCapitals',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1619), 'propget'], VARIANT_BOOL, 'CorrectSentenceCap'),
    DISPMETHOD([dispid(1619), 'propput'], None, 'CorrectSentenceCap',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1620), 'propget'], VARIANT_BOOL, 'CorrectCapsLock'),
    DISPMETHOD([dispid(1620), 'propput'], None, 'CorrectCapsLock',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1926), 'propget'], VARIANT_BOOL, 'DisplayAutoCorrectOptions'),
    DISPMETHOD([dispid(1926), 'propput'], None, 'DisplayAutoCorrectOptions',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2294), 'propget'], VARIANT_BOOL, 'AutoExpandListRange'),
    DISPMETHOD([dispid(2294), 'propput'], None, 'AutoExpandListRange',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2642), 'propget'], VARIANT_BOOL, 'AutoFillFormulasInLists'),
    DISPMETHOD([dispid(2642), 'propput'], None, 'AutoFillFormulasInLists',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
]

# values for enumeration 'XlCommentDisplayMode'
xlNoIndicator = 0
xlCommentIndicatorOnly = -1
xlCommentAndIndicator = 1
XlCommentDisplayMode = c_int # enum

# values for enumeration 'XlFileFormat'
xlAddIn = 18
xlCSV = 6
xlCSVMac = 22
xlCSVMSDOS = 24
xlCSVWindows = 23
xlDBF2 = 7
xlDBF3 = 8
xlDBF4 = 11
xlDIF = 9
xlExcel2 = 16
xlExcel2FarEast = 27
xlExcel3 = 29
xlExcel4 = 33
xlExcel5 = 39
xlExcel7 = 39
xlExcel9795 = 43
xlExcel4Workbook = 35
xlIntlAddIn = 26
xlIntlMacro = 25
xlWorkbookNormal = -4143
xlSYLK = 2
xlTemplate = 17
xlCurrentPlatformText = -4158
xlTextMac = 19
xlTextMSDOS = 21
xlTextPrinter = 36
xlTextWindows = 20
xlWJ2WD1 = 14
xlWK1 = 5
xlWK1ALL = 31
xlWK1FMT = 30
xlWK3 = 15
xlWK4 = 38
xlWK3FM3 = 32
xlWKS = 4
xlWorks2FarEast = 28
xlWQ1 = 34
xlWJ3 = 40
xlWJ3FJ3 = 41
xlUnicodeText = 42
xlHtml = 44
xlWebArchive = 45
xlXMLSpreadsheet = 46
xlExcel12 = 50
xlOpenXMLWorkbook = 51
xlOpenXMLWorkbookMacroEnabled = 52
xlOpenXMLTemplateMacroEnabled = 53
xlTemplate8 = 17
xlOpenXMLTemplate = 54
xlAddIn8 = 18
xlOpenXMLAddIn = 55
xlExcel8 = 56
xlOpenDocumentSpreadsheet = 60
xlOpenXMLStrictWorkbook = 61
xlWorkbookDefault = 51
XlFileFormat = c_int # enum
class DefaultWebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024448-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']
class UsedObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024451-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
UsedObjects._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
]

# values for enumeration 'XlCalculationState'
xlDone = 0
xlCalculating = 1
xlPending = 2
XlCalculationState = c_int # enum

# values for enumeration 'XlCalculationInterruptKey'
xlNoKey = 0
xlEscKey = 1
xlAnyKey = 2
XlCalculationInterruptKey = c_int # enum
class Watches(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024456-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Watches._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Watch), 'Add',
               ( ['in'], VARIANT, 'Source' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(Watch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(Watch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
]
class AutoRecover(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
AutoRecover._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(394), 'propget'], c_int, 'Time'),
    DISPMETHOD([dispid(394), 'propput'], None, 'Time',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(291), 'propget'], BSTR, 'Path'),
    DISPMETHOD([dispid(291), 'propput'], None, 'Path',
               ( ['in'], BSTR, 'rhs' )),
]
class RTD(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002446E-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
RTD._disp_methods_ = [
    DISPMETHOD([dispid(2240), 'propget'], c_int, 'ThrottleInterval'),
    DISPMETHOD([dispid(2240), 'propput'], None, 'ThrottleInterval',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2241)], None, 'RefreshData'),
    DISPMETHOD([dispid(2242)], None, 'RestartServers'),
]
class AddIns2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244B5-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
AddIns2._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(AddIn), 'Add',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'CopyFile' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(AddIn), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(AddIn), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class ProtectedViewWindows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CC-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
ProtectedViewWindows._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(ProtectedViewWindow), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(ProtectedViewWindow), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1923)], POINTER(ProtectedViewWindow), 'Open',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Password' ),
               ( ['in', 'optional'], VARIANT, 'AddToMru' ),
               ( ['in', 'optional'], VARIANT, 'RepairMode' )),
]
_Application._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(305), 'propget'], HRESULT, 'ActiveCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(183), 'propget'], HRESULT, 'ActiveChart',
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD([dispid(815), 'hidden', 'propget'], HRESULT, 'ActiveDialog',
              ( ['retval', 'out'], POINTER(POINTER(DialogSheet)), 'RHS' )),
    COMMETHOD([dispid(758), 'hidden', 'propget'], HRESULT, 'ActiveMenuBar',
              ( ['retval', 'out'], POINTER(POINTER(MenuBar)), 'RHS' )),
    COMMETHOD([dispid(306), 'propget'], HRESULT, 'ActivePrinter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(306), 'propput'], HRESULT, 'ActivePrinter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(307), 'propget'], HRESULT, 'ActiveSheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(759), 'propget'], HRESULT, 'ActiveWindow',
              ( ['retval', 'out'], POINTER(POINTER(Window)), 'RHS' )),
    COMMETHOD([dispid(308), 'propget'], HRESULT, 'ActiveWorkbook',
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(549), 'propget'], HRESULT, 'AddIns',
              ( ['retval', 'out'], POINTER(POINTER(AddIns)), 'RHS' )),
    COMMETHOD([dispid(1438), 'hidden', 'propget'], HRESULT, 'Assistant',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Assistant)), 'RHS' )),
    COMMETHOD([dispid(279)], HRESULT, 'Calculate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(238), 'propget'], HRESULT, 'Cells',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'Charts',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(241), 'propget'], HRESULT, 'Columns',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(1439), 'propget'], HRESULT, 'CommandBars',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CommandBars)), 'RHS' )),
    COMMETHOD([dispid(332), 'propget'], HRESULT, 'DDEAppReturnCode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(333)], HRESULT, 'DDEExecute',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'String' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(334)], HRESULT, 'DDEInitiate',
              ( ['in'], BSTR, 'App' ),
              ( ['in'], BSTR, 'Topic' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(335)], HRESULT, 'DDEPoke',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], VARIANT, 'Item' ),
              ( ['in'], VARIANT, 'Data' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(336)], HRESULT, 'DDERequest',
              ( ['in'], c_int, 'Channel' ),
              ( ['in'], BSTR, 'Item' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(337)], HRESULT, 'DDETerminate',
              ( ['in'], c_int, 'Channel' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(764), 'hidden', 'propget'], HRESULT, 'DialogSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(1)], HRESULT, 'Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(-5)], HRESULT, '_Evaluate',
              ( ['in'], VARIANT, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(350)], HRESULT, 'ExecuteExcel4Macro',
              ( ['in'], BSTR, 'String' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(766)], HRESULT, 'Intersect',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(589), 'hidden', 'propget'], HRESULT, 'MenuBars',
              ( ['retval', 'out'], POINTER(POINTER(MenuBars)), 'RHS' )),
    COMMETHOD([dispid(582), 'hidden', 'propget'], HRESULT, 'Modules',
              ( ['retval', 'out'], POINTER(POINTER(Modules)), 'RHS' )),
    COMMETHOD([dispid(442), 'propget'], HRESULT, 'Names',
              ( ['retval', 'out'], POINTER(POINTER(Names)), 'RHS' )),
    COMMETHOD([dispid(197), 'propget'], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Cell1' ),
              ( ['in', 'optional'], VARIANT, 'Cell2' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(258), 'propget'], HRESULT, 'Rows',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(259)], HRESULT, 'Run',
              ( ['in', 'optional'], VARIANT, 'Macro' ),
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(806)], HRESULT, '_Run2',
              ( ['in', 'optional'], VARIANT, 'Macro' ),
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(147), 'propget'], HRESULT, 'Selection',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(383)], HRESULT, 'SendKeys',
              ( ['in'], VARIANT, 'Keys' ),
              ( ['in', 'optional'], VARIANT, 'Wait' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(485), 'propget'], HRESULT, 'Sheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(776), 'hidden', 'propget'], HRESULT, 'ShortcutMenus',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Menu)), 'RHS' )),
    COMMETHOD([dispid(778), 'propget'], HRESULT, 'ThisWorkbook',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(552), 'hidden', 'propget'], HRESULT, 'Toolbars',
              ( ['retval', 'out'], POINTER(POINTER(Toolbars)), 'RHS' )),
    COMMETHOD([dispid(779)], HRESULT, 'Union',
              ( ['in'], POINTER(Range), 'Arg1' ),
              ( ['in'], POINTER(Range), 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(430), 'propget'], HRESULT, 'Windows',
              ( ['retval', 'out'], POINTER(POINTER(Windows)), 'RHS' )),
    COMMETHOD([dispid(572), 'propget'], HRESULT, 'Workbooks',
              ( ['retval', 'out'], POINTER(POINTER(Workbooks)), 'RHS' )),
    COMMETHOD([dispid(1440), 'propget'], HRESULT, 'WorksheetFunction',
              ( ['retval', 'out'], POINTER(POINTER(WorksheetFunction)), 'RHS' )),
    COMMETHOD([dispid(494), 'propget'], HRESULT, 'Worksheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(581), 'propget'], HRESULT, 'Excel4IntlMacroSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(579), 'propget'], HRESULT, 'Excel4MacroSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(1095)], HRESULT, 'ActivateMicrosoftApp',
              ( ['in'], XlMSApplication, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(216), 'hidden'], HRESULT, 'AddChartAutoFormat',
              ( ['in'], VARIANT, 'Chart' ),
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(780)], HRESULT, 'AddCustomList',
              ( ['in'], VARIANT, 'ListArray' ),
              ( ['in', 'optional'], VARIANT, 'ByRow' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(930), 'propget'], HRESULT, 'AlertBeforeOverwriting',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(930), 'propput'], HRESULT, 'AlertBeforeOverwriting',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(313), 'propget'], HRESULT, 'AltStartupPath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(313), 'propput'], HRESULT, 'AltStartupPath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(992), 'propget'], HRESULT, 'AskToUpdateLinks',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(992), 'propput'], HRESULT, 'AskToUpdateLinks',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1180), 'hidden', 'propget'], HRESULT, 'EnableAnimations',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1180), 'hidden', 'propput'], HRESULT, 'EnableAnimations',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1145), 'propget'], HRESULT, 'AutoCorrect',
              ( ['retval', 'out'], POINTER(POINTER(AutoCorrect)), 'RHS' )),
    COMMETHOD([dispid(314), 'propget'], HRESULT, 'Build',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(315), 'propget'], HRESULT, 'CalculateBeforeSave',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(315), 'propput'], HRESULT, 'CalculateBeforeSave',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(316), 'propget'], HRESULT, 'Calculation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlCalculation), 'RHS' )),
    COMMETHOD([dispid(316), 'propput'], HRESULT, 'Calculation',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlCalculation, 'RHS' )),
    COMMETHOD([dispid(317), 'propget'], HRESULT, 'Caller',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(318), 'propget'], HRESULT, 'CanPlaySounds',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(319), 'propget'], HRESULT, 'CanRecordSounds',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(320), 'propget'], HRESULT, 'CellDragAndDrop',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(320), 'propput'], HRESULT, 'CellDragAndDrop',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1086)], HRESULT, 'CentimetersToPoints',
              ( ['in'], c_double, 'Centimeters' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(505)], HRESULT, 'CheckSpelling',
              ( ['in'], BSTR, 'Word' ),
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(321), 'propget'], HRESULT, 'ClipboardFormats',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(322), 'propget'], HRESULT, 'DisplayClipboardWindow',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(322), 'propput'], HRESULT, 'DisplayClipboardWindow',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(365), 'hidden', 'propget'], HRESULT, 'ColorButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(365), 'hidden', 'propput'], HRESULT, 'ColorButtons',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(323), 'propget'], HRESULT, 'CommandUnderlines',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlCommandUnderlines), 'RHS' )),
    COMMETHOD([dispid(323), 'propput'], HRESULT, 'CommandUnderlines',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlCommandUnderlines, 'RHS' )),
    COMMETHOD([dispid(324), 'propget'], HRESULT, 'ConstrainNumeric',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(324), 'propput'], HRESULT, 'ConstrainNumeric',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(325)], HRESULT, 'ConvertFormula',
              ( ['in'], VARIANT, 'Formula' ),
              ( ['in'], XlReferenceStyle, 'FromReferenceStyle' ),
              ( ['in', 'optional'], VARIANT, 'ToReferenceStyle' ),
              ( ['in', 'optional'], VARIANT, 'ToAbsolute' ),
              ( ['in', 'optional'], VARIANT, 'RelativeTo' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(991), 'propget'], HRESULT, 'CopyObjectsWithCells',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(991), 'propput'], HRESULT, 'CopyObjectsWithCells',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1161), 'propget'], HRESULT, 'Cursor',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlMousePointer), 'RHS' )),
    COMMETHOD([dispid(1161), 'propput'], HRESULT, 'Cursor',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlMousePointer, 'RHS' )),
    COMMETHOD([dispid(787), 'propget'], HRESULT, 'CustomListCount',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(330), 'propget'], HRESULT, 'CutCopyMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlCutCopyMode), 'RHS' )),
    COMMETHOD([dispid(330), 'propput'], HRESULT, 'CutCopyMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlCutCopyMode, 'RHS' )),
    COMMETHOD([dispid(331), 'propget'], HRESULT, 'DataEntryMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(331), 'propput'], HRESULT, 'DataEntryMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1782), 'hidden'], HRESULT, 'Dummy1',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1783), 'hidden'], HRESULT, 'Dummy2',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1784), 'hidden'], HRESULT, 'Dummy3',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1785), 'hidden'], HRESULT, 'Dummy4',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1786), 'hidden'], HRESULT, 'Dummy5',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1787), 'hidden'], HRESULT, 'Dummy6',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1788), 'hidden'], HRESULT, 'Dummy7',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1789), 'hidden'], HRESULT, 'Dummy8',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1790), 'hidden'], HRESULT, 'Dummy9',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1791), 'hidden'], HRESULT, 'Dummy10',
              ( ['in', 'optional'], VARIANT, 'arg' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1792), 'hidden'], HRESULT, 'Dummy11'),
    COMMETHOD([dispid(0), 'propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1038), 'propget'], HRESULT, 'DefaultFilePath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1038), 'propput'], HRESULT, 'DefaultFilePath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(217), 'hidden'], HRESULT, 'DeleteChartAutoFormat',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(783)], HRESULT, 'DeleteCustomList',
              ( ['in'], c_int, 'ListNum' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(761), 'propget'], HRESULT, 'Dialogs',
              ( ['retval', 'out'], POINTER(POINTER(Dialogs)), 'RHS' )),
    COMMETHOD([dispid(343), 'propget'], HRESULT, 'DisplayAlerts',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(343), 'propput'], HRESULT, 'DisplayAlerts',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(344), 'propget'], HRESULT, 'DisplayFormulaBar',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(344), 'propput'], HRESULT, 'DisplayFormulaBar',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1061), 'propget'], HRESULT, 'DisplayFullScreen',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1061), 'propput'], HRESULT, 'DisplayFullScreen',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(345), 'propget'], HRESULT, 'DisplayNoteIndicator',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(345), 'propput'], HRESULT, 'DisplayNoteIndicator',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1196), 'propget'], HRESULT, 'DisplayCommentIndicator',
              ( ['retval', 'out'], POINTER(XlCommentDisplayMode), 'RHS' )),
    COMMETHOD([dispid(1196), 'propput'], HRESULT, 'DisplayCommentIndicator',
              ( ['in'], XlCommentDisplayMode, 'RHS' )),
    COMMETHOD([dispid(927), 'propget'], HRESULT, 'DisplayExcel4Menus',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(927), 'propput'], HRESULT, 'DisplayExcel4Menus',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(926), 'propget'], HRESULT, 'DisplayRecentFiles',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(926), 'propput'], HRESULT, 'DisplayRecentFiles',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(346), 'propget'], HRESULT, 'DisplayScrollBars',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(346), 'propput'], HRESULT, 'DisplayScrollBars',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(347), 'propget'], HRESULT, 'DisplayStatusBar',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(347), 'propput'], HRESULT, 'DisplayStatusBar',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(349)], HRESULT, 'DoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(929), 'propget'], HRESULT, 'EditDirectlyInCell',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(929), 'propput'], HRESULT, 'EditDirectlyInCell',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1179), 'propget'], HRESULT, 'EnableAutoComplete',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1179), 'propput'], HRESULT, 'EnableAutoComplete',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1096), 'propget'], HRESULT, 'EnableCancelKey',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlEnableCancelKey), 'RHS' )),
    COMMETHOD([dispid(1096), 'propput'], HRESULT, 'EnableCancelKey',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlEnableCancelKey, 'RHS' )),
    COMMETHOD([dispid(1197), 'propget'], HRESULT, 'EnableSound',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1197), 'propput'], HRESULT, 'EnableSound',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1064), 'hidden', 'propget'], HRESULT, 'EnableTipWizard',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1064), 'hidden', 'propput'], HRESULT, 'EnableTipWizard',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(931), 'propget'], HRESULT, 'FileConverters',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1200), 'propget'], HRESULT, 'FileSearch',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.FileSearch)), 'RHS' )),
    COMMETHOD([dispid(1201), 'hidden', 'propget'], HRESULT, 'FileFind',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.IFind)), 'RHS' )),
    COMMETHOD([dispid(1068), 'hidden'], HRESULT, '_FindFile',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(351), 'propget'], HRESULT, 'FixedDecimal',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(351), 'propput'], HRESULT, 'FixedDecimal',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(352), 'propget'], HRESULT, 'FixedDecimalPlaces',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(352), 'propput'], HRESULT, 'FixedDecimalPlaces',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(786)], HRESULT, 'GetCustomListContents',
              ( ['in'], c_int, 'ListNum' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(785)], HRESULT, 'GetCustomListNum',
              ( ['in'], VARIANT, 'ListArray' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1075)], HRESULT, 'GetOpenFilename',
              ( ['in', 'optional'], VARIANT, 'FileFilter' ),
              ( ['in', 'optional'], VARIANT, 'FilterIndex' ),
              ( ['in', 'optional'], VARIANT, 'Title' ),
              ( ['in', 'optional'], VARIANT, 'ButtonText' ),
              ( ['in', 'optional'], VARIANT, 'MultiSelect' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1076)], HRESULT, 'GetSaveAsFilename',
              ( ['in', 'optional'], VARIANT, 'InitialFilename' ),
              ( ['in', 'optional'], VARIANT, 'FileFilter' ),
              ( ['in', 'optional'], VARIANT, 'FilterIndex' ),
              ( ['in', 'optional'], VARIANT, 'Title' ),
              ( ['in', 'optional'], VARIANT, 'ButtonText' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(475)], HRESULT, 'Goto',
              ( ['in', 'optional'], VARIANT, 'Reference' ),
              ( ['in', 'optional'], VARIANT, 'Scroll' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'Height',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'Height',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(354)], HRESULT, 'Help',
              ( ['in', 'optional'], VARIANT, 'HelpFile' ),
              ( ['in', 'optional'], VARIANT, 'HelpContextID' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(356), 'propget'], HRESULT, 'IgnoreRemoteRequests',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(356), 'propput'], HRESULT, 'IgnoreRemoteRequests',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1087)], HRESULT, 'InchesToPoints',
              ( ['in'], c_double, 'Inches' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(357)], HRESULT, 'InputBox',
              ( ['in'], BSTR, 'Prompt' ),
              ( ['in', 'optional'], VARIANT, 'Title' ),
              ( ['in', 'optional'], VARIANT, 'Default' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'HelpFile' ),
              ( ['in', 'optional'], VARIANT, 'HelpContextID' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(361), 'propget'], HRESULT, 'Interactive',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(361), 'propput'], HRESULT, 'Interactive',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(362), 'propget'], HRESULT, 'International',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(363), 'propget'], HRESULT, 'Iteration',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(363), 'propput'], HRESULT, 'Iteration',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(364), 'hidden', 'propget'], HRESULT, 'LargeButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(364), 'hidden', 'propput'], HRESULT, 'LargeButtons',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(127), 'propget'], HRESULT, 'Left',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(127), 'propput'], HRESULT, 'Left',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(366), 'propget'], HRESULT, 'LibraryPath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1135), 'hidden'], HRESULT, '_MacroOptions',
              ( ['in', 'optional'], VARIANT, 'Macro' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'HasMenu' ),
              ( ['in', 'optional'], VARIANT, 'MenuText' ),
              ( ['in', 'optional'], VARIANT, 'HasShortcutKey' ),
              ( ['in', 'optional'], VARIANT, 'ShortcutKey' ),
              ( ['in', 'optional'], VARIANT, 'Category' ),
              ( ['in', 'optional'], VARIANT, 'StatusBar' ),
              ( ['in', 'optional'], VARIANT, 'HelpContextID' ),
              ( ['in', 'optional'], VARIANT, 'HelpFile' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(945)], HRESULT, 'MailLogoff',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(943)], HRESULT, 'MailLogon',
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DownloadNewMail' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(942), 'propget'], HRESULT, 'MailSession',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(971), 'propget'], HRESULT, 'MailSystem',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlMailSystem), 'RHS' )),
    COMMETHOD([dispid(367), 'propget'], HRESULT, 'MathCoprocessorAvailable',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(368), 'propget'], HRESULT, 'MaxChange',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(368), 'propput'], HRESULT, 'MaxChange',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(369), 'propget'], HRESULT, 'MaxIterations',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(369), 'propput'], HRESULT, 'MaxIterations',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(370), 'hidden', 'propget'], HRESULT, 'MemoryFree',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(371), 'hidden', 'propget'], HRESULT, 'MemoryTotal',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(372), 'hidden', 'propget'], HRESULT, 'MemoryUsed',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(373), 'propget'], HRESULT, 'MouseAvailable',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(374), 'propget'], HRESULT, 'MoveAfterReturn',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(374), 'propput'], HRESULT, 'MoveAfterReturn',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1144), 'propget'], HRESULT, 'MoveAfterReturnDirection',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlDirection), 'RHS' )),
    COMMETHOD([dispid(1144), 'propput'], HRESULT, 'MoveAfterReturnDirection',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlDirection, 'RHS' )),
    COMMETHOD([dispid(1202), 'propget'], HRESULT, 'RecentFiles',
              ( ['retval', 'out'], POINTER(POINTER(RecentFiles)), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(972)], HRESULT, 'NextLetter',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Workbook)), 'RHS' )),
    COMMETHOD([dispid(388), 'propget'], HRESULT, 'NetworkTemplatesPath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1203), 'propget'], HRESULT, 'ODBCErrors',
              ( ['retval', 'out'], POINTER(POINTER(ODBCErrors)), 'RHS' )),
    COMMETHOD([dispid(1204), 'propget'], HRESULT, 'ODBCTimeout',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1204), 'propput'], HRESULT, 'ODBCTimeout',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(625), 'hidden', 'propget'], HRESULT, 'OnCalculate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(625), 'hidden', 'propput'], HRESULT, 'OnCalculate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(629), 'hidden', 'propget'], HRESULT, 'OnData',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(629), 'hidden', 'propput'], HRESULT, 'OnData',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(628), 'hidden', 'propget'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(628), 'hidden', 'propput'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(627), 'hidden', 'propget'], HRESULT, 'OnEntry',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(627), 'hidden', 'propput'], HRESULT, 'OnEntry',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(626)], HRESULT, 'OnKey',
              ( ['in'], BSTR, 'Key' ),
              ( ['in', 'optional'], VARIANT, 'Procedure' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(769)], HRESULT, 'OnRepeat',
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'Procedure' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1031), 'hidden', 'propget'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1031), 'hidden', 'propput'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propget'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propput'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(624)], HRESULT, 'OnTime',
              ( ['in'], VARIANT, 'EarliestTime' ),
              ( ['in'], BSTR, 'Procedure' ),
              ( ['in', 'optional'], VARIANT, 'LatestTime' ),
              ( ['in', 'optional'], VARIANT, 'Schedule' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(770)], HRESULT, 'OnUndo',
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'Procedure' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(623), 'propget'], HRESULT, 'OnWindow',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(623), 'propput'], HRESULT, 'OnWindow',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(375), 'propget'], HRESULT, 'OperatingSystem',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(376), 'propget'], HRESULT, 'OrganizationName',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(291), 'propget'], HRESULT, 'Path',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(377), 'propget'], HRESULT, 'PathSeparator',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(378), 'propget'], HRESULT, 'PreviousSelections',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1205), 'propget'], HRESULT, 'PivotTableSelection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1205), 'propput'], HRESULT, 'PivotTableSelection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1062), 'propget'], HRESULT, 'PromptForSummaryInfo',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1062), 'propput'], HRESULT, 'PromptForSummaryInfo',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(302)], HRESULT, 'Quit'),
    COMMETHOD([dispid(773)], HRESULT, 'RecordMacro',
              ( ['in', 'optional'], VARIANT, 'BasicCode' ),
              ( ['in', 'optional'], VARIANT, 'XlmCode' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(379), 'propget'], HRESULT, 'RecordRelative',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(380), 'propget'], HRESULT, 'ReferenceStyle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlReferenceStyle), 'RHS' )),
    COMMETHOD([dispid(380), 'propput'], HRESULT, 'ReferenceStyle',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlReferenceStyle, 'RHS' )),
    COMMETHOD([dispid(775), 'propget'], HRESULT, 'RegisteredFunctions',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(30)], HRESULT, 'RegisterXLL',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(301)], HRESULT, 'Repeat',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(928), 'hidden'], HRESULT, 'ResetTipWizard',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1206), 'propget'], HRESULT, 'RollZoom',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1206), 'propput'], HRESULT, 'RollZoom',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(283), 'hidden'], HRESULT, 'Save',
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(212), 'hidden'], HRESULT, 'SaveWorkspace',
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(382), 'propget'], HRESULT, 'ScreenUpdating',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(382), 'propput'], HRESULT, 'ScreenUpdating',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(219), 'hidden'], HRESULT, 'SetDefaultChart',
              ( ['in', 'optional'], VARIANT, 'FormatName' ),
              ( ['in', 'optional'], VARIANT, 'Gallery' )),
    COMMETHOD([dispid(993), 'propget'], HRESULT, 'SheetsInNewWorkbook',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(993), 'propput'], HRESULT, 'SheetsInNewWorkbook',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1207), 'propget'], HRESULT, 'ShowChartTipNames',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1207), 'propput'], HRESULT, 'ShowChartTipNames',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1208), 'propget'], HRESULT, 'ShowChartTipValues',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1208), 'propput'], HRESULT, 'ShowChartTipValues',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(924), 'propget'], HRESULT, 'StandardFont',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(924), 'propput'], HRESULT, 'StandardFont',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(925), 'propget'], HRESULT, 'StandardFontSize',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(925), 'propput'], HRESULT, 'StandardFontSize',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(385), 'propget'], HRESULT, 'StartupPath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(386), 'propget'], HRESULT, 'StatusBar',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(386), 'propput'], HRESULT, 'StatusBar',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(381), 'propget'], HRESULT, 'TemplatesPath',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(387), 'propget'], HRESULT, 'ShowToolTips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(387), 'propput'], HRESULT, 'ShowToolTips',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(126), 'propget'], HRESULT, 'Top',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(126), 'propput'], HRESULT, 'Top',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(1209), 'propget'], HRESULT, 'DefaultSaveFormat',
              ( ['retval', 'out'], POINTER(XlFileFormat), 'RHS' )),
    COMMETHOD([dispid(1209), 'propput'], HRESULT, 'DefaultSaveFormat',
              ( ['in'], XlFileFormat, 'RHS' )),
    COMMETHOD([dispid(310), 'propget'], HRESULT, 'TransitionMenuKey',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(310), 'propput'], HRESULT, 'TransitionMenuKey',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(311), 'propget'], HRESULT, 'TransitionMenuKeyAction',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(311), 'propput'], HRESULT, 'TransitionMenuKeyAction',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(312), 'propget'], HRESULT, 'TransitionNavigKeys',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(312), 'propput'], HRESULT, 'TransitionNavigKeys',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(303)], HRESULT, 'Undo',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(389), 'propget'], HRESULT, 'UsableHeight',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(390), 'propget'], HRESULT, 'UsableWidth',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(1210), 'propget'], HRESULT, 'UserControl',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1210), 'propput'], HRESULT, 'UserControl',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(391), 'propget'], HRESULT, 'UserName',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(391), 'propput'], HRESULT, 'UserName',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1211), 'propget'], HRESULT, 'VBE',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBE)), 'RHS' )),
    COMMETHOD([dispid(392), 'propget'], HRESULT, 'Version',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(558), 'propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(558), 'propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(788)], HRESULT, 'Volatile',
              ( ['in', 'optional'], VARIANT, 'Volatile' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(393), 'hidden'], HRESULT, '_Wait',
              ( ['in'], VARIANT, 'Time' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Width',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Width',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([dispid(395), 'propget'], HRESULT, 'WindowsForPens',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(396), 'propget'], HRESULT, 'WindowState',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlWindowState), 'RHS' )),
    COMMETHOD([dispid(396), 'propput'], HRESULT, 'WindowState',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlWindowState, 'RHS' )),
    COMMETHOD([dispid(2), 'hidden', 'propget'], HRESULT, 'UILanguage',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2), 'hidden', 'propput'], HRESULT, 'UILanguage',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(229), 'propget'], HRESULT, 'DefaultSheetDirection',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(229), 'propput'], HRESULT, 'DefaultSheetDirection',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(232), 'propget'], HRESULT, 'CursorMovement',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(232), 'propput'], HRESULT, 'CursorMovement',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(233), 'propget'], HRESULT, 'ControlCharacters',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(233), 'propput'], HRESULT, 'ControlCharacters',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(169), 'hidden'], HRESULT, '_WSFunction',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1212), 'propget'], HRESULT, 'EnableEvents',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1212), 'propput'], HRESULT, 'EnableEvents',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1213), 'hidden', 'propget'], HRESULT, 'DisplayInfoWindow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1213), 'hidden', 'propput'], HRESULT, 'DisplayInfoWindow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1770)], HRESULT, 'Wait',
              ( ['in'], VARIANT, 'Time' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1793), 'propget'], HRESULT, 'ExtendList',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1793), 'propput'], HRESULT, 'ExtendList',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1794), 'propget'], HRESULT, 'OLEDBErrors',
              ( ['retval', 'out'], POINTER(POINTER(OLEDBErrors)), 'RHS' )),
    COMMETHOD([dispid(1795)], HRESULT, 'GetPhonetic',
              ( ['in', 'optional'], VARIANT, 'Text' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1796), 'propget'], HRESULT, 'COMAddIns',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.COMAddIns)), 'RHS' )),
    COMMETHOD([dispid(1797), 'propget'], HRESULT, 'DefaultWebOptions',
              ( ['retval', 'out'], POINTER(POINTER(DefaultWebOptions)), 'RHS' )),
    COMMETHOD([dispid(1798), 'propget'], HRESULT, 'ProductCode',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1799), 'propget'], HRESULT, 'UserLibraryPath',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1800), 'propget'], HRESULT, 'AutoPercentEntry',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1800), 'propput'], HRESULT, 'AutoPercentEntry',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1801), 'propget'], HRESULT, 'LanguageSettings',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.LanguageSettings)), 'RHS' )),
    COMMETHOD([dispid(1802), 'hidden', 'propget'], HRESULT, 'Dummy101',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1803), 'hidden'], HRESULT, 'Dummy12',
              ( ['in'], POINTER(PivotTable), 'p1' ),
              ( ['in'], POINTER(PivotTable), 'p2' )),
    COMMETHOD([dispid(1804), 'hidden', 'propget'], HRESULT, 'AnswerWizard',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.AnswerWizard)), 'RHS' )),
    COMMETHOD([dispid(1805)], HRESULT, 'CalculateFull'),
    COMMETHOD([dispid(1771)], HRESULT, 'FindFile',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1806), 'propget'], HRESULT, 'CalculationVersion',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1807), 'hidden', 'propget'], HRESULT, 'ShowWindowsInTaskbar',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1807), 'hidden', 'propput'], HRESULT, 'ShowWindowsInTaskbar',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1808), 'propget'], HRESULT, 'FeatureInstall',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFeatureInstall), 'RHS' )),
    COMMETHOD([dispid(1808), 'propput'], HRESULT, 'FeatureInstall',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFeatureInstall, 'RHS' )),
    COMMETHOD([dispid(1932), 'propget'], HRESULT, 'Ready',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1933), 'hidden'], HRESULT, 'Dummy13',
              ( ['in'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1934), 'propget'], HRESULT, 'FindFormat',
              ( ['retval', 'out'], POINTER(POINTER(CellFormat)), 'RHS' )),
    COMMETHOD([dispid(1934), 'propputref'], HRESULT, 'FindFormat',
              ( ['in'], POINTER(CellFormat), 'RHS' )),
    COMMETHOD([dispid(1935), 'propget'], HRESULT, 'ReplaceFormat',
              ( ['retval', 'out'], POINTER(POINTER(CellFormat)), 'RHS' )),
    COMMETHOD([dispid(1935), 'propputref'], HRESULT, 'ReplaceFormat',
              ( ['in'], POINTER(CellFormat), 'RHS' )),
    COMMETHOD([dispid(1936), 'propget'], HRESULT, 'UsedObjects',
              ( ['retval', 'out'], POINTER(POINTER(UsedObjects)), 'RHS' )),
    COMMETHOD([dispid(1937), 'propget'], HRESULT, 'CalculationState',
              ( ['retval', 'out'], POINTER(XlCalculationState), 'RHS' )),
    COMMETHOD([dispid(1938), 'propget'], HRESULT, 'CalculationInterruptKey',
              ( ['retval', 'out'], POINTER(XlCalculationInterruptKey), 'RHS' )),
    COMMETHOD([dispid(1938), 'propput'], HRESULT, 'CalculationInterruptKey',
              ( ['in'], XlCalculationInterruptKey, 'RHS' )),
    COMMETHOD([dispid(1939), 'propget'], HRESULT, 'Watches',
              ( ['retval', 'out'], POINTER(POINTER(Watches)), 'RHS' )),
    COMMETHOD([dispid(1940), 'propget'], HRESULT, 'DisplayFunctionToolTips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1940), 'propput'], HRESULT, 'DisplayFunctionToolTips',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1941), 'propget'], HRESULT, 'AutomationSecurity',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutomationSecurity), 'RHS' )),
    COMMETHOD([dispid(1941), 'propput'], HRESULT, 'AutomationSecurity',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutomationSecurity, 'RHS' )),
    COMMETHOD([dispid(1942), 'propget'], HRESULT, 'FileDialog',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFileDialogType, 'fileDialogType' ),
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.FileDialog)), 'RHS' )),
    COMMETHOD([dispid(1944), 'hidden'], HRESULT, 'Dummy14'),
    COMMETHOD([dispid(1945)], HRESULT, 'CalculateFullRebuild'),
    COMMETHOD([dispid(1946), 'propget'], HRESULT, 'DisplayPasteOptions',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1946), 'propput'], HRESULT, 'DisplayPasteOptions',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1947), 'propget'], HRESULT, 'DisplayInsertOptions',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1947), 'propput'], HRESULT, 'DisplayInsertOptions',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1948), 'propget'], HRESULT, 'GenerateGetPivotData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1948), 'propput'], HRESULT, 'GenerateGetPivotData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1949), 'propget'], HRESULT, 'AutoRecover',
              ( ['retval', 'out'], POINTER(POINTER(AutoRecover)), 'RHS' )),
    COMMETHOD([dispid(1950), 'propget'], HRESULT, 'Hwnd',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1951), 'propget'], HRESULT, 'Hinstance',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1952)], HRESULT, 'CheckAbort',
              ( ['in', 'optional'], VARIANT, 'KeepAbort' )),
    COMMETHOD([dispid(1954), 'propget'], HRESULT, 'ErrorCheckingOptions',
              ( ['retval', 'out'], POINTER(POINTER(ErrorCheckingOptions)), 'RHS' )),
    COMMETHOD([dispid(1955), 'propget'], HRESULT, 'AutoFormatAsYouTypeReplaceHyperlinks',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1955), 'propput'], HRESULT, 'AutoFormatAsYouTypeReplaceHyperlinks',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1956), 'hidden', 'propget'], HRESULT, 'SmartTagRecognizers',
              ( ['retval', 'out'], POINTER(POINTER(SmartTagRecognizers)), 'RHS' )),
    COMMETHOD([dispid(1565), 'propget'], HRESULT, 'NewWorkbook',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.NewFile)), 'RHS' )),
    COMMETHOD([dispid(1957), 'propget'], HRESULT, 'SpellingOptions',
              ( ['retval', 'out'], POINTER(POINTER(SpellingOptions)), 'RHS' )),
    COMMETHOD([dispid(1958), 'propget'], HRESULT, 'Speech',
              ( ['retval', 'out'], POINTER(POINTER(Speech)), 'RHS' )),
    COMMETHOD([dispid(1959), 'propget'], HRESULT, 'MapPaperSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1959), 'propput'], HRESULT, 'MapPaperSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1960), 'propget'], HRESULT, 'ShowStartupDialog',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1960), 'propput'], HRESULT, 'ShowStartupDialog',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1809), 'propget'], HRESULT, 'DecimalSeparator',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1809), 'propput'], HRESULT, 'DecimalSeparator',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1810), 'propget'], HRESULT, 'ThousandsSeparator',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1810), 'propput'], HRESULT, 'ThousandsSeparator',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1961), 'propget'], HRESULT, 'UseSystemSeparators',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1961), 'propput'], HRESULT, 'UseSystemSeparators',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1962), 'propget'], HRESULT, 'ThisCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([dispid(1963), 'propget'], HRESULT, 'RTD',
              ( ['retval', 'out'], POINTER(POINTER(RTD)), 'RHS' )),
    COMMETHOD([dispid(2251), 'propget'], HRESULT, 'DisplayDocumentActionTaskPane',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2251), 'propput'], HRESULT, 'DisplayDocumentActionTaskPane',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2252)], HRESULT, 'DisplayXMLSourcePane',
              ( ['in', 'optional'], VARIANT, 'XmlMap' )),
    COMMETHOD([dispid(2254), 'propget'], HRESULT, 'ArbitraryXMLSupportAvailable',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2255), 'hidden'], HRESULT, 'Support',
              ( ['in'], POINTER(IDispatch), 'Object' ),
              ( ['in'], c_int, 'ID' ),
              ( ['in', 'optional'], VARIANT, 'arg' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2373), 'hidden'], HRESULT, 'Dummy20',
              ( ['in'], c_int, 'grfCompareFunctions' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2375), 'propget'], HRESULT, 'MeasurementUnit',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2375), 'propput'], HRESULT, 'MeasurementUnit',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2376), 'propget'], HRESULT, 'ShowSelectionFloaties',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2376), 'propput'], HRESULT, 'ShowSelectionFloaties',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2377), 'propget'], HRESULT, 'ShowMenuFloaties',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2377), 'propput'], HRESULT, 'ShowMenuFloaties',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2378), 'propget'], HRESULT, 'ShowDevTools',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2378), 'propput'], HRESULT, 'ShowDevTools',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2379), 'propget'], HRESULT, 'EnableLivePreview',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2379), 'propput'], HRESULT, 'EnableLivePreview',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2380), 'propget'], HRESULT, 'DisplayDocumentInformationPanel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2380), 'propput'], HRESULT, 'DisplayDocumentInformationPanel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2381), 'propget'], HRESULT, 'AlwaysUseClearType',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2381), 'propput'], HRESULT, 'AlwaysUseClearType',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2382), 'propget'], HRESULT, 'WarnOnFunctionNameConflict',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2382), 'propput'], HRESULT, 'WarnOnFunctionNameConflict',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2383), 'propget'], HRESULT, 'FormulaBarHeight',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2383), 'propput'], HRESULT, 'FormulaBarHeight',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2384), 'propget'], HRESULT, 'DisplayFormulaAutoComplete',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2384), 'propput'], HRESULT, 'DisplayFormulaAutoComplete',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2385), 'propget'], HRESULT, 'GenerateTableRefs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlGenerateTableRefs), 'RHS' )),
    COMMETHOD([dispid(2385), 'propput'], HRESULT, 'GenerateTableRefs',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlGenerateTableRefs, 'RHS' )),
    COMMETHOD([dispid(2386), 'propget'], HRESULT, 'Assistance',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.IAssistance)), 'RHS' )),
    COMMETHOD([dispid(2387)], HRESULT, 'CalculateUntilAsyncQueriesDone'),
    COMMETHOD([dispid(2388), 'propget'], HRESULT, 'EnableLargeOperationAlert',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2388), 'propput'], HRESULT, 'EnableLargeOperationAlert',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2389), 'propget'], HRESULT, 'LargeOperationCellThousandCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2389), 'propput'], HRESULT, 'LargeOperationCellThousandCount',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2390), 'propget'], HRESULT, 'DeferAsyncQueries',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2390), 'propput'], HRESULT, 'DeferAsyncQueries',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2391), 'propget'], HRESULT, 'MultiThreadedCalculation',
              ( ['retval', 'out'], POINTER(POINTER(MultiThreadedCalculation)), 'RHS' )),
    COMMETHOD([dispid(2392)], HRESULT, 'SharePointVersion',
              ( ['in'], BSTR, 'bstrUrl' ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2394), 'propget'], HRESULT, 'ActiveEncryptionSession',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2395), 'propget'], HRESULT, 'HighQualityModeForGraphics',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2395), 'propput'], HRESULT, 'HighQualityModeForGraphics',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2768), 'propget'], HRESULT, 'FileExportConverters',
              ( ['retval', 'out'], POINTER(POINTER(FileExportConverters)), 'RHS' )),
    COMMETHOD([dispid(2772), 'propget'], HRESULT, 'SmartArtLayouts',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartArtLayouts)), 'RHS' )),
    COMMETHOD([dispid(2773), 'propget'], HRESULT, 'SmartArtQuickStyles',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartArtQuickStyles)), 'RHS' )),
    COMMETHOD([dispid(2774), 'propget'], HRESULT, 'SmartArtColors',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartArtColors)), 'RHS' )),
    COMMETHOD([dispid(2775), 'propget'], HRESULT, 'AddIns2',
              ( ['retval', 'out'], POINTER(POINTER(AddIns2)), 'RHS' )),
    COMMETHOD([dispid(2776), 'propget'], HRESULT, 'PrintCommunication',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2776), 'propput'], HRESULT, 'PrintCommunication',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2770)], HRESULT, 'MacroOptions',
              ( ['in', 'optional'], VARIANT, 'Macro' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'HasMenu' ),
              ( ['in', 'optional'], VARIANT, 'MenuText' ),
              ( ['in', 'optional'], VARIANT, 'HasShortcutKey' ),
              ( ['in', 'optional'], VARIANT, 'ShortcutKey' ),
              ( ['in', 'optional'], VARIANT, 'Category' ),
              ( ['in', 'optional'], VARIANT, 'StatusBar' ),
              ( ['in', 'optional'], VARIANT, 'HelpContextID' ),
              ( ['in', 'optional'], VARIANT, 'HelpFile' ),
              ( ['in', 'optional'], VARIANT, 'ArgumentDescriptions' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2778), 'propget'], HRESULT, 'UseClusterConnector',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2778), 'propput'], HRESULT, 'UseClusterConnector',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2779), 'propget'], HRESULT, 'ClusterConnector',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2779), 'propput'], HRESULT, 'ClusterConnector',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2780), 'hidden', 'propget'], HRESULT, 'Quitting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2781), 'hidden', 'propget'], HRESULT, 'Dummy22',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2781), 'hidden', 'propput'], HRESULT, 'Dummy22',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2782), 'hidden', 'propget'], HRESULT, 'Dummy23',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2782), 'hidden', 'propput'], HRESULT, 'Dummy23',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2783), 'propget'], HRESULT, 'ProtectedViewWindows',
              ( ['retval', 'out'], POINTER(POINTER(ProtectedViewWindows)), 'RHS' )),
    COMMETHOD([dispid(2784), 'propget'], HRESULT, 'ActiveProtectedViewWindow',
              ( ['retval', 'out'], POINTER(POINTER(ProtectedViewWindow)), 'RHS' )),
    COMMETHOD([dispid(2785), 'propget'], HRESULT, 'IsSandboxed',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2786), 'hidden', 'propget'], HRESULT, 'SaveISO8601Dates',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2786), 'hidden', 'propput'], HRESULT, 'SaveISO8601Dates',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2787), 'propget'], HRESULT, 'HinstancePtr',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2788), 'propget'], HRESULT, 'FileValidation',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFileValidationMode), 'RHS' )),
    COMMETHOD([dispid(2788), 'propput'], HRESULT, 'FileValidation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFileValidationMode, 'RHS' )),
    COMMETHOD([dispid(2789), 'propget'], HRESULT, 'FileValidationPivot',
              ( ['retval', 'out'], POINTER(XlFileValidationPivotMode), 'RHS' )),
    COMMETHOD([dispid(2789), 'propput'], HRESULT, 'FileValidationPivot',
              ( ['in'], XlFileValidationPivotMode, 'RHS' )),
    COMMETHOD([dispid(2994), 'propget'], HRESULT, 'ShowQuickAnalysis',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2994), 'propput'], HRESULT, 'ShowQuickAnalysis',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2995), 'propget'], HRESULT, 'QuickAnalysis',
              ( ['retval', 'out'], POINTER(POINTER(QuickAnalysis)), 'RHS' )),
    COMMETHOD([dispid(2996), 'propget'], HRESULT, 'FlashFill',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2996), 'propput'], HRESULT, 'FlashFill',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2997), 'propget'], HRESULT, 'EnableMacroAnimations',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2997), 'propput'], HRESULT, 'EnableMacroAnimations',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2998), 'propget'], HRESULT, 'ChartDataPointTrack',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2998), 'propput'], HRESULT, 'ChartDataPointTrack',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2999), 'propget'], HRESULT, 'FlashFillMode',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2999), 'propput'], HRESULT, 'FlashFillMode',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(3000), 'propget'], HRESULT, 'MergeInstances',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(3000), 'propput'], HRESULT, 'MergeInstances',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(3158), 'propget'], HRESULT, 'EnableCheckFileExtensions',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(3158), 'propput'], HRESULT, 'EnableCheckFileExtensions',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1118222), 'propget'], HRESULT, 'DebugTools',
              ( ['retval', 'out'], POINTER(POINTER(_DebugTools)), 'RHS' )),
]
################################################################
## code template for _Application implementation
##class _Application_Impl(object):
##    @property
##    def ThisWorkbook(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    MoveAfterReturn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    ActivePrinter = property(_get, _set, doc = _set.__doc__)
##
##    def Union(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MemoryFree(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MemoryTotal(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy13(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DefaultWebOptions(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    PromptForSummaryInfo = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CanRecordSounds(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableAutoComplete = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnableAnimations = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnData = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    AskToUpdateLinks = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    FixedDecimal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ClusterConnector = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Quitting(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    CursorMovement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    CommandUnderlines = property(_get, _set, doc = _set.__doc__)
##
##    def MacroOptions(self, Macro, Description, HasMenu, MenuText, HasShortcutKey, ShortcutKey, Category, StatusBar, HelpContextID, HelpFile, ArgumentDescriptions, lcid):
##        '-no docstring-'
##        #return 
##
##    def GetOpenFilename(self, FileFilter, FilterIndex, Title, ButtonText, MultiSelect, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VBE(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FileSearch(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnableTipWizard = property(_get, _set, doc = _set.__doc__)
##
##    def ConvertFormula(self, Formula, FromReferenceStyle, ToReferenceStyle, ToAbsolute, RelativeTo, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveSheet(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddChartAutoFormat(self, Chart, Name, Description, lcid):
##        '-no docstring-'
##        #return 
##
##    def Undo(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoRecover(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ProtectedViewWindows(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoFormatAsYouTypeReplaceHyperlinks = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MenuBars(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Sheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def InputBox(self, Prompt, Title, Default, Left, Top, HelpFile, HelpContextID, Type, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MailSystem(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Path(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Support(self, Object, ID, arg):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Interactive = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RecentFiles(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EnableCancelKey = property(_get, _set, doc = _set.__doc__)
##
##    def CalculateFullRebuild(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    ControlCharacters = property(_get, _set, doc = _set.__doc__)
##
##    def _FindFile(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def InchesToPoints(self, Inches, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CalculationVersion(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Iteration = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    CalculateBeforeSave = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    EditDirectlyInCell = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ODBCTimeout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    TransitionMenuKeyAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetDeactivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableLargeOperationAlert = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FileValidation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DefaultSheetDirection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LibraryPath(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def DeleteCustomList(self, ListNum, lcid):
##        '-no docstring-'
##        #return 
##
##    def CentimetersToPoints(self, Centimeters, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def Help(self, HelpFile, HelpContextID, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayFormulaAutoComplete = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Calculation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OLEDBErrors(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayInfoWindow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Dummy101(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Watches(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def NewWorkbook(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    AlertBeforeOverwriting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayStatusBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Ready(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PreviousSelections(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayFunctionToolTips = property(_get, _set, doc = _set.__doc__)
##
##    def ExecuteExcel4Macro(self, String, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintCommunication = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MultiThreadedCalculation(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    SheetsInNewWorkbook = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SmartArtLayouts(self):
##        '-no docstring-'
##        #return RHS
##
##    def DDETerminate(self, Channel, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThousandsSeparator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Charts(self):
##        '-no docstring-'
##        #return RHS
##
##    def CheckAbort(self, KeepAbort):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FileFind(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Build(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Intersect(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FileExportConverters(self):
##        '-no docstring-'
##        #return RHS
##
##    def _MacroOptions(self, Macro, Description, HasMenu, MenuText, HasShortcutKey, ShortcutKey, Category, StatusBar, HelpContextID, HelpFile, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def International(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MemoryUsed(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GetSaveAsFilename(self, InitialFilename, FileFilter, FilterIndex, Title, ButtonText, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RTD(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveDialog(self):
##        '-no docstring-'
##        #return RHS
##
##    def Run(self, Macro, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MathCoprocessorAvailable(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WindowsForPens(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Evaluate(self, Name, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayClipboardWindow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Excel4IntlMacroSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def ResetTipWizard(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def GetCustomListNum(self, ListArray, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DebugTools(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartDataPointTrack = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AddIns(self):
##        '-no docstring-'
##        #return RHS
##
##    def DoubleClick(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    ScreenUpdating = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SmartTagRecognizers(self):
##        '-no docstring-'
##        #return RHS
##
##    def FindFile(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    ConstrainNumeric = property(_get, _set, doc = _set.__doc__)
##
##    def Wait(self, Time, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ProductCode(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DefaultFilePath = property(_get, _set, doc = _set.__doc__)
##
##    def ReplaceFormat(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowMenuFloaties = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutomationSecurity = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ErrorCheckingOptions(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def COMAddIns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PathSeparator(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GetCustomListContents(self, ListNum, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def SharePointVersion(self, bstrUrl):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FlashFillMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Cursor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RecordRelative(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self, Cell1, Cell2):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RollZoom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Dummy23 = property(_get, _set, doc = _set.__doc__)
##
##    def FindFormat(self, RHS):
##        '-no docstring-'
##        #return 
##
##    @property
##    def WorksheetFunction(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Hinstance(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CustomListCount(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    UILanguage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Excel4MacroSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseSystemSeparators = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FeatureInstall = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlwaysUseClearType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LargeButtons = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DeferAsyncQueries = property(_get, _set, doc = _set.__doc__)
##
##    def SaveWorkspace(self, Filename, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Selection(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    IgnoreRemoteRequests = property(_get, _set, doc = _set.__doc__)
##
##    def NextLetter(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def CalculateFull(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableLivePreview = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveMenuBar(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AddIns2(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    CopyObjectsWithCells = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayNoteIndicator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableSound = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorButtons = property(_get, _set, doc = _set.__doc__)
##
##    def DisplayXMLSourcePane(self, XmlMap):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Assistance(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowToolTips = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnCalculate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def QuickAnalysis(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    UserName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayExcel4Menus = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DDEAppReturnCode(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def OrganizationName(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Calculate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def MailLogoff(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnDoubleClick = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    MaxChange = property(_get, _set, doc = _set.__doc__)
##
##    def _Wait(self, Time, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayInsertOptions = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Toolbars(self):
##        '-no docstring-'
##        #return RHS
##
##    def DDEInitiate(self, App, Topic, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Volatile(self, Volatile, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    CellDragAndDrop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayFormulaBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FileDialog(self, fileDialogType):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy14(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def FileConverters(self, Index1, Index2, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GenerateGetPivotData = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultSaveFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveChart(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ExtendList = property(_get, _set, doc = _set.__doc__)
##
##    def Repeat(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def Goto(self, Reference, Scroll, lcid):
##        '-no docstring-'
##        #return 
##
##    def OnTime(self, EarliestTime, Procedure, LatestTime, Schedule, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DataEntryMode = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Assistant(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayAlerts = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DialogSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PivotTableSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowQuickAnalysis = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UsableWidth(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CalculationState(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Worksheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def OnRepeat(self, Text, Procedure, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnWindow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Workbooks(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoPercentEntry = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    TransitionMenuKey = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FlashFill = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    StandardFont = property(_get, _set, doc = _set.__doc__)
##
##    def _Run2(self, Macro, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def CalculateUntilAsyncQueriesDone(self):
##        '-no docstring-'
##        #return 
##
##    def CheckSpelling(self, Word, CustomDictionary, IgnoreUppercase, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LargeOperationCellThousandCount = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UsableHeight(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShortcutMenus(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def DeleteChartAutoFormat(self, Name, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Speech(self):
##        '-no docstring-'
##        #return RHS
##
##    def MailLogon(self, Name, Password, DownloadNewMail, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayScrollBars = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableMacroAnimations = property(_get, _set, doc = _set.__doc__)
##
##    def DDEExecute(self, Channel, String, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UserLibraryPath(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ClipboardFormats(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayCommentIndicator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UsedObjects(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    MaxIterations = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowDevTools = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayFullScreen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SaveISO8601Dates = property(_get, _set, doc = _set.__doc__)
##
##    def DDEPoke(self, Channel, Item, Data, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CanPlaySounds(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy8(self, Arg1):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy9(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SmartArtColors(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CalculationInterruptKey = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HinstancePtr(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy2(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy3(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy1(self, Arg1, Arg2, Arg3, Arg4):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy6(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy7(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy4(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy5(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy10(self, arg):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy11(self):
##        '-no docstring-'
##        #return 
##
##    def Dummy12(self, p1, p2):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Dialogs(self):
##        '-no docstring-'
##        #return RHS
##
##    def _WSFunction(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DecimalSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowChartTipValues = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ArbitraryXMLSupportAvailable(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableEvents = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LanguageSettings(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    FixedDecimalPlaces = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveProtectedViewWindow(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MouseAvailable(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TemplatesPath(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def RecordMacro(self, BasicCode, XlmCode, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MeasurementUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnEntry = property(_get, _set, doc = _set.__doc__)
##
##    def Save(self, Filename, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    CutCopyMode = property(_get, _set, doc = _set.__doc__)
##
##    def ActivateMicrosoftApp(self, Index, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ODBCErrors(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseClusterConnector = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HighQualityModeForGraphics = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AnswerWizard(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetDefaultChart(self, FormatName, Gallery):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OperatingSystem(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ThisCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    ReferenceStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UserControl = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsSandboxed(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SmartArtQuickStyles(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def NetworkTemplatesPath(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def GetPhonetic(self, Text):
##        '-no docstring-'
##        #return RHS
##
##    def AddCustomList(self, ListArray, ByRow, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    TransitionNavigKeys = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Hwnd(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MergeInstances = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Caller(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Modules(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy20(self, grfCompareFunctions):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SpellingOptions(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Dummy22 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveWorkbook(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayRecentFiles = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowWindowsInTaskbar = property(_get, _set, doc = _set.__doc__)
##
##    def OnKey(self, Key, Procedure, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    AltStartupPath = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayPasteOptions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WarnOnFunctionNameConflict = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    StandardFontSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayDocumentInformationPanel = property(_get, _set, doc = _set.__doc__)
##
##    def SendKeys(self, Keys, Wait, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MapPaperSize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MailSession(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def DDERequest(self, Channel, Item, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    GenerateTableRefs = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def StartupPath(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    StatusBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Version(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoCorrect(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveEncryptionSession(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayDocumentActionTaskPane = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetActivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaBarHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    MoveAfterReturnDirection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Names(self):
##        '-no docstring-'
##        #return RHS
##
##    def OnUndo(self, Text, Procedure, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RegisteredFunctions(self, Index1, Index2, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowChartTipNames = property(_get, _set, doc = _set.__doc__)
##
##    def RegisterXLL(self, Filename, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowStartupDialog = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableCheckFileExtensions = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FileValidationPivot = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowSelectionFloaties = property(_get, _set, doc = _set.__doc__)
##

class IconSets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
IconSets._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
]
LineFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'BackColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'BackColor',
              ( ['in'], POINTER(ColorFormat), 'BackColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'BeginArrowheadLength',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadLength), 'BeginArrowheadLength' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'BeginArrowheadLength',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadLength, 'BeginArrowheadLength' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'BeginArrowheadStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadStyle), 'BeginArrowheadStyle' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'BeginArrowheadStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadStyle, 'BeginArrowheadStyle' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'BeginArrowheadWidth',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadWidth), 'BeginArrowheadWidth' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'BeginArrowheadWidth',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadWidth, 'BeginArrowheadWidth' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'DashStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoLineDashStyle), 'DashStyle' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'DashStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoLineDashStyle, 'DashStyle' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'EndArrowheadLength',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadLength), 'EndArrowheadLength' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'EndArrowheadLength',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadLength, 'EndArrowheadLength' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'EndArrowheadStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadStyle), 'EndArrowheadStyle' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'EndArrowheadStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadStyle, 'EndArrowheadStyle' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'EndArrowheadWidth',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadWidth), 'EndArrowheadWidth' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'EndArrowheadWidth',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoArrowheadWidth, 'EndArrowheadWidth' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType), 'Pattern' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Pattern',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoLineStyle), 'Style' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Style',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoLineStyle, 'Style' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['retval', 'out'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(112), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Weight',
              ( ['retval', 'out'], POINTER(c_float), 'Weight' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Weight',
              ( ['in'], c_float, 'Weight' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'InsetPen',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'InsetPen' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'InsetPen',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'InsetPen' )),
]
################################################################
## code template for LineFormat implementation
##class LineFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadLength
##    def _set(self, BeginArrowheadLength):
##        '-no docstring-'
##    BeginArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DashStyle
##    def _set(self, DashStyle):
##        '-no docstring-'
##    DashStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Weight
##    def _set(self, Weight):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadLength
##    def _set(self, EndArrowheadLength):
##        '-no docstring-'
##    EndArrowheadLength = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadWidth
##    def _set(self, BeginArrowheadWidth):
##        '-no docstring-'
##    BeginArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return InsetPen
##    def _set(self, InsetPen):
##        '-no docstring-'
##    InsetPen = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Pattern
##    def _set(self, Pattern):
##        '-no docstring-'
##    Pattern = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Style
##    def _set(self, Style):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BeginArrowheadStyle
##    def _set(self, BeginArrowheadStyle):
##        '-no docstring-'
##    BeginArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadStyle
##    def _set(self, EndArrowheadStyle):
##        '-no docstring-'
##    EndArrowheadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return BackColor
##    def _set(self, BackColor):
##        '-no docstring-'
##    BackColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return EndArrowheadWidth
##    def _set(self, EndArrowheadWidth):
##        '-no docstring-'
##    EndArrowheadWidth = property(_get, _set, doc = _set.__doc__)
##

class IFormatCondition(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024425-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']

# values for enumeration 'XlTimePeriods'
xlToday = 0
xlYesterday = 1
xlLast7Days = 2
xlThisWeek = 3
xlLastWeek = 4
xlLastMonth = 5
xlTomorrow = 6
xlNextWeek = 7
xlNextMonth = 8
xlThisMonth = 9
XlTimePeriods = c_int # enum
IFormatCondition._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Modify',
              ( ['in'], XlFormatConditionType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Operator' ),
              ( ['in', 'optional'], VARIANT, 'Formula1' ),
              ( ['in', 'optional'], VARIANT, 'Formula2' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Operator',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula2',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Modify',
              ( ['in'], XlFormatConditionType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Operator' ),
              ( ['in', 'optional'], VARIANT, 'Formula1' ),
              ( ['in', 'optional'], VARIANT, 'Formula2' ),
              ( ['in', 'optional'], VARIANT, 'String' ),
              ( ['in', 'optional'], VARIANT, 'Operator2' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextOperator',
              ( ['retval', 'out'], POINTER(XlContainsOperator), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextOperator',
              ( ['in'], XlContainsOperator, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DateOperator',
              ( ['retval', 'out'], POINTER(XlTimePeriods), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DateOperator',
              ( ['in'], XlTimePeriods, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StopIfTrue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StopIfTrue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppliesTo',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ModifyAppliesToRange',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD([], HRESULT, 'SetFirstPriority'),
    COMMETHOD([], HRESULT, 'SetLastPriority'),
    COMMETHOD(['propget'], HRESULT, 'PTCondition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScopeType',
              ( ['retval', 'out'], POINTER(XlPivotConditionScope), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScopeType',
              ( ['in'], XlPivotConditionScope, 'RHS' )),
]
################################################################
## code template for IFormatCondition implementation
##class IFormatCondition_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DateOperator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AppliesTo(self):
##        '-no docstring-'
##        #return RHS
##
##    def ModifyAppliesToRange(self, Range):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Modify(self, Type, Operator, Formula1, Formula2, String, Operator2):
##        '-no docstring-'
##        #return 
##
##    def SetLastPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScopeType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StopIfTrue = property(_get, _set, doc = _set.__doc__)
##
##    def _Modify(self, Type, Operator, Formula1, Formula2):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Formula2(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextOperator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Formula1(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetFirstPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PTCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Operator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##

class IIconSetCondition(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024497-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
class IconCriteria(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024498-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
class IconCriterion(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024499-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
IconCriterion._disp_methods_ = [
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(108), 'propget'], XlConditionValueTypes, 'Type'),
    DISPMETHOD([dispid(108), 'propput'], None, 'Type',
               ( ['in'], XlConditionValueTypes, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(797), 'propget'], c_int, 'Operator'),
    DISPMETHOD([dispid(797), 'propput'], None, 'Operator',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2747), 'propget'], XlIcon, 'Icon'),
    DISPMETHOD([dispid(2747), 'propput'], None, 'Icon',
               ( ['in'], XlIcon, 'rhs' )),
]
IconCriteria._disp_methods_ = [
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IconCriterion), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IconCriterion), 'Item',
               ( ['in'], VARIANT, 'Index' )),
]
IIconSetCondition._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StopIfTrue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppliesTo',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'ModifyAppliesToRange',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD(['propget'], HRESULT, 'PTCondition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScopeType',
              ( ['retval', 'out'], POINTER(XlPivotConditionScope), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScopeType',
              ( ['in'], XlPivotConditionScope, 'RHS' )),
    COMMETHOD([], HRESULT, 'SetFirstPriority'),
    COMMETHOD([], HRESULT, 'SetLastPriority'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'ReverseOrder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReverseOrder',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PercentileValues',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PercentileValues',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowIconOnly',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowIconOnly',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IconSet',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IconSet',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IconCriteria',
              ( ['retval', 'out'], POINTER(POINTER(IconCriteria)), 'RHS' )),
]
################################################################
## code template for IIconSetCondition implementation
##class IIconSetCondition_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PercentileValues = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IconCriteria(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetFirstPriority(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PTCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AppliesTo(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def StopIfTrue(self):
##        '-no docstring-'
##        #return RHS
##
##    def ModifyAppliesToRange(self, Range):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReverseOrder = property(_get, _set, doc = _set.__doc__)
##
##    def SetLastPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowIconOnly = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IconSet = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScopeType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IPivotAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024482-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotAxis._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotLines',
              ( ['retval', 'out'], POINTER(POINTER(PivotLines)), 'RHS' )),
]
################################################################
## code template for IPivotAxis implementation
##class IPivotAxis_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotLines(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class ICalculatedItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024421-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICalculatedItems._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Formula' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Field' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'Formula' ),
              ( ['in', 'optional'], VARIANT, 'UseStandardFormula' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
]
################################################################
## code template for ICalculatedItems implementation
##class ICalculatedItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Add(self, Name, Formula):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, Formula, UseStandardFormula):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Field):
##        '-no docstring-'
##        #return RHS
##

class Databar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024496-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Databar._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2625), 'propget'], VARIANT_BOOL, 'StopIfTrue'),
    DISPMETHOD([dispid(2626), 'propget'], POINTER(Range), 'AppliesTo'),
    DISPMETHOD([dispid(2718), 'propget'], POINTER(ConditionValue), 'MinPoint'),
    DISPMETHOD([dispid(2719), 'propget'], POINTER(ConditionValue), 'MaxPoint'),
    DISPMETHOD([dispid(2720), 'propget'], c_int, 'PercentMin'),
    DISPMETHOD([dispid(2720), 'propput'], None, 'PercentMin',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2721), 'propget'], c_int, 'PercentMax'),
    DISPMETHOD([dispid(2721), 'propput'], None, 'PercentMax',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2722), 'propget'], POINTER(IDispatch), 'BarColor'),
    DISPMETHOD([dispid(2024), 'propget'], VARIANT_BOOL, 'ShowValue'),
    DISPMETHOD([dispid(2024), 'propput'], None, 'ShowValue',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(2629)], None, 'SetFirstPriority'),
    DISPMETHOD([dispid(2630)], None, 'SetLastPriority'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2627)], None, 'ModifyAppliesToRange',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2631), 'propget'], VARIANT_BOOL, 'PTCondition'),
    DISPMETHOD([dispid(2615), 'propget'], XlPivotConditionScope, 'ScopeType'),
    DISPMETHOD([dispid(2615), 'propput'], None, 'ScopeType',
               ( ['in'], XlPivotConditionScope, 'rhs' )),
    DISPMETHOD([dispid(168), 'propget'], c_int, 'Direction'),
    DISPMETHOD([dispid(168), 'propput'], None, 'Direction',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2941), 'propget'], XlDataBarFillType, 'BarFillType'),
    DISPMETHOD([dispid(2941), 'propput'], None, 'BarFillType',
               ( ['in'], XlDataBarFillType, 'rhs' )),
    DISPMETHOD([dispid(2942), 'propget'], XlDataBarAxisPosition, 'AxisPosition'),
    DISPMETHOD([dispid(2942), 'propput'], None, 'AxisPosition',
               ( ['in'], XlDataBarAxisPosition, 'rhs' )),
    DISPMETHOD([dispid(2943), 'propget'], POINTER(IDispatch), 'AxisColor'),
    DISPMETHOD([dispid(2944), 'propget'], POINTER(DataBarBorder), 'BarBorder'),
    DISPMETHOD([dispid(2945), 'propget'], POINTER(NegativeBarFormat), 'NegativeBarFormat'),
]
class IParameters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IParameters._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'iDataType' ),
              ( ['retval', 'out'], POINTER(POINTER(Parameter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Parameter)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Parameter)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IParameters implementation
##class IParameters_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, iDataType):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlSpecialCellsValue'
xlErrors = 16
xlLogical = 4
xlNumbers = 1
xlTextValues = 2
XlSpecialCellsValue = c_int # enum
class DialogSheetView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448A-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
DialogSheetView._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(751), 'propget'], POINTER(IDispatch), 'Sheet'),
]
class IWalls(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWalls._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste'),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Thickness',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Thickness',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IWalls implementation
##class IWalls_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Thickness = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##

class IPivotFormulas(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotFormulas._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Add',
              ( ['in'], BSTR, 'Formula' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFormula)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFormula)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFormula)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Formula' ),
              ( ['in', 'optional'], VARIANT, 'UseStandardFormula' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotFormula)), 'RHS' )),
]
################################################################
## code template for IPivotFormulas implementation
##class IPivotFormulas_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Add(self, Formula):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Formula, UseStandardFormula):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IArcs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IArcs._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy43'),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'X1' ),
              ( ['in'], c_double, 'Y1' ),
              ( ['in'], c_double, 'X2' ),
              ( ['in'], c_double, 'Y2' ),
              ( ['retval', 'out'], POINTER(POINTER(Arc)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IArcs implementation
##class IArcs_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy43(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, X1, Y1, X2, Y2):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

WorkbookEvents._disp_methods_ = [
    DISPMETHOD([dispid(1923)], None, 'Open'),
    DISPMETHOD([dispid(304)], None, 'Activate'),
    DISPMETHOD([dispid(1530)], None, 'Deactivate'),
    DISPMETHOD([dispid(1546)], None, 'BeforeClose',
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1547)], None, 'BeforeSave',
               ( ['in'], VARIANT_BOOL, 'SaveAsUI' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1549)], None, 'BeforePrint',
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1550)], None, 'NewSheet',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1552)], None, 'AddinInstall'),
    DISPMETHOD([dispid(1553)], None, 'AddinUninstall'),
    DISPMETHOD([dispid(1554)], None, 'WindowResize',
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(1556)], None, 'WindowActivate',
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(1557)], None, 'WindowDeactivate',
               ( ['in'], POINTER(Window), 'Wn' )),
    DISPMETHOD([dispid(1558)], None, 'SheetSelectionChange',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' )),
    DISPMETHOD([dispid(1559)], None, 'SheetBeforeDoubleClick',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1560)], None, 'SheetBeforeRightClick',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(1561)], None, 'SheetActivate',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1562)], None, 'SheetDeactivate',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1563)], None, 'SheetCalculate',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(1564)], None, 'SheetChange',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Range), 'Target' )),
    DISPMETHOD([dispid(1854)], None, 'SheetFollowHyperlink',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(Hyperlink), 'Target' )),
    DISPMETHOD([dispid(2157)], None, 'SheetPivotTableUpdate',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2158)], None, 'PivotTableCloseConnection',
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2159)], None, 'PivotTableOpenConnection',
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2266)], None, 'Sync',
               ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSyncEventType, 'SyncEventType' )),
    DISPMETHOD([dispid(2283)], None, 'BeforeXmlImport',
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], BSTR, 'Url' ),
               ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2285)], None, 'AfterXmlImport',
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
               ( ['in'], XlXmlImportResult, 'Result' )),
    DISPMETHOD([dispid(2287)], None, 'BeforeXmlExport',
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], BSTR, 'Url' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2288)], None, 'AfterXmlExport',
               ( ['in'], POINTER(XmlMap), 'Map' ),
               ( ['in'], BSTR, 'Url' ),
               ( ['in'], XlXmlExportResult, 'Result' )),
    DISPMETHOD([dispid(2610)], None, 'RowsetComplete',
               ( ['in'], BSTR, 'Description' ),
               ( ['in'], BSTR, 'Sheet' ),
               ( ['in'], VARIANT_BOOL, 'Success' )),
    DISPMETHOD([dispid(2895)], None, 'SheetPivotTableAfterValueChange',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], POINTER(Range), 'TargetRange' )),
    DISPMETHOD([dispid(2896)], None, 'SheetPivotTableBeforeAllocateChanges',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2897)], None, 'SheetPivotTableBeforeCommitChanges',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    DISPMETHOD([dispid(2898)], None, 'SheetPivotTableBeforeDiscardChanges',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
               ( ['in'], c_int, 'ValueChangeStart' ),
               ( ['in'], c_int, 'ValueChangeEnd' )),
    DISPMETHOD([dispid(2899)], None, 'SheetPivotTableChangeSync',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(PivotTable), 'Target' )),
    DISPMETHOD([dispid(2900)], None, 'AfterSave',
               ( ['in'], VARIANT_BOOL, 'Success' )),
    DISPMETHOD([dispid(2901)], None, 'NewChart',
               ( ['in'], POINTER(Chart), 'Ch' )),
    DISPMETHOD([dispid(3075)], None, 'SheetLensGalleryRenderComplete',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
    DISPMETHOD([dispid(3076)], None, 'SheetTableUpdate',
               ( ['in'], POINTER(IDispatch), 'Sh' ),
               ( ['in'], POINTER(TableObject), 'Target' )),
    DISPMETHOD([dispid(3077)], None, 'ModelChange',
               ( ['in'], POINTER(ModelChanges), 'Changes' )),
    DISPMETHOD([dispid(3079)], None, 'SheetBeforeDelete',
               ( ['in'], POINTER(IDispatch), 'Sh' )),
]
class IToolbar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002085C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IToolbar._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Protection',
              ( ['retval', 'out'], POINTER(XlToolbarProtection), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Protection',
              ( ['in'], XlToolbarProtection, 'RHS' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD(['propget'], HRESULT, 'ToolbarButtons',
              ( ['retval', 'out'], POINTER(POINTER(ToolbarButtons)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IToolbar implementation
##class IToolbar_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Protection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ToolbarButtons(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IIconCriteria(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024498-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IIconCriteria._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IconCriterion)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IconCriterion)), 'RHS' )),
]
################################################################
## code template for IIconCriteria implementation
##class IIconCriteria_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##

class PublishObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024443-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PublishObjects._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(PublishObject), 'Add',
               ( ['in'], XlSourceType, 'SourceType' ),
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'Sheet' ),
               ( ['in', 'optional'], VARIANT, 'Source' ),
               ( ['in', 'optional'], VARIANT, 'HtmlType' ),
               ( ['in', 'optional'], VARIANT, 'DivID' ),
               ( ['in', 'optional'], VARIANT, 'Title' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(PublishObject), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PublishObject), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1895)], None, 'Publish'),
]
FillFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'Background'),
    COMMETHOD([dispid(11)], HRESULT, 'OneColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], c_float, 'Degree' )),
    COMMETHOD([dispid(12)], HRESULT, 'Patterned',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType, 'Pattern' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetGradientType, 'PresetGradientType' )),
    COMMETHOD([dispid(14)], HRESULT, 'PresetTextured',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTexture, 'PresetTexture' )),
    COMMETHOD([dispid(15)], HRESULT, 'Solid'),
    COMMETHOD([dispid(16)], HRESULT, 'TwoColorGradient',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle, 'Style' ),
              ( ['in'], c_int, 'Variant' )),
    COMMETHOD([dispid(17)], HRESULT, 'UserPicture',
              ( ['in'], BSTR, 'PictureFile' )),
    COMMETHOD([dispid(18)], HRESULT, 'UserTextured',
              ( ['in'], BSTR, 'TextureFile' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'BackColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'BackColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'BackColor',
              ( ['in'], POINTER(ColorFormat), 'BackColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(POINTER(ColorFormat)), 'ForeColor' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'ForeColor',
              ( ['in'], POINTER(ColorFormat), 'ForeColor' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'GradientColorType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientColorType), 'GradientColorType' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'GradientDegree',
              ( ['retval', 'out'], POINTER(c_float), 'GradientDegree' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'GradientStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoGradientStyle), 'GradientStyle' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'GradientVariant',
              ( ['retval', 'out'], POINTER(c_int), 'GradientVariant' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'Pattern',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPatternType), 'Pattern' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetGradientType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetGradientType), 'PresetGradientType' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTexture',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTexture), 'PresetTexture' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'TextureName',
              ( ['retval', 'out'], POINTER(BSTR), 'TextureName' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'TextureType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextureType), 'TextureType' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Transparency',
              ( ['retval', 'out'], POINTER(c_float), 'Transparency' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Transparency',
              ( ['in'], c_float, 'Transparency' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFillType), 'Type' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Visible' )),
    COMMETHOD([dispid(113), 'propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Visible' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'GradientStops',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.GradientStops)), 'GradientStops' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'TextureOffsetX',
              ( ['retval', 'out'], POINTER(c_float), 'TextureOffsetX' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'TextureOffsetX',
              ( ['in'], c_float, 'TextureOffsetX' )),
    COMMETHOD([dispid(116), 'propget'], HRESULT, 'TextureOffsetY',
              ( ['retval', 'out'], POINTER(c_float), 'TextureOffsetY' )),
    COMMETHOD([dispid(116), 'propput'], HRESULT, 'TextureOffsetY',
              ( ['in'], c_float, 'TextureOffsetY' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'TextureAlignment',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextureAlignment), 'TextureAlignment' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'TextureAlignment',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextureAlignment, 'TextureAlignment' )),
    COMMETHOD([dispid(118), 'propget'], HRESULT, 'TextureHorizontalScale',
              ( ['retval', 'out'], POINTER(c_float), 'HorizontalScale' )),
    COMMETHOD([dispid(118), 'propput'], HRESULT, 'TextureHorizontalScale',
              ( ['in'], c_float, 'HorizontalScale' )),
    COMMETHOD([dispid(119), 'propget'], HRESULT, 'TextureVerticalScale',
              ( ['retval', 'out'], POINTER(c_float), 'VerticalScale' )),
    COMMETHOD([dispid(119), 'propput'], HRESULT, 'TextureVerticalScale',
              ( ['in'], c_float, 'VerticalScale' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'TextureTile',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'TextureTile' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'TextureTile',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'TextureTile' )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'RotateWithObject',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RotateWithObject' )),
    COMMETHOD([dispid(121), 'propput'], HRESULT, 'RotateWithObject',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RotateWithObject' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'PictureEffects',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.PictureEffects)), 'PictureEffects' )),
    COMMETHOD([dispid(123), 'propget'], HRESULT, 'GradientAngle',
              ( ['retval', 'out'], POINTER(c_float), 'GradientAngle' )),
    COMMETHOD([dispid(123), 'propput'], HRESULT, 'GradientAngle',
              ( ['in'], c_float, 'GradientAngle' )),
]
################################################################
## code template for FillFormat implementation
##class FillFormat_Impl(object):
##    @property
##    def GradientStops(self):
##        '-no docstring-'
##        #return GradientStops
##
##    @property
##    def Pattern(self):
##        '-no docstring-'
##        #return Pattern
##
##    @property
##    def GradientStyle(self):
##        '-no docstring-'
##        #return GradientStyle
##
##    @property
##    def TextureName(self):
##        '-no docstring-'
##        #return TextureName
##
##    def _get(self):
##        '-no docstring-'
##        #return GradientAngle
##    def _set(self, GradientAngle):
##        '-no docstring-'
##    GradientAngle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PictureEffects(self):
##        '-no docstring-'
##        #return PictureEffects
##
##    def _get(self):
##        '-no docstring-'
##        #return RotateWithObject
##    def _set(self, RotateWithObject):
##        '-no docstring-'
##    RotateWithObject = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PresetTexture(self):
##        '-no docstring-'
##        #return PresetTexture
##
##    def UserTextured(self, TextureFile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def PresetGradient(self, Style, Variant, PresetGradientType):
##        '-no docstring-'
##        #return 
##
##    def PresetTextured(self, PresetTexture):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def UserPicture(self, PictureFile):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GradientDegree(self):
##        '-no docstring-'
##        #return GradientDegree
##
##    def TwoColorGradient(self, Style, Variant):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return ForeColor
##    def _set(self, ForeColor):
##        '-no docstring-'
##    ForeColor = property(_get, _set, doc = _set.__doc__)
##
##    def Background(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return BackColor
##    def _set(self, BackColor):
##        '-no docstring-'
##    BackColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TextureType(self):
##        '-no docstring-'
##        #return TextureType
##
##    def _get(self):
##        '-no docstring-'
##        #return HorizontalScale
##    def _set(self, HorizontalScale):
##        '-no docstring-'
##    TextureHorizontalScale = property(_get, _set, doc = _set.__doc__)
##
##    def Patterned(self, Pattern):
##        '-no docstring-'
##        #return 
##
##    def Solid(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PresetGradientType(self):
##        '-no docstring-'
##        #return PresetGradientType
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureTile
##    def _set(self, TextureTile):
##        '-no docstring-'
##    TextureTile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Transparency
##    def _set(self, Transparency):
##        '-no docstring-'
##    Transparency = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def GradientVariant(self):
##        '-no docstring-'
##        #return GradientVariant
##
##    @property
##    def GradientColorType(self):
##        '-no docstring-'
##        #return GradientColorType
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureAlignment
##    def _set(self, TextureAlignment):
##        '-no docstring-'
##    TextureAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def OneColorGradient(self, Style, Variant, Degree):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return VerticalScale
##    def _set(self, VerticalScale):
##        '-no docstring-'
##    TextureVerticalScale = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureOffsetX
##    def _set(self, TextureOffsetX):
##        '-no docstring-'
##    TextureOffsetX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TextureOffsetY
##    def _set(self, TextureOffsetY):
##        '-no docstring-'
##    TextureOffsetY = property(_get, _set, doc = _set.__doc__)
##

class ILegendKey(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208BC-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILegendKey._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerStyle',
              ( ['retval', 'out'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Smooth',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for ILegendKey implementation
##class ILegendKey_Impl(object):
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class IRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020846-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRange._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Address',
              ( ['in', 'optional'], VARIANT, 'RowAbsolute' ),
              ( ['in', 'optional'], VARIANT, 'ColumnAbsolute' ),
              ( ['in', 'optional'], XlReferenceStyle, 'ReferenceStyle', 1 ),
              ( ['in', 'optional'], VARIANT, 'External' ),
              ( ['in', 'optional'], VARIANT, 'RelativeTo' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddressLocal',
              ( ['in', 'optional'], VARIANT, 'RowAbsolute' ),
              ( ['in', 'optional'], VARIANT, 'ColumnAbsolute' ),
              ( ['in', 'optional'], XlReferenceStyle, 'ReferenceStyle', 1 ),
              ( ['in', 'optional'], VARIANT, 'External' ),
              ( ['in', 'optional'], VARIANT, 'RelativeTo' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'AdvancedFilter',
              ( ['in'], XlFilterAction, 'Action' ),
              ( ['in', 'optional'], VARIANT, 'CriteriaRange' ),
              ( ['in', 'optional'], VARIANT, 'CopyToRange' ),
              ( ['in', 'optional'], VARIANT, 'Unique' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyNames',
              ( ['in', 'optional'], VARIANT, 'Names' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreRelativeAbsolute' ),
              ( ['in', 'optional'], VARIANT, 'UseRowColumnNames' ),
              ( ['in', 'optional'], VARIANT, 'OmitColumn' ),
              ( ['in', 'optional'], VARIANT, 'OmitRow' ),
              ( ['in', 'optional'], XlApplyNamesOrder, 'Order', 1 ),
              ( ['in', 'optional'], VARIANT, 'AppendLast' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyOutlineStyles',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Areas',
              ( ['retval', 'out'], POINTER(POINTER(Areas)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AutoComplete',
              ( ['in'], BSTR, 'String' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'AutoFill',
              ( ['in'], POINTER(Range), 'Destination' ),
              ( ['in', 'optional'], XlAutoFillType, 'Type', 0 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'AutoFilter',
              ( ['in', 'optional'], VARIANT, 'Field' ),
              ( ['in', 'optional'], VARIANT, 'Criteria1' ),
              ( ['in', 'optional'], XlAutoFilterOperator, 'Operator', 1 ),
              ( ['in', 'optional'], VARIANT, 'Criteria2' ),
              ( ['in', 'optional'], VARIANT, 'VisibleDropDown' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'AutoFit',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'AutoFormat',
              ( ['in', 'optional'], XlRangeAutoFormat, 'Format', 1 ),
              ( ['in', 'optional'], VARIANT, 'Number' ),
              ( ['in', 'optional'], VARIANT, 'Font' ),
              ( ['in', 'optional'], VARIANT, 'Alignment' ),
              ( ['in', 'optional'], VARIANT, 'Border' ),
              ( ['in', 'optional'], VARIANT, 'Pattern' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'AutoOutline',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_BorderAround',
              ( ['in', 'optional'], VARIANT, 'LineStyle' ),
              ( ['in', 'optional'], XlBorderWeight, 'Weight', 2 ),
              ( ['in', 'optional'], XlColorIndex, 'ColorIndex', -4105 ),
              ( ['in', 'optional'], VARIANT, 'Color' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Calculate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Cells',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearContents',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearNotes',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearOutline',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Column',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'ColumnDifferences',
              ( ['in'], VARIANT, 'Comparison' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Columns',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnWidth',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColumnWidth',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Consolidate',
              ( ['in', 'optional'], VARIANT, 'Sources' ),
              ( ['in', 'optional'], VARIANT, 'Function' ),
              ( ['in', 'optional'], VARIANT, 'TopRow' ),
              ( ['in', 'optional'], VARIANT, 'LeftColumn' ),
              ( ['in', 'optional'], VARIANT, 'CreateLinks' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyFromRecordset',
              ( ['in'], POINTER(IUnknown), 'Data' ),
              ( ['in', 'optional'], VARIANT, 'MaxRows' ),
              ( ['in', 'optional'], VARIANT, 'MaxColumns' ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'CreateNames',
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Bottom' ),
              ( ['in', 'optional'], VARIANT, 'Right' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'CreatePublisher',
              ( ['in', 'optional'], VARIANT, 'Edition' ),
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
              ( ['in', 'optional'], VARIANT, 'ContainsPICT' ),
              ( ['in', 'optional'], VARIANT, 'ContainsBIFF' ),
              ( ['in', 'optional'], VARIANT, 'ContainsRTF' ),
              ( ['in', 'optional'], VARIANT, 'ContainsVALU' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CurrentArray',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CurrentRegion',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'DataSeries',
              ( ['in', 'optional'], VARIANT, 'Rowcol' ),
              ( ['in', 'optional'], XlDataSeriesType, 'Type', -4132 ),
              ( ['in', 'optional'], XlDataSeriesDate, 'Date', 1 ),
              ( ['in', 'optional'], VARIANT, 'Step' ),
              ( ['in', 'optional'], VARIANT, 'Stop' ),
              ( ['in', 'optional'], VARIANT, 'Trend' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'RowIndex' ),
              ( ['in', 'optional'], VARIANT, 'ColumnIndex' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in', 'optional'], VARIANT, 'RowIndex' ),
              ( ['in', 'optional'], VARIANT, 'ColumnIndex' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in', 'optional'], VARIANT, 'Shift' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Dependents',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'DialogBox',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DirectDependents',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DirectPrecedents',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'EditionOptions',
              ( ['in'], XlEditionType, 'Type' ),
              ( ['in'], XlEditionOptionsOption, 'Option' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Reference' ),
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 1 ),
              ( ['in', 'optional'], XlPictureAppearance, 'ChartSize', 1 ),
              ( ['in', 'optional'], VARIANT, 'Format' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'End',
              ( ['in'], XlDirection, 'Direction' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EntireColumn',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EntireRow',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'FillDown',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'FillLeft',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'FillRight',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'FillUp',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Find',
              ( ['in'], VARIANT, 'What' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'LookIn' ),
              ( ['in', 'optional'], VARIANT, 'LookAt' ),
              ( ['in', 'optional'], VARIANT, 'SearchOrder' ),
              ( ['in', 'optional'], XlSearchDirection, 'SearchDirection', 1 ),
              ( ['in', 'optional'], VARIANT, 'MatchCase' ),
              ( ['in', 'optional'], VARIANT, 'MatchByte' ),
              ( ['in', 'optional'], VARIANT, 'SearchFormat' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'FindNext',
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'FindPrevious',
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaArray',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaArray',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'FormulaLabel',
              ( ['retval', 'out'], POINTER(XlFormulaLabel), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'FormulaLabel',
              ( ['in'], XlFormulaLabel, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaHidden',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaHidden',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1Local',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'FunctionWizard',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'GoalSeek',
              ( ['in'], VARIANT, 'Goal' ),
              ( ['in'], POINTER(Range), 'ChangingCell' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'End' ),
              ( ['in', 'optional'], VARIANT, 'By' ),
              ( ['in', 'optional'], VARIANT, 'Periods' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasArray',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasFormula',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Hidden',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Hidden',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IndentLevel',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IndentLevel',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'InsertIndent',
              ( ['in'], c_int, 'InsertAmount' )),
    COMMETHOD([], HRESULT, 'Insert',
              ( ['in', 'optional'], VARIANT, 'Shift' ),
              ( ['in', 'optional'], VARIANT, 'CopyOrigin' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'RowIndex' ),
              ( ['in', 'optional'], VARIANT, 'ColumnIndex' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'RowIndex' ),
              ( ['in', 'optional'], VARIANT, 'ColumnIndex' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Justify',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListHeaderRows',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'ListNames',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LocationInTable',
              ( ['retval', 'out'], POINTER(XlLocationInTable), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Merge',
              ( ['in', 'optional'], VARIANT, 'Across' )),
    COMMETHOD([], HRESULT, 'UnMerge'),
    COMMETHOD(['propget'], HRESULT, 'MergeArea',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MergeCells',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MergeCells',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'NavigateArrow',
              ( ['in', 'optional'], VARIANT, 'TowardPrecedent' ),
              ( ['in', 'optional'], VARIANT, 'ArrowNumber' ),
              ( ['in', 'optional'], VARIANT, 'LinkNumber' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Next',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'NoteText',
              ( ['in', 'optional'], VARIANT, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormatLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormatLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Offset',
              ( ['in', 'optional'], VARIANT, 'RowOffset' ),
              ( ['in', 'optional'], VARIANT, 'ColumnOffset' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OutlineLevel',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OutlineLevel',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageBreak',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PageBreak',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Parse',
              ( ['in', 'optional'], VARIANT, 'ParseLine' ),
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PasteSpecial',
              ( ['in', 'optional'], XlPasteType, 'Paste', -4104 ),
              ( ['in', 'optional'], XlPasteSpecialOperation, 'Operation', -4142 ),
              ( ['in', 'optional'], VARIANT, 'SkipBlanks' ),
              ( ['in', 'optional'], VARIANT, 'Transpose' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotItem',
              ( ['retval', 'out'], POINTER(POINTER(PivotItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotTable',
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Precedents',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrefixCharacter',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Previous',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'QueryTable',
              ( ['retval', 'out'], POINTER(POINTER(QueryTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Cell1' ),
              ( ['in', 'optional'], VARIANT, 'Cell2' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveSubtotal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Replace',
              ( ['in'], VARIANT, 'What' ),
              ( ['in'], VARIANT, 'Replacement' ),
              ( ['in', 'optional'], VARIANT, 'LookAt' ),
              ( ['in', 'optional'], VARIANT, 'SearchOrder' ),
              ( ['in', 'optional'], VARIANT, 'MatchCase' ),
              ( ['in', 'optional'], VARIANT, 'MatchByte' ),
              ( ['in', 'optional'], VARIANT, 'SearchFormat' ),
              ( ['in', 'optional'], VARIANT, 'ReplaceFormat' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Resize',
              ( ['in', 'optional'], VARIANT, 'RowSize' ),
              ( ['in', 'optional'], VARIANT, 'ColumnSize' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Row',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'RowDifferences',
              ( ['in'], VARIANT, 'Comparison' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowHeight',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RowHeight',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Rows',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Run',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Show',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ShowDependents',
              ( ['in', 'optional'], VARIANT, 'Remove' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowDetail',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowDetail',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'ShowErrors',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ShowPrecedents',
              ( ['in', 'optional'], VARIANT, 'Remove' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShrinkToFit',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShrinkToFit',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Sort',
              ( ['in', 'optional'], VARIANT, 'Key1' ),
              ( ['in', 'optional'], XlSortOrder, 'Order1', 1 ),
              ( ['in', 'optional'], VARIANT, 'Key2' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], XlSortOrder, 'Order2', 1 ),
              ( ['in', 'optional'], VARIANT, 'Key3' ),
              ( ['in', 'optional'], XlSortOrder, 'Order3', 1 ),
              ( ['in', 'optional'], XlYesNoGuess, 'Header', 2 ),
              ( ['in', 'optional'], VARIANT, 'OrderCustom' ),
              ( ['in', 'optional'], VARIANT, 'MatchCase' ),
              ( ['in', 'optional'], XlSortOrientation, 'Orientation', 2 ),
              ( ['in', 'optional'], XlSortMethod, 'SortMethod', 1 ),
              ( ['in', 'optional'], XlSortDataOption, 'DataOption1', 0 ),
              ( ['in', 'optional'], XlSortDataOption, 'DataOption2', 0 ),
              ( ['in', 'optional'], XlSortDataOption, 'DataOption3', 0 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SortSpecial',
              ( ['in', 'optional'], XlSortMethod, 'SortMethod', 1 ),
              ( ['in', 'optional'], VARIANT, 'Key1' ),
              ( ['in', 'optional'], XlSortOrder, 'Order1', 1 ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Key2' ),
              ( ['in', 'optional'], XlSortOrder, 'Order2', 1 ),
              ( ['in', 'optional'], VARIANT, 'Key3' ),
              ( ['in', 'optional'], XlSortOrder, 'Order3', 1 ),
              ( ['in', 'optional'], XlYesNoGuess, 'Header', 2 ),
              ( ['in', 'optional'], VARIANT, 'OrderCustom' ),
              ( ['in', 'optional'], VARIANT, 'MatchCase' ),
              ( ['in', 'optional'], XlSortOrientation, 'Orientation', 2 ),
              ( ['in', 'optional'], XlSortDataOption, 'DataOption1', 0 ),
              ( ['in', 'optional'], XlSortDataOption, 'DataOption2', 0 ),
              ( ['in', 'optional'], XlSortDataOption, 'DataOption3', 0 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SoundNote',
              ( ['retval', 'out'], POINTER(POINTER(SoundNote)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SpecialCells',
              ( ['in'], XlCellType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Value' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Style',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'SubscribeTo',
              ( ['in'], BSTR, 'Edition' ),
              ( ['in', 'optional'], XlSubscribeToFormat, 'Format', -4158 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Subtotal',
              ( ['in'], c_int, 'GroupBy' ),
              ( ['in'], XlConsolidationFunction, 'Function' ),
              ( ['in'], VARIANT, 'TotalList' ),
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'optional'], VARIANT, 'PageBreaks' ),
              ( ['in', 'optional'], XlSummaryRow, 'SummaryBelowData', 1 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Summary',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Table',
              ( ['in', 'optional'], VARIANT, 'RowInput' ),
              ( ['in', 'optional'], VARIANT, 'ColumnInput' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'TextToColumns',
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['in', 'optional'], XlTextParsingType, 'DataType', 1 ),
              ( ['in', 'optional'], XlTextQualifier, 'TextQualifier', 1 ),
              ( ['in', 'optional'], VARIANT, 'ConsecutiveDelimiter' ),
              ( ['in', 'optional'], VARIANT, 'Tab' ),
              ( ['in', 'optional'], VARIANT, 'Semicolon' ),
              ( ['in', 'optional'], VARIANT, 'Comma' ),
              ( ['in', 'optional'], VARIANT, 'Space' ),
              ( ['in', 'optional'], VARIANT, 'Other' ),
              ( ['in', 'optional'], VARIANT, 'OtherChar' ),
              ( ['in', 'optional'], VARIANT, 'FieldInfo' ),
              ( ['in', 'optional'], VARIANT, 'DecimalSeparator' ),
              ( ['in', 'optional'], VARIANT, 'ThousandsSeparator' ),
              ( ['in', 'optional'], VARIANT, 'TrailingMinusNumbers' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UseStandardHeight',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UseStandardHeight',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UseStandardWidth',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UseStandardWidth',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Validation',
              ( ['retval', 'out'], POINTER(POINTER(Validation)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['in', 'optional'], VARIANT, 'RangeValueDataType' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in', 'optional'], VARIANT, 'RangeValueDataType' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value2',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value2',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Worksheet',
              ( ['retval', 'out'], POINTER(POINTER(Worksheet)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WrapText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WrapText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'AddComment',
              ( ['in', 'optional'], VARIANT, 'Text' ),
              ( ['retval', 'out'], POINTER(POINTER(Comment)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Comment',
              ( ['retval', 'out'], POINTER(POINTER(Comment)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearComments'),
    COMMETHOD(['propget'], HRESULT, 'Phonetic',
              ( ['retval', 'out'], POINTER(POINTER(Phonetic)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormatConditions',
              ( ['retval', 'out'], POINTER(POINTER(FormatConditions)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Hyperlinks',
              ( ['retval', 'out'], POINTER(POINTER(Hyperlinks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Phonetics',
              ( ['retval', 'out'], POINTER(POINTER(Phonetics)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SetPhonetic'),
    COMMETHOD(['propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ID',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotCell',
              ( ['retval', 'out'], POINTER(POINTER(PivotCell)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Dirty'),
    COMMETHOD(['propget'], HRESULT, 'Errors',
              ( ['retval', 'out'], POINTER(POINTER(Errors)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'SmartTags',
              ( ['retval', 'out'], POINTER(POINTER(SmartTags)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Speak',
              ( ['in', 'optional'], VARIANT, 'SpeakDirection' ),
              ( ['in', 'optional'], VARIANT, 'SpeakFormulas' )),
    COMMETHOD([], HRESULT, 'PasteSpecial',
              ( ['in', 'optional'], XlPasteType, 'Paste', -4104 ),
              ( ['in', 'optional'], XlPasteSpecialOperation, 'Operation', -4142 ),
              ( ['in', 'optional'], VARIANT, 'SkipBlanks' ),
              ( ['in', 'optional'], VARIANT, 'Transpose' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowEdit',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListObject',
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'XPath',
              ( ['retval', 'out'], POINTER(POINTER(XPath)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerActions',
              ( ['retval', 'out'], POINTER(POINTER(Actions)), 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveDuplicates',
              ( ['in', 'optional'], VARIANT, 'Columns' ),
              ( ['in', 'optional'], XlYesNoGuess, 'Header', 2 )),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MDX',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], XlFixedFormatType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Quality' ),
              ( ['in', 'optional'], VARIANT, 'IncludeDocProperties' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'OpenAfterPublish' ),
              ( ['in', 'optional'], VARIANT, 'FixedFormatExtClassPtr' )),
    COMMETHOD(['propget'], HRESULT, 'CountLarge',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CalculateRowMajorOrder',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SparklineGroups',
              ( ['retval', 'out'], POINTER(POINTER(SparklineGroups)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearHyperlinks'),
    COMMETHOD(['propget'], HRESULT, 'DisplayFormat',
              ( ['retval', 'out'], POINTER(POINTER(DisplayFormat)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BorderAround',
              ( ['in', 'optional'], VARIANT, 'LineStyle' ),
              ( ['in', 'optional'], XlBorderWeight, 'Weight', 2 ),
              ( ['in', 'optional'], XlColorIndex, 'ColorIndex', -4105 ),
              ( ['in', 'optional'], VARIANT, 'Color' ),
              ( ['in', 'optional'], VARIANT, 'ThemeColor' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'AllocateChanges'),
    COMMETHOD([], HRESULT, 'DiscardChanges'),
    COMMETHOD([], HRESULT, 'FlashFill'),
]
################################################################
## code template for IRange implementation
##class IRange_Impl(object):
##    def ColumnDifferences(self, Comparison):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RowHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormatLocal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Phonetics(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def EntireRow(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Errors(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self, Start, End, By, Periods):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SparklineGroups(self):
##        '-no docstring-'
##        #return RHS
##
##    def DialogBox(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Precedents(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    def TextToColumns(self, Destination, DataType, TextQualifier, ConsecutiveDelimiter, Tab, Semicolon, Comma, Space, Other, OtherChar, FieldInfo, DecimalSeparator, ThousandsSeparator, TrailingMinusNumbers):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WrapText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DirectDependents(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearComments(self):
##        '-no docstring-'
##        #return 
##
##    def AdvancedFilter(self, Action, CriteriaRange, CopyToRange, Unique):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ServerActions(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetPhonetic(self):
##        '-no docstring-'
##        #return 
##
##    def NavigateArrow(self, TowardPrecedent, ArrowNumber, LinkNumber):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DirectPrecedents(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Areas(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotItem(self):
##        '-no docstring-'
##        #return RHS
##
##    def DiscardChanges(self):
##        '-no docstring-'
##        #return 
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Cells(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearOutline(self):
##        '-no docstring-'
##        #return RHS
##
##    def Merge(self, Across):
##        '-no docstring-'
##        #return 
##
##    @property
##    def LocationInTable(self):
##        '-no docstring-'
##        #return RHS
##
##    def SubscribeTo(self, Edition, Format):
##        '-no docstring-'
##        #return RHS
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def EditionOptions(self, Type, Option, Name, Reference, Appearance, ChartSize, Format):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Validation(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Dependents(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AddressLocal(self, RowAbsolute, ColumnAbsolute, ReferenceStyle, External, RelativeTo):
##        '-no docstring-'
##        #return RHS
##
##    def ApplyOutlineStyles(self):
##        '-no docstring-'
##        #return RHS
##
##    def Show(self):
##        '-no docstring-'
##        #return RHS
##
##    def SpecialCells(self, Type, Value):
##        '-no docstring-'
##        #return RHS
##
##    def FillRight(self):
##        '-no docstring-'
##        #return RHS
##
##    def Parse(self, ParseLine, Destination):
##        '-no docstring-'
##        #return RHS
##
##    def RowDifferences(self, Comparison):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Text(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CountLarge(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaHidden = property(_get, _set, doc = _set.__doc__)
##
##    def Find(self, What, After, LookIn, LookAt, SearchOrder, SearchDirection, MatchCase, MatchByte, SearchFormat):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def XPath(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def End(self, Direction):
##        '-no docstring-'
##        #return RHS
##
##    def ListNames(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def QueryTable(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyFromRecordset(self, Data, MaxRows, MaxColumns):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MergeArea(self):
##        '-no docstring-'
##        #return RHS
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, RowIndex, ColumnIndex, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RowIndex, ColumnIndex, lcid, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def BorderAround(self, LineStyle, Weight, ColorIndex, Color, ThemeColor):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ListHeaderRows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def Run(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    def InsertIndent(self, InsertAmount):
##        '-no docstring-'
##        #return 
##
##    def ExportAsFixedFormat(self, Type, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From, To, OpenAfterPublish, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    def CreatePublisher(self, Edition, Appearance, ContainsPICT, ContainsBIFF, ContainsRTF, ContainsVALU):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLabel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OutlineLevel = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CurrentArray(self):
##        '-no docstring-'
##        #return RHS
##
##    def FindPrevious(self, After):
##        '-no docstring-'
##        #return RHS
##
##    def RemoveDuplicates(self, Columns, Header):
##        '-no docstring-'
##        #return 
##
##    def FunctionWizard(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseStandardWidth = property(_get, _set, doc = _set.__doc__)
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotField(self):
##        '-no docstring-'
##        #return RHS
##
##    def CalculateRowMajorOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def AutoOutline(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName):
##        '-no docstring-'
##        #return RHS
##
##    def FindNext(self, After):
##        '-no docstring-'
##        #return RHS
##
##    def AllocateChanges(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Range(self, Cell1, Cell2):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Phonetic(self):
##        '-no docstring-'
##        #return RHS
##
##    def FlashFill(self):
##        '-no docstring-'
##        #return 
##
##    def UnMerge(self):
##        '-no docstring-'
##        #return 
##
##    def Justify(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Comment(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FormatConditions(self):
##        '-no docstring-'
##        #return RHS
##
##    def Replace(self, What, Replacement, LookAt, SearchOrder, MatchCase, MatchByte, SearchFormat, ReplaceFormat):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def SortSpecial(self, SortMethod, Key1, Order1, Type, Key2, Order2, Key3, Order3, Header, OrderCustom, MatchCase, Orientation, DataOption1, DataOption2, DataOption3):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Row(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def Cut(self, Destination):
##        '-no docstring-'
##        #return RHS
##
##    def ClearContents(self):
##        '-no docstring-'
##        #return RHS
##
##    def Calculate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColumnWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SmartTags(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShrinkToFit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    def AutoFormat(self, Format, Number, Font, Alignment, Border, Pattern, Width):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Columns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasArray(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearHyperlinks(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DisplayFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def AutoComplete(self, String):
##        '-no docstring-'
##        #return RHS
##
##    def NoteText(self, Text, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MDX(self):
##        '-no docstring-'
##        #return RHS
##
##    def ShowErrors(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IndentLevel = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self, Shift):
##        '-no docstring-'
##        #return RHS
##
##    def ClearNotes(self):
##        '-no docstring-'
##        #return RHS
##
##    def DataSeries(self, Rowcol, Type, Date, Step, Stop, Trend):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowEdit(self):
##        '-no docstring-'
##        #return RHS
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Offset(self, RowOffset, ColumnOffset):
##        '-no docstring-'
##        #return RHS
##
##    def FillLeft(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Summary(self):
##        '-no docstring-'
##        #return RHS
##
##    def AutoFilter(self, Field, Criteria1, Operator, Criteria2, VisibleDropDown):
##        '-no docstring-'
##        #return RHS
##
##    def AutoFill(self, Destination, Type):
##        '-no docstring-'
##        #return RHS
##
##    def Activate(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dirty(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyNames(self, Names, IgnoreRelativeAbsolute, UseRowColumnNames, OmitColumn, OmitRow, Order, AppendLast):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    def Consolidate(self, Sources, Function, TopRow, LeftColumn, CreateLinks):
##        '-no docstring-'
##        #return RHS
##
##    def ShowDependents(self, Remove):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowDetail = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Subtotal(self, GroupBy, Function, TotalList, Replace, PageBreaks, SummaryBelowData):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def RemoveSubtotal(self):
##        '-no docstring-'
##        #return RHS
##
##    def ShowPrecedents(self, Remove):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Rows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def AutoFit(self):
##        '-no docstring-'
##        #return RHS
##
##    def _PasteSpecial(self, Paste, Operation, SkipBlanks, Transpose):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Value2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PrefixCharacter(self):
##        '-no docstring-'
##        #return RHS
##
##    def Sort(self, Key1, Order1, Key2, Type, Order2, Key3, Order3, Header, OrderCustom, MatchCase, Orientation, SortMethod, DataOption1, DataOption2, DataOption3):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaArray = property(_get, _set, doc = _set.__doc__)
##
##    def PasteSpecial(self, Paste, Operation, SkipBlanks, Transpose):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def EntireColumn(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CurrentRegion(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Address(self, RowAbsolute, ColumnAbsolute, ReferenceStyle, External, RelativeTo, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Destination):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasFormula(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Resize(self, RowSize, ColumnSize):
##        '-no docstring-'
##        #return RHS
##
##    def Insert(self, Shift, CopyOrigin):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotTable(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Worksheet(self):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, RowIndex, ColumnIndex, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RowIndex, ColumnIndex, lcid, RHS):
##        '-no docstring-'
##    Item = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PageBreak = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, RangeValueDataType, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RangeValueDataType, lcid, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def AddComment(self, Text):
##        '-no docstring-'
##        #return RHS
##
##    def Table(self, RowInput, ColumnInput):
##        '-no docstring-'
##        #return RHS
##
##    def FillUp(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ID = property(_get, _set, doc = _set.__doc__)
##
##    def _BorderAround(self, LineStyle, Weight, ColorIndex, Color):
##        '-no docstring-'
##        #return RHS
##
##    def CreateNames(self, Top, Left, Bottom, Right):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseStandardHeight = property(_get, _set, doc = _set.__doc__)
##
##    def GoalSeek(self, Goal, ChangingCell):
##        '-no docstring-'
##        #return RHS
##
##    def FillDown(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ListObject(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MergeCells = property(_get, _set, doc = _set.__doc__)
##
##    def Speak(self, SpeakDirection, SpeakFormulas):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SoundNote(self):
##        '-no docstring-'
##        #return RHS
##

class IName(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IName._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Category',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Category',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CategoryLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CategoryLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'MacroType',
              ( ['retval', 'out'], POINTER(XlXLMMacroType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MacroType',
              ( ['in'], XlXLMMacroType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefersTo',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefersTo',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShortcutKey',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShortcutKey',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NameLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NameLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefersToLocal',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefersToLocal',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefersToR1C1',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefersToR1C1',
              ( ['in', 'lcid'], c_int, 'lcidIn', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefersToR1C1Local',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefersToR1C1Local',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefersToRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Comment',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Comment',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WorkbookParameter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WorkbookParameter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ValidWorkbookParameter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IName implementation
##class IName_Impl(object):
##    def _get(self, lcidIn):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcidIn, RHS):
##        '-no docstring-'
##    Category = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcidIn):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcidIn, RHS):
##        '-no docstring-'
##    RefersToR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NameLocal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CategoryLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcidIn):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcidIn, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcidIn):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcidIn, RHS):
##        '-no docstring-'
##    RefersTo = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MacroType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WorkbookParameter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefersToR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefersToLocal = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Comment = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RefersToRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ValidWorkbookParameter(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShortcutKey = property(_get, _set, doc = _set.__doc__)
##

class IBorder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020854-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IBorder._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorIndex',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LineStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LineStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Weight',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Weight',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeColor',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeColor',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for IBorder implementation
##class IBorder_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Weight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlClipboardFormat'
xlClipboardFormatBIFF12 = 63
xlClipboardFormatBIFF = 8
xlClipboardFormatBIFF2 = 18
xlClipboardFormatBIFF3 = 20
xlClipboardFormatBIFF4 = 30
xlClipboardFormatBinary = 15
xlClipboardFormatBitmap = 9
xlClipboardFormatCGM = 13
xlClipboardFormatCSV = 5
xlClipboardFormatDIF = 4
xlClipboardFormatDspText = 12
xlClipboardFormatEmbeddedObject = 21
xlClipboardFormatEmbedSource = 22
xlClipboardFormatLink = 11
xlClipboardFormatLinkSource = 23
xlClipboardFormatLinkSourceDesc = 32
xlClipboardFormatMovie = 24
xlClipboardFormatNative = 14
xlClipboardFormatObjectDesc = 31
xlClipboardFormatObjectLink = 19
xlClipboardFormatOwnerLink = 17
xlClipboardFormatPICT = 2
xlClipboardFormatPrintPICT = 3
xlClipboardFormatRTF = 7
xlClipboardFormatScreenPICT = 29
xlClipboardFormatStandardFont = 28
xlClipboardFormatStandardScale = 27
xlClipboardFormatSYLK = 6
xlClipboardFormatTable = 16
xlClipboardFormatText = 0
xlClipboardFormatToolFace = 25
xlClipboardFormatToolFacePICT = 26
xlClipboardFormatVALU = 1
xlClipboardFormatWK1 = 10
XlClipboardFormat = c_int # enum
class IActions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024490-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IActions._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Action)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Action)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IActions implementation
##class IActions_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

CalloutFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'AutomaticLength'),
    COMMETHOD([dispid(11)], HRESULT, 'CustomDrop',
              ( ['in'], c_float, 'Drop' )),
    COMMETHOD([dispid(12)], HRESULT, 'CustomLength',
              ( ['in'], c_float, 'Length' )),
    COMMETHOD([dispid(13)], HRESULT, 'PresetDrop',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutDropType, 'DropType' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Accent',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Accent' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Accent',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Accent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Angle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutAngleType), 'Angle' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'Angle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutAngleType, 'Angle' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'AutoAttach',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'AutoAttach' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'AutoAttach',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'AutoAttach' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'AutoLength',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'AutoLength' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'Border' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'Border',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'Border' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Drop',
              ( ['retval', 'out'], POINTER(c_float), 'Drop' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'DropType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutDropType), 'DropType' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'Gap',
              ( ['retval', 'out'], POINTER(c_float), 'Gap' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'Gap',
              ( ['in'], c_float, 'Gap' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Length',
              ( ['retval', 'out'], POINTER(c_float), 'Length' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutType), 'Type' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'Type',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutType, 'Type' )),
]
################################################################
## code template for CalloutFormat implementation
##class CalloutFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Type
##    def _set(self, Type):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Angle
##    def _set(self, Angle):
##        '-no docstring-'
##    Angle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    @property
##    def AutoLength(self):
##        '-no docstring-'
##        #return AutoLength
##
##    def PresetDrop(self, DropType):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return AutoAttach
##    def _set(self, AutoAttach):
##        '-no docstring-'
##    AutoAttach = property(_get, _set, doc = _set.__doc__)
##
##    def AutomaticLength(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Drop(self):
##        '-no docstring-'
##        #return Drop
##
##    def _get(self):
##        '-no docstring-'
##        #return Accent
##    def _set(self, Accent):
##        '-no docstring-'
##    Accent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Gap
##    def _set(self, Gap):
##        '-no docstring-'
##    Gap = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return Length
##
##    def _get(self):
##        '-no docstring-'
##        #return Border
##    def _set(self, Border):
##        '-no docstring-'
##    Border = property(_get, _set, doc = _set.__doc__)
##
##    def CustomDrop(self, Drop):
##        '-no docstring-'
##        #return 
##
##    def CustomLength(self, Length):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DropType(self):
##        '-no docstring-'
##        #return DropType
##

class ScrollBar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020885-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ScrollBar._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(615), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(486), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(110), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(110), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(620), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(842), 'propget'], c_int, 'Max'),
    DISPMETHOD([dispid(842), 'propput'], None, 'Max',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(843), 'propget'], c_int, 'Min'),
    DISPMETHOD([dispid(843), 'propput'], None, 'Min',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(844), 'propget'], c_int, 'SmallChange'),
    DISPMETHOD([dispid(844), 'propput'], None, 'SmallChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(845), 'propget'], c_int, 'LargeChange'),
    DISPMETHOD([dispid(845), 'propput'], None, 'LargeChange',
               ( ['in'], c_int, 'rhs' )),
]
class IScrollBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020886-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IScrollBars._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Max',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Max',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Min',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Min',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmallChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SmallChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LargeChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LargeChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(ScrollBar)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IScrollBars implementation
##class IScrollBars_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Min = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Max = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SmallChange = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LargeChange = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IDrawingObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDrawingObjects._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy28'),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'AddItem',
              ( ['in'], VARIANT, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadLength',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadLength',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadWidth',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadWidth',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CancelButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CancelButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DismissButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DismissButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DropDownLines',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DropDownLines',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy47'),
    COMMETHOD(['propget'], HRESULT, 'HelpButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HelpButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InputType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InputType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LargeChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LargeChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy54'),
    COMMETHOD([], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy56'),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Max',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Max',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Min',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Min',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MultiLine',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiLine',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MultiSelect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiSelect',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveAllItems',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveItem',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Reshape',
              ( ['in'], c_int, 'Vertex' ),
              ( ['in'], VARIANT, 'Insert' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmallChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SmallChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Vertices',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'LinkCombo',
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IDrawingObjects implementation
##class IDrawingObjects_Impl(object):
##    def RemoveAllItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Min = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiSelect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultButton = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy56(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy54(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DropDownLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HelpButton = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Reshape(self, Vertex, Insert, Left, Top):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Max = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InputType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayVerticalScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SmallChange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DismissButton = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadLength = property(_get, _set, doc = _set.__doc__)
##
##    def Selected(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def LinkCombo(self, Link):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def List(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CancelButton = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def Vertices(self, Index1, Index2):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy28(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiLine = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy47(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def AddItem(self, Text, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LargeChange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveItem(self, Index, Count):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IconSetCondition(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024497-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
IconSetCondition._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2625), 'propget'], VARIANT_BOOL, 'StopIfTrue'),
    DISPMETHOD([dispid(2626), 'propget'], POINTER(Range), 'AppliesTo'),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(2627)], None, 'ModifyAppliesToRange',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2631), 'propget'], VARIANT_BOOL, 'PTCondition'),
    DISPMETHOD([dispid(2615), 'propget'], XlPivotConditionScope, 'ScopeType'),
    DISPMETHOD([dispid(2615), 'propput'], None, 'ScopeType',
               ( ['in'], XlPivotConditionScope, 'rhs' )),
    DISPMETHOD([dispid(2629)], None, 'SetFirstPriority'),
    DISPMETHOD([dispid(2630)], None, 'SetLastPriority'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(2723), 'propget'], VARIANT_BOOL, 'ReverseOrder'),
    DISPMETHOD([dispid(2723), 'propput'], None, 'ReverseOrder',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2724), 'propget'], VARIANT_BOOL, 'PercentileValues'),
    DISPMETHOD([dispid(2724), 'propput'], None, 'PercentileValues',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2725), 'propget'], VARIANT_BOOL, 'ShowIconOnly'),
    DISPMETHOD([dispid(2725), 'propput'], None, 'ShowIconOnly',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2726), 'propget'], VARIANT, 'IconSet'),
    DISPMETHOD([dispid(2726), 'propput'], None, 'IconSet',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(2727), 'propget'], POINTER(IconCriteria), 'IconCriteria'),
]
class ILinearGradient(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AF-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILinearGradient._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorStops',
              ( ['retval', 'out'], POINTER(POINTER(ColorStops)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Degree',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Degree',
              ( ['in'], c_double, 'RHS' )),
]
################################################################
## code template for ILinearGradient implementation
##class ILinearGradient_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Degree = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ColorStops(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IButtons(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IButtons._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CancelButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CancelButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DismissButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DismissButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HelpButton',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HelpButton',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Button)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IButtons implementation
##class IButtons_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultButton = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HelpButton = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DismissButton = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CancelButton = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ISeries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISeries._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AxisGroup',
              ( ['retval', 'out'], POINTER(XlAxisGroup), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AxisGroup',
              ( ['in'], XlAxisGroup, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'DataLabels',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ErrorBar',
              ( ['in'], XlErrorBarDirection, 'Direction' ),
              ( ['in'], XlErrorBarInclude, 'Include' ),
              ( ['in'], XlErrorBarType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Amount' ),
              ( ['in', 'optional'], VARIANT, 'MinusValues' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ErrorBars',
              ( ['retval', 'out'], POINTER(POINTER(ErrorBars)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Explosion',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1Local',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasDataLabels',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasDataLabels',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasErrorBars',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasErrorBars',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerStyle',
              ( ['retval', 'out'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(XlChartPictureType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PlotOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PlotOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Points',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Smooth',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Smooth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Trendlines',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ChartType',
              ( ['retval', 'out'], POINTER(XlChartType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ChartType',
              ( ['in'], XlChartType, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'ApplyCustomType',
              ( ['in'], XlChartType, 'ChartType' )),
    COMMETHOD(['propget'], HRESULT, 'Values',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Values',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'XValues',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'XValues',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BubbleSizes',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BubbleSizes',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BarShape',
              ( ['retval', 'out'], POINTER(XlBarShape), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BarShape',
              ( ['in'], XlBarShape, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToSides',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToFront',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToEnd',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Has3DEffect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasLeaderLines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasLeaderLines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LeaderLines',
              ( ['retval', 'out'], POINTER(POINTER(LeaderLines)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PlotColorIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertColorIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertColorIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsFiltered',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IsFiltered',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for ISeries implementation
##class ISeries_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AxisGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PlotColorIndex(self):
##        '-no docstring-'
##        #return RHS
##
##    def Trendlines(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def DataLabels(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataLabels = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BubbleSizes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasErrorBars = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IsFiltered = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    XValues = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Smooth = property(_get, _set, doc = _set.__doc__)
##
##    def ErrorBar(self, Direction, Include, Type, Amount, MinusValues):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasLeaderLines = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def Points(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Values = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BarShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PlotOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyCustomType(self, ChartType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def LeaderLines(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ErrorBars(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class IPivotValueCell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CF-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotValueCell._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotCell',
              ( ['retval', 'out'], POINTER(POINTER(PivotCell)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ShowDetail'),
    COMMETHOD(['propget'], HRESULT, 'ServerActions',
              ( ['retval', 'out'], POINTER(POINTER(Actions)), 'RHS' )),
]
################################################################
## code template for IPivotValueCell implementation
##class IPivotValueCell_Impl(object):
##    @property
##    def PivotCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def ShowDetail(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ServerActions(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##

class ISlicerCacheLevel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C6-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicerCacheLevel._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SlicerItems',
              ( ['retval', 'out'], POINTER(POINTER(SlicerItems)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Ordinal',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CrossFilterType',
              ( ['retval', 'out'], POINTER(XlSlicerCrossFilterType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CrossFilterType',
              ( ['in'], XlSlicerCrossFilterType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SortItems',
              ( ['retval', 'out'], POINTER(XlSlicerSort), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SortItems',
              ( ['in'], XlSlicerSort, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleSlicerItemsList',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for ISlicerCacheLevel implementation
##class ISlicerCacheLevel_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Ordinal(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VisibleSlicerItemsList(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SlicerItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SortItems = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CrossFilterType = property(_get, _set, doc = _set.__doc__)
##

class IDropDowns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDropDowns._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddItem',
              ( ['in'], VARIANT, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy31'),
    COMMETHOD(['propget'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy33'),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy36'),
    COMMETHOD([], HRESULT, 'RemoveAllItems',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveItem',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DropDownLines',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DropDownLines',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['in', 'optional'], VARIANT, 'Editable' ),
              ( ['retval', 'out'], POINTER(POINTER(DropDown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IDropDowns implementation
##class IDropDowns_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    Selected = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveAllItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy31(self):
##        '-no docstring-'
##        #return 
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy36(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DropDownLines = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    List = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def AddItem(self, Text, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Left, Top, Width, Height, Editable):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy33(self):
##        '-no docstring-'
##        #return 
##
##    def RemoveItem(self, Index, Count):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IErrorBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208CE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IErrorBars._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EndStyle',
              ( ['retval', 'out'], POINTER(XlEndStyleCap), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EndStyle',
              ( ['in'], XlEndStyleCap, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IErrorBars implementation
##class IErrorBars_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EndStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class IModelColumnName(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E5-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelColumnName._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
]
################################################################
## code template for IModelColumnName implementation
##class IModelColumnName_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TableName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IWorksheetView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024487-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWorksheetView._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayGridlines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayGridlines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayFormulas',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayFormulas',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayHeadings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayHeadings',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayOutline',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayOutline',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayZeros',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayZeros',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IWorksheetView implementation
##class IWorksheetView_Impl(object):
##    @property
##    def Sheet(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayHeadings = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayZeros = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayFormulas = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayOutline = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayGridlines = property(_get, _set, doc = _set.__doc__)
##

class IDialogSheets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDialogSheets._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(POINTER(DialogSheet)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy7'),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'HPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(HPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VPageBreaks',
              ( ['retval', 'out'], POINTER(POINTER(VPageBreaks)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    COMMETHOD([], HRESULT, 'Add2',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['in', 'optional'], VARIANT, 'NewLayout' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IDialogSheets implementation
##class IDialogSheets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Before, After, Count):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy7(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Before, After, Count, NewLayout):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VPageBreaks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##

class IDocEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024411-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDocEvents._methods_ = [
    COMMETHOD([], HRESULT, 'SelectionChange',
              ( ['in'], POINTER(Range), 'Target' )),
    COMMETHOD([], HRESULT, 'BeforeDoubleClick',
              ( ['in'], POINTER(Range), 'Target' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'BeforeRightClick',
              ( ['in'], POINTER(Range), 'Target' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD([], HRESULT, 'Deactivate'),
    COMMETHOD([], HRESULT, 'Calculate'),
    COMMETHOD([], HRESULT, 'Change',
              ( ['in'], POINTER(Range), 'Target' )),
    COMMETHOD([], HRESULT, 'FollowHyperlink',
              ( ['in'], POINTER(Hyperlink), 'Target' )),
    COMMETHOD([], HRESULT, 'PivotTableUpdate',
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'PivotTableAfterValueChange',
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], POINTER(Range), 'TargetRange' )),
    COMMETHOD([], HRESULT, 'PivotTableBeforeAllocateChanges',
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'PivotTableBeforeCommitChanges',
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'PivotTableBeforeDiscardChanges',
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' )),
    COMMETHOD([], HRESULT, 'PivotTableChangeSync',
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'LensGalleryRenderComplete'),
    COMMETHOD([], HRESULT, 'TableUpdate',
              ( ['in'], POINTER(TableObject), 'Target' )),
    COMMETHOD([], HRESULT, 'BeforeDelete'),
]
################################################################
## code template for IDocEvents implementation
##class IDocEvents_Impl(object):
##    def PivotTableBeforeCommitChanges(self, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return Cancel
##
##    def PivotTableUpdate(self, Target):
##        '-no docstring-'
##        #return 
##
##    def BeforeDoubleClick(self, Target):
##        '-no docstring-'
##        #return Cancel
##
##    def Calculate(self):
##        '-no docstring-'
##        #return 
##
##    def Deactivate(self):
##        '-no docstring-'
##        #return 
##
##    def TableUpdate(self, Target):
##        '-no docstring-'
##        #return 
##
##    def LensGalleryRenderComplete(self):
##        '-no docstring-'
##        #return 
##
##    def PivotTableBeforeAllocateChanges(self, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return Cancel
##
##    def PivotTableAfterValueChange(self, TargetPivotTable, TargetRange):
##        '-no docstring-'
##        #return 
##
##    def SelectionChange(self, Target):
##        '-no docstring-'
##        #return 
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def BeforeDelete(self):
##        '-no docstring-'
##        #return 
##
##    def PivotTableBeforeDiscardChanges(self, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return 
##
##    def FollowHyperlink(self, Target):
##        '-no docstring-'
##        #return 
##
##    def BeforeRightClick(self, Target):
##        '-no docstring-'
##        #return Cancel
##
##    def PivotTableChangeSync(self, Target):
##        '-no docstring-'
##        #return 
##
##    def Change(self, Target):
##        '-no docstring-'
##        #return 
##

class PivotCaches(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotCaches._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(PivotCache), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(PivotCache), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181), 'hidden'], POINTER(PivotCache), 'Add',
               ( ['in'], XlPivotTableSourceType, 'SourceType' ),
               ( ['in', 'optional'], VARIANT, 'SourceData' )),
    DISPMETHOD([dispid(1896)], POINTER(PivotCache), 'Create',
               ( ['in'], XlPivotTableSourceType, 'SourceType' ),
               ( ['in', 'optional'], VARIANT, 'SourceData' ),
               ( ['in', 'optional'], VARIANT, 'Version' )),
]
class ICategoryCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICategoryCollection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ChartCategory)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ChartCategory)), 'RHS' )),
]
################################################################
## code template for ICategoryCollection implementation
##class ICategoryCollection_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IScenarios(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020896-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IScenarios._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], VARIANT, 'ChangingCells' ),
              ( ['in', 'optional'], VARIANT, 'Values' ),
              ( ['in', 'optional'], VARIANT, 'Comment' ),
              ( ['in', 'optional'], VARIANT, 'Locked' ),
              ( ['in', 'optional'], VARIANT, 'Hidden' ),
              ( ['retval', 'out'], POINTER(POINTER(Scenario)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'CreateSummary',
              ( ['in', 'optional'], XlSummaryReportType, 'ReportType', 1 ),
              ( ['in', 'optional'], VARIANT, 'ResultCells' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Scenario)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Merge',
              ( ['in'], VARIANT, 'Source' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IScenarios implementation
##class IScenarios_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def CreateSummary(self, ReportType, ResultCells):
##        '-no docstring-'
##        #return RHS
##
##    def Merge(self, Source):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, ChangingCells, Values, Comment, Locked, Hidden):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##

class OptionButtons(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020882-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
OptionButtons._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(833), 'propget'], POINTER(GroupBox), 'GroupBox'),
    DISPMETHOD([dispid(181)], POINTER(OptionButton), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IComment(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024427-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IComment._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Author',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Text',
              ( ['in', 'optional'], VARIANT, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Overwrite' ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Next',
              ( ['retval', 'out'], POINTER(POINTER(Comment)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Previous',
              ( ['retval', 'out'], POINTER(POINTER(Comment)), 'RHS' )),
]
################################################################
## code template for IComment implementation
##class IComment_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Text(self, Text, Start, Overwrite):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Author(self):
##        '-no docstring-'
##        #return RHS
##
##    def Next(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Previous(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IPivotCache(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002441C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotCache._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BackgroundQuery',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BackgroundQuery',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Connection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MemoryUsed',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OptimizeCache',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OptimizeCache',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RecordCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Refresh'),
    COMMETHOD(['propget'], HRESULT, 'RefreshDate',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshOnFileOpen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshOnFileOpen',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Sql',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Sql',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SavePassword',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SavePassword',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceData',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceData',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandType',
              ( ['retval', 'out'], POINTER(XlCmdType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandType',
              ( ['in'], XlCmdType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'QueryType',
              ( ['retval', 'out'], POINTER(XlQueryType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaintainConnection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MaintainConnection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshPeriod',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshPeriod',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Recordset',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Recordset',
              ( ['in'], POINTER(IDispatch), 'RHS' )),
    COMMETHOD([], HRESULT, 'ResetTimer'),
    COMMETHOD(['propget'], HRESULT, 'LocalConnection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LocalConnection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'CreatePivotTable',
              ( ['in'], VARIANT, 'TableDestination' ),
              ( ['in', 'optional'], VARIANT, 'TableName' ),
              ( ['in', 'optional'], VARIANT, 'ReadData' ),
              ( ['in', 'optional'], VARIANT, 'DefaultVersion' ),
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UseLocalConnection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UseLocalConnection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ADOConnection',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsConnected',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'MakeConnection'),
    COMMETHOD(['propget'], HRESULT, 'OLAP',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceType',
              ( ['retval', 'out'], POINTER(XlPivotTableSourceType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MissingItemsLimit',
              ( ['retval', 'out'], POINTER(XlPivotTableMissingItems), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MissingItemsLimit',
              ( ['in'], XlPivotTableMissingItems, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceConnectionFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceConnectionFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceDataFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RobustConnect',
              ( ['retval', 'out'], POINTER(XlRobustConnect), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RobustConnect',
              ( ['in'], XlRobustConnect, 'RHS' )),
    COMMETHOD([], HRESULT, 'SaveAsODC',
              ( ['in'], BSTR, 'ODCFileName' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'Keywords' )),
    COMMETHOD(['propget'], HRESULT, 'WorkbookConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Version',
              ( ['retval', 'out'], POINTER(XlPivotTableVersionList), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UpgradeOnRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UpgradeOnRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'CreatePivotChart',
              ( ['in'], VARIANT, 'ChartDestination' ),
              ( ['in', 'optional'], VARIANT, 'XlChartType' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
]
################################################################
## code template for IPivotCache implementation
##class IPivotCache_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshPeriod = property(_get, _set, doc = _set.__doc__)
##
##    def MakeConnection(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RecordCount(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceDataFile(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseLocalConnection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ADOConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsConnected(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshOnFileOpen = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MemoryUsed(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceData = property(_get, _set, doc = _set.__doc__)
##
##    def CreatePivotChart(self, ChartDestination, XlChartType, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RefreshDate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BackgroundQuery = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OLAP(self):
##        '-no docstring-'
##        #return RHS
##
##    def CreatePivotTable(self, TableDestination, TableName, ReadData, DefaultVersion):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LocalConnection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Sql = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UpgradeOnRefresh = property(_get, _set, doc = _set.__doc__)
##
##    def ResetTimer(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RefreshName(self):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Connection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WorkbookConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MissingItemsLimit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def QueryType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RobustConnect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Recordset(self, RHS):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SavePassword = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableRefresh = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaintainConnection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Version(self):
##        '-no docstring-'
##        #return RHS
##
##    def SaveAsODC(self, ODCFileName, Description, Keywords):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OptimizeCache = property(_get, _set, doc = _set.__doc__)
##

class SeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086C-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SeriesCollection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(Series), 'Add',
               ( ['in'], VARIANT, 'Source' ),
               ( ['in', 'optional'], XlRowCol, 'Rowcol', -4105 ),
               ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
               ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(227)], VARIANT, 'Extend',
               ( ['in'], VARIANT, 'Source' ),
               ( ['in', 'optional'], VARIANT, 'Rowcol' ),
               ( ['in', 'optional'], VARIANT, 'CategoryLabels' )),
    DISPMETHOD([dispid(170)], POINTER(Series), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(211)], VARIANT, 'Paste',
               ( ['in', 'optional'], XlRowCol, 'Rowcol', -4105 ),
               ( ['in', 'optional'], VARIANT, 'SeriesLabels' ),
               ( ['in', 'optional'], VARIANT, 'CategoryLabels' ),
               ( ['in', 'optional'], VARIANT, 'Replace' ),
               ( ['in', 'optional'], VARIANT, 'NewSeries' )),
    DISPMETHOD([dispid(1117)], POINTER(Series), 'NewSeries'),
    DISPMETHOD([dispid(0)], POINTER(Series), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class ISlicerCaches(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicerCaches._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerCache)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerCache)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Add',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in'], VARIANT, 'SourceField' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerCache)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add2',
              ( ['in'], VARIANT, 'Source' ),
              ( ['in'], VARIANT, 'SourceField' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'SlicerCacheType' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerCache)), 'RHS' )),
]
################################################################
## code template for ISlicerCaches implementation
##class ISlicerCaches_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add2(self, Source, SourceField, Name, SlicerCacheType):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Source, SourceField, Name):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IColorScale(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024493-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IColorScale._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StopIfTrue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppliesTo',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'SetFirstPriority'),
    COMMETHOD([], HRESULT, 'SetLastPriority'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'ModifyAppliesToRange',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD(['propget'], HRESULT, 'PTCondition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScopeType',
              ( ['retval', 'out'], POINTER(XlPivotConditionScope), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScopeType',
              ( ['in'], XlPivotConditionScope, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorScaleCriteria',
              ( ['retval', 'out'], POINTER(POINTER(ColorScaleCriteria)), 'RHS' )),
]
################################################################
## code template for IColorScale implementation
##class IColorScale_Impl(object):
##    def SetFirstPriority(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PTCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColorScaleCriteria(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AppliesTo(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def StopIfTrue(self):
##        '-no docstring-'
##        #return RHS
##
##    def ModifyAppliesToRange(self, Range):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetLastPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScopeType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class CategoryCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DE-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
CategoryCollection._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(ChartCategory), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0)], POINTER(ChartCategory), '_Default',
               ( ['in'], VARIANT, 'Index' )),
]
class ISparkColor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BD-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISparkColor._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(POINTER(FormatColor)), 'RHS' )),
]
################################################################
## code template for ISparkColor implementation
##class ISparkColor_Impl(object):
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IDownBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C6-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDownBars._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IDownBars implementation
##class IDownBars_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class IGroupObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020899-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IGroupObjects._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy27'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy28'),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy30'),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadLength',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadLength',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadWidth',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadWidth',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy36'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy37'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy38'),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy41'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy42'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy43'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy44'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy45'),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy47'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy48'),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy50'),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy52'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy53'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy54'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy55'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy56'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy57'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy58'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy59'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy60'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy61'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy62'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy63'),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy65'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy66'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy67'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy68'),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy70'),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy72'),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy73'),
    COMMETHOD([], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy75'),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy77'),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IGroupObjects implementation
##class IGroupObjects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy42(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy59(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy53(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy68(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy56(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy50(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy54(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy55(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy38(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy75(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy77(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy70(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy30(self):
##        '-no docstring-'
##        #return 
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy36(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy37(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy43(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy57(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadLength = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy73(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy72(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy65(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return RHS
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy28(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy48(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy45(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy44(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy47(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy41(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy67(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy66(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy62(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy61(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy60(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy27(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy58(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy52(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy63(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IAddIn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020857-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAddIn._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Author',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Comments',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FullName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Installed',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Installed',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Keywords',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Subject',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'progID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CLSID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsOpen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IAddIn implementation
##class IAddIn_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Author(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Installed = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsOpen(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Title(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def progID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CLSID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Keywords(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Subject(self):
##        '-no docstring-'
##        #return RHS
##

class IHyperlink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024431-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IHyperlink._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SubAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SubAddress',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Address',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Address',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddToFavorites'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Follow',
              ( ['in', 'optional'], VARIANT, 'NewWindow' ),
              ( ['in', 'optional'], VARIANT, 'AddHistory' ),
              ( ['in', 'optional'], VARIANT, 'ExtraInfo' ),
              ( ['in', 'optional'], VARIANT, 'Method' ),
              ( ['in', 'optional'], VARIANT, 'HeaderInfo' )),
    COMMETHOD(['propget'], HRESULT, 'EmailSubject',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EmailSubject',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScreenTip',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScreenTip',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextToDisplay',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextToDisplay',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'CreateNewDocument',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in'], VARIANT_BOOL, 'EditNow' ),
              ( ['in'], VARIANT_BOOL, 'Overwrite' )),
]
################################################################
## code template for IHyperlink implementation
##class IHyperlink_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SubAddress = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EmailSubject = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddToFavorites(self):
##        '-no docstring-'
##        #return 
##
##    def CreateNewDocument(self, Filename, EditNow, Overwrite):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextToDisplay = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Address = property(_get, _set, doc = _set.__doc__)
##
##    def Follow(self, NewWindow, AddHistory, ExtraInfo, Method, HeaderInfo):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScreenTip = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class ISlicers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C7-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicers._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Slicer)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Slicer)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], VARIANT, 'SlicerDestination' ),
              ( ['in', 'optional'], VARIANT, 'Level' ),
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Caption' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Slicer)), 'RHS' )),
]
################################################################
## code template for ISlicers implementation
##class ISlicers_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, SlicerDestination, Level, Name, Caption, Top, Left, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class PivotItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020877-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
PivotItems._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(PivotField), 'Parent'),
    DISPMETHOD([dispid(181)], None, 'Add',
               ( ['in'], BSTR, 'Name' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IDropLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDropLines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IDropLines implementation
##class IDropLines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class ISpinner(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISpinner._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Max',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Max',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Min',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Min',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmallChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SmallChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for ISpinner implementation
##class ISpinner_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Min = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Max = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SmallChange = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IErrors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002445C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IErrors._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Error)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Error)), 'RHS' )),
]
################################################################
## code template for IErrors implementation
##class IErrors_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class Drawings(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A9-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Drawings._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1525), 'propget'], VARIANT, 'AutoScaleFont'),
    DISPMETHOD([dispid(1525), 'propput'], None, 'AutoScaleFont',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(261), 'propget'], BSTR, 'Formula'),
    DISPMETHOD([dispid(261), 'propput'], None, 'Formula',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743874), 'restricted', 'hidden'], None, '_Dummy44'),
    DISPMETHOD([dispid(604)], VARIANT, 'Reshape',
               ( ['in'], c_int, 'Vertex' ),
               ( ['in'], VARIANT_BOOL, 'Insert' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' )),
    DISPMETHOD([dispid(1610743876), 'restricted', 'hidden'], None, '_Dummy46'),
    DISPMETHOD([dispid(181)], POINTER(Drawing), 'Add',
               ( ['in'], c_double, 'X1' ),
               ( ['in'], c_double, 'Y1' ),
               ( ['in'], c_double, 'X2' ),
               ( ['in'], c_double, 'Y2' ),
               ( ['in'], VARIANT_BOOL, 'Closed' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IModelTableColumn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D5-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelTableColumn._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IModelTableColumn implementation
##class IModelTableColumn_Impl(object):
##    @property
##    def DataType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IListBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020887-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListBox._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddItem',
              ( ['in'], VARIANT, 'Text' ),
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedObject',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'List',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListIndex',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListIndex',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MultiSelect',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiSelect',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveAllItems',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'RemoveItem',
              ( ['in'], c_int, 'Index' ),
              ( ['in', 'optional'], VARIANT, 'Count' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Selected',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
]
################################################################
## code template for IListBox implementation
##class IListBox_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LinkedObject(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiSelect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveAllItems(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListCount(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    Selected = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    List = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddItem(self, Text, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveItem(self, Index, Count):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ITextBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITextBox._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for ITextBox implementation
##class ITextBox_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IMenuBar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020864-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMenuBar._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD(['propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Menus',
              ( ['retval', 'out'], POINTER(POINTER(Menus)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Reset'),
]
################################################################
## code template for IMenuBar implementation
##class IMenuBar_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Menus(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

Solver._methods_ = [
    COMMETHOD([dispid(128000000)], HRESULT, 'SolverAdd',
              ( ['in'], VARIANT, 'CellRef' ),
              ( ['in'], c_int, 'Relation' ),
              ( ['in', 'optional'], VARIANT, 'FormulaText' ),
              ( ['retval', 'out'], POINTER(c_int), 'errorParam' )),
    COMMETHOD([dispid(128000001)], HRESULT, 'SolverChange',
              ( ['in'], VARIANT, 'CellRef' ),
              ( ['in'], c_int, 'Relation' ),
              ( ['in', 'optional'], VARIANT, 'FormulaText' ),
              ( ['retval', 'out'], POINTER(c_int), 'errorParam' )),
    COMMETHOD([dispid(128000002)], HRESULT, 'SolverDelete',
              ( ['in'], VARIANT, 'CellRef' ),
              ( ['in'], c_int, 'Relation' ),
              ( ['in', 'optional'], VARIANT, 'FormulaText' ),
              ( ['retval', 'out'], POINTER(c_int), 'errorParam' )),
    COMMETHOD([dispid(128000003)], HRESULT, 'SolverFinish',
              ( ['in', 'optional'], VARIANT, 'KeepFinal' ),
              ( ['in', 'optional'], VARIANT, 'ReportArry' ),
              ( ['in', 'optional'], VARIANT, 'OutlineReports' ),
              ( ['retval', 'out'], POINTER(c_int), 'errorParam' )),
    COMMETHOD([dispid(128000007)], HRESULT, 'SolverOk',
              ( ['in', 'optional'], VARIANT, 'SetCell' ),
              ( ['in', 'optional'], VARIANT, 'MaxMinVal' ),
              ( ['in', 'optional'], VARIANT, 'ValueOf' ),
              ( ['in', 'optional'], VARIANT, 'ByChange' ),
              ( ['in', 'optional'], VARIANT, 'Engine' ),
              ( ['in', 'optional'], VARIANT, 'EngineDesc' ),
              ( ['retval', 'out'], POINTER(c_int), 'errorParam' )),
    COMMETHOD([dispid(128000009)], HRESULT, 'SolverOptions',
              ( ['in', 'optional'], VARIANT, 'MaxTime' ),
              ( ['in', 'optional'], VARIANT, 'Iterations' ),
              ( ['in', 'optional'], VARIANT, 'Precision' ),
              ( ['in', 'optional'], VARIANT, 'AssumeLinear' ),
              ( ['in', 'optional'], VARIANT, 'StepThru' ),
              ( ['in', 'optional'], VARIANT, 'Estimates' ),
              ( ['in', 'optional'], VARIANT, 'Derivatives' ),
              ( ['in', 'optional'], VARIANT, 'SearchOption' ),
              ( ['in', 'optional'], VARIANT, 'IntTolerance' ),
              ( ['in', 'optional'], VARIANT, 'Scaling' ),
              ( ['in', 'optional'], VARIANT, 'Convergence' ),
              ( ['in', 'optional'], VARIANT, 'AssumeNonNeg' ),
              ( ['in', 'optional'], VARIANT, 'PopulationSize' ),
              ( ['in', 'optional'], VARIANT, 'randomSeed' ),
              ( ['in', 'optional'], VARIANT, 'MultiStart' ),
              ( ['in', 'optional'], VARIANT, 'RequireBounds' ),
              ( ['in', 'optional'], VARIANT, 'MutationRate' ),
              ( ['in', 'optional'], VARIANT, 'MaxSubproblems' ),
              ( ['in', 'optional'], VARIANT, 'MaxIntegerSols' ),
              ( ['in', 'optional'], VARIANT, 'SolveWithout' ),
              ( ['in', 'optional'], VARIANT, 'MaxTimeNoImp' ),
              ( ['retval', 'out'], POINTER(c_int), 'errorParam' )),
    COMMETHOD([dispid(128000010)], HRESULT, 'SolverReset'),
    COMMETHOD([dispid(128000012)], HRESULT, 'SolverSolve',
              ( ['in', 'optional'], VARIANT, 'UserFinish' ),
              ( ['in', 'optional'], VARIANT, 'ShowRef' ),
              ( ['retval', 'out'], POINTER(c_int), 'SolverResult' )),
]
################################################################
## code template for Solver implementation
##class Solver_Impl(object):
##    def SolverSolve(self, UserFinish, ShowRef):
##        '-no docstring-'
##        #return SolverResult
##
##    def SolverOk(self, SetCell, MaxMinVal, ValueOf, ByChange, Engine, EngineDesc):
##        '-no docstring-'
##        #return errorParam
##
##    def SolverFinish(self, KeepFinal, ReportArry, OutlineReports):
##        '-no docstring-'
##        #return errorParam
##
##    def SolverAdd(self, CellRef, Relation, FormulaText):
##        '-no docstring-'
##        #return errorParam
##
##    def SolverOptions(self, MaxTime, Iterations, Precision, AssumeLinear, StepThru, Estimates, Derivatives, SearchOption, IntTolerance, Scaling, Convergence, AssumeNonNeg, PopulationSize, randomSeed, MultiStart, RequireBounds, MutationRate, MaxSubproblems, MaxIntegerSols, SolveWithout, MaxTimeNoImp):
##        '-no docstring-'
##        #return errorParam
##
##    def SolverChange(self, CellRef, Relation, FormulaText):
##        '-no docstring-'
##        #return errorParam
##
##    def SolverDelete(self, CellRef, Relation, FormulaText):
##        '-no docstring-'
##        #return errorParam
##
##    def SolverReset(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlApplicationInternational'
xl24HourClock = 33
xl4DigitYears = 43
xlAlternateArraySeparator = 16
xlColumnSeparator = 14
xlCountryCode = 1
xlCountrySetting = 2
xlCurrencyBefore = 37
xlCurrencyCode = 25
xlCurrencyDigits = 27
xlCurrencyLeadingZeros = 40
xlCurrencyMinusSign = 38
xlCurrencyNegative = 28
xlCurrencySpaceBefore = 36
xlCurrencyTrailingZeros = 39
xlDateOrder = 32
xlDateSeparator = 17
xlDayCode = 21
xlDayLeadingZero = 42
xlDecimalSeparator = 3
xlGeneralFormatName = 26
xlHourCode = 22
xlLeftBrace = 12
xlLeftBracket = 10
xlListSeparator = 5
xlLowerCaseColumnLetter = 9
xlLowerCaseRowLetter = 8
xlMDY = 44
xlMetric = 35
xlMinuteCode = 23
xlMonthCode = 20
xlMonthLeadingZero = 41
xlMonthNameChars = 30
xlNoncurrencyDigits = 29
xlNonEnglishFunctions = 34
xlRightBrace = 13
xlRightBracket = 11
xlRowSeparator = 15
xlSecondCode = 24
xlThousandsSeparator = 4
xlTimeLeadingZero = 45
xlTimeSeparator = 18
xlUpperCaseColumnLetter = 7
xlUpperCaseRowLetter = 6
xlWeekdayNameChars = 31
xlYearCode = 19
XlApplicationInternational = c_int # enum
class IOptionButtons(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020882-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOptionButtons._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GroupBox',
              ( ['retval', 'out'], POINTER(POINTER(GroupBox)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(OptionButton)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IOptionButtons implementation
##class IOptionButtons_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def GroupBox(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IPages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244A3-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPages._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Page)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Page)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IPages implementation
##class IPages_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##

class IValueChange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IValueChange._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Order',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleInPivotTable',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotCell',
              ( ['retval', 'out'], POINTER(POINTER(PivotCell)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Tuple',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllocationValue',
              ( ['retval', 'out'], POINTER(XlAllocationValue), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllocationMethod',
              ( ['retval', 'out'], POINTER(XlAllocationMethod), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllocationWeightExpression',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for IValueChange implementation
##class IValueChange_Impl(object):
##    @property
##    def PivotCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllocationWeightExpression(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VisibleInPivotTable(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Tuple(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllocationMethod(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllocationValue(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Order(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlLinkInfo'
xlEditionDate = 2
xlUpdateState = 1
xlLinkInfoStatus = 3
XlLinkInfo = c_int # enum

# values for enumeration 'XlRunAutoMacro'
xlAutoActivate = 3
xlAutoClose = 2
xlAutoDeactivate = 4
xlAutoOpen = 1
XlRunAutoMacro = c_int # enum
class Connections(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024486-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Connections._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(2700), 'hidden'], POINTER(WorkbookConnection), '_AddFromFile',
               ( ['in'], BSTR, 'Filename' )),
    DISPMETHOD([dispid(181), 'hidden'], POINTER(WorkbookConnection), 'Add',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Description' ),
               ( ['in'], VARIANT, 'ConnectionString' ),
               ( ['in'], VARIANT, 'CommandText' ),
               ( ['in', 'optional'], VARIANT, 'lCmdtype' )),
    DISPMETHOD([dispid(170)], POINTER(WorkbookConnection), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(WorkbookConnection), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(3054)], POINTER(WorkbookConnection), 'Add2',
               ( ['in'], BSTR, 'Name' ),
               ( ['in'], BSTR, 'Description' ),
               ( ['in'], VARIANT, 'ConnectionString' ),
               ( ['in'], VARIANT, 'CommandText' ),
               ( ['in', 'optional'], VARIANT, 'lCmdtype' ),
               ( ['in', 'optional'], VARIANT, 'CreateModelConnection' ),
               ( ['in', 'optional'], VARIANT, 'ImportRelationships' )),
    DISPMETHOD([dispid(3107)], POINTER(WorkbookConnection), 'AddFromFile',
               ( ['in'], BSTR, 'Filename' ),
               ( ['in', 'optional'], VARIANT, 'CreateModelConnection' ),
               ( ['in', 'optional'], VARIANT, 'ImportRelationships' )),
]

# values for enumeration 'XlRemoveDocInfoType'
xlRDIComments = 1
xlRDIRemovePersonalInformation = 4
xlRDIEmailHeader = 5
xlRDIRoutingSlip = 6
xlRDISendForReview = 7
xlRDIDocumentProperties = 8
xlRDIDocumentWorkspace = 10
xlRDIInkAnnotations = 11
xlRDIScenarioComments = 12
xlRDIPublishInfo = 13
xlRDIDocumentServerProperties = 14
xlRDIDocumentManagementPolicy = 15
xlRDIContentType = 16
xlRDIDefinedNameComments = 18
xlRDIInactiveDataConnections = 19
xlRDIPrinterPath = 20
xlRDIInlineWebExtensions = 21
xlRDITaskpaneWebExtensions = 22
xlRDIExcelDataModel = 23
xlRDIAll = 99
XlRemoveDocInfoType = c_int # enum
class SlicerCaches(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C3-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
SlicerCaches._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(SlicerCache), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(SlicerCache), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(181), 'hidden'], POINTER(SlicerCache), 'Add',
               ( ['in'], VARIANT, 'Source' ),
               ( ['in'], VARIANT, 'SourceField' ),
               ( ['in', 'optional'], VARIANT, 'Name' )),
    DISPMETHOD([dispid(3054)], POINTER(SlicerCache), 'Add2',
               ( ['in'], VARIANT, 'Source' ),
               ( ['in'], VARIANT, 'SourceField' ),
               ( ['in', 'optional'], VARIANT, 'Name' ),
               ( ['in', 'optional'], VARIANT, 'SlicerCacheType' )),
]
_Workbook._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1441), 'hidden', 'propget'], HRESULT, 'AcceptLabelsInFormulas',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1441), 'hidden', 'propput'], HRESULT, 'AcceptLabelsInFormulas',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(304)], HRESULT, 'Activate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(183), 'propget'], HRESULT, 'ActiveChart',
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD([dispid(307), 'propget'], HRESULT, 'ActiveSheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(574), 'hidden', 'propget'], HRESULT, 'Author',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(574), 'hidden', 'propput'], HRESULT, 'Author',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1442), 'propget'], HRESULT, 'AutoUpdateFrequency',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1442), 'propput'], HRESULT, 'AutoUpdateFrequency',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1443), 'propget'], HRESULT, 'AutoUpdateSaveChanges',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1443), 'propput'], HRESULT, 'AutoUpdateSaveChanges',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1444), 'propget'], HRESULT, 'ChangeHistoryDuration',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1444), 'propput'], HRESULT, 'ChangeHistoryDuration',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1176), 'propget'], HRESULT, 'BuiltinDocumentProperties',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(989)], HRESULT, 'ChangeFileAccess',
              ( ['in'], XlFileAccess, 'Mode' ),
              ( ['in', 'optional'], VARIANT, 'WritePassword' ),
              ( ['in', 'optional'], VARIANT, 'Notify' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(802)], HRESULT, 'ChangeLink',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], BSTR, 'NewName' ),
              ( ['in', 'optional'], XlLinkType, 'Type', 1 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(121), 'propget'], HRESULT, 'Charts',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(277)], HRESULT, 'Close',
              ( ['in', 'optional'], VARIANT, 'SaveChanges' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'RouteWorkbook' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1373), 'propget'], HRESULT, 'CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(-2147418112), 'propget'], HRESULT, '_CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(-2147418112), 'propput'], HRESULT, '_CodeName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(286), 'propget'], HRESULT, 'Colors',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(286), 'propput'], HRESULT, 'Colors',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(1439), 'propget'], HRESULT, 'CommandBars',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CommandBars)), 'RHS' )),
    COMMETHOD([dispid(575), 'hidden', 'propget'], HRESULT, 'Comments',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(575), 'hidden', 'propput'], HRESULT, 'Comments',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1175), 'propget'], HRESULT, 'ConflictResolution',
              ( ['retval', 'out'], POINTER(XlSaveConflictResolution), 'RHS' )),
    COMMETHOD([dispid(1175), 'propput'], HRESULT, 'ConflictResolution',
              ( ['in'], XlSaveConflictResolution, 'RHS' )),
    COMMETHOD([dispid(1190), 'propget'], HRESULT, 'Container',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(287), 'propget'], HRESULT, 'CreateBackup',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1177), 'propget'], HRESULT, 'CustomDocumentProperties',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(403), 'propget'], HRESULT, 'Date1904',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(403), 'propput'], HRESULT, 'Date1904',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(397)], HRESULT, 'DeleteNumberFormat',
              ( ['in'], BSTR, 'NumberFormat' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(764), 'hidden', 'propget'], HRESULT, 'DialogSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(404), 'propget'], HRESULT, 'DisplayDrawingObjects',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlDisplayDrawingObjects), 'RHS' )),
    COMMETHOD([dispid(404), 'propput'], HRESULT, 'DisplayDrawingObjects',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlDisplayDrawingObjects, 'RHS' )),
    COMMETHOD([dispid(1168)], HRESULT, 'ExclusiveAccess',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(288), 'propget'], HRESULT, 'FileFormat',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlFileFormat), 'RHS' )),
    COMMETHOD([dispid(973)], HRESULT, 'ForwardMailer',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(289), 'propget'], HRESULT, 'FullName',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(976), 'hidden', 'propget'], HRESULT, 'HasMailer',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(976), 'hidden', 'propput'], HRESULT, 'HasMailer',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(290), 'propget'], HRESULT, 'HasPassword',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(950), 'hidden', 'propget'], HRESULT, 'HasRoutingSlip',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(950), 'hidden', 'propput'], HRESULT, 'HasRoutingSlip',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1445), 'propget'], HRESULT, 'IsAddin',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1445), 'propput'], HRESULT, 'IsAddin',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(577), 'hidden', 'propget'], HRESULT, 'Keywords',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(577), 'hidden', 'propput'], HRESULT, 'Keywords',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(807)], HRESULT, 'LinkInfo',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], XlLinkInfo, 'LinkInfo' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'EditionRef' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(808)], HRESULT, 'LinkSources',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(979), 'propget'], HRESULT, 'Mailer',
              ( ['retval', 'out'], POINTER(POINTER(Mailer)), 'RHS' )),
    COMMETHOD([dispid(1446)], HRESULT, 'MergeWorkbook',
              ( ['in'], VARIANT, 'Filename' )),
    COMMETHOD([dispid(582), 'hidden', 'propget'], HRESULT, 'Modules',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(1169), 'propget'], HRESULT, 'MultiUserEditing',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(442), 'propget'], HRESULT, 'Names',
              ( ['retval', 'out'], POINTER(POINTER(Names)), 'RHS' )),
    COMMETHOD([dispid(280)], HRESULT, 'NewWindow',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(POINTER(Window)), 'RHS' )),
    COMMETHOD([dispid(1178), 'hidden', 'propget'], HRESULT, 'OnSave',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1178), 'hidden', 'propput'], HRESULT, 'OnSave',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1031), 'hidden', 'propget'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1031), 'hidden', 'propput'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propget'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1081), 'hidden', 'propput'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(803)], HRESULT, 'OpenLinks',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnly' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(291), 'propget'], HRESULT, 'Path',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1447), 'propget'], HRESULT, 'PersonalViewListSettings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1447), 'propput'], HRESULT, 'PersonalViewListSettings',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1448), 'propget'], HRESULT, 'PersonalViewPrintSettings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1448), 'propput'], HRESULT, 'PersonalViewPrintSettings',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1449)], HRESULT, 'PivotCaches',
              ( ['retval', 'out'], POINTER(POINTER(PivotCaches)), 'RHS' )),
    COMMETHOD([dispid(1166)], HRESULT, 'Post',
              ( ['in', 'optional'], VARIANT, 'DestName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(405), 'propget'], HRESULT, 'PrecisionAsDisplayed',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(405), 'propput'], HRESULT, 'PrecisionAsDisplayed',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(905), 'hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(281)], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(282), 'hidden'], HRESULT, '_Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'Structure' ),
              ( ['in', 'optional'], VARIANT, 'Windows' )),
    COMMETHOD([dispid(1450), 'hidden'], HRESULT, '_ProtectSharing',
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'SharingPassword' )),
    COMMETHOD([dispid(588), 'propget'], HRESULT, 'ProtectStructure',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(295), 'propget'], HRESULT, 'ProtectWindows',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(296), 'propget'], HRESULT, 'ReadOnly',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(297), 'hidden', 'propget'], HRESULT, '_ReadOnlyRecommended',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1452)], HRESULT, 'RefreshAll'),
    COMMETHOD([dispid(977)], HRESULT, 'Reply',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(978)], HRESULT, 'ReplyAll',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1453)], HRESULT, 'RemoveUser',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(1172), 'propget'], HRESULT, 'RevisionNumber',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(946), 'hidden'], HRESULT, 'Route',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(951), 'hidden', 'propget'], HRESULT, 'Routed',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(949), 'hidden', 'propget'], HRESULT, 'RoutingSlip',
              ( ['retval', 'out'], POINTER(POINTER(RoutingSlip)), 'RHS' )),
    COMMETHOD([dispid(634)], HRESULT, 'RunAutoMacros',
              ( ['in'], XlRunAutoMacro, 'Which' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(283)], HRESULT, 'Save',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(284), 'hidden'], HRESULT, '_SaveAs',
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], XlSaveAsAccessMode, 'AccessMode', 1 ),
              ( ['in', 'optional'], VARIANT, 'ConflictResolution' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(175)], HRESULT, 'SaveCopyAs',
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(298), 'propget'], HRESULT, 'Saved',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(298), 'propput'], HRESULT, 'Saved',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(406), 'propget'], HRESULT, 'SaveLinkValues',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(406), 'propput'], HRESULT, 'SaveLinkValues',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(947)], HRESULT, 'SendMail',
              ( ['in'], VARIANT, 'Recipients' ),
              ( ['in', 'optional'], VARIANT, 'Subject' ),
              ( ['in', 'optional'], VARIANT, 'ReturnReceipt' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(980)], HRESULT, 'SendMailer',
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], XlPriority, 'Priority', -4143 ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(809)], HRESULT, 'SetLinkOnData',
              ( ['in'], BSTR, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Procedure' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(485), 'propget'], HRESULT, 'Sheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(1171), 'propget'], HRESULT, 'ShowConflictHistory',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1171), 'propput'], HRESULT, 'ShowConflictHistory',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(493), 'propget'], HRESULT, 'Styles',
              ( ['retval', 'out'], POINTER(POINTER(Styles)), 'RHS' )),
    COMMETHOD([dispid(953), 'hidden', 'propget'], HRESULT, 'Subject',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(953), 'hidden', 'propput'], HRESULT, 'Subject',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(199), 'hidden', 'propget'], HRESULT, 'Title',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(199), 'hidden', 'propput'], HRESULT, 'Title',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(285)], HRESULT, 'Unprotect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1455)], HRESULT, 'UnprotectSharing',
              ( ['in', 'optional'], VARIANT, 'SharingPassword' )),
    COMMETHOD([dispid(995)], HRESULT, 'UpdateFromFile',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(804)], HRESULT, 'UpdateLink',
              ( ['in', 'optional'], VARIANT, 'Name' ),
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(411), 'propget'], HRESULT, 'UpdateRemoteReferences',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(411), 'propput'], HRESULT, 'UpdateRemoteReferences',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1210), 'hidden', 'propget'], HRESULT, 'UserControl',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1210), 'hidden', 'propput'], HRESULT, 'UserControl',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1173), 'propget'], HRESULT, 'UserStatus',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(1456), 'propget'], HRESULT, 'CustomViews',
              ( ['retval', 'out'], POINTER(POINTER(CustomViews)), 'RHS' )),
    COMMETHOD([dispid(430), 'propget'], HRESULT, 'Windows',
              ( ['retval', 'out'], POINTER(POINTER(Windows)), 'RHS' )),
    COMMETHOD([dispid(494), 'propget'], HRESULT, 'Worksheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(299), 'propget'], HRESULT, 'WriteReserved',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(300), 'propget'], HRESULT, 'WriteReservedBy',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(581), 'propget'], HRESULT, 'Excel4IntlMacroSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(579), 'propget'], HRESULT, 'Excel4MacroSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD([dispid(1457), 'propget'], HRESULT, 'TemplateRemoveExtData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1457), 'propput'], HRESULT, 'TemplateRemoveExtData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1458)], HRESULT, 'HighlightChangesOptions',
              ( ['in', 'optional'], VARIANT, 'When' ),
              ( ['in', 'optional'], VARIANT, 'Who' ),
              ( ['in', 'optional'], VARIANT, 'Where' )),
    COMMETHOD([dispid(1461), 'propget'], HRESULT, 'HighlightChangesOnScreen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1461), 'propput'], HRESULT, 'HighlightChangesOnScreen',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1462), 'propget'], HRESULT, 'KeepChangeHistory',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1462), 'propput'], HRESULT, 'KeepChangeHistory',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1463), 'propget'], HRESULT, 'ListChangesOnNewSheet',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1463), 'propput'], HRESULT, 'ListChangesOnNewSheet',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1464)], HRESULT, 'PurgeChangeHistoryNow',
              ( ['in'], c_int, 'Days' ),
              ( ['in', 'optional'], VARIANT, 'SharingPassword' )),
    COMMETHOD([dispid(1466)], HRESULT, 'AcceptAllChanges',
              ( ['in', 'optional'], VARIANT, 'When' ),
              ( ['in', 'optional'], VARIANT, 'Who' ),
              ( ['in', 'optional'], VARIANT, 'Where' )),
    COMMETHOD([dispid(1467)], HRESULT, 'RejectAllChanges',
              ( ['in', 'optional'], VARIANT, 'When' ),
              ( ['in', 'optional'], VARIANT, 'Who' ),
              ( ['in', 'optional'], VARIANT, 'Where' )),
    COMMETHOD([dispid(684), 'hidden'], HRESULT, 'PivotTableWizard',
              ( ['in', 'optional'], VARIANT, 'SourceType' ),
              ( ['in', 'optional'], VARIANT, 'SourceData' ),
              ( ['in', 'optional'], VARIANT, 'TableDestination' ),
              ( ['in', 'optional'], VARIANT, 'TableName' ),
              ( ['in', 'optional'], VARIANT, 'RowGrand' ),
              ( ['in', 'optional'], VARIANT, 'ColumnGrand' ),
              ( ['in', 'optional'], VARIANT, 'SaveData' ),
              ( ['in', 'optional'], VARIANT, 'HasAutoFormat' ),
              ( ['in', 'optional'], VARIANT, 'AutoPage' ),
              ( ['in', 'optional'], VARIANT, 'Reserved' ),
              ( ['in', 'optional'], VARIANT, 'BackgroundQuery' ),
              ( ['in', 'optional'], VARIANT, 'OptimizeCache' ),
              ( ['in', 'optional'], VARIANT, 'PageFieldOrder' ),
              ( ['in', 'optional'], VARIANT, 'PageFieldWrapCount' ),
              ( ['in', 'optional'], VARIANT, 'ReadData' ),
              ( ['in', 'optional'], VARIANT, 'Connection' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1468)], HRESULT, 'ResetColors'),
    COMMETHOD([dispid(1469), 'propget'], HRESULT, 'VBProject',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBProject)), 'RHS' )),
    COMMETHOD([dispid(1470)], HRESULT, 'FollowHyperlink',
              ( ['in'], BSTR, 'Address' ),
              ( ['in', 'optional'], VARIANT, 'SubAddress' ),
              ( ['in', 'optional'], VARIANT, 'NewWindow' ),
              ( ['in', 'optional'], VARIANT, 'AddHistory' ),
              ( ['in', 'optional'], VARIANT, 'ExtraInfo' ),
              ( ['in', 'optional'], VARIANT, 'Method' ),
              ( ['in', 'optional'], VARIANT, 'HeaderInfo' )),
    COMMETHOD([dispid(1476)], HRESULT, 'AddToFavorites'),
    COMMETHOD([dispid(1769), 'propget'], HRESULT, 'IsInplace',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1772), 'hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(1818)], HRESULT, 'WebPagePreview'),
    COMMETHOD([dispid(1819), 'propget'], HRESULT, 'PublishObjects',
              ( ['retval', 'out'], POINTER(POINTER(PublishObjects)), 'RHS' )),
    COMMETHOD([dispid(1820), 'propget'], HRESULT, 'WebOptions',
              ( ['retval', 'out'], POINTER(POINTER(WebOptions)), 'RHS' )),
    COMMETHOD([dispid(1821)], HRESULT, 'ReloadAs',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEncoding, 'Encoding' )),
    COMMETHOD([dispid(1823), 'hidden', 'propget'], HRESULT, 'HTMLProject',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.HTMLProject)), 'RHS' )),
    COMMETHOD([dispid(1824), 'propget'], HRESULT, 'EnvelopeVisible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1824), 'propput'], HRESULT, 'EnvelopeVisible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1806), 'propget'], HRESULT, 'CalculationVersion',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2044), 'hidden'], HRESULT, 'Dummy17',
              ( ['in'], c_int, 'calcid' )),
    COMMETHOD([dispid(1826), 'hidden'], HRESULT, 'sblt',
              ( ['in'], BSTR, 's' )),
    COMMETHOD([dispid(1828), 'propget'], HRESULT, 'VBASigned',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2046), 'propget'], HRESULT, 'ShowPivotTableFieldList',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2046), 'propput'], HRESULT, 'ShowPivotTableFieldList',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(864), 'propget'], HRESULT, 'UpdateLinks',
              ( ['retval', 'out'], POINTER(XlUpdateLinks), 'RHS' )),
    COMMETHOD([dispid(864), 'propput'], HRESULT, 'UpdateLinks',
              ( ['in'], XlUpdateLinks, 'RHS' )),
    COMMETHOD([dispid(2047)], HRESULT, 'BreakLink',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], XlLinkType, 'Type' )),
    COMMETHOD([dispid(2048), 'hidden'], HRESULT, 'Dummy16'),
    COMMETHOD([dispid(1925)], HRESULT, 'SaveAs',
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], XlSaveAsAccessMode, 'AccessMode', 1 ),
              ( ['in', 'optional'], VARIANT, 'ConflictResolution' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'optional'], VARIANT, 'Local' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2049), 'propget'], HRESULT, 'EnableAutoRecover',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2049), 'propput'], HRESULT, 'EnableAutoRecover',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2050), 'propget'], HRESULT, 'RemovePersonalInformation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2050), 'propput'], HRESULT, 'RemovePersonalInformation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1927), 'propget'], HRESULT, 'FullNameURLEncoded',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2051)], HRESULT, 'CheckIn',
              ( ['in', 'optional'], VARIANT, 'SaveChanges' ),
              ( ['in', 'optional'], VARIANT, 'Comments' ),
              ( ['in', 'optional'], VARIANT, 'MakePublic' )),
    COMMETHOD([dispid(2053)], HRESULT, 'CanCheckIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2054)], HRESULT, 'SendForReview',
              ( ['in', 'optional'], VARIANT, 'Recipients' ),
              ( ['in', 'optional'], VARIANT, 'Subject' ),
              ( ['in', 'optional'], VARIANT, 'ShowMessage' ),
              ( ['in', 'optional'], VARIANT, 'IncludeAttachment' )),
    COMMETHOD([dispid(2057)], HRESULT, 'ReplyWithChanges',
              ( ['in', 'optional'], VARIANT, 'ShowMessage' )),
    COMMETHOD([dispid(2058)], HRESULT, 'EndReview'),
    COMMETHOD([dispid(429), 'propget'], HRESULT, 'Password',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(429), 'propput'], HRESULT, 'Password',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1128), 'propget'], HRESULT, 'WritePassword',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1128), 'propput'], HRESULT, 'WritePassword',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2059), 'propget'], HRESULT, 'PasswordEncryptionProvider',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2060), 'propget'], HRESULT, 'PasswordEncryptionAlgorithm',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2061), 'propget'], HRESULT, 'PasswordEncryptionKeyLength',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2062)], HRESULT, 'SetPasswordEncryptionOptions',
              ( ['in', 'optional'], VARIANT, 'PasswordEncryptionProvider' ),
              ( ['in', 'optional'], VARIANT, 'PasswordEncryptionAlgorithm' ),
              ( ['in', 'optional'], VARIANT, 'PasswordEncryptionKeyLength' ),
              ( ['in', 'optional'], VARIANT, 'PasswordEncryptionFileProperties' )),
    COMMETHOD([dispid(2063), 'propget'], HRESULT, 'PasswordEncryptionFileProperties',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2005), 'propget'], HRESULT, 'ReadOnlyRecommended',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2005), 'propput'], HRESULT, 'ReadOnlyRecommended',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2029)], HRESULT, 'Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'Structure' ),
              ( ['in', 'optional'], VARIANT, 'Windows' )),
    COMMETHOD([dispid(2064), 'hidden', 'propget'], HRESULT, 'SmartTagOptions',
              ( ['retval', 'out'], POINTER(POINTER(SmartTagOptions)), 'RHS' )),
    COMMETHOD([dispid(2065), 'hidden'], HRESULT, 'RecheckSmartTags'),
    COMMETHOD([dispid(2264), 'propget'], HRESULT, 'Permission',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Permission)), 'RHS' )),
    COMMETHOD([dispid(2265), 'propget'], HRESULT, 'SharedWorkspace',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SharedWorkspace)), 'RHS' )),
    COMMETHOD([dispid(2266), 'propget'], HRESULT, 'Sync',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.Sync)), 'RHS' )),
    COMMETHOD([dispid(2267)], HRESULT, 'SendFaxOverInternet',
              ( ['in', 'optional'], VARIANT, 'Recipients' ),
              ( ['in', 'optional'], VARIANT, 'Subject' ),
              ( ['in', 'optional'], VARIANT, 'ShowMessage' )),
    COMMETHOD([dispid(2268), 'propget'], HRESULT, 'XmlNamespaces',
              ( ['retval', 'out'], POINTER(POINTER(XmlNamespaces)), 'RHS' )),
    COMMETHOD([dispid(2269), 'propget'], HRESULT, 'XmlMaps',
              ( ['retval', 'out'], POINTER(POINTER(XmlMaps)), 'RHS' )),
    COMMETHOD([dispid(2270)], HRESULT, 'XmlImport',
              ( ['in'], BSTR, 'Url' ),
              ( ['out'], POINTER(POINTER(XmlMap)), 'ImportMap' ),
              ( ['in', 'optional'], VARIANT, 'Overwrite' ),
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['retval', 'out'], POINTER(XlXmlImportResult), 'RHS' )),
    COMMETHOD([dispid(2273), 'propget'], HRESULT, 'SmartDocument',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartDocument)), 'RHS' )),
    COMMETHOD([dispid(2274), 'propget'], HRESULT, 'DocumentLibraryVersions',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.DocumentLibraryVersions)), 'RHS' )),
    COMMETHOD([dispid(2275), 'propget'], HRESULT, 'InactiveListBorderVisible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2275), 'propput'], HRESULT, 'InactiveListBorderVisible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2276), 'propget'], HRESULT, 'DisplayInkComments',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2276), 'propput'], HRESULT, 'DisplayInkComments',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2277)], HRESULT, 'XmlImportXml',
              ( ['in'], BSTR, 'Data' ),
              ( ['out'], POINTER(POINTER(XmlMap)), 'ImportMap' ),
              ( ['in', 'optional'], VARIANT, 'Overwrite' ),
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['retval', 'out'], POINTER(XlXmlImportResult), 'RHS' )),
    COMMETHOD([dispid(2278)], HRESULT, 'SaveAsXMLData',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in'], POINTER(XmlMap), 'Map' )),
    COMMETHOD([dispid(2279)], HRESULT, 'ToggleFormsDesign'),
    COMMETHOD([dispid(2512), 'propget'], HRESULT, 'ContentTypeProperties',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MetaProperties)), 'RHS' )),
    COMMETHOD([dispid(2513), 'propget'], HRESULT, 'Connections',
              ( ['retval', 'out'], POINTER(POINTER(Connections)), 'RHS' )),
    COMMETHOD([dispid(2514)], HRESULT, 'RemoveDocumentInformation',
              ( ['in'], XlRemoveDocInfoType, 'RemoveDocInfoType' )),
    COMMETHOD([dispid(2516), 'propget'], HRESULT, 'Signatures',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SignatureSet)), 'RHS' )),
    COMMETHOD([dispid(2517)], HRESULT, 'CheckInWithVersion',
              ( ['in', 'optional'], VARIANT, 'SaveChanges' ),
              ( ['in', 'optional'], VARIANT, 'Comments' ),
              ( ['in', 'optional'], VARIANT, 'MakePublic' ),
              ( ['in', 'optional'], VARIANT, 'VersionType' )),
    COMMETHOD([dispid(2519), 'propget'], HRESULT, 'ServerPolicy',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.ServerPolicy)), 'RHS' )),
    COMMETHOD([dispid(2520)], HRESULT, 'LockServerFile'),
    COMMETHOD([dispid(2521), 'propget'], HRESULT, 'DocumentInspectors',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.DocumentInspectors)), 'RHS' )),
    COMMETHOD([dispid(2522)], HRESULT, 'GetWorkflowTasks',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.WorkflowTasks)), 'RHS' )),
    COMMETHOD([dispid(2523)], HRESULT, 'GetWorkflowTemplates',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.WorkflowTemplates)), 'RHS' )),
    COMMETHOD([dispid(2361)], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([dispid(2524), 'propget'], HRESULT, 'ServerViewableItems',
              ( ['retval', 'out'], POINTER(POINTER(ServerViewableItems)), 'RHS' )),
    COMMETHOD([dispid(2525), 'propget'], HRESULT, 'TableStyles',
              ( ['retval', 'out'], POINTER(POINTER(TableStyles)), 'RHS' )),
    COMMETHOD([dispid(2526), 'propget'], HRESULT, 'DefaultTableStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2526), 'propput'], HRESULT, 'DefaultTableStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2527), 'propget'], HRESULT, 'DefaultPivotTableStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2527), 'propput'], HRESULT, 'DefaultPivotTableStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2528), 'propget'], HRESULT, 'CheckCompatibility',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2528), 'propput'], HRESULT, 'CheckCompatibility',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2529), 'propget'], HRESULT, 'HasVBProject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2530), 'propget'], HRESULT, 'CustomXMLParts',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CustomXMLParts)), 'RHS' )),
    COMMETHOD([dispid(2531), 'propget'], HRESULT, 'Final',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2531), 'propput'], HRESULT, 'Final',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2532), 'propget'], HRESULT, 'Research',
              ( ['retval', 'out'], POINTER(POINTER(Research)), 'RHS' )),
    COMMETHOD([dispid(2533), 'propget'], HRESULT, 'Theme',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.OfficeTheme)), 'RHS' )),
    COMMETHOD([dispid(2534)], HRESULT, 'ApplyTheme',
              ( ['in'], BSTR, 'Filename' )),
    COMMETHOD([dispid(2535), 'propget'], HRESULT, 'Excel8CompatibilityMode',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2536), 'propget'], HRESULT, 'ConnectionsDisabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2537)], HRESULT, 'EnableConnections'),
    COMMETHOD([dispid(2538), 'propget'], HRESULT, 'ShowPivotChartActiveFields',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2538), 'propput'], HRESULT, 'ShowPivotChartActiveFields',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2493)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], XlFixedFormatType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Quality' ),
              ( ['in', 'optional'], VARIANT, 'IncludeDocProperties' ),
              ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' ),
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'OpenAfterPublish' ),
              ( ['in', 'optional'], VARIANT, 'FixedFormatExtClassPtr' )),
    COMMETHOD([dispid(2539), 'propget'], HRESULT, 'IconSets',
              ( ['retval', 'out'], POINTER(POINTER(IconSets)), 'RHS' )),
    COMMETHOD([dispid(2540), 'propget'], HRESULT, 'EncryptionProvider',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2540), 'propput'], HRESULT, 'EncryptionProvider',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2541), 'propget'], HRESULT, 'DoNotPromptForConvert',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2541), 'propput'], HRESULT, 'DoNotPromptForConvert',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2542), 'propget'], HRESULT, 'ForceFullCalculation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2542), 'propput'], HRESULT, 'ForceFullCalculation',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2543)], HRESULT, 'ProtectSharing',
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'SharingPassword' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' )),
    COMMETHOD([dispid(2866), 'propget'], HRESULT, 'SlicerCaches',
              ( ['retval', 'out'], POINTER(POINTER(SlicerCaches)), 'RHS' )),
    COMMETHOD([dispid(2867), 'propget'], HRESULT, 'ActiveSlicer',
              ( ['retval', 'out'], POINTER(POINTER(Slicer)), 'RHS' )),
    COMMETHOD([dispid(2868), 'propget'], HRESULT, 'DefaultSlicerStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(2868), 'propput'], HRESULT, 'DefaultSlicerStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([dispid(2869), 'hidden'], HRESULT, 'Dummy26'),
    COMMETHOD([dispid(2870), 'hidden'], HRESULT, 'Dummy27'),
    COMMETHOD([dispid(2871), 'propget'], HRESULT, 'AccuracyVersion',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(2871), 'propput'], HRESULT, 'AccuracyVersion',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(3056), 'propget'], HRESULT, 'CaseSensitive',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(3057), 'propget'], HRESULT, 'UseWholeCellCriteria',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(3058), 'propget'], HRESULT, 'UseWildcards',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(690), 'propget'], HRESULT, 'PivotTables',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(3059), 'propget'], HRESULT, 'Model',
              ( ['retval', 'out'], POINTER(POINTER(Model)), 'RHS' )),
    COMMETHOD([dispid(2998), 'propget'], HRESULT, 'ChartDataPointTrack',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2998), 'propput'], HRESULT, 'ChartDataPointTrack',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(3060), 'propget'], HRESULT, 'DefaultTimelineStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([dispid(3060), 'propput'], HRESULT, 'DefaultTimelineStyle',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for _Workbook implementation
##class _Workbook_Impl(object):
##    def CheckIn(self, SaveChanges, Comments, MakePublic):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HasMailer = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Author = property(_get, _set, doc = _set.__doc__)
##
##    def MergeWorkbook(self, Filename):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Comments = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Research(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CustomDocumentProperties(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PersonalViewPrintSettings = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ServerViewableItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsInplace(self):
##        '-no docstring-'
##        #return RHS
##
##    def ReplyAll(self, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SmartTagOptions(self):
##        '-no docstring-'
##        #return RHS
##
##    def OpenLinks(self, Name, ReadOnly, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _ProtectSharing(self, Filename, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, SharingPassword):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ActiveSheet(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CreateBackup(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CaseSensitive(self):
##        '-no docstring-'
##        #return RHS
##
##    def RemoveUser(self, Index):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Sheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def GetWorkflowTemplates(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Path(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PasswordEncryptionAlgorithm(self):
##        '-no docstring-'
##        #return RHS
##
##    def DeleteNumberFormat(self, NumberFormat, lcid):
##        '-no docstring-'
##        #return 
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PasswordEncryptionKeyLength(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoUpdateFrequency = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UpdateLinks = property(_get, _set, doc = _set.__doc__)
##
##    def SetLinkOnData(self, Name, Procedure, lcid):
##        '-no docstring-'
##        #return 
##
##    def LockServerFile(self):
##        '-no docstring-'
##        #return 
##
##    def ExclusiveAccess(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadOnlyRecommended = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetDeactivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AccuracyVersion = property(_get, _set, doc = _set.__doc__)
##
##    def SendMailer(self, FileFormat, Priority, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Signatures(self):
##        '-no docstring-'
##        #return RHS
##
##    def ChangeFileAccess(self, Mode, WritePassword, Notify, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProtectStructure(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Theme(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PublishObjects(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Connections(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HTMLProject(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ReadOnly(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Protect(self, Password, Structure, Windows):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ForceFullCalculation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomViews(self):
##        '-no docstring-'
##        #return RHS
##
##    def ReloadAs(self, Encoding):
##        '-no docstring-'
##        #return 
##
##    def FollowHyperlink(self, Address, SubAddress, NewWindow, AddHistory, ExtraInfo, Method, HeaderInfo):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Excel8CompatibilityMode(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DocumentLibraryVersions(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    KeepChangeHistory = property(_get, _set, doc = _set.__doc__)
##
##    def ChangeLink(self, Name, NewName, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DoNotPromptForConvert = property(_get, _set, doc = _set.__doc__)
##
##    def PivotTableWizard(self, SourceType, SourceData, TableDestination, TableName, RowGrand, ColumnGrand, SaveData, HasAutoFormat, AutoPage, Reserved, BackgroundQuery, OptimizeCache, PageFieldOrder, PageFieldWrapCount, ReadData, Connection, lcid):
##        '-no docstring-'
##        #return 
##
##    def UnprotectSharing(self, SharingPassword):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PersonalViewListSettings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableAutoRecover = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IconSets(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Charts(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveSlicer(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def RemoveDocumentInformation(self, RemoveDocInfoType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def HasVBProject(self):
##        '-no docstring-'
##        #return RHS
##
##    def EnableConnections(self):
##        '-no docstring-'
##        #return 
##
##    def Reply(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def Save(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    PrecisionAsDisplayed = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Styles(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WebOptions(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RemovePersonalInformation = property(_get, _set, doc = _set.__doc__)
##
##    def ExportAsFixedFormat(self, Type, Filename, Quality, IncludeDocProperties, IgnorePrintAreas, From, To, OpenAfterPublish, FixedFormatExtClassPtr):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Permission(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Excel4IntlMacroSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Final = property(_get, _set, doc = _set.__doc__)
##
##    def Dummy27(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ProtectWindows(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    SaveLinkValues = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChartDataPointTrack = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnvelopeVisible = property(_get, _set, doc = _set.__doc__)
##
##    def AcceptAllChanges(self, When, Who, Where):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _ReadOnlyRecommended(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HighlightChangesOnScreen = property(_get, _set, doc = _set.__doc__)
##
##    def Protect(self, Password, Structure, Windows):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CalculationVersion(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SmartDocument(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoUpdateSaveChanges = property(_get, _set, doc = _set.__doc__)
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName, IgnorePrintAreas, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def XmlNamespaces(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetPasswordEncryptionOptions(self, PasswordEncryptionProvider, PasswordEncryptionAlgorithm, PasswordEncryptionKeyLength, PasswordEncryptionFileProperties):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BuiltinDocumentProperties(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPivotChartActiveFields = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomXMLParts(self):
##        '-no docstring-'
##        #return RHS
##
##    def WebPagePreview(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Excel4MacroSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListChangesOnNewSheet = property(_get, _set, doc = _set.__doc__)
##
##    def RecheckSmartTags(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    DisplayDrawingObjects = property(_get, _set, doc = _set.__doc__)
##
##    def EndReview(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DocumentInspectors(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ChangeHistoryDuration = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Sync(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    UpdateRemoteReferences = property(_get, _set, doc = _set.__doc__)
##
##    def PurgeChangeHistoryNow(self, Days, SharingPassword):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CheckCompatibility = property(_get, _set, doc = _set.__doc__)
##
##    def XmlImportXml(self, Data, Overwrite, Destination):
##        '-no docstring-'
##        #return ImportMap, RHS
##
##    def LinkInfo(self, Name, LinkInfo, Type, EditionRef, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EncryptionProvider = property(_get, _set, doc = _set.__doc__)
##
##    def GetWorkflowTasks(self):
##        '-no docstring-'
##        #return RHS
##
##    def RunAutoMacros(self, Which, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TemplateRemoveExtData = property(_get, _set, doc = _set.__doc__)
##
##    def UpdateLink(self, Name, Type, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TableStyles(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultTableStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowPivotTableFieldList = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def VBProject(self):
##        '-no docstring-'
##        #return RHS
##
##    def ReplyWithChanges(self, ShowMessage):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PivotTables(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveChart(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy17(self, calcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DialogSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InactiveListBorderVisible = property(_get, _set, doc = _set.__doc__)
##
##    def ForwardMailer(self, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Worksheets(self):
##        '-no docstring-'
##        #return RHS
##
##    def Post(self, DestName, lcid):
##        '-no docstring-'
##        #return 
##
##    def SendFaxOverInternet(self, Recipients, Subject, ShowMessage):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IsAddin = property(_get, _set, doc = _set.__doc__)
##
##    def RefreshAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def MultiUserEditing(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ConnectionsDisabled(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Date1904 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UserStatus(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Routed(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasPassword(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSave = property(_get, _set, doc = _set.__doc__)
##
##    def _SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AccessMode, ConflictResolution, AddToMru, TextCodepage, TextVisualLayout, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UseWholeCellCriteria(self):
##        '-no docstring-'
##        #return RHS
##
##    def SaveAsXMLData(self, Filename, Map):
##        '-no docstring-'
##        #return 
##
##    def HighlightChangesOptions(self, When, Who, Where):
##        '-no docstring-'
##        #return 
##
##    def PivotCaches(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AccessMode, ConflictResolution, AddToMru, TextCodepage, TextVisualLayout, Local, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PasswordEncryptionProvider(self):
##        '-no docstring-'
##        #return RHS
##
##    def SaveCopyAs(self, Filename, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, Index, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, lcid, RHS):
##        '-no docstring-'
##    Colors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultSlicerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def CanCheckIn(self):
##        '-no docstring-'
##        #return RHS
##
##    def Unprotect(self, Password, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Keywords = property(_get, _set, doc = _set.__doc__)
##
##    def Close(self, SaveChanges, Filename, RouteWorkbook, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def FullName(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FullNameURLEncoded(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CommandBars(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ServerPolicy(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Container(self):
##        '-no docstring-'
##        #return RHS
##
##    def Dummy16(self):
##        '-no docstring-'
##        #return 
##
##    def SendMail(self, Recipients, Subject, ReturnReceipt, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AcceptLabelsInFormulas = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WritePassword = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultPivotTableStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WriteReservedBy(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ConflictResolution = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RoutingSlip(self):
##        '-no docstring-'
##        #return RHS
##
##    def RejectAllChanges(self, When, Who, Where):
##        '-no docstring-'
##        #return 
##
##    def CheckInWithVersion(self, SaveChanges, Comments, MakePublic, VersionType):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Mailer(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    ShowConflictHistory = property(_get, _set, doc = _set.__doc__)
##
##    def ProtectSharing(self, Filename, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, SharingPassword, FileFormat):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    HasRoutingSlip = property(_get, _set, doc = _set.__doc__)
##
##    def sblt(self, s):
##        '-no docstring-'
##        #return 
##
##    def NewWindow(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def ToggleFormsDesign(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContentTypeProperties(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CodeName(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Password = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def VBASigned(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FileFormat(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RevisionNumber(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SharedWorkspace(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def WriteReserved(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def ResetColors(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return RHS
##
##    def Route(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def Dummy26(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Modules(self):
##        '-no docstring-'
##        #return RHS
##
##    def LinkSources(self, Type, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def BreakLink(self, Name, Type):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayInkComments = property(_get, _set, doc = _set.__doc__)
##
##    def XmlImport(self, Url, Overwrite, Destination):
##        '-no docstring-'
##        #return ImportMap, RHS
##
##    @property
##    def Model(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddToFavorites(self):
##        '-no docstring-'
##        #return 
##
##    def ApplyTheme(self, Filename):
##        '-no docstring-'
##        #return 
##
##    def Activate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DefaultTimelineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def SendForReview(self, Recipients, Subject, ShowMessage, IncludeAttachment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def XmlMaps(self):
##        '-no docstring-'
##        #return RHS
##
##    def UpdateFromFile(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetActivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _CodeName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Names(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UserControl = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PasswordEncryptionFileProperties(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SlicerCaches(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Saved = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UseWildcards(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlRangeValueDataType'
xlRangeValueDefault = 10
xlRangeValueXMLSpreadsheet = 11
xlRangeValueMSPersistXML = 12
XlRangeValueDataType = c_int # enum
class _IOLEObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
_IOLEObject._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoLoad',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoLoad',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoUpdate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoUpdate',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Object',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OLEType',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([], HRESULT, 'Update',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Verb',
              ( ['in', 'optional'], XlOLEVerb, 'Verb', 1 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListFillRange',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ListFillRange',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'progID',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AltHTML',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AltHTML',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for _IOLEObject implementation
##class _IOLEObject_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def Update(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ListFillRange = property(_get, _set, doc = _set.__doc__)
##
##    def Verb(self, Verb):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoLoad = property(_get, _set, doc = _set.__doc__)
##
##    def Activate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoUpdate = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AltHTML = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def OLEType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def progID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IValidation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002442F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IValidation._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], XlDVType, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'AlertStyle' ),
              ( ['in', 'optional'], VARIANT, 'Operator' ),
              ( ['in', 'optional'], VARIANT, 'Formula1' ),
              ( ['in', 'optional'], VARIANT, 'Formula2' )),
    COMMETHOD(['propget'], HRESULT, 'AlertStyle',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IgnoreBlank',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IgnoreBlank',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IMEMode',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IMEMode',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InCellDropdown',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InCellDropdown',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'ErrorMessage',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ErrorMessage',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ErrorTitle',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ErrorTitle',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InputMessage',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InputMessage',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InputTitle',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InputTitle',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula2',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Modify',
              ( ['in', 'optional'], VARIANT, 'Type' ),
              ( ['in', 'optional'], VARIANT, 'AlertStyle' ),
              ( ['in', 'optional'], VARIANT, 'Operator' ),
              ( ['in', 'optional'], VARIANT, 'Formula1' ),
              ( ['in', 'optional'], VARIANT, 'Formula2' )),
    COMMETHOD(['propget'], HRESULT, 'Operator',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowError',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowError',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowInput',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowInput',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IValidation implementation
##class IValidation_Impl(object):
##    @property
##    def Formula2(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IgnoreBlank = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowError = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InCellDropdown = property(_get, _set, doc = _set.__doc__)
##
##    def Modify(self, Type, AlertStyle, Operator, Formula1, Formula2):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AlertStyle(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InputTitle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Type, AlertStyle, Operator, Formula1, Formula2):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Formula1(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ErrorMessage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowInput = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Operator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ErrorTitle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IMEMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InputMessage = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IPublishObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024443-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPublishObjects._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], XlSourceType, 'SourceType' ),
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Sheet' ),
              ( ['in', 'optional'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'HtmlType' ),
              ( ['in', 'optional'], VARIANT, 'DivID' ),
              ( ['in', 'optional'], VARIANT, 'Title' ),
              ( ['retval', 'out'], POINTER(POINTER(PublishObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PublishObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(PublishObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Publish'),
]
################################################################
## code template for IPublishObjects implementation
##class IPublishObjects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Publish(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, SourceType, Filename, Sheet, Source, HtmlType, DivID, Title):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlErrorChecks'
xlEvaluateToError = 1
xlTextDate = 2
xlNumberAsText = 3
xlInconsistentFormula = 4
xlOmittedCells = 5
xlUnlockedFormulaCells = 6
xlEmptyCellReferences = 7
xlListDataValidation = 8
xlInconsistentListFormula = 9
XlErrorChecks = c_int # enum

# values for enumeration 'XlSearchOrder'
xlByColumns = 2
xlByRows = 1
XlSearchOrder = c_int # enum
_OLEObject._disp_methods_ = [
    DISPMETHOD([dispid(-2147417964), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(-2147417963), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(-2147417962), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(-2147417497), 'propget'], POINTER(Range), 'BottomRightCell'),
    DISPMETHOD([dispid(-2147417510)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(-2147417561)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(-2147417899)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(-2147417547)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(-2147417995)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(-2147417073)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(-2147417512), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(-2147417512), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(-2147417989), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(-2147417989), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(-2147417626), 'propget'], c_int, 'Index'),
    DISPMETHOD([dispid(-2147417985), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(-2147417985), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(-2147417843), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(-2147417843), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(-2147418002), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(-2147418002), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417516), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(-2147417516), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417495), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(-2147417495), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(-2147417494), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(-2147417494), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(-2147417877)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(-2147417507)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(-2147417986), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(-2147417986), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(-2147417492), 'propget'], POINTER(Range), 'TopLeftCell'),
    DISPMETHOD([dispid(-2147417554), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(-2147417554), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(-2147417990), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(-2147417990), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(-2147417490), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(-2147416584), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(-2147417984), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(-2147417983), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(-2147418009), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(-2147418009), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(-2147417808)], VARIANT, 'Activate'),
    DISPMETHOD([dispid(-2147416926), 'propget'], VARIANT_BOOL, 'AutoLoad'),
    DISPMETHOD([dispid(-2147416926), 'propput'], None, 'AutoLoad',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(-2147417064), 'propget'], VARIANT_BOOL, 'AutoUpdate'),
    DISPMETHOD([dispid(-2147417064), 'propput'], None, 'AutoUpdate',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(-2147417063), 'propget'], POINTER(IDispatch), 'Object'),
    DISPMETHOD([dispid(-2147417058), 'propget'], VARIANT, 'OLEType'),
    DISPMETHOD([dispid(-2147417391), 'propget'], BSTR, 'SourceName'),
    DISPMETHOD([dispid(-2147417391), 'propput'], None, 'SourceName',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417432)], VARIANT, 'Update'),
    DISPMETHOD([dispid(-2147417506)], VARIANT, 'Verb',
               ( ['in', 'optional'], XlOLEVerb, 'Verb', 1 )),
    DISPMETHOD([dispid(-2147417054), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(-2147417054), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417265), 'propget'], BSTR, 'ListFillRange'),
    DISPMETHOD([dispid(-2147417265), 'propput'], None, 'ListFillRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147416589), 'propget'], BSTR, 'progID'),
    DISPMETHOD([dispid(-2147416259), 'hidden', 'propget'], BSTR, 'AltHTML'),
    DISPMETHOD([dispid(-2147416259), 'hidden', 'propput'], None, 'AltHTML',
               ( ['in'], BSTR, 'rhs' )),
]
class IArc(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IArc._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy43'),
]
################################################################
## code template for IArc implementation
##class IArc_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy43(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IColorStops(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244AE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IColorStops._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Position' ),
              ( ['retval', 'out'], POINTER(POINTER(ColorStop)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ColorStop)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ColorStop)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Clear'),
]
################################################################
## code template for IColorStops implementation
##class IColorStops_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Position):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class Charts(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086D-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Charts._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181), 'hidden'], POINTER(Chart), 'Add',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(551)], None, 'Copy',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1610743815), 'restricted', 'hidden'], None, '_Dummy7'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(637)], None, 'Move',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(905), 'hidden'], None, '__PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(281)], None, 'PrintPreview',
               ( ['in', 'optional'], VARIANT, 'EnableChanges' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(1418), 'propget'], POINTER(HPageBreaks), 'HPageBreaks'),
    DISPMETHOD([dispid(1419), 'propget'], POINTER(VPageBreaks), 'VPageBreaks'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1772), 'hidden'], None, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2361)], None, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(3054)], POINTER(Chart), 'Add2',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' ),
               ( ['in', 'optional'], VARIANT, 'NewLayout' )),
]
class _IQueryTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024428-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
_IQueryTable._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FieldNames',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FieldNames',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowNumbers',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RowNumbers',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FillAdjacentFormulas',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FillAdjacentFormulas',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'HasAutoFormat',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'HasAutoFormat',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshOnFileOpen',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshOnFileOpen',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Refreshing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FetchedRowOverflow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BackgroundQuery',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BackgroundQuery',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'CancelRefresh'),
    COMMETHOD(['propget'], HRESULT, 'RefreshStyle',
              ( ['retval', 'out'], POINTER(XlCellInsertionMode), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshStyle',
              ( ['in'], XlCellInsertionMode, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SavePassword',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SavePassword',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Destination',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connection',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Connection',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Sql',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'Sql',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PostText',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PostText',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ResultRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Refresh',
              ( ['in', 'optional'], VARIANT, 'BackgroundQuery' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parameters',
              ( ['retval', 'out'], POINTER(POINTER(Parameters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Recordset',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Recordset',
              ( ['in'], POINTER(IDispatch), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SaveData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SaveData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'TablesOnlyFromHTML',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'TablesOnlyFromHTML',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableEditing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableEditing',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFilePlatform',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFilePlatform',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileStartRow',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileStartRow',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileParseType',
              ( ['retval', 'out'], POINTER(XlTextParsingType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileParseType',
              ( ['in'], XlTextParsingType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileTextQualifier',
              ( ['retval', 'out'], POINTER(XlTextQualifier), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileTextQualifier',
              ( ['in'], XlTextQualifier, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileConsecutiveDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileConsecutiveDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileTabDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileTabDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileSemicolonDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileSemicolonDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileCommaDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileCommaDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileSpaceDelimiter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileSpaceDelimiter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileOtherDelimiter',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileOtherDelimiter',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileColumnDataTypes',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileColumnDataTypes',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileFixedColumnWidths',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileFixedColumnWidths',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PreserveColumnInfo',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PreserveColumnInfo',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PreserveFormatting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PreserveFormatting',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AdjustColumnWidth',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AdjustColumnWidth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandText',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandText',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CommandType',
              ( ['retval', 'out'], POINTER(XlCmdType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CommandType',
              ( ['in'], XlCmdType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFilePromptOnRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFilePromptOnRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'QueryType',
              ( ['retval', 'out'], POINTER(XlQueryType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MaintainConnection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MaintainConnection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileDecimalSeparator',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileDecimalSeparator',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileThousandsSeparator',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileThousandsSeparator',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshPeriod',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshPeriod',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'ResetTimer'),
    COMMETHOD(['propget'], HRESULT, 'WebSelectionType',
              ( ['retval', 'out'], POINTER(XlWebSelectionType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebSelectionType',
              ( ['in'], XlWebSelectionType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WebFormatting',
              ( ['retval', 'out'], POINTER(XlWebFormatting), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebFormatting',
              ( ['in'], XlWebFormatting, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WebTables',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebTables',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WebPreFormattedTextToColumns',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebPreFormattedTextToColumns',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WebSingleBlockTextImport',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebSingleBlockTextImport',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WebDisableDateRecognition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebDisableDateRecognition',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WebConsecutiveDelimitersAsOne',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebConsecutiveDelimitersAsOne',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WebDisableRedirections',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WebDisableRedirections',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EditWebPage',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EditWebPage',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceConnectionFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceConnectionFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceDataFile',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SourceDataFile',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RobustConnect',
              ( ['retval', 'out'], POINTER(XlRobustConnect), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RobustConnect',
              ( ['in'], XlRobustConnect, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileTrailingMinusNumbers',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileTrailingMinusNumbers',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'SaveAsODC',
              ( ['in'], BSTR, 'ODCFileName' ),
              ( ['in', 'optional'], VARIANT, 'Description' ),
              ( ['in', 'optional'], VARIANT, 'Keywords' )),
    COMMETHOD(['propget'], HRESULT, 'ListObject',
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFileVisualLayout',
              ( ['retval', 'out'], POINTER(XlTextVisualLayoutType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TextFileVisualLayout',
              ( ['in'], XlTextVisualLayoutType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WorkbookConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sort',
              ( ['retval', 'out'], POINTER(POINTER(Sort)), 'RHS' )),
]
################################################################
## code template for _IQueryTable implementation
##class _IQueryTable_Impl(object):
##    @property
##    def ListObject(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileConsecutiveDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileThousandsSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def CancelRefresh(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Destination(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MaintainConnection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshPeriod = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileColumnDataTypes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshOnFileOpen = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WorkbookConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PreserveColumnInfo = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceDataFile = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Refreshing(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TablesOnlyFromHTML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PostText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFilePromptOnRefresh = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parameters(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self, BackgroundQuery):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RowNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BackgroundQuery = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebTables = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileTextQualifier = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebConsecutiveDelimitersAsOne = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Sql = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileParseType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebFormatting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileTabDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FillAdjacentFormulas = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Sort(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def ResetTimer(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EditWebPage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebDisableRedirections = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileDecimalSeparator = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileStartRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileTrailingMinusNumbers = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FieldNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileCommaDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileVisualLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Connection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebSingleBlockTextImport = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileSpaceDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasAutoFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableEditing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileFixedColumnWidths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def QueryType(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebPreFormattedTextToColumns = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileSemicolonDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SourceConnectionFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RobustConnect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Recordset(self, RHS):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ResultRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFilePlatform = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableRefresh = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AdjustColumnWidth = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FetchedRowOverflow(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CommandType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebDisableDateRecognition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PreserveFormatting = property(_get, _set, doc = _set.__doc__)
##
##    def SaveAsODC(self, ODCFileName, Description, Keywords):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SaveData = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WebSelectionType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TextFileOtherDelimiter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SavePassword = property(_get, _set, doc = _set.__doc__)
##

class IRectangle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRectangle._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IRectangle implementation
##class IRectangle_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlRgbColor'
rgbAliceBlue = 16775408
rgbAntiqueWhite = 14150650
rgbAqua = 16776960
rgbAquamarine = 13959039
rgbAzure = 16777200
rgbBeige = 14480885
rgbBisque = 12903679
rgbBlack = 0
rgbBlanchedAlmond = 13495295
rgbBlue = 16711680
rgbBlueViolet = 14822282
rgbBrown = 2763429
rgbBurlyWood = 8894686
rgbCadetBlue = 10526303
rgbChartreuse = 65407
rgbCoral = 5275647
rgbCornflowerBlue = 15570276
rgbCornsilk = 14481663
rgbCrimson = 3937500
rgbDarkBlue = 9109504
rgbDarkCyan = 9145088
rgbDarkGoldenrod = 755384
rgbDarkGreen = 25600
rgbDarkGray = 11119017
rgbDarkGrey = 11119017
rgbDarkKhaki = 7059389
rgbDarkMagenta = 9109643
rgbDarkOliveGreen = 3107669
rgbDarkOrange = 36095
rgbDarkOrchid = 13382297
rgbDarkRed = 139
rgbDarkSalmon = 8034025
rgbDarkSeaGreen = 9419919
rgbDarkSlateBlue = 9125192
rgbDarkSlateGray = 5197615
rgbDarkSlateGrey = 5197615
rgbDarkTurquoise = 13749760
rgbDarkViolet = 13828244
rgbDeepPink = 9639167
rgbDeepSkyBlue = 16760576
rgbDimGray = 6908265
rgbDimGrey = 6908265
rgbDodgerBlue = 16748574
rgbFireBrick = 2237106
rgbFloralWhite = 15792895
rgbForestGreen = 2263842
rgbFuchsia = 16711935
rgbGainsboro = 14474460
rgbGhostWhite = 16775416
rgbGold = 55295
rgbGoldenrod = 2139610
rgbGray = 8421504
rgbGreen = 32768
rgbGrey = 8421504
rgbGreenYellow = 3145645
rgbHoneydew = 15794160
rgbHotPink = 11823615
rgbIndianRed = 6053069
rgbIndigo = 8519755
rgbIvory = 15794175
rgbKhaki = 9234160
rgbLavender = 16443110
rgbLavenderBlush = 16118015
rgbLawnGreen = 64636
rgbLemonChiffon = 13499135
rgbLightBlue = 15128749
rgbLightCoral = 8421616
rgbLightCyan = 9145088
rgbLightGoldenrodYellow = 13826810
rgbLightGray = 13882323
rgbLightGreen = 9498256
rgbLightGrey = 13882323
rgbLightPink = 12695295
rgbLightSalmon = 8036607
rgbLightSeaGreen = 11186720
rgbLightSkyBlue = 16436871
rgbLightSlateGray = 10061943
rgbLightSlateGrey = 10061943
rgbLightSteelBlue = 14599344
rgbLightYellow = 14745599
rgbLime = 65280
rgbLimeGreen = 3329330
rgbLinen = 15134970
rgbMaroon = 128
rgbMediumAquamarine = 11206502
rgbMediumBlue = 13434880
rgbMediumOrchid = 13850042
rgbMediumPurple = 14381203
rgbMediumSeaGreen = 7451452
rgbMediumSlateBlue = 15624315
rgbMediumSpringGreen = 10156544
rgbMediumTurquoise = 13422920
rgbMediumVioletRed = 8721863
rgbMidnightBlue = 7346457
rgbMintCream = 16449525
rgbMistyRose = 14804223
rgbMoccasin = 11920639
rgbNavajoWhite = 11394815
rgbNavy = 8388608
rgbNavyBlue = 8388608
rgbOldLace = 15136253
rgbOlive = 32896
rgbOliveDrab = 2330219
rgbOrange = 42495
rgbOrangeRed = 17919
rgbOrchid = 14053594
rgbPaleGoldenrod = 7071982
rgbPaleGreen = 10025880
rgbPaleTurquoise = 15658671
rgbPaleVioletRed = 9662683
rgbPapayaWhip = 14020607
rgbPeachPuff = 12180223
rgbPeru = 4163021
rgbPink = 13353215
rgbPlum = 14524637
rgbPowderBlue = 15130800
rgbPurple = 8388736
rgbRed = 255
rgbRosyBrown = 9408444
rgbRoyalBlue = 14772545
rgbSalmon = 7504122
rgbSandyBrown = 6333684
rgbSeaGreen = 5737262
rgbSeashell = 15660543
rgbSienna = 2970272
rgbSilver = 12632256
rgbSkyBlue = 15453831
rgbSlateBlue = 13458026
rgbSlateGray = 9470064
rgbSlateGrey = 9470064
rgbSnow = 16448255
rgbSpringGreen = 8388352
rgbSteelBlue = 11829830
rgbTan = 9221330
rgbTeal = 8421376
rgbThistle = 14204888
rgbTomato = 4678655
rgbTurquoise = 13688896
rgbYellow = 65535
rgbYellowGreen = 3329434
rgbViolet = 15631086
rgbWheat = 11788021
rgbWhite = 16777215
rgbWhiteSmoke = 16119285
XlRgbColor = c_int # enum
class IGroupShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IGroupShapes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
]
################################################################
## code template for IGroupShapes implementation
##class IGroupShapes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IDataTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020843-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDataTable._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowLegendKey',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowLegendKey',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasBorderHorizontal',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasBorderHorizontal',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasBorderVertical',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasBorderVertical',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasBorderOutline',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasBorderOutline',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IDataTable implementation
##class IDataTable_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowLegendKey = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasBorderVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasBorderOutline = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasBorderHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IUniqueValues(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IUniqueValues._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StopIfTrue',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StopIfTrue',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AppliesTo',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DupeUnique',
              ( ['retval', 'out'], POINTER(XlDupeUnique), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DupeUnique',
              ( ['in'], XlDupeUnique, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Borders',
              ( ['retval', 'out'], POINTER(POINTER(Borders)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'SetFirstPriority'),
    COMMETHOD([], HRESULT, 'SetLastPriority'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'ModifyAppliesToRange',
              ( ['in'], POINTER(Range), 'Range' )),
    COMMETHOD(['propget'], HRESULT, 'PTCondition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScopeType',
              ( ['retval', 'out'], POINTER(XlPivotConditionScope), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScopeType',
              ( ['in'], XlPivotConditionScope, 'RHS' )),
]
################################################################
## code template for IUniqueValues implementation
##class IUniqueValues_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DupeUnique = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PTCondition(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AppliesTo(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StopIfTrue = property(_get, _set, doc = _set.__doc__)
##
##    def ModifyAppliesToRange(self, Range):
##        '-no docstring-'
##        #return 
##
##    def SetFirstPriority(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetLastPriority(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Borders(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScopeType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class Global(CoClass):
    _reg_clsid_ = GUID('{00020812-0000-0000-C000-000000000046}')
    _idlflags_ = ['appobject', 'hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
Global._com_interfaces_ = [_Global]

class ISmartTagRecognizers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024463-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISmartTagRecognizers._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SmartTagRecognizer)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SmartTagRecognizer)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Recognize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Recognize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for ISmartTagRecognizers implementation
##class ISmartTagRecognizers_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Recognize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ISmartTag(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024460-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISmartTag._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DownloadURL',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'XML',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'SmartTagActions',
              ( ['retval', 'out'], POINTER(POINTER(SmartTagActions)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Properties',
              ( ['retval', 'out'], POINTER(POINTER(CustomProperties)), 'RHS' )),
]
################################################################
## code template for ISmartTag implementation
##class ISmartTag_Impl(object):
##    @property
##    def XML(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SmartTagActions(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DownloadURL(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Properties(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'XlDataLabelSeparator'
xlDataLabelSeparatorDefault = 1
XlDataLabelSeparator = c_int # enum
class IAreas(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020860-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAreas._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
]
################################################################
## code template for IAreas implementation
##class IAreas_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IListObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024470-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListObjects._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_Add',
              ( ['in', 'optional'], XlListObjectSourceType, 'SourceType', 1 ),
              ( ['in', 'optional'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'LinkSource' ),
              ( ['in', 'optional'], XlYesNoGuess, 'XlListObjectHasHeaders', 0 ),
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], XlListObjectSourceType, 'SourceType', 1 ),
              ( ['in', 'optional'], VARIANT, 'Source' ),
              ( ['in', 'optional'], VARIANT, 'LinkSource' ),
              ( ['in', 'optional'], XlYesNoGuess, 'XlListObjectHasHeaders', 0 ),
              ( ['in', 'optional'], VARIANT, 'Destination' ),
              ( ['in', 'optional'], VARIANT, 'TableStyleName' ),
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
]
################################################################
## code template for IListObjects implementation
##class IListObjects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, SourceType, Source, LinkSource, XlListObjectHasHeaders, Destination, TableStyleName):
##        '-no docstring-'
##        #return RHS
##
##    def _Add(self, SourceType, Source, LinkSource, XlListObjectHasHeaders, Destination):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IModelRelationship(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244D9-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelRelationship._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ForeignKeyTable',
              ( ['retval', 'out'], POINTER(POINTER(ModelTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ForeignKeyColumn',
              ( ['retval', 'out'], POINTER(POINTER(ModelTableColumn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrimaryKeyTable',
              ( ['retval', 'out'], POINTER(POINTER(ModelTable)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrimaryKeyColumn',
              ( ['retval', 'out'], POINTER(POINTER(ModelTableColumn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Active',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Active',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for IModelRelationship implementation
##class IModelRelationship_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ForeignKeyColumn(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Active = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PrimaryKeyTable(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ForeignKeyTable(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PrimaryKeyColumn(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class ILabels(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020891-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILabels._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy33'),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Label)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ILabels implementation
##class ILabels_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy33(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IPhonetic(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024438-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPhonetic._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CharacterType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CharacterType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Alignment',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Alignment',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IPhonetic implementation
##class IPhonetic_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CharacterType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##

class IHiLoLines(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C2-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IHiLoLines._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
]
################################################################
## code template for IHiLoLines implementation
##class IHiLoLines_Impl(object):
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##

class IPivotLine(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024480-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotLine._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LineType',
              ( ['retval', 'out'], POINTER(XlPivotLineType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotLineCells',
              ( ['retval', 'out'], POINTER(POINTER(PivotLineCells)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotLineCellsFull',
              ( ['retval', 'out'], POINTER(POINTER(PivotLineCells)), 'RHS' )),
]
################################################################
## code template for IPivotLine implementation
##class IPivotLine_Impl(object):
##    @property
##    def PivotLineCellsFull(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotLineCells(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LineType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Position(self):
##        '-no docstring-'
##        #return RHS
##

class DrawingObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
DrawingObjects._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1610743847), 'restricted', 'hidden'], None, '_Dummy28'),
    DISPMETHOD([dispid(1063), 'propget'], VARIANT_BOOL, 'AddIndent'),
    DISPMETHOD([dispid(1063), 'propput'], None, 'AddIndent',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(851)], VARIANT, 'AddItem',
               ( ['in'], VARIANT, 'Text' ),
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(611), 'propget'], VARIANT, 'ArrowHeadLength'),
    DISPMETHOD([dispid(611), 'propput'], None, 'ArrowHeadLength',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(612), 'propget'], VARIANT, 'ArrowHeadStyle'),
    DISPMETHOD([dispid(612), 'propput'], None, 'ArrowHeadStyle',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(613), 'propget'], VARIANT, 'ArrowHeadWidth'),
    DISPMETHOD([dispid(613), 'propput'], None, 'ArrowHeadWidth',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(614), 'propget'], VARIANT_BOOL, 'AutoSize'),
    DISPMETHOD([dispid(614), 'propput'], None, 'AutoSize',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(858), 'propget'], VARIANT_BOOL, 'CancelButton'),
    DISPMETHOD([dispid(858), 'propput'], None, 'CancelButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(857), 'propget'], VARIANT_BOOL, 'DefaultButton'),
    DISPMETHOD([dispid(857), 'propput'], None, 'DefaultButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(859), 'propget'], VARIANT_BOOL, 'DismissButton'),
    DISPMETHOD([dispid(859), 'propput'], None, 'DismissButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(922), 'propget'], VARIANT_BOOL, 'DisplayVerticalScrollBar'),
    DISPMETHOD([dispid(922), 'propput'], None, 'DisplayVerticalScrollBar',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(848), 'propget'], c_int, 'DropDownLines'),
    DISPMETHOD([dispid(848), 'propput'], None, 'DropDownLines',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(1610743879), 'restricted', 'hidden'], None, '_Dummy47'),
    DISPMETHOD([dispid(860), 'propget'], VARIANT_BOOL, 'HelpButton'),
    DISPMETHOD([dispid(860), 'propput'], None, 'HelpButton',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(136), 'propget'], VARIANT, 'HorizontalAlignment'),
    DISPMETHOD([dispid(136), 'propput'], None, 'HorizontalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(854), 'propget'], c_int, 'InputType'),
    DISPMETHOD([dispid(854), 'propput'], None, 'InputType',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(845), 'propget'], c_int, 'LargeChange'),
    DISPMETHOD([dispid(845), 'propput'], None, 'LargeChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1610743891), 'restricted', 'hidden'], None, '_Dummy54'),
    DISPMETHOD([dispid(861)], VARIANT, 'List',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1610743893), 'restricted', 'hidden'], None, '_Dummy56'),
    DISPMETHOD([dispid(847), 'propget'], BSTR, 'ListFillRange'),
    DISPMETHOD([dispid(847), 'propput'], None, 'ListFillRange',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(850), 'propget'], c_int, 'ListIndex'),
    DISPMETHOD([dispid(850), 'propput'], None, 'ListIndex',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(842), 'propget'], c_int, 'Max'),
    DISPMETHOD([dispid(842), 'propput'], None, 'Max',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(843), 'propget'], c_int, 'Min'),
    DISPMETHOD([dispid(843), 'propput'], None, 'Min',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(855), 'propget'], VARIANT_BOOL, 'MultiLine'),
    DISPMETHOD([dispid(855), 'propput'], None, 'MultiLine',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(32), 'propget'], VARIANT_BOOL, 'MultiSelect'),
    DISPMETHOD([dispid(32), 'propput'], None, 'MultiSelect',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(134), 'propget'], VARIANT, 'Orientation'),
    DISPMETHOD([dispid(134), 'propput'], None, 'Orientation',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(853)], VARIANT, 'RemoveAllItems'),
    DISPMETHOD([dispid(852)], VARIANT, 'RemoveItem',
               ( ['in'], c_int, 'Index' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(604)], VARIANT, 'Reshape',
               ( ['in'], c_int, 'Vertex' ),
               ( ['in'], VARIANT, 'Insert' ),
               ( ['in', 'optional'], VARIANT, 'Left' ),
               ( ['in', 'optional'], VARIANT, 'Top' )),
    DISPMETHOD([dispid(619), 'propget'], VARIANT_BOOL, 'RoundedCorners'),
    DISPMETHOD([dispid(619), 'propput'], None, 'RoundedCorners',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1123)], VARIANT, 'Selected',
               ( ['in', 'optional'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(103), 'propget'], VARIANT_BOOL, 'Shadow'),
    DISPMETHOD([dispid(103), 'propput'], None, 'Shadow',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(844), 'propget'], c_int, 'SmallChange'),
    DISPMETHOD([dispid(844), 'propput'], None, 'SmallChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(244)], POINTER(IDispatch), 'Ungroup'),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(137), 'propget'], VARIANT, 'VerticalAlignment'),
    DISPMETHOD([dispid(137), 'propput'], None, 'VerticalAlignment',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(621)], VARIANT, 'Vertices',
               ( ['in', 'optional'], VARIANT, 'Index1' ),
               ( ['in', 'optional'], VARIANT, 'Index2' )),
    DISPMETHOD([dispid(975), 'propget'], c_int, 'ReadingOrder'),
    DISPMETHOD([dispid(975), 'propput'], None, 'ReadingOrder',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(856)], VARIANT, 'LinkCombo',
               ( ['in', 'optional'], VARIANT, 'Link' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class ITableObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITableObject._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowNumbers',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RowNumbers',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FetchedRowOverflow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RefreshStyle',
              ( ['retval', 'out'], POINTER(XlCellInsertionMode), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RefreshStyle',
              ( ['in'], XlCellInsertionMode, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableRefresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableRefresh',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Destination',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ResultRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Refresh',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableEditing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableEditing',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PreserveColumnInfo',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PreserveColumnInfo',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PreserveFormatting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PreserveFormatting',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AdjustColumnWidth',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AdjustColumnWidth',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ListObject',
              ( ['retval', 'out'], POINTER(POINTER(ListObject)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WorkbookConnection',
              ( ['retval', 'out'], POINTER(POINTER(WorkbookConnection)), 'RHS' )),
]
################################################################
## code template for ITableObject implementation
##class ITableObject_Impl(object):
##    @property
##    def Destination(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ResultRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableRefresh = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RowNumbers = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FetchedRowOverflow(self):
##        '-no docstring-'
##        #return RHS
##
##    def Refresh(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AdjustColumnWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PreserveFormatting = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RefreshStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableEditing = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ListObject(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PreserveColumnInfo = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WorkbookConnection(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IDataBarBorder(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BE-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDataBarBorder._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlDataBarBorderType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlDataBarBorderType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IDataBarBorder implementation
##class IDataBarBorder_Impl(object):
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlReferenceType'
xlAbsolute = 1
xlAbsRowRelColumn = 2
xlRelative = 4
xlRelRowAbsColumn = 3
XlReferenceType = c_int # enum
class IModule(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AD-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModule._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_CodeName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Move',
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'After' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Next',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnDoubleClick',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnSheetActivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnSheetDeactivate',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PageSetup',
              ( ['retval', 'out'], POINTER(POINTER(PageSetup)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Previous',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '__PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy18'),
    COMMETHOD(['hidden'], HRESULT, '_Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'ProtectContents',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy21'),
    COMMETHOD(['propget'], HRESULT, 'ProtectionMode',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy23'),
    COMMETHOD(['hidden'], HRESULT, '_SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD([], HRESULT, 'Unprotect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'lcid'], c_int, 'lcid', _lcid )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['retval', 'out'], POINTER(XlSheetVisibility), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in', 'lcid'], c_int, 'lcid', _lcid ),
              ( ['in'], XlSheetVisibility, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(Shapes)), 'RHS' )),
    COMMETHOD([], HRESULT, 'InsertFile',
              ( ['in'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Merge' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SaveAs',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'FileFormat' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'WriteResPassword' ),
              ( ['in', 'optional'], VARIANT, 'ReadOnlyRecommended' ),
              ( ['in', 'optional'], VARIANT, 'CreateBackup' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'TextCodepage' ),
              ( ['in', 'optional'], VARIANT, 'TextVisualLayout' )),
    COMMETHOD([], HRESULT, 'Protect',
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'DrawingObjects' ),
              ( ['in', 'optional'], VARIANT, 'Contents' ),
              ( ['in', 'optional'], VARIANT, 'Scenarios' ),
              ( ['in', 'optional'], VARIANT, 'UserInterfaceOnly' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' )),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' )),
]
################################################################
## code template for IModule implementation
##class IModule_Impl(object):
##    @property
##    def Index(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnDoubleClick = property(_get, _set, doc = _set.__doc__)
##
##    def _SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Next(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ProtectContents(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CodeName(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def Protect(self, Password, DrawingObjects, Contents, Scenarios, UserInterfaceOnly):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return RHS
##
##    def __PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetDeactivate = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def SaveAs(self, Filename, FileFormat, Password, WriteResPassword, ReadOnlyRecommended, CreateBackup, AddToMru, TextCodepage, TextVisualLayout):
##        '-no docstring-'
##        #return 
##
##    def Activate(self, lcid):
##        '-no docstring-'
##        #return 
##
##    def _Dummy18(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy23(self):
##        '-no docstring-'
##        #return 
##
##    def InsertFile(self, Filename, Merge):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy21(self):
##        '-no docstring-'
##        #return 
##
##    def Move(self, Before, After, lcid):
##        '-no docstring-'
##        #return 
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    OnSheetActivate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, lcid):
##        '-no docstring-'
##        #return RHS
##    def _set(self, lcid, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProtectionMode(self, lcid):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _CodeName = property(_get, _set, doc = _set.__doc__)
##
##    def Unprotect(self, Password, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PageSetup(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace, lcid):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Previous(self):
##        '-no docstring-'
##        #return RHS
##

class IOvals(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOvals._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Oval)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IOvals implementation
##class IOvals_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class FormatCondition(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024425-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
FormatCondition._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(2623), 'hidden'], None, '_Modify',
               ( ['in'], XlFormatConditionType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Operator' ),
               ( ['in', 'optional'], VARIANT, 'Formula1' ),
               ( ['in', 'optional'], VARIANT, 'Formula2' )),
    DISPMETHOD([dispid(108), 'propget'], c_int, 'Type'),
    DISPMETHOD([dispid(797), 'propget'], c_int, 'Operator'),
    DISPMETHOD([dispid(1579), 'propget'], BSTR, 'Formula1'),
    DISPMETHOD([dispid(1580), 'propget'], BSTR, 'Formula2'),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(435), 'propget'], POINTER(Borders), 'Borders'),
    DISPMETHOD([dispid(146), 'propget'], POINTER(Font), 'Font'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1581)], None, 'Modify',
               ( ['in'], XlFormatConditionType, 'Type' ),
               ( ['in', 'optional'], VARIANT, 'Operator' ),
               ( ['in', 'optional'], VARIANT, 'Formula1' ),
               ( ['in', 'optional'], VARIANT, 'Formula2' ),
               ( ['in', 'optional'], VARIANT, 'String' ),
               ( ['in', 'optional'], VARIANT, 'Operator2' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(2613), 'propget'], XlContainsOperator, 'TextOperator'),
    DISPMETHOD([dispid(2613), 'propput'], None, 'TextOperator',
               ( ['in'], XlContainsOperator, 'rhs' )),
    DISPMETHOD([dispid(2614), 'propget'], XlTimePeriods, 'DateOperator'),
    DISPMETHOD([dispid(2614), 'propput'], None, 'DateOperator',
               ( ['in'], XlTimePeriods, 'rhs' )),
    DISPMETHOD([dispid(193), 'propget'], VARIANT, 'NumberFormat'),
    DISPMETHOD([dispid(193), 'propput'], None, 'NumberFormat',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(985), 'propget'], c_int, 'Priority'),
    DISPMETHOD([dispid(985), 'propput'], None, 'Priority',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(2625), 'propget'], VARIANT_BOOL, 'StopIfTrue'),
    DISPMETHOD([dispid(2625), 'propput'], None, 'StopIfTrue',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(2626), 'propget'], POINTER(Range), 'AppliesTo'),
    DISPMETHOD([dispid(2627)], None, 'ModifyAppliesToRange',
               ( ['in'], POINTER(Range), 'Range' )),
    DISPMETHOD([dispid(2629)], None, 'SetFirstPriority'),
    DISPMETHOD([dispid(2630)], None, 'SetLastPriority'),
    DISPMETHOD([dispid(2631), 'propget'], VARIANT_BOOL, 'PTCondition'),
    DISPMETHOD([dispid(2615), 'propget'], XlPivotConditionScope, 'ScopeType'),
    DISPMETHOD([dispid(2615), 'propput'], None, 'ScopeType',
               ( ['in'], XlPivotConditionScope, 'rhs' )),
]
class IModelRelationships(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244DA-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelRelationships._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelRelationship)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelRelationship)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], POINTER(ModelTableColumn), 'ForeignKeyColumn' ),
              ( ['in'], POINTER(ModelTableColumn), 'PrimaryKeyColumn' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelRelationship)), 'RHS' )),
]
################################################################
## code template for IModelRelationships implementation
##class IModelRelationships_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, ForeignKeyColumn, PrimaryKeyColumn):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IVPageBreak(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024402-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IVPageBreak._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(Worksheet)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'DragOff',
              ( ['in'], XlDirection, 'Direction' ),
              ( ['in'], c_int, 'RegionIndex' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlPageBreak), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Type',
              ( ['in'], XlPageBreak, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Extent',
              ( ['retval', 'out'], POINTER(XlPageBreakExtent), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propputref'], HRESULT, 'Location',
              ( ['in'], POINTER(Range), 'RHS' )),
]
################################################################
## code template for IVPageBreak implementation
##class IVPageBreak_Impl(object):
##    def DragOff(self, Direction, RegionIndex):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Location(self, RHS):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Extent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IPane(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020895-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPane._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'LargeScroll',
              ( ['in', 'optional'], VARIANT, 'Down' ),
              ( ['in', 'optional'], VARIANT, 'Up' ),
              ( ['in', 'optional'], VARIANT, 'ToRight' ),
              ( ['in', 'optional'], VARIANT, 'ToLeft' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScrollColumn',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScrollColumn',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScrollRow',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScrollRow',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'SmallScroll',
              ( ['in', 'optional'], VARIANT, 'Down' ),
              ( ['in', 'optional'], VARIANT, 'Up' ),
              ( ['in', 'optional'], VARIANT, 'ToRight' ),
              ( ['in', 'optional'], VARIANT, 'ToLeft' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ScrollIntoView',
              ( ['in'], c_int, 'Left' ),
              ( ['in'], c_int, 'Top' ),
              ( ['in'], c_int, 'Width' ),
              ( ['in'], c_int, 'Height' ),
              ( ['in', 'optional'], VARIANT, 'Start' )),
    COMMETHOD([], HRESULT, 'PointsToScreenPixelsX',
              ( ['in'], c_int, 'Points' ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'PointsToScreenPixelsY',
              ( ['in'], c_int, 'Points' ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IPane implementation
##class IPane_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Activate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScrollColumn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def LargeScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return RHS
##
##    def ScrollIntoView(self, Left, Top, Width, Height, Start):
##        '-no docstring-'
##        #return 
##
##    def SmallScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScrollRow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VisibleRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def PointsToScreenPixelsX(self, Points):
##        '-no docstring-'
##        #return RHS
##
##    def PointsToScreenPixelsY(self, Points):
##        '-no docstring-'
##        #return RHS
##

class IModelChanges(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelChanges._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TablesAdded',
              ( ['retval', 'out'], POINTER(POINTER(ModelTableNames)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TablesDeleted',
              ( ['retval', 'out'], POINTER(POINTER(ModelTableNames)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TablesModified',
              ( ['retval', 'out'], POINTER(POINTER(ModelTableNames)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TableNamesChanged',
              ( ['retval', 'out'], POINTER(POINTER(ModelTableNameChanges)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RelationshipChange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnsAdded',
              ( ['retval', 'out'], POINTER(POINTER(ModelColumnNames)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnsDeleted',
              ( ['retval', 'out'], POINTER(POINTER(ModelColumnNames)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColumnsChanged',
              ( ['retval', 'out'], POINTER(POINTER(ModelColumnChanges)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MeasuresAdded',
              ( ['retval', 'out'], POINTER(POINTER(ModelMeasureNames)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UnknownChange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Source',
              ( ['retval', 'out'], POINTER(XlModelChangeSource), 'RHS' )),
]
################################################################
## code template for IModelChanges implementation
##class IModelChanges_Impl(object):
##    @property
##    def TableNamesChanged(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnsDeleted(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TablesDeleted(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TablesModified(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RelationshipChange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TablesAdded(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Source(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnsChanged(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def MeasuresAdded(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def UnknownChange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnsAdded(self):
##        '-no docstring-'
##        #return RHS
##

class IIconSets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IIconSets._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IIconSets implementation
##class IIconSets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##


# values for enumeration 'XlIMEMode'
xlIMEModeNoControl = 0
xlIMEModeOn = 1
xlIMEModeOff = 2
xlIMEModeDisable = 3
xlIMEModeHiragana = 4
xlIMEModeKatakana = 5
xlIMEModeKatakanaHalf = 6
xlIMEModeAlphaFull = 7
xlIMEModeAlpha = 8
xlIMEModeHangulFull = 9
xlIMEModeHangul = 10
XlIMEMode = c_int # enum
class IPivotField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020874-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotField._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Calculation',
              ( ['retval', 'out'], POINTER(XlPivotFieldCalculation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Calculation',
              ( ['in'], XlPivotFieldCalculation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ChildField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ChildItems',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CurrentPage',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CurrentPage',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataType',
              ( ['retval', 'out'], POINTER(XlPivotFieldDataType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Function',
              ( ['retval', 'out'], POINTER(XlConsolidationFunction), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Function',
              ( ['in'], XlConsolidationFunction, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GroupLevel',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HiddenItems',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LabelRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'NumberFormat',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'NumberFormat',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(XlPivotFieldOrientation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], XlPivotFieldOrientation, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowAllItems',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowAllItems',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentItems',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'PivotItems',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SourceName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Subtotals',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Subtotals',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BaseField',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BaseField',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BaseItem',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BaseItem',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TotalLevels',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleItems',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CalculatedItems',
              ( ['retval', 'out'], POINTER(POINTER(CalculatedItems)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD(['propget'], HRESULT, 'DragToColumn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DragToColumn',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DragToHide',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DragToHide',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DragToPage',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DragToPage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DragToRow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DragToRow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DragToData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DragToData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsCalculated',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MemoryUsed',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ServerBased',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ServerBased',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_AutoSort',
              ( ['in'], c_int, 'Order' ),
              ( ['in'], BSTR, 'Field' )),
    COMMETHOD([], HRESULT, 'AutoShow',
              ( ['in'], c_int, 'Type' ),
              ( ['in'], c_int, 'Range' ),
              ( ['in'], c_int, 'Count' ),
              ( ['in'], BSTR, 'Field' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSortOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSortField',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoShowType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoShowRange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoShowCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoShowField',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LayoutBlankLine',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LayoutBlankLine',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LayoutSubtotalLocation',
              ( ['retval', 'out'], POINTER(XlSubtototalLocationType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LayoutSubtotalLocation',
              ( ['in'], XlSubtototalLocationType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LayoutPageBreak',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LayoutPageBreak',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LayoutForm',
              ( ['retval', 'out'], POINTER(XlLayoutFormType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LayoutForm',
              ( ['in'], XlLayoutFormType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SubtotalName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SubtotalName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DrilledDown',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DrilledDown',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CubeField',
              ( ['retval', 'out'], POINTER(POINTER(CubeField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CurrentPageName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CurrentPageName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'StandardFormula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'StandardFormula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HiddenItemsList',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HiddenItemsList',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DatabaseSort',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DatabaseSort',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IsMemberProperty',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PropertyParentField',
              ( ['retval', 'out'], POINTER(POINTER(PivotField)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PropertyOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PropertyOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableItemSelection',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableItemSelection',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CurrentPageList',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CurrentPageList',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'AddPageItem',
              ( ['in'], BSTR, 'Item' ),
              ( ['in', 'optional'], VARIANT, 'ClearList' )),
    COMMETHOD(['propget'], HRESULT, 'Hidden',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Hidden',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'DrillTo',
              ( ['in'], BSTR, 'Field' )),
    COMMETHOD(['propget'], HRESULT, 'UseMemberPropertyAsCaption',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'UseMemberPropertyAsCaption',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MemberPropertyCaption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MemberPropertyCaption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayAsTooltip',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayAsTooltip',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayInReport',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayInReport',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayAsCaption',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LayoutCompactRow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LayoutCompactRow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'IncludeNewItemsInFilter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'IncludeNewItemsInFilter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleItemsList',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VisibleItemsList',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotFilters',
              ( ['retval', 'out'], POINTER(POINTER(PivotFilters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSortPivotLine',
              ( ['retval', 'out'], POINTER(POINTER(PivotLine)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSortCustomSubtotal',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowingInAxis',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableMultiplePageItems',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableMultiplePageItems',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllItemsVisible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearManualFilter'),
    COMMETHOD([], HRESULT, 'ClearAllFilters'),
    COMMETHOD([], HRESULT, 'ClearValueFilters'),
    COMMETHOD([], HRESULT, 'ClearLabelFilters'),
    COMMETHOD([], HRESULT, 'AutoSort',
              ( ['in'], c_int, 'Order' ),
              ( ['in'], BSTR, 'Field' ),
              ( ['in', 'optional'], VARIANT, 'PivotLine' ),
              ( ['in', 'optional'], VARIANT, 'CustomSubtotal' )),
    COMMETHOD(['propget'], HRESULT, 'SourceCaption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShowDetail',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShowDetail',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RepeatLabels',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RepeatLabels',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IPivotField implementation
##class IPivotField_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseMemberPropertyAsCaption = property(_get, _set, doc = _set.__doc__)
##
##    def PivotItems(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoShowType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DrilledDown = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MemberPropertyCaption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CubeField(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BaseItem = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VisibleItemsList = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SourceCaption(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PropertyParentField(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def AutoSort(self, Order, Field, PivotLine, CustomSubtotal):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsMemberProperty(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoShowCount(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Calculation = property(_get, _set, doc = _set.__doc__)
##
##    def AddPageItem(self, Item, ClearList):
##        '-no docstring-'
##        #return 
##
##    def DrillTo(self, Field):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DataRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoShowField(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ParentField(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CurrentPageName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToColumn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoSortOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MemoryUsed(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LabelRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DatabaseSort = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AutoShowRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VisibleItems(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SubtotalName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChildItems(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _AutoSort(self, Order, Field):
##        '-no docstring-'
##        #return 
##
##    def ClearLabelFilters(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AutoSortField(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToData = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    StandardFormula = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutSubtotalLocation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HiddenItemsList = property(_get, _set, doc = _set.__doc__)
##
##    def AutoShow(self, Type, Range, Count, Field):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RepeatLabels = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayInReport = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ChildField(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutBlankLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutPageBreak = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeNewItemsInFilter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ParentItems(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SourceName(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AutoSortPivotLine(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def GroupLevel(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearAllFilters(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AutoSortCustomSubtotal(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableMultiplePageItems = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowDetail = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    NumberFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def ClearManualFilter(self):
##        '-no docstring-'
##        #return 
##
##    def ClearValueFilters(self):
##        '-no docstring-'
##        #return 
##
##    def CalculatedItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutCompactRow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PivotFilters(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutForm = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Function = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShowingInAxis(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DisplayAsCaption(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def IsCalculated(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowAllItems = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TotalLevels(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllItemsVisible(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CurrentPageList = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CurrentPage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HiddenItems(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BaseField = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    Subtotals = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ServerBased = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayAsTooltip = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToPage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableItemSelection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PropertyOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToHide = property(_get, _set, doc = _set.__doc__)
##

class ICustomProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024452-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICustomProperties._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Name' ),
              ( ['in'], VARIANT, 'Value' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomProperty)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomProperty)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(CustomProperty)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ICustomProperties implementation
##class ICustomProperties_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Name, Value):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

ColorFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'RGB',
              ( ['retval', 'out'], POINTER(c_int), 'RGB' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'RGB',
              ( ['in'], c_int, 'RGB' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'SchemeColor',
              ( ['retval', 'out'], POINTER(c_int), 'SchemeColor' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'SchemeColor',
              ( ['in'], c_int, 'SchemeColor' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoColorType), 'Type' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(c_float), 'pValue' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'TintAndShade',
              ( ['in'], c_float, 'pValue' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'ObjectThemeColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoThemeColorIndex), 'ObjectThemeColor' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'ObjectThemeColor',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoThemeColorIndex, 'ObjectThemeColor' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Brightness',
              ( ['retval', 'out'], POINTER(c_float), 'pValue' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'pValue' )),
]
################################################################
## code template for ColorFormat implementation
##class ColorFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pValue
##    def _set(self, pValue):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ObjectThemeColor
##    def _set(self, ObjectThemeColor):
##        '-no docstring-'
##    ObjectThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return pValue
##    def _set(self, pValue):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SchemeColor
##    def _set(self, SchemeColor):
##        '-no docstring-'
##    SchemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RGB
##    def _set(self, RGB):
##        '-no docstring-'
##    RGB = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##

class IPivotLayout(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002444A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotLayout._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'ColumnFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'DataFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'PageFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'RowFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'HiddenFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'VisibleFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'PivotFields',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'CubeFields',
              ( ['retval', 'out'], POINTER(POINTER(CubeFields)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'PivotCache',
              ( ['retval', 'out'], POINTER(POINTER(PivotCache)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PivotTable',
              ( ['retval', 'out'], POINTER(POINTER(PivotTable)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'InnerDetail',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'InnerDetail',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'AddFields',
              ( ['in', 'optional'], VARIANT, 'RowFields' ),
              ( ['in', 'optional'], VARIANT, 'ColumnFields' ),
              ( ['in', 'optional'], VARIANT, 'PageFields' ),
              ( ['in', 'optional'], VARIANT, 'AppendField' )),
]
################################################################
## code template for IPivotLayout implementation
##class IPivotLayout_Impl(object):
##    @property
##    def PivotFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotCache(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RowFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ColumnFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VisibleFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PageFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def DataFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CubeFields(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PivotTable(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HiddenFields(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def AddFields(self, RowFields, ColumnFields, PageFields, AppendField):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InnerDetail = property(_get, _set, doc = _set.__doc__)
##

class ILine(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ILine._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadLength',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadLength',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadStyle',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadStyle',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ArrowHeadWidth',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ArrowHeadWidth',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
]
################################################################
## code template for ILine implementation
##class ILine_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadLength = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ArrowHeadWidth = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IAction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAction._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlActionType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Coordinate',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Content',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Execute'),
]
################################################################
## code template for IAction implementation
##class IAction_Impl(object):
##    def Execute(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Caption(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Content(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Coordinate(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##

class IEditBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020883-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IEditBox._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InputType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InputType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedObject',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MultiLine',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MultiLine',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PasswordEdit',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PasswordEdit',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IEditBox implementation
##class IEditBox_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def LinkedObject(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayVerticalScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InputType = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PasswordEdit = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MultiLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ICustomView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024423-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICustomView._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintSettings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RowColSettings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([], HRESULT, 'Show'),
    COMMETHOD([], HRESULT, 'Delete'),
]
################################################################
## code template for ICustomView implementation
##class ICustomView_Impl(object):
##    @property
##    def PrintSettings(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Show(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RowColSettings(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IPhonetics(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024447-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPhonetics._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Start',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Length',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CharacterType',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CharacterType',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Alignment',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Alignment',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_int, 'Start' ),
              ( ['in'], c_int, 'Length' ),
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IPhonetics implementation
##class IPhonetics_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Start(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Start, Length, Text):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CharacterType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Length(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class ISmartTags(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024461-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISmartTags._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'SmartTagType' ),
              ( ['retval', 'out'], POINTER(POINTER(SmartTag)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SmartTag)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ISmartTags implementation
##class ISmartTags_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, SmartTagType):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IModelColumnNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244E6-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelColumnNames._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelColumnName)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelColumnName)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IModelColumnNames implementation
##class IModelColumnNames_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IChartEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002440F-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IChartEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD([], HRESULT, 'Deactivate'),
    COMMETHOD([], HRESULT, 'Resize'),
    COMMETHOD([], HRESULT, 'MouseDown',
              ( ['in'], c_int, 'Button' ),
              ( ['in'], c_int, 'Shift' ),
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' )),
    COMMETHOD([], HRESULT, 'MouseUp',
              ( ['in'], c_int, 'Button' ),
              ( ['in'], c_int, 'Shift' ),
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' )),
    COMMETHOD([], HRESULT, 'MouseMove',
              ( ['in'], c_int, 'Button' ),
              ( ['in'], c_int, 'Shift' ),
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' )),
    COMMETHOD([], HRESULT, 'BeforeRightClick',
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD(['hidden'], HRESULT, 'DragPlot'),
    COMMETHOD(['hidden'], HRESULT, 'DragOver'),
    COMMETHOD([], HRESULT, 'BeforeDoubleClick',
              ( ['in'], c_int, 'ElementID' ),
              ( ['in'], c_int, 'Arg1' ),
              ( ['in'], c_int, 'Arg2' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in'], c_int, 'ElementID' ),
              ( ['in'], c_int, 'Arg1' ),
              ( ['in'], c_int, 'Arg2' )),
    COMMETHOD([], HRESULT, 'SeriesChange',
              ( ['in'], c_int, 'SeriesIndex' ),
              ( ['in'], c_int, 'PointIndex' )),
    COMMETHOD([], HRESULT, 'Calculate'),
]
################################################################
## code template for IChartEvents implementation
##class IChartEvents_Impl(object):
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def Calculate(self):
##        '-no docstring-'
##        #return 
##
##    def Deactivate(self):
##        '-no docstring-'
##        #return 
##
##    def SeriesChange(self, SeriesIndex, PointIndex):
##        '-no docstring-'
##        #return 
##
##    def MouseUp(self, Button, Shift, x, y):
##        '-no docstring-'
##        #return 
##
##    def MouseMove(self, Button, Shift, x, y):
##        '-no docstring-'
##        #return 
##
##    def BeforeDoubleClick(self, ElementID, Arg1, Arg2):
##        '-no docstring-'
##        #return Cancel
##
##    def MouseDown(self, Button, Shift, x, y):
##        '-no docstring-'
##        #return 
##
##    def Select(self, ElementID, Arg1, Arg2):
##        '-no docstring-'
##        #return 
##
##    def DragOver(self):
##        '-no docstring-'
##        #return 
##
##    def BeforeRightClick(self):
##        '-no docstring-'
##        #return Cancel
##
##    def Resize(self):
##        '-no docstring-'
##        #return 
##
##    def DragPlot(self):
##        '-no docstring-'
##        #return 
##

class IProtectedViewWindows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CC-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IProtectedViewWindows._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ProtectedViewWindow)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ProtectedViewWindow)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Open',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Password' ),
              ( ['in', 'optional'], VARIANT, 'AddToMru' ),
              ( ['in', 'optional'], VARIANT, 'RepairMode' ),
              ( ['retval', 'out'], POINTER(POINTER(ProtectedViewWindow)), 'RHS' )),
]
################################################################
## code template for IProtectedViewWindows implementation
##class IProtectedViewWindows_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Open(self, Filename, Password, AddToMru, RepairMode):
##        '-no docstring-'
##        #return RHS
##

class ScrollBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020886-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ScrollBars._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(842), 'propget'], c_int, 'Max'),
    DISPMETHOD([dispid(842), 'propput'], None, 'Max',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(843), 'propget'], c_int, 'Min'),
    DISPMETHOD([dispid(843), 'propput'], None, 'Min',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(844), 'propget'], c_int, 'SmallChange'),
    DISPMETHOD([dispid(844), 'propput'], None, 'SmallChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], c_int, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(845), 'propget'], c_int, 'LargeChange'),
    DISPMETHOD([dispid(845), 'propput'], None, 'LargeChange',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(ScrollBar), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
class IDialog(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002087A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDialog._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Show',
              ( ['in', 'optional'], VARIANT, 'Arg1' ),
              ( ['in', 'optional'], VARIANT, 'Arg2' ),
              ( ['in', 'optional'], VARIANT, 'Arg3' ),
              ( ['in', 'optional'], VARIANT, 'Arg4' ),
              ( ['in', 'optional'], VARIANT, 'Arg5' ),
              ( ['in', 'optional'], VARIANT, 'Arg6' ),
              ( ['in', 'optional'], VARIANT, 'Arg7' ),
              ( ['in', 'optional'], VARIANT, 'Arg8' ),
              ( ['in', 'optional'], VARIANT, 'Arg9' ),
              ( ['in', 'optional'], VARIANT, 'Arg10' ),
              ( ['in', 'optional'], VARIANT, 'Arg11' ),
              ( ['in', 'optional'], VARIANT, 'Arg12' ),
              ( ['in', 'optional'], VARIANT, 'Arg13' ),
              ( ['in', 'optional'], VARIANT, 'Arg14' ),
              ( ['in', 'optional'], VARIANT, 'Arg15' ),
              ( ['in', 'optional'], VARIANT, 'Arg16' ),
              ( ['in', 'optional'], VARIANT, 'Arg17' ),
              ( ['in', 'optional'], VARIANT, 'Arg18' ),
              ( ['in', 'optional'], VARIANT, 'Arg19' ),
              ( ['in', 'optional'], VARIANT, 'Arg20' ),
              ( ['in', 'optional'], VARIANT, 'Arg21' ),
              ( ['in', 'optional'], VARIANT, 'Arg22' ),
              ( ['in', 'optional'], VARIANT, 'Arg23' ),
              ( ['in', 'optional'], VARIANT, 'Arg24' ),
              ( ['in', 'optional'], VARIANT, 'Arg25' ),
              ( ['in', 'optional'], VARIANT, 'Arg26' ),
              ( ['in', 'optional'], VARIANT, 'Arg27' ),
              ( ['in', 'optional'], VARIANT, 'Arg28' ),
              ( ['in', 'optional'], VARIANT, 'Arg29' ),
              ( ['in', 'optional'], VARIANT, 'Arg30' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
]
################################################################
## code template for IDialog implementation
##class IDialog_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Show(self, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IPivotTableChangeList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244C1-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPivotTableChangeList._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ValueChange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ValueChange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Tuple' ),
              ( ['in'], c_double, 'Value' ),
              ( ['in', 'optional'], VARIANT, 'AllocationValue' ),
              ( ['in', 'optional'], VARIANT, 'AllocationMethod' ),
              ( ['in', 'optional'], VARIANT, 'AllocationWeightExpression' ),
              ( ['retval', 'out'], POINTER(POINTER(ValueChange)), 'RHS' )),
]
################################################################
## code template for IPivotTableChangeList implementation
##class IPivotTableChangeList_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Tuple, Value, AllocationValue, AllocationMethod, AllocationWeightExpression):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

CubeField._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1918), 'propget'], HRESULT, 'CubeFieldType',
              ( ['retval', 'out'], POINTER(XlCubeFieldType), 'RHS' )),
    COMMETHOD([dispid(2667), 'hidden', 'propget'], HRESULT, '_Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(134), 'propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(XlPivotFieldOrientation), 'RHS' )),
    COMMETHOD([dispid(134), 'propput'], HRESULT, 'Orientation',
              ( ['in'], XlPivotFieldOrientation, 'RHS' )),
    COMMETHOD([dispid(133), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(133), 'propput'], HRESULT, 'Position',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1919), 'propget'], HRESULT, 'TreeviewControl',
              ( ['retval', 'out'], POINTER(POINTER(TreeviewControl)), 'RHS' )),
    COMMETHOD([dispid(1508), 'propget'], HRESULT, 'DragToColumn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1508), 'propput'], HRESULT, 'DragToColumn',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1509), 'propget'], HRESULT, 'DragToHide',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1509), 'propput'], HRESULT, 'DragToHide',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1510), 'propget'], HRESULT, 'DragToPage',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1510), 'propput'], HRESULT, 'DragToPage',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1511), 'propget'], HRESULT, 'DragToRow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1511), 'propput'], HRESULT, 'DragToRow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1844), 'propget'], HRESULT, 'DragToData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1844), 'propput'], HRESULT, 'DragToData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1920), 'hidden', 'propget'], HRESULT, 'HiddenLevels',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1920), 'hidden', 'propput'], HRESULT, 'HiddenLevels',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(2181), 'propget'], HRESULT, 'HasMemberProperties',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1848), 'propget'], HRESULT, 'LayoutForm',
              ( ['retval', 'out'], POINTER(XlLayoutFormType), 'RHS' )),
    COMMETHOD([dispid(1848), 'propput'], HRESULT, 'LayoutForm',
              ( ['in'], XlLayoutFormType, 'RHS' )),
    COMMETHOD([dispid(718), 'propget'], HRESULT, 'PivotFields',
              ( ['retval', 'out'], POINTER(POINTER(PivotFields)), 'RHS' )),
    COMMETHOD([dispid(2182), 'hidden'], HRESULT, '_AddMemberPropertyField',
              ( ['in'], BSTR, 'Property' ),
              ( ['in', 'optional'], VARIANT, 'PropertyOrder' )),
    COMMETHOD([dispid(2184), 'propget'], HRESULT, 'EnableMultiplePageItems',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2184), 'propput'], HRESULT, 'EnableMultiplePageItems',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1846), 'propget'], HRESULT, 'LayoutSubtotalLocation',
              ( ['retval', 'out'], POINTER(XlSubtototalLocationType), 'RHS' )),
    COMMETHOD([dispid(1846), 'propput'], HRESULT, 'LayoutSubtotalLocation',
              ( ['in'], XlSubtototalLocationType, 'RHS' )),
    COMMETHOD([dispid(2185), 'propget'], HRESULT, 'ShowInFieldList',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2185), 'propput'], HRESULT, 'ShowInFieldList',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(117)], HRESULT, 'Delete'),
    COMMETHOD([dispid(2668)], HRESULT, 'AddMemberPropertyField',
              ( ['in'], BSTR, 'Property' ),
              ( ['in', 'optional'], VARIANT, 'PropertyOrder' ),
              ( ['in', 'optional'], VARIANT, 'PropertyDisplayedIn' )),
    COMMETHOD([dispid(2587), 'propget'], HRESULT, 'IncludeNewItemsInFilter',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2587), 'propput'], HRESULT, 'IncludeNewItemsInFilter',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2670), 'propget'], HRESULT, 'CubeFieldSubType',
              ( ['retval', 'out'], POINTER(XlCubeFieldSubType), 'RHS' )),
    COMMETHOD([dispid(2593), 'propget'], HRESULT, 'AllItemsVisible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2594)], HRESULT, 'ClearManualFilter'),
    COMMETHOD([dispid(2671)], HRESULT, 'CreatePivotFields'),
    COMMETHOD([dispid(1852), 'propget'], HRESULT, 'CurrentPageName',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1852), 'propput'], HRESULT, 'CurrentPageName',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2672), 'propget'], HRESULT, 'IsDate',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(139), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(139), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(2924), 'propget'], HRESULT, 'FlattenHierarchies',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2924), 'propput'], HRESULT, 'FlattenHierarchies',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(2925), 'propget'], HRESULT, 'HierarchizeDistinct',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2925), 'propput'], HRESULT, 'HierarchizeDistinct',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for CubeField implementation
##class CubeField_Impl(object):
##    @property
##    def IsDate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    IncludeNewItemsInFilter = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CurrentPageName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToColumn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToPage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutForm = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FlattenHierarchies = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PivotFields(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShowInFieldList = property(_get, _set, doc = _set.__doc__)
##
##    def ClearManualFilter(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasMemberProperties(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CubeFieldSubType(self):
##        '-no docstring-'
##        #return RHS
##
##    def _AddMemberPropertyField(self, Property, PropertyOrder):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AllItemsVisible(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Caption(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableMultiplePageItems = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HierarchizeDistinct = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    def CreatePivotFields(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CubeFieldType(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TreeviewControl(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToData = property(_get, _set, doc = _set.__doc__)
##
##    def AddMemberPropertyField(self, Property, PropertyOrder, PropertyDisplayedIn):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DragToHide = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LayoutSubtotalLocation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HiddenLevels = property(_get, _set, doc = _set.__doc__)
##

DiagramNode._methods_ = [
    COMMETHOD([dispid(10)], HRESULT, 'AddNode',
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoRelativeNodePosition, 'pos', 2 ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramNodeType, 'nodeType', 1 ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'NewNode' )),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12)], HRESULT, 'MoveNode',
              ( ['in'], POINTER(DiagramNode), 'pTargetNode' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoRelativeNodePosition, 'pos' )),
    COMMETHOD([dispid(13)], HRESULT, 'ReplaceNode',
              ( ['in'], POINTER(DiagramNode), 'pTargetNode' )),
    COMMETHOD([dispid(14)], HRESULT, 'SwapNode',
              ( ['in'], POINTER(DiagramNode), 'pTargetNode' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'swapChildren', True )),
    COMMETHOD([dispid(15)], HRESULT, 'CloneNode',
              ( ['in'], VARIANT_BOOL, 'copyChildren' ),
              ( ['in'], POINTER(DiagramNode), 'pTargetNode' ),
              ( ['in', 'optional'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoRelativeNodePosition, 'pos', 2 ),
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppNode' )),
    COMMETHOD([dispid(16)], HRESULT, 'TransferChildren',
              ( ['in'], POINTER(DiagramNode), 'pReceivingNode' )),
    COMMETHOD([dispid(17)], HRESULT, 'NextNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppNextNode' )),
    COMMETHOD([dispid(18)], HRESULT, 'PrevNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppPrevNode' )),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppParent' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'Children',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNodeChildren)), 'ppChildren' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'ppShape' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'Root',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'ppRoot' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Diagram',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.IMsoDiagram)), 'ppDiagram' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'Layout',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoOrgChartLayoutType), 'pdgmType' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'Layout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoOrgChartLayoutType, 'pdgmType' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'TextShape',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'Shape' )),
]
################################################################
## code template for DiagramNode implementation
##class DiagramNode_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pdgmType
##    def _set(self, pdgmType):
##        '-no docstring-'
##    Layout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    def AddNode(self, pos, nodeType):
##        '-no docstring-'
##        #return NewNode
##
##    def ReplaceNode(self, pTargetNode):
##        '-no docstring-'
##        #return 
##
##    def SwapNode(self, pTargetNode, swapChildren):
##        '-no docstring-'
##        #return 
##
##    def NextNode(self):
##        '-no docstring-'
##        #return ppNextNode
##
##    def CloneNode(self, copyChildren, pTargetNode, pos):
##        '-no docstring-'
##        #return ppNode
##
##    def MoveNode(self, pTargetNode, pos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return ppDiagram
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return ppShape
##
##    def TransferChildren(self, pReceivingNode):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextShape(self):
##        '-no docstring-'
##        #return Shape
##
##    def PrevNode(self):
##        '-no docstring-'
##        #return ppPrevNode
##
##    @property
##    def Root(self):
##        '-no docstring-'
##        #return ppRoot
##
##    @property
##    def Children(self):
##        '-no docstring-'
##        #return ppChildren
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class DialogSheets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B0-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
DialogSheets._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(DialogSheet), 'Add',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' )),
    DISPMETHOD([dispid(551)], None, 'Copy',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(1610743815), 'restricted', 'hidden'], None, '_Dummy7'),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(637)], None, 'Move',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(905), 'hidden'], None, '__PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(281)], None, 'PrintPreview',
               ( ['in', 'optional'], VARIANT, 'EnableChanges' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(1418), 'propget'], POINTER(HPageBreaks), 'HPageBreaks'),
    DISPMETHOD([dispid(1419), 'propget'], POINTER(VPageBreaks), 'VPageBreaks'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1772), 'hidden'], None, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2361)], None, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(3054)], POINTER(IDispatch), 'Add2',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' ),
               ( ['in', 'optional'], VARIANT, 'NewLayout' )),
]
class IDrawing(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208A8-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDrawing._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'AddVertex',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Reshape',
              ( ['in'], c_int, 'Vertex' ),
              ( ['in'], VARIANT_BOOL, 'Insert' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Vertices',
              ( ['in', 'optional'], VARIANT, 'Index1' ),
              ( ['in', 'optional'], VARIANT, 'Index2' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IDrawing implementation
##class IDrawing_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def Reshape(self, Vertex, Insert, Left, Top):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddVertex(self, Left, Top):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Vertices(self, Index1, Index2):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class Worksheets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208B1-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _methods_ = []
Worksheets._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(181)], POINTER(IDispatch), 'Add',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' ),
               ( ['in', 'optional'], VARIANT, 'Type' )),
    DISPMETHOD([dispid(551)], None, 'Copy',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(117)], None, 'Delete'),
    DISPMETHOD([dispid(469)], None, 'FillAcrossSheets',
               ( ['in'], POINTER(Range), 'Range' ),
               ( ['in', 'optional'], XlFillWith, 'Type', -4104 )),
    DISPMETHOD([dispid(170), 'propget'], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(637)], None, 'Move',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' )),
    DISPMETHOD([dispid(-4), 'propget'], POINTER(IUnknown), '_NewEnum'),
    DISPMETHOD([dispid(905), 'hidden'], None, '__PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' )),
    DISPMETHOD([dispid(281)], None, 'PrintPreview',
               ( ['in', 'optional'], VARIANT, 'EnableChanges' )),
    DISPMETHOD([dispid(235)], None, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(1418), 'propget'], POINTER(HPageBreaks), 'HPageBreaks'),
    DISPMETHOD([dispid(1419), 'propget'], POINTER(VPageBreaks), 'VPageBreaks'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(0), 'propget'], POINTER(IDispatch), '_Default',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(1772), 'hidden'], None, '_PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' )),
    DISPMETHOD([dispid(2361)], None, 'PrintOut',
               ( ['in', 'optional'], VARIANT, 'From' ),
               ( ['in', 'optional'], VARIANT, 'To' ),
               ( ['in', 'optional'], VARIANT, 'Copies' ),
               ( ['in', 'optional'], VARIANT, 'Preview' ),
               ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
               ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
               ( ['in', 'optional'], VARIANT, 'Collate' ),
               ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
               ( ['in', 'optional'], VARIANT, 'IgnorePrintAreas' )),
    DISPMETHOD([dispid(3054)], POINTER(IDispatch), 'Add2',
               ( ['in', 'optional'], VARIANT, 'Before' ),
               ( ['in', 'optional'], VARIANT, 'After' ),
               ( ['in', 'optional'], VARIANT, 'Count' ),
               ( ['in', 'optional'], VARIANT, 'NewLayout' )),
]
class IProtection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024467-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IProtection._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'AllowFormattingCells',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowFormattingColumns',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowFormattingRows',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowInsertingColumns',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowInsertingRows',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowInsertingHyperlinks',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowDeletingColumns',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowDeletingRows',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowSorting',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowFiltering',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowUsingPivotTables',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AllowEditRanges',
              ( ['retval', 'out'], POINTER(POINTER(AllowEditRanges)), 'RHS' )),
]
################################################################
## code template for IProtection implementation
##class IProtection_Impl(object):
##    @property
##    def AllowInsertingColumns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowInsertingRows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowInsertingHyperlinks(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowFormattingRows(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowFiltering(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowFormattingCells(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowUsingPivotTables(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowDeletingColumns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowSorting(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowEditRanges(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowFormattingColumns(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def AllowDeletingRows(self):
##        '-no docstring-'
##        #return RHS
##

class IPoint(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002086A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IPoint._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ClearFormats',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DataLabel',
              ( ['retval', 'out'], POINTER(POINTER(DataLabel)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Explosion',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Explosion',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasDataLabel',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HasDataLabel',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'InvertIfNegative',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'InvertIfNegative',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerBackgroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerForegroundColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerSize',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerSize',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarkerStyle',
              ( ['retval', 'out'], POINTER(XlMarkerStyle), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarkerStyle',
              ( ['in'], XlMarkerStyle, 'RHS' )),
    COMMETHOD([], HRESULT, 'Paste',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureType',
              ( ['retval', 'out'], POINTER(XlChartPictureType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureType',
              ( ['in'], XlChartPictureType, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'PictureUnit',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'PictureUnit',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToSides',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToSides',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToFront',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToFront',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ApplyPictToEnd',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ApplyPictToEnd',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SecondaryPlot',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SecondaryPlot',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ApplyDataLabels',
              ( ['in', 'optional'], XlDataLabelsType, 'Type', 2 ),
              ( ['in', 'optional'], VARIANT, 'LegendKey' ),
              ( ['in', 'optional'], VARIANT, 'AutoText' ),
              ( ['in', 'optional'], VARIANT, 'HasLeaderLines' ),
              ( ['in', 'optional'], VARIANT, 'ShowSeriesName' ),
              ( ['in', 'optional'], VARIANT, 'ShowCategoryName' ),
              ( ['in', 'optional'], VARIANT, 'ShowValue' ),
              ( ['in', 'optional'], VARIANT, 'ShowPercentage' ),
              ( ['in', 'optional'], VARIANT, 'ShowBubbleSize' ),
              ( ['in', 'optional'], VARIANT, 'Separator' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Has3DEffect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Has3DEffect',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureUnit2',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PictureUnit2',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'PieSliceLocation',
              ( ['in'], XlPieSliceLocation, 'loc' ),
              ( ['in', 'optional'], XlPieSliceIndex, 'Index', 2 ),
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
]
################################################################
## code template for IPoint implementation
##class IPoint_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToSides = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Top(self):
##        '-no docstring-'
##        #return RHS
##
##    def PieSliceLocation(self, loc, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines, ShowSeriesName, ShowCategoryName, ShowValue, ShowPercentage, ShowBubbleSize, Separator):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Explosion = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit2 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    InvertIfNegative = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Paste(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerSize = property(_get, _set, doc = _set.__doc__)
##
##    def ClearFormats(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerBackgroundColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToEnd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PictureUnit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataLabel(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def _ApplyDataLabels(self, Type, LegendKey, AutoText, HasLeaderLines):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Left(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Has3DEffect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarkerForegroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ApplyPictToFront = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HasDataLabel = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SecondaryPlot = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class IShapeRange(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IShapeRange._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Align',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAlignCmd, 'AlignCmd' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeTo' )),
    COMMETHOD([], HRESULT, 'Apply'),
    COMMETHOD([], HRESULT, 'Delete'),
    COMMETHOD([], HRESULT, 'Distribute',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDistributeCmd, 'DistributeCmd' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeTo' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Flip',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoFlipCmd, 'FlipCmd' )),
    COMMETHOD([], HRESULT, 'IncrementLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([], HRESULT, 'IncrementRotation',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([], HRESULT, 'IncrementTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'PickUp'),
    COMMETHOD([], HRESULT, 'RerouteConnections'),
    COMMETHOD([], HRESULT, 'Regroup',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ScaleHeight',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], VARIANT, 'Scale' )),
    COMMETHOD([], HRESULT, 'ScaleWidth',
              ( ['in'], c_float, 'Factor' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RelativeToOriginalSize' ),
              ( ['in', 'optional'], VARIANT, 'Scale' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' )),
    COMMETHOD([], HRESULT, 'SetShapesDefaultProperties'),
    COMMETHOD([], HRESULT, 'Ungroup',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ZOrder',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoZOrderCmd, 'ZOrderCmd' )),
    COMMETHOD(['propget'], HRESULT, 'Adjustments',
              ( ['retval', 'out'], POINTER(POINTER(Adjustments)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFrame',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoShapeType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoShapeType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Callout',
              ( ['retval', 'out'], POINTER(POINTER(CalloutFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ConnectionSiteCount',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Connector',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ConnectorFormat',
              ( ['retval', 'out'], POINTER(POINTER(ConnectorFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(FillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GroupItems',
              ( ['retval', 'out'], POINTER(POINTER(GroupShapes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalFlip',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Line',
              ( ['retval', 'out'], POINTER(POINTER(LineFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockAspectRatio',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Nodes',
              ( ['retval', 'out'], POINTER(POINTER(ShapeNodes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Rotation',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Rotation',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PictureFormat',
              ( ['retval', 'out'], POINTER(POINTER(PictureFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(POINTER(ShadowFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextEffect',
              ( ['retval', 'out'], POINTER(POINTER(TextEffectFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThreeD',
              ( ['retval', 'out'], POINTER(POINTER(ThreeDFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalFlip',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Vertices',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrderPosition',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BlackWhiteMode',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BlackWhiteMode',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBlackWhiteMode, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AlternativeText',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AlternativeText',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'DiagramNode',
              ( ['retval', 'out'], POINTER(POINTER(DiagramNode)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'HasDiagramNode',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Diagram',
              ( ['retval', 'out'], POINTER(POINTER(Diagram)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'HasDiagram',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Child',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ParentGroup',
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'CanvasItems',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.CanvasShapes)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropLeft',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropTop',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropRight',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['hidden'], HRESULT, 'CanvasCropBottom',
              ( ['in'], c_float, 'Increment' )),
    COMMETHOD(['propget'], HRESULT, 'Chart',
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HasChart',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TextFrame2',
              ( ['retval', 'out'], POINTER(POINTER(TextFrame2)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ShapeStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoShapeStyleIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BackgroundStyle',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BackgroundStyle',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoBackgroundStyleIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SoftEdge',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SoftEdgeFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Glow',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.GlowFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Reflection',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.ReflectionFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IShapeRange implementation
##class IShapeRange_Impl(object):
##    def ScaleWidth(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    def IncrementTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Adjustments(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def CanvasCropRight(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BackgroundStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Callout(self):
##        '-no docstring-'
##        #return RHS
##
##    def RerouteConnections(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Connector(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlternativeText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HasDiagram(self):
##        '-no docstring-'
##        #return RHS
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VerticalFlip(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def TextFrame(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Vertices(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def ScaleHeight(self, Factor, RelativeToOriginalSize, Scale):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextFrame2(self):
##        '-no docstring-'
##        #return RHS
##
##    def CanvasCropBottom(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DiagramNode(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Regroup(self):
##        '-no docstring-'
##        #return RHS
##
##    def SetShapesDefaultProperties(self):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropTop(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TextEffect(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Chart(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Diagram(self):
##        '-no docstring-'
##        #return RHS
##
##    def PickUp(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ConnectorFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    def ZOrder(self, ZOrderCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrderPosition(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Child(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Line(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def IncrementRotation(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SoftEdge(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Glow(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def CanvasItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoShapeType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ShapeStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Align(self, AlignCmd, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    def CanvasCropLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    def Flip(self, FlipCmd):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GroupItems(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def PictureFormat(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HorizontalFlip(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasDiagramNode(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ThreeD(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Rotation = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ConnectionSiteCount(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Reflection(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def HasChart(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ParentGroup(self):
##        '-no docstring-'
##        #return RHS
##
##    def Distribute(self, DistributeCmd, RelativeTo):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Nodes(self):
##        '-no docstring-'
##        #return RHS
##
##    def IncrementLeft(self, Increment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shadow(self):
##        '-no docstring-'
##        #return RHS
##
##    def Apply(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BlackWhiteMode = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class INegativeBarFormat(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244BF-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
INegativeBarFormat._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorType',
              ( ['retval', 'out'], POINTER(XlDataBarNegativeColorType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorType',
              ( ['in'], XlDataBarNegativeColorType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BorderColorType',
              ( ['retval', 'out'], POINTER(XlDataBarNegativeColorType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'BorderColorType',
              ( ['in'], XlDataBarNegativeColorType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BorderColor',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for INegativeBarFormat implementation
##class INegativeBarFormat_Impl(object):
##    @property
##    def BorderColor(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Color(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    BorderColorType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorType = property(_get, _set, doc = _set.__doc__)
##

class ICorners(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208C0-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ICorners._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for ICorners implementation
##class ICorners_Impl(object):
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IListColumns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024472-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IListColumns._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'Position' ),
              ( ['retval', 'out'], POINTER(POINTER(ListColumn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ListColumn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ListColumn)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IListColumns implementation
##class IListColumns_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Position):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class ISpinners(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002088E-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISpinners._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, '_Default',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LinkedCell',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LinkedCell',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Max',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Max',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Min',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Min',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SmallChange',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SmallChange',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Value',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Spinner)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ISpinners implementation
##class ISpinners_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Min = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _Default = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Max = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LinkedCell = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SmallChange = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Value = property(_get, _set, doc = _set.__doc__)
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class ITab(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024469-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITab._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Color',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Color',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ThemeColor',
              ( ['retval', 'out'], POINTER(XlThemeColor), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ThemeColor',
              ( ['in'], XlThemeColor, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TintAndShade',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TintAndShade',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for ITab implementation
##class ITab_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TintAndShade = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ThemeColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Color = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##

class KEXCELCtrlExtender(CoClass):
    u'KdeExtender Class'
    _reg_clsid_ = GUID('{7BC8A1B5-CF6E-4AEB-9B50-1BF5ECCFE2D9}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{45541000-5750-5300-4B49-4E47534F4655}', 3, 0)
KEXCELCtrlExtender._com_interfaces_ = [IEXCELCtrlExtender]

class IMenuItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020867-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IMenuItems._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], BSTR, 'Caption' ),
              ( ['in', 'optional'], VARIANT, 'OnAction' ),
              ( ['in', 'optional'], VARIANT, 'ShortcutKey' ),
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'Restore' ),
              ( ['in', 'optional'], VARIANT, 'StatusBar' ),
              ( ['in', 'optional'], VARIANT, 'HelpFile' ),
              ( ['in', 'optional'], VARIANT, 'HelpContextID' ),
              ( ['retval', 'out'], POINTER(POINTER(MenuItem)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddMenu',
              ( ['in'], BSTR, 'Caption' ),
              ( ['in', 'optional'], VARIANT, 'Before' ),
              ( ['in', 'optional'], VARIANT, 'Restore' ),
              ( ['retval', 'out'], POINTER(POINTER(Menu)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IMenuItems implementation
##class IMenuItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddMenu(self, Caption, Before, Restore):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Add(self, Caption, OnAction, ShortcutKey, Before, Restore, StatusBar, HelpFile, HelpContextID):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IAutoCorrect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208D4-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAutoCorrect._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddReplacement',
              ( ['in'], BSTR, 'What' ),
              ( ['in'], BSTR, 'Replacement' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CapitalizeNamesOfDays',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CapitalizeNamesOfDays',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'DeleteReplacement',
              ( ['in'], BSTR, 'What' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReplacementList',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReplacementList',
              ( ['in', 'optional'], VARIANT, 'Index' ),
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReplaceText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReplaceText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TwoInitialCapitals',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TwoInitialCapitals',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CorrectSentenceCap',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CorrectSentenceCap',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CorrectCapsLock',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CorrectCapsLock',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayAutoCorrectOptions',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayAutoCorrectOptions',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoExpandListRange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoExpandListRange',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoFillFormulasInLists',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoFillFormulasInLists',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for IAutoCorrect implementation
##class IAutoCorrect_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoFillFormulasInLists = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayAutoCorrectOptions = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddReplacement(self, What, Replacement):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CorrectCapsLock = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CapitalizeNamesOfDays = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReplaceText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self, Index):
##        '-no docstring-'
##        #return RHS
##    def _set(self, Index, RHS):
##        '-no docstring-'
##    ReplacementList = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CorrectSentenceCap = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoExpandListRange = property(_get, _set, doc = _set.__doc__)
##
##    def DeleteReplacement(self, What):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TwoInitialCapitals = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'XlArrowHeadLength'
xlArrowHeadLengthLong = 3
xlArrowHeadLengthMedium = -4138
xlArrowHeadLengthShort = 1
XlArrowHeadLength = c_int # enum
class ISlicerItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244CA-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISlicerItems._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(SlicerItem)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for ISlicerItems implementation
##class ISlicerItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IGraphic(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024459-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IGraphic._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Brightness',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Brightness',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ColorType',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureColorType), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ColorType',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureColorType, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Contrast',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Contrast',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CropBottom',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CropBottom',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CropLeft',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CropLeft',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CropRight',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CropRight',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'CropTop',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'CropTop',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Filename',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Filename',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockAspectRatio',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockAspectRatio',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_float, 'RHS' )),
]
################################################################
## code template for IGraphic implementation
##class IGraphic_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CropLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockAspectRatio = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CropTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CropRight = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Brightness = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Filename = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ColorType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CropBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Contrast = property(_get, _set, doc = _set.__doc__)
##

class ITextFrame(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ITextFrame._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarginBottom',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarginBottom',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarginLeft',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarginLeft',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarginRight',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarginRight',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'MarginTop',
              ( ['retval', 'out'], POINTER(c_float), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'MarginTop',
              ( ['in'], c_float, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'RHS' )),
    COMMETHOD([], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(XlHAlign), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], XlHAlign, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(XlVAlign), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], XlVAlign, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoMargins',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoMargins',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalOverflow',
              ( ['retval', 'out'], POINTER(XlOartVerticalOverflow), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalOverflow',
              ( ['in'], XlOartVerticalOverflow, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalOverflow',
              ( ['retval', 'out'], POINTER(XlOartHorizontalOverflow), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalOverflow',
              ( ['in'], XlOartHorizontalOverflow, 'RHS' )),
]
################################################################
## code template for ITextFrame implementation
##class ITextFrame_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalOverflow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarginBottom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalOverflow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarginLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarginRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    MarginTop = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoMargins = property(_get, _set, doc = _set.__doc__)
##

class IConditionValue(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024492-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IConditionValue._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Modify',
              ( ['in'], XlConditionValueTypes, 'newtype' ),
              ( ['in', 'optional'], VARIANT, 'newvalue' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlConditionValueTypes), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Value',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
]
################################################################
## code template for IConditionValue implementation
##class IConditionValue_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def Modify(self, newtype, newvalue):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Value(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##

class ISheetViews(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002448C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
ISheetViews._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for ISheetViews implementation
##class ISheetViews_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

DefaultWebOptions._methods_ = [
    COMMETHOD([dispid(148), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD([dispid(149), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD([dispid(150), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([dispid(1899), 'propget'], HRESULT, 'RelyOnCSS',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1899), 'propput'], HRESULT, 'RelyOnCSS',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1900), 'propget'], HRESULT, 'SaveHiddenData',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1900), 'propput'], HRESULT, 'SaveHiddenData',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1901), 'propget'], HRESULT, 'LoadPictures',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1901), 'propput'], HRESULT, 'LoadPictures',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1902), 'propget'], HRESULT, 'OrganizeInFolder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1902), 'propput'], HRESULT, 'OrganizeInFolder',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1903), 'propget'], HRESULT, 'UpdateLinksOnSave',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1903), 'propput'], HRESULT, 'UpdateLinksOnSave',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1904), 'propget'], HRESULT, 'UseLongFileNames',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1904), 'propput'], HRESULT, 'UseLongFileNames',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1905), 'propget'], HRESULT, 'CheckIfOfficeIsHTMLEditor',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1905), 'propput'], HRESULT, 'CheckIfOfficeIsHTMLEditor',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1906), 'propget'], HRESULT, 'DownloadComponents',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1906), 'propput'], HRESULT, 'DownloadComponents',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1907), 'propget'], HRESULT, 'RelyOnVML',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1907), 'propput'], HRESULT, 'RelyOnVML',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1908), 'propget'], HRESULT, 'AllowPNG',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1908), 'propput'], HRESULT, 'AllowPNG',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1909), 'propget'], HRESULT, 'ScreenSize',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoScreenSize), 'RHS' )),
    COMMETHOD([dispid(1909), 'propput'], HRESULT, 'ScreenSize',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoScreenSize, 'RHS' )),
    COMMETHOD([dispid(1910), 'propget'], HRESULT, 'PixelsPerInch',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([dispid(1910), 'propput'], HRESULT, 'PixelsPerInch',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([dispid(1911), 'propget'], HRESULT, 'LocationOfComponents',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(1911), 'propput'], HRESULT, 'LocationOfComponents',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD([dispid(1822), 'propget'], HRESULT, 'Encoding',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEncoding), 'RHS' )),
    COMMETHOD([dispid(1822), 'propput'], HRESULT, 'Encoding',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEncoding, 'RHS' )),
    COMMETHOD([dispid(1912), 'propget'], HRESULT, 'AlwaysSaveInDefaultEncoding',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(1912), 'propput'], HRESULT, 'AlwaysSaveInDefaultEncoding',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([dispid(1913), 'propget'], HRESULT, 'Fonts',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.WebPageFonts)), 'RHS' )),
    COMMETHOD([dispid(1914), 'propget'], HRESULT, 'FolderSuffix',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([dispid(2179), 'propget'], HRESULT, 'TargetBrowser',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTargetBrowser), 'RHS' )),
    COMMETHOD([dispid(2179), 'propput'], HRESULT, 'TargetBrowser',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTargetBrowser, 'RHS' )),
    COMMETHOD([dispid(2180), 'propget'], HRESULT, 'SaveNewWebPagesAsWebArchives',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD([dispid(2180), 'propput'], HRESULT, 'SaveNewWebPagesAsWebArchives',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
]
################################################################
## code template for DefaultWebOptions implementation
##class DefaultWebOptions_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UseLongFileNames = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Encoding = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SaveNewWebPagesAsWebArchives = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LocationOfComponents = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AllowPNG = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScreenSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RelyOnCSS = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SaveHiddenData = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def FolderSuffix(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LoadPictures = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    UpdateLinksOnSave = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AlwaysSaveInDefaultEncoding = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fonts(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TargetBrowser = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RelyOnVML = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    CheckIfOfficeIsHTMLEditor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PixelsPerInch = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DownloadComponents = property(_get, _set, doc = _set.__doc__)
##

class IModuleView(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024489-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModuleView._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Sheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
]
################################################################
## code template for IModuleView implementation
##class IModuleView_Impl(object):
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Sheet(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##

class IIconSet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002449B-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IIconSet._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(XlIconSet), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Icon)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Icon)), 'RHS' )),
]
################################################################
## code template for IIconSet implementation
##class IIconSet_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return RHS
##

class IDisplayUnitLabel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002084C-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IDisplayUnitLabel._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Fill',
              ( ['retval', 'out'], POINTER(POINTER(ChartFillFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy21'),
    COMMETHOD(['propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(XlChartElementPosition), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Position',
              ( ['in'], XlChartElementPosition, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Format',
              ( ['retval', 'out'], POINTER(POINTER(ChartFormat)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaLocal',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaLocal',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FormulaR1C1Local',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FormulaR1C1Local',
              ( ['in'], BSTR, 'RHS' )),
]
################################################################
## code template for IDisplayUnitLabel implementation
##class IDisplayUnitLabel_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Format(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaLocal = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1Local = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FormulaR1C1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Width(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _Dummy21(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Height(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def Select(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Fill(self):
##        '-no docstring-'
##        #return RHS
##

class IAppEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00024413-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IAppEvents._methods_ = [
    COMMETHOD([], HRESULT, 'NewWorkbook',
              ( ['in'], POINTER(Workbook), 'Wb' )),
    COMMETHOD([], HRESULT, 'SheetSelectionChange',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' )),
    COMMETHOD([], HRESULT, 'SheetBeforeDoubleClick',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetBeforeRightClick',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetActivate',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetDeactivate',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetCalculate',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetChange',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Range), 'Target' )),
    COMMETHOD([], HRESULT, 'WorkbookOpen',
              ( ['in'], POINTER(Workbook), 'Wb' )),
    COMMETHOD([], HRESULT, 'WorkbookActivate',
              ( ['in'], POINTER(Workbook), 'Wb' )),
    COMMETHOD([], HRESULT, 'WorkbookDeactivate',
              ( ['in'], POINTER(Workbook), 'Wb' )),
    COMMETHOD([], HRESULT, 'WorkbookBeforeClose',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'WorkbookBeforeSave',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], VARIANT_BOOL, 'SaveAsUI' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'WorkbookBeforePrint',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'WorkbookNewSheet',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'WorkbookAddinInstall',
              ( ['in'], POINTER(Workbook), 'Wb' )),
    COMMETHOD([], HRESULT, 'WorkbookAddinUninstall',
              ( ['in'], POINTER(Workbook), 'Wb' )),
    COMMETHOD([], HRESULT, 'WindowResize',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'WindowActivate',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'WindowDeactivate',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(Window), 'Wn' )),
    COMMETHOD([], HRESULT, 'SheetFollowHyperlink',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(Hyperlink), 'Target' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableUpdate',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'WorkbookPivotTableCloseConnection',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'WorkbookPivotTableOpenConnection',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(PivotTable), 'Target' )),
    COMMETHOD([], HRESULT, 'WorkbookSync',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoSyncEventType, 'SyncEventType' )),
    COMMETHOD([], HRESULT, 'WorkbookBeforeXmlImport',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'WorkbookAfterXmlImport',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], VARIANT_BOOL, 'IsRefresh' ),
              ( ['in'], XlXmlImportResult, 'Result' )),
    COMMETHOD([], HRESULT, 'WorkbookBeforeXmlExport',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'WorkbookAfterXmlExport',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(XmlMap), 'Map' ),
              ( ['in'], BSTR, 'Url' ),
              ( ['in'], XlXmlExportResult, 'Result' )),
    COMMETHOD([], HRESULT, 'WorkbookRowsetComplete',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], BSTR, 'Description' ),
              ( ['in'], BSTR, 'Sheet' ),
              ( ['in'], VARIANT_BOOL, 'Success' )),
    COMMETHOD([], HRESULT, 'AfterCalculate'),
    COMMETHOD([], HRESULT, 'SheetPivotTableAfterValueChange',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], POINTER(Range), 'TargetRange' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableBeforeAllocateChanges',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableBeforeCommitChanges',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'SheetPivotTableBeforeDiscardChanges',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(PivotTable), 'TargetPivotTable' ),
              ( ['in'], c_int, 'ValueChangeStart' ),
              ( ['in'], c_int, 'ValueChangeEnd' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowOpen',
              ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowBeforeEdit',
              ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowBeforeClose',
              ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' ),
              ( ['in'], XlProtectedViewCloseReason, 'Reason' ),
              ( ['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowResize',
              ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowActivate',
              ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    COMMETHOD([], HRESULT, 'ProtectedViewWindowDeactivate',
              ( ['in'], POINTER(ProtectedViewWindow), 'Pvw' )),
    COMMETHOD([], HRESULT, 'WorkbookAfterSave',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], VARIANT_BOOL, 'Success' )),
    COMMETHOD([], HRESULT, 'WorkbookNewChart',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(Chart), 'Ch' )),
    COMMETHOD([], HRESULT, 'SheetLensGalleryRenderComplete',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
    COMMETHOD([], HRESULT, 'SheetTableUpdate',
              ( ['in'], POINTER(IDispatch), 'Sh' ),
              ( ['in'], POINTER(TableObject), 'Target' )),
    COMMETHOD([], HRESULT, 'WorkbookModelChange',
              ( ['in'], POINTER(Workbook), 'Wb' ),
              ( ['in'], POINTER(ModelChanges), 'Changes' )),
    COMMETHOD([], HRESULT, 'SheetBeforeDelete',
              ( ['in'], POINTER(IDispatch), 'Sh' )),
]
################################################################
## code template for IAppEvents implementation
##class IAppEvents_Impl(object):
##    def WorkbookActivate(self, Wb):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowDeactivate(self, Pvw):
##        '-no docstring-'
##        #return 
##
##    def WorkbookAddinInstall(self, Wb):
##        '-no docstring-'
##        #return 
##
##    def SheetBeforeRightClick(self, Sh, Target):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetPivotTableBeforeAllocateChanges(self, Sh, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetFollowHyperlink(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def WorkbookBeforePrint(self, Wb):
##        '-no docstring-'
##        #return Cancel
##
##    def WorkbookBeforeXmlExport(self, Wb, Map, Url):
##        '-no docstring-'
##        #return Cancel
##
##    def WorkbookDeactivate(self, Wb):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowResize(self, Pvw):
##        '-no docstring-'
##        #return 
##
##    def SheetSelectionChange(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def SheetActivate(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def SheetPivotTableAfterValueChange(self, Sh, TargetPivotTable, TargetRange):
##        '-no docstring-'
##        #return 
##
##    def WorkbookAddinUninstall(self, Wb):
##        '-no docstring-'
##        #return 
##
##    def AfterCalculate(self):
##        '-no docstring-'
##        #return 
##
##    def WorkbookRowsetComplete(self, Wb, Description, Sheet, Success):
##        '-no docstring-'
##        #return 
##
##    def NewWorkbook(self, Wb):
##        '-no docstring-'
##        #return 
##
##    def WorkbookSync(self, Wb, SyncEventType):
##        '-no docstring-'
##        #return 
##
##    def SheetChange(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def WorkbookModelChange(self, Wb, Changes):
##        '-no docstring-'
##        #return 
##
##    def SheetPivotTableBeforeDiscardChanges(self, Sh, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return 
##
##    def WorkbookBeforeSave(self, Wb, SaveAsUI):
##        '-no docstring-'
##        #return Cancel
##
##    def WorkbookAfterXmlExport(self, Wb, Map, Url, Result):
##        '-no docstring-'
##        #return 
##
##    def WorkbookPivotTableCloseConnection(self, Wb, Target):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowOpen(self, Pvw):
##        '-no docstring-'
##        #return 
##
##    def WorkbookPivotTableOpenConnection(self, Wb, Target):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowBeforeEdit(self, Pvw):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetBeforeDelete(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def SheetCalculate(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def SheetBeforeDoubleClick(self, Sh, Target):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetPivotTableBeforeCommitChanges(self, Sh, TargetPivotTable, ValueChangeStart, ValueChangeEnd):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetDeactivate(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def WindowDeactivate(self, Wb, Wn):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowBeforeClose(self, Pvw, Reason):
##        '-no docstring-'
##        #return Cancel
##
##    def WindowResize(self, Wb, Wn):
##        '-no docstring-'
##        #return 
##
##    def SheetPivotTableUpdate(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def WorkbookOpen(self, Wb):
##        '-no docstring-'
##        #return 
##
##    def WorkbookBeforeXmlImport(self, Wb, Map, Url, IsRefresh):
##        '-no docstring-'
##        #return Cancel
##
##    def SheetTableUpdate(self, Sh, Target):
##        '-no docstring-'
##        #return 
##
##    def SheetLensGalleryRenderComplete(self, Sh):
##        '-no docstring-'
##        #return 
##
##    def WindowActivate(self, Wb, Wn):
##        '-no docstring-'
##        #return 
##
##    def WorkbookNewSheet(self, Wb, Sh):
##        '-no docstring-'
##        #return 
##
##    def WorkbookAfterXmlImport(self, Wb, Map, IsRefresh, Result):
##        '-no docstring-'
##        #return 
##
##    def ProtectedViewWindowActivate(self, Pvw):
##        '-no docstring-'
##        #return 
##
##    def WorkbookNewChart(self, Wb, Ch):
##        '-no docstring-'
##        #return 
##
##    def WorkbookBeforeClose(self, Wb):
##        '-no docstring-'
##        #return Cancel
##
##    def WorkbookAfterSave(self, Wb, Success):
##        '-no docstring-'
##        #return 
##

class CheckBoxes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020880-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
CheckBoxes._disp_methods_ = [
    DISPMETHOD([dispid(148), 'propget'], POINTER(Application), 'Application'),
    DISPMETHOD([dispid(149), 'propget'], XlCreator, 'Creator'),
    DISPMETHOD([dispid(150), 'propget'], POINTER(IDispatch), 'Parent'),
    DISPMETHOD([dispid(1610743811), 'restricted', 'hidden'], None, '_Dummy3'),
    DISPMETHOD([dispid(602)], VARIANT, 'BringToFront'),
    DISPMETHOD([dispid(551)], VARIANT, 'Copy'),
    DISPMETHOD([dispid(213)], VARIANT, 'CopyPicture',
               ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
               ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 )),
    DISPMETHOD([dispid(565)], VARIANT, 'Cut'),
    DISPMETHOD([dispid(117)], VARIANT, 'Delete'),
    DISPMETHOD([dispid(1039)], POINTER(IDispatch), 'Duplicate'),
    DISPMETHOD([dispid(600), 'propget'], VARIANT_BOOL, 'Enabled'),
    DISPMETHOD([dispid(600), 'propput'], None, 'Enabled',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(123), 'propget'], c_double, 'Height'),
    DISPMETHOD([dispid(123), 'propput'], None, 'Height',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743822), 'restricted', 'hidden'], None, '_Dummy12'),
    DISPMETHOD([dispid(127), 'propget'], c_double, 'Left'),
    DISPMETHOD([dispid(127), 'propput'], None, 'Left',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(269), 'propget'], VARIANT_BOOL, 'Locked'),
    DISPMETHOD([dispid(269), 'propput'], None, 'Locked',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(1610743827), 'restricted', 'hidden'], None, '_Dummy15'),
    DISPMETHOD([dispid(596), 'hidden', 'propget'], BSTR, 'OnAction'),
    DISPMETHOD([dispid(596), 'hidden', 'propput'], None, 'OnAction',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(617), 'propget'], VARIANT, 'Placement'),
    DISPMETHOD([dispid(617), 'propput'], None, 'Placement',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(618), 'propget'], VARIANT_BOOL, 'PrintObject'),
    DISPMETHOD([dispid(618), 'propput'], None, 'PrintObject',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(235)], VARIANT, 'Select',
               ( ['in', 'optional'], VARIANT, 'Replace' )),
    DISPMETHOD([dispid(605)], VARIANT, 'SendToBack'),
    DISPMETHOD([dispid(126), 'propget'], c_double, 'Top'),
    DISPMETHOD([dispid(126), 'propput'], None, 'Top',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(1610743838), 'restricted', 'hidden'], None, '_Dummy22'),
    DISPMETHOD([dispid(558), 'propget'], VARIANT_BOOL, 'Visible'),
    DISPMETHOD([dispid(558), 'propput'], None, 'Visible',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(122), 'propget'], c_double, 'Width'),
    DISPMETHOD([dispid(122), 'propput'], None, 'Width',
               ( ['in'], c_double, 'rhs' )),
    DISPMETHOD([dispid(622), 'propget'], c_int, 'ZOrder'),
    DISPMETHOD([dispid(1528), 'propget'], POINTER(ShapeRange), 'ShapeRange'),
    DISPMETHOD([dispid(139), 'propget'], BSTR, 'Caption'),
    DISPMETHOD([dispid(139), 'propput'], None, 'Caption',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(603), 'propget'], POINTER(Characters), 'Characters',
               ( ['in', 'optional'], VARIANT, 'Start' ),
               ( ['in', 'optional'], VARIANT, 'Length' )),
    DISPMETHOD([dispid(505)], VARIANT, 'CheckSpelling',
               ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
               ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
               ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
               ( ['in', 'optional'], VARIANT, 'SpellLang' )),
    DISPMETHOD([dispid(616), 'propget'], VARIANT_BOOL, 'LockedText'),
    DISPMETHOD([dispid(616), 'propput'], None, 'LockedText',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(138), 'propget'], BSTR, 'Text'),
    DISPMETHOD([dispid(138), 'propput'], None, 'Text',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(846), 'propget'], VARIANT, 'Accelerator'),
    DISPMETHOD([dispid(846), 'propput'], None, 'Accelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(128), 'propget'], POINTER(Border), 'Border'),
    DISPMETHOD([dispid(0), 'propget'], c_int, '_Default'),
    DISPMETHOD([dispid(0), 'propput'], None, '_Default',
               ( ['in'], c_int, 'rhs' )),
    DISPMETHOD([dispid(1122), 'propget'], VARIANT_BOOL, 'Display3DShading'),
    DISPMETHOD([dispid(1122), 'propput'], None, 'Display3DShading',
               ( ['in'], VARIANT_BOOL, 'rhs' )),
    DISPMETHOD([dispid(129), 'propget'], POINTER(Interior), 'Interior'),
    DISPMETHOD([dispid(1058), 'propget'], BSTR, 'LinkedCell'),
    DISPMETHOD([dispid(1058), 'propput'], None, 'LinkedCell',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(1121), 'propget'], VARIANT, 'PhoneticAccelerator'),
    DISPMETHOD([dispid(1121), 'propput'], None, 'PhoneticAccelerator',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(6), 'propget'], VARIANT, 'Value'),
    DISPMETHOD([dispid(6), 'propput'], None, 'Value',
               ( ['in'], VARIANT, 'rhs' )),
    DISPMETHOD([dispid(181)], POINTER(CheckBox), 'Add',
               ( ['in'], c_double, 'Left' ),
               ( ['in'], c_double, 'Top' ),
               ( ['in'], c_double, 'Width' ),
               ( ['in'], c_double, 'Height' )),
    DISPMETHOD([dispid(118), 'propget'], c_int, 'Count'),
    DISPMETHOD([dispid(46)], POINTER(GroupObject), 'Group'),
    DISPMETHOD([dispid(170)], POINTER(IDispatch), 'Item',
               ( ['in'], VARIANT, 'Index' )),
    DISPMETHOD([dispid(-4)], POINTER(IUnknown), '_NewEnum'),
]
TextEffectFormat._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'Parent' )),
    COMMETHOD([dispid(10)], HRESULT, 'ToggleVerticalText'),
    COMMETHOD([dispid(100), 'propget'], HRESULT, 'Alignment',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextEffectAlignment), 'Alignment' )),
    COMMETHOD([dispid(100), 'propput'], HRESULT, 'Alignment',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextEffectAlignment, 'Alignment' )),
    COMMETHOD([dispid(101), 'propget'], HRESULT, 'FontBold',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'FontBold' )),
    COMMETHOD([dispid(101), 'propput'], HRESULT, 'FontBold',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'FontBold' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'FontItalic',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'FontItalic' )),
    COMMETHOD([dispid(102), 'propput'], HRESULT, 'FontItalic',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'FontItalic' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'FontName',
              ( ['retval', 'out'], POINTER(BSTR), 'FontName' )),
    COMMETHOD([dispid(103), 'propput'], HRESULT, 'FontName',
              ( ['in'], BSTR, 'FontName' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'FontSize',
              ( ['retval', 'out'], POINTER(c_float), 'FontSize' )),
    COMMETHOD([dispid(104), 'propput'], HRESULT, 'FontSize',
              ( ['in'], c_float, 'FontSize' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'KernedPairs',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'KernedPairs' )),
    COMMETHOD([dispid(105), 'propput'], HRESULT, 'KernedPairs',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'KernedPairs' )),
    COMMETHOD([dispid(106), 'propget'], HRESULT, 'NormalizedHeight',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'NormalizedHeight' )),
    COMMETHOD([dispid(106), 'propput'], HRESULT, 'NormalizedHeight',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'NormalizedHeight' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'PresetShape',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffectShape), 'PresetShape' )),
    COMMETHOD([dispid(107), 'propput'], HRESULT, 'PresetShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffectShape, 'PresetShape' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'PresetTextEffect',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffect), 'Preset' )),
    COMMETHOD([dispid(108), 'propput'], HRESULT, 'PresetTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffect, 'Preset' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'RotatedChars',
              ( ['retval', 'out'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState), 'RotatedChars' )),
    COMMETHOD([dispid(109), 'propput'], HRESULT, 'RotatedChars',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'RotatedChars' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'Text' )),
    COMMETHOD([dispid(110), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'Text' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'Tracking',
              ( ['retval', 'out'], POINTER(c_float), 'Tracking' )),
    COMMETHOD([dispid(111), 'propput'], HRESULT, 'Tracking',
              ( ['in'], c_float, 'Tracking' )),
]
################################################################
## code template for TextEffectFormat implementation
##class TextEffectFormat_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return KernedPairs
##    def _set(self, KernedPairs):
##        '-no docstring-'
##    KernedPairs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontBold
##    def _set(self, FontBold):
##        '-no docstring-'
##    FontBold = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Preset
##    def _set(self, Preset):
##        '-no docstring-'
##    PresetTextEffect = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RotatedChars
##    def _set(self, RotatedChars):
##        '-no docstring-'
##    RotatedChars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return Parent
##
##    def _get(self):
##        '-no docstring-'
##        #return Text
##    def _set(self, Text):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return NormalizedHeight
##    def _set(self, NormalizedHeight):
##        '-no docstring-'
##    NormalizedHeight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontName
##    def _set(self, FontName):
##        '-no docstring-'
##    FontName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Tracking
##    def _set(self, Tracking):
##        '-no docstring-'
##    Tracking = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return PresetShape
##    def _set(self, PresetShape):
##        '-no docstring-'
##    PresetShape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FontSize
##    def _set(self, FontSize):
##        '-no docstring-'
##    FontSize = property(_get, _set, doc = _set.__doc__)
##
##    def ToggleVerticalText(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return FontItalic
##    def _set(self, FontItalic):
##        '-no docstring-'
##    FontItalic = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Alignment
##    def _set(self, Alignment):
##        '-no docstring-'
##    Alignment = property(_get, _set, doc = _set.__doc__)
##

class IWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020893-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IWindow._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Activate',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ActivateNext',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'ActivatePrevious',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ActiveCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ActiveChart',
              ( ['retval', 'out'], POINTER(POINTER(Chart)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ActivePane',
              ( ['retval', 'out'], POINTER(POINTER(Pane)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ActiveSheet',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD([], HRESULT, 'Close',
              ( ['in', 'optional'], VARIANT, 'SaveChanges' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'RouteWorkbook' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayFormulas',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayFormulas',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayGridlines',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayGridlines',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayHeadings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayHeadings',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayHorizontalScrollBar',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayHorizontalScrollBar',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayOutline',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayOutline',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, '_DisplayRightToLeft',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, '_DisplayRightToLeft',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayVerticalScrollBar',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayWorkbookTabs',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayWorkbookTabs',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayZeros',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayZeros',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'EnableResize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'EnableResize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'FreezePanes',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'FreezePanes',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GridlineColor',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'GridlineColor',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'GridlineColorIndex',
              ( ['retval', 'out'], POINTER(XlColorIndex), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'GridlineColorIndex',
              ( ['in'], XlColorIndex, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'LargeScroll',
              ( ['in', 'optional'], VARIANT, 'Down' ),
              ( ['in', 'optional'], VARIANT, 'Up' ),
              ( ['in', 'optional'], VARIANT, 'ToRight' ),
              ( ['in', 'optional'], VARIANT, 'ToLeft' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD([], HRESULT, 'NewWindow',
              ( ['retval', 'out'], POINTER(POINTER(Window)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'OnWindow',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'OnWindow',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Panes',
              ( ['retval', 'out'], POINTER(POINTER(Panes)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, '_PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'PrintPreview',
              ( ['in', 'optional'], VARIANT, 'EnableChanges' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RangeSelection',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScrollColumn',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScrollColumn',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ScrollRow',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ScrollRow',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD([], HRESULT, 'ScrollWorkbookTabs',
              ( ['in', 'optional'], VARIANT, 'Sheets' ),
              ( ['in', 'optional'], VARIANT, 'Position' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SelectedSheets',
              ( ['retval', 'out'], POINTER(POINTER(Sheets)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Selection',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SmallScroll',
              ( ['in', 'optional'], VARIANT, 'Down' ),
              ( ['in', 'optional'], VARIANT, 'Up' ),
              ( ['in', 'optional'], VARIANT, 'ToRight' ),
              ( ['in', 'optional'], VARIANT, 'ToLeft' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Split',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Split',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SplitColumn',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SplitColumn',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SplitHorizontal',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SplitHorizontal',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SplitRow',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SplitRow',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SplitVertical',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SplitVertical',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TabRatio',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'TabRatio',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(XlWindowType), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UsableHeight',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'UsableWidth',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VisibleRange',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WindowNumber',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'WindowState',
              ( ['retval', 'out'], POINTER(XlWindowState), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'WindowState',
              ( ['in'], XlWindowState, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Zoom',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Zoom',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'View',
              ( ['retval', 'out'], POINTER(XlWindowView), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'View',
              ( ['in'], XlWindowView, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayRightToLeft',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayRightToLeft',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'PointsToScreenPixelsX',
              ( ['in'], c_int, 'Points' ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'PointsToScreenPixelsY',
              ( ['in'], c_int, 'Points' ),
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'RangeFromPoint',
              ( ['in'], c_int, 'x' ),
              ( ['in'], c_int, 'y' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'ScrollIntoView',
              ( ['in'], c_int, 'Left' ),
              ( ['in'], c_int, 'Top' ),
              ( ['in'], c_int, 'Width' ),
              ( ['in'], c_int, 'Height' ),
              ( ['in', 'optional'], VARIANT, 'Start' )),
    COMMETHOD(['propget'], HRESULT, 'SheetViews',
              ( ['retval', 'out'], POINTER(POINTER(SheetViews)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ActiveSheetView',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, 'PrintOut',
              ( ['in', 'optional'], VARIANT, 'From' ),
              ( ['in', 'optional'], VARIANT, 'To' ),
              ( ['in', 'optional'], VARIANT, 'Copies' ),
              ( ['in', 'optional'], VARIANT, 'Preview' ),
              ( ['in', 'optional'], VARIANT, 'ActivePrinter' ),
              ( ['in', 'optional'], VARIANT, 'PrintToFile' ),
              ( ['in', 'optional'], VARIANT, 'Collate' ),
              ( ['in', 'optional'], VARIANT, 'PrToFileName' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayRuler',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayRuler',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoFilterDateGrouping',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoFilterDateGrouping',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'DisplayWhitespace',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'DisplayWhitespace',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Hwnd',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
]
################################################################
## code template for IWindow implementation
##class IWindow_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def SelectedSheets(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def RangeSelection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScrollRow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayWorkbookTabs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitVertical = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Split = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayHorizontalScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActiveSheetView(self):
##        '-no docstring-'
##        #return RHS
##
##    def ActivateNext(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def VisibleRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitHorizontal = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Panes(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveChart(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GridlineColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ScrollColumn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def SmallScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveSheet(self):
##        '-no docstring-'
##        #return RHS
##
##    def NewWindow(self):
##        '-no docstring-'
##        #return RHS
##
##    def ScrollIntoView(self, Left, Top, Width, Height, Start):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayZeros = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ActivePane(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    View = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UsableWidth(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnWindow = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayFormulas = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoFilterDateGrouping = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayOutline = property(_get, _set, doc = _set.__doc__)
##
##    def RangeFromPoint(self, x, y):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    GridlineColorIndex = property(_get, _set, doc = _set.__doc__)
##
##    def _PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName):
##        '-no docstring-'
##        #return RHS
##
##    def PrintPreview(self, EnableChanges):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UsableHeight(self):
##        '-no docstring-'
##        #return RHS
##
##    def PrintOut(self, From, To, Copies, Preview, ActivePrinter, PrintToFile, Collate, PrToFileName):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Zoom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Hwnd(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Selection(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    FreezePanes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayWhitespace = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayRightToLeft = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayVerticalScrollBar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def LargeScroll(self, Down, Up, ToRight, ToLeft):
##        '-no docstring-'
##        #return RHS
##
##    def Activate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitRow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SheetViews(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayRuler = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def ActivatePrevious(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayHeadings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    EnableResize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WindowNumber(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ActiveCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SplitColumn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    TabRatio = property(_get, _set, doc = _set.__doc__)
##
##    def ScrollWorkbookTabs(self, Sheets, Position):
##        '-no docstring-'
##        #return RHS
##
##    def Close(self, SaveChanges, Filename, RouteWorkbook):
##        '-no docstring-'
##        #return RHS
##
##    def PointsToScreenPixelsY(self, Points):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    _DisplayRightToLeft = property(_get, _set, doc = _set.__doc__)
##
##    def PointsToScreenPixelsX(self, Points):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    DisplayGridlines = property(_get, _set, doc = _set.__doc__)
##

class IGroupBox(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{00020889-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IGroupBox._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'BottomRightCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'TopLeftCell',
              ( ['retval', 'out'], POINTER(POINTER(Range)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Accelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Accelerator',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Display3DShading',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Display3DShading',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PhoneticAccelerator',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PhoneticAccelerator',
              ( ['in'], VARIANT, 'RHS' )),
]
################################################################
## code template for IGroupBox implementation
##class IGroupBox_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TopLeftCell(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PhoneticAccelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BottomRightCell(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Display3DShading = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Accelerator = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

class IOutline(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000208AB-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IOutline._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutomaticStyles',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutomaticStyles',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'ShowLevels',
              ( ['in', 'optional'], VARIANT, 'RowLevels' ),
              ( ['in', 'optional'], VARIANT, 'ColumnLevels' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SummaryColumn',
              ( ['retval', 'out'], POINTER(XlSummaryColumn), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SummaryColumn',
              ( ['in'], XlSummaryColumn, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'SummaryRow',
              ( ['retval', 'out'], POINTER(XlSummaryRow), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'SummaryRow',
              ( ['in'], XlSummaryRow, 'RHS' )),
]
################################################################
## code template for IOutline implementation
##class IOutline_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def ShowLevels(self, RowLevels, ColumnLevels):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SummaryRow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    SummaryColumn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutomaticStyles = property(_get, _set, doc = _set.__doc__)
##

class IModelMeasureNames(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000244EA-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IModelMeasureNames._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelMeasureName)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ModelMeasureName)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IModelMeasureNames implementation
##class IModelMeasureNames_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##

class IShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002443A-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IShapes._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, '_Default',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddCallout',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoCalloutType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddConnector',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoConnectorType, 'Type' ),
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddCurve',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddLabel',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddLine',
              ( ['in'], c_float, 'BeginX' ),
              ( ['in'], c_float, 'BeginY' ),
              ( ['in'], c_float, 'EndX' ),
              ( ['in'], c_float, 'EndY' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddPicture',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'LinkToFile' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddPolyline',
              ( ['in'], VARIANT, 'SafeArrayOfPoints' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddShape',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoAutoShapeType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddTextEffect',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPresetTextEffect, 'PresetTextEffect' ),
              ( ['in'], BSTR, 'Text' ),
              ( ['in'], BSTR, 'FontName' ),
              ( ['in'], c_float, 'FontSize' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'FontBold' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'FontItalic' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddTextbox',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTextOrientation, 'Orientation' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'BuildFreeform',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoEditingType, 'EditingType' ),
              ( ['in'], c_float, 'X1' ),
              ( ['in'], c_float, 'Y1' ),
              ( ['retval', 'out'], POINTER(POINTER(FreeformBuilder)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Range',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD([], HRESULT, 'SelectAll'),
    COMMETHOD([], HRESULT, 'AddFormControl',
              ( ['in'], XlFormControl, 'Type' ),
              ( ['in'], c_int, 'Left' ),
              ( ['in'], c_int, 'Top' ),
              ( ['in'], c_int, 'Width' ),
              ( ['in'], c_int, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddOLEObject',
              ( ['in', 'optional'], VARIANT, 'ClassType' ),
              ( ['in', 'optional'], VARIANT, 'Filename' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' ),
              ( ['in', 'optional'], VARIANT, 'IconFileName' ),
              ( ['in', 'optional'], VARIANT, 'IconIndex' ),
              ( ['in', 'optional'], VARIANT, 'IconLabel' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'AddDiagram',
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoDiagramType, 'Type' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'AddCanvas',
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD(['hidden'], HRESULT, 'AddChart',
              ( ['in', 'optional'], VARIANT, 'XlChartType' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddSmartArt',
              ( ['in'], POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.SmartArtLayout), 'Layout' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddChart2',
              ( ['in', 'optional'], VARIANT, 'Style' ),
              ( ['in', 'optional'], VARIANT, 'XlChartType' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['in', 'optional'], VARIANT, 'NewLayout' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddPicture2',
              ( ['in'], BSTR, 'Filename' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'LinkToFile' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoTriState, 'SaveWithDocument' ),
              ( ['in'], c_float, 'Left' ),
              ( ['in'], c_float, 'Top' ),
              ( ['in'], c_float, 'Width' ),
              ( ['in'], c_float, 'Height' ),
              ( ['in'], comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_99_1.MsoPictureCompress, 'Compress' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
    COMMETHOD([], HRESULT, 'AddWebShape',
              ( ['in'], BSTR, 'Url' ),
              ( ['in'], c_int, 'nBrowserId' ),
              ( ['in'], c_int, 'nFrameId' ),
              ( ['in'], c_int, 'funcId' ),
              ( ['in'], BSTR, 'pKey' ),
              ( ['in', 'optional'], VARIANT, 'Left' ),
              ( ['in', 'optional'], VARIANT, 'Top' ),
              ( ['in', 'optional'], VARIANT, 'Width' ),
              ( ['in', 'optional'], VARIANT, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Shape)), 'RHS' )),
]
################################################################
## code template for IShapes implementation
##class IShapes_Impl(object):
##    def AddFormControl(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def BuildFreeform(self, EditingType, X1, Y1):
##        '-no docstring-'
##        #return RHS
##
##    def AddCurve(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddLine(self, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return RHS
##
##    def AddChart2(self, Style, XlChartType, Left, Top, Width, Height, NewLayout):
##        '-no docstring-'
##        #return RHS
##
##    def AddPolyline(self, SafeArrayOfPoints):
##        '-no docstring-'
##        #return RHS
##
##    def _Default(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    def AddSmartArt(self, Layout, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddPicture2(self, Filename, LinkToFile, SaveWithDocument, Left, Top, Width, Height, Compress):
##        '-no docstring-'
##        #return RHS
##
##    def AddCallout(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def AddOLEObject(self, ClassType, Filename, Link, DisplayAsIcon, IconFileName, IconIndex, IconLabel, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def AddDiagram(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def AddConnector(self, Type, BeginX, BeginY, EndX, EndY):
##        '-no docstring-'
##        #return RHS
##
##    def AddShape(self, Type, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddChart(self, XlChartType, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Range(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    def AddPicture(self, Filename, LinkToFile, SaveWithDocument, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def AddWebShape(self, Url, nBrowserId, nFrameId, funcId, pKey, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def AddCanvas(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def AddTextbox(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def AddLabel(self, Orientation, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def AddTextEffect(self, PresetTextEffect, Text, FontName, FontSize, FontBold, FontItalic, Left, Top):
##        '-no docstring-'
##        #return RHS
##

class IRectangles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0002089D-0001-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
IRectangles._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(Application)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(XlCreator), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy3'),
    COMMETHOD([], HRESULT, 'BringToFront',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Copy',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'CopyPicture',
              ( ['in', 'optional'], XlPictureAppearance, 'Appearance', 2 ),
              ( ['in', 'optional'], XlCopyPictureFormat, 'Format', -4147 ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Cut',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Delete',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Height',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy12'),
    COMMETHOD(['propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Left',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Locked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Locked',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy15'),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'OnAction',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'OnAction',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Placement',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Placement',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'PrintObject',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'PrintObject',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Select',
              ( ['in', 'optional'], VARIANT, 'Replace' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD([], HRESULT, 'SendToBack',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Top',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['restricted', 'hidden'], None, '_Dummy22'),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_double), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Width',
              ( ['in'], c_double, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ZOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ShapeRange',
              ( ['retval', 'out'], POINTER(POINTER(ShapeRange)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AddIndent',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AddIndent',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoScaleFont',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoScaleFont',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Characters',
              ( ['in', 'optional'], VARIANT, 'Start' ),
              ( ['in', 'optional'], VARIANT, 'Length' ),
              ( ['retval', 'out'], POINTER(POINTER(Characters)), 'RHS' )),
    COMMETHOD([], HRESULT, 'CheckSpelling',
              ( ['in', 'optional'], VARIANT, 'CustomDictionary' ),
              ( ['in', 'optional'], VARIANT, 'IgnoreUppercase' ),
              ( ['in', 'optional'], VARIANT, 'AlwaysSuggest' ),
              ( ['in', 'optional'], VARIANT, 'SpellLang' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(Font)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'HorizontalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'HorizontalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'LockedText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'LockedText',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Orientation',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Orientation',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'VerticalAlignment',
              ( ['retval', 'out'], POINTER(VARIANT), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'VerticalAlignment',
              ( ['in'], VARIANT, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'ReadingOrder',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'ReadingOrder',
              ( ['in'], c_int, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Border',
              ( ['retval', 'out'], POINTER(POINTER(Border)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Interior',
              ( ['retval', 'out'], POINTER(POINTER(Interior)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Shadow',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'Shadow',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'RoundedCorners',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RHS' )),
    COMMETHOD(['propput'], HRESULT, 'RoundedCorners',
              ( ['in'], VARIANT_BOOL, 'RHS' )),
    COMMETHOD([], HRESULT, 'Add',
              ( ['in'], c_double, 'Left' ),
              ( ['in'], c_double, 'Top' ),
              ( ['in'], c_double, 'Width' ),
              ( ['in'], c_double, 'Height' ),
              ( ['retval', 'out'], POINTER(POINTER(Rectangle)), 'RHS' )),
    COMMETHOD(['propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'RHS' )),
    COMMETHOD([], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(GroupObject)), 'RHS' )),
    COMMETHOD([], HRESULT, 'Item',
              ( ['in'], VARIANT, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'RHS' )),
    COMMETHOD([], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'RHS' )),
]
################################################################
## code template for IRectangles implementation
##class IRectangles_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return RHS
##
##    def Cut(self):
##        '-no docstring-'
##        #return RHS
##
##    def Group(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoScaleFont = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ShapeRange(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return RHS
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Interior(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Placement = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AddIndent = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _NewEnum(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy15(self):
##        '-no docstring-'
##        #return 
##
##    def _Dummy12(self):
##        '-no docstring-'
##        #return 
##
##    def Item(self, Index):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def ZOrder(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Characters(self, Start, Length):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy3(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Shadow = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return RHS
##
##    def Delete(self):
##        '-no docstring-'
##        #return RHS
##
##    def CopyPicture(self, Appearance, Format):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    RoundedCorners = property(_get, _set, doc = _set.__doc__)
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    PrintObject = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def CheckSpelling(self, CustomDictionary, IgnoreUppercase, AlwaysSuggest, SpellLang):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    VerticalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Locked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Orientation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Creator(self):
##        '-no docstring-'
##        #return RHS
##
##    def _Dummy22(self):
##        '-no docstring-'
##        #return 
##
##    def Add(self, Left, Top, Width, Height):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    OnAction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    HorizontalAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    ReadingOrder = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return RHS
##
##    @property
##    def Border(self):
##        '-no docstring-'
##        #return RHS
##
##    def _get(self):
##        '-no docstring-'
##        #return RHS
##    def _set(self, RHS):
##        '-no docstring-'
##    LockedText = property(_get, _set, doc = _set.__doc__)
##
##    def Select(self, Replace):
##        '-no docstring-'
##        #return RHS
##

__all__ = [ 'xlMixedScript', 'IActions', 'xlFilterBottomPercent',
           'xlParamTypeInteger', 'xlAllDatesInPeriodJanuary',
           'rgbLightSlateGrey', 'xlDialogDocumentInspector',
           'PivotItems', 'IChartGroup', 'rgbWheat', 'IDataBarBorder',
           'xlPivotChartDropZone', 'TextFrame2',
           'XlGenerateTableRefs', 'IChartCategory', 'rgbLinen',
           'xlWK1FMT', 'xlRDIContentType', 'xlHairline',
           'XlTimePeriods', 'xlTextDate', 'Ranges',
           'xlExcel4MacroSheet', 'Sheets', 'rgbViolet',
           'xlDialogPageSetup', 'xlCaptionIsGreaterThanOrEqualTo',
           'xlOartHorizontalOverflowOverflow', 'xlRange',
           'xlCellTypeAllFormatConditions', 'IToolbars', 'xlShort',
           'IComments', 'Workbook', 'XmlDataBinding',
           'xlPyramidColClustered', 'xlOtherSessionChanges',
           'xlPinYin', 'xlRepeatLabels', 'XlSizeRepresents',
           'ITextBoxes', 'xlTextQualifierDoubleQuote', 'IScrollBars',
           'xlDateNextWeek', 'xlSeriesNameLevelCustom',
           'PublishObjects', 'IModelColumnChange',
           'xlCaptionDoesNotEqual', 'xlNotXLM', 'xlDialogChartWizard',
           'IOLEDBErrors', 'xlSortOnValues', 'rgbIvory',
           'xlSpeakByRows', 'xlThisMonth', 'rgbSteelBlue',
           'xlDialogCustomViews', 'xlDialogDemote', 'rgbSilver',
           'ModelRelationship', 'xlTimeScale', 'PivotFilters',
           'XlColumnDataType', 'XlSortOrder', 'xlFirstRow',
           'xlDialogSlicerCreation', 'xlFilterTomorrow', 'SmartTag',
           'xlTextValues', 'xlFillSeries', 'OLEDBErrors',
           'XlSpanishModes', 'ODBCError', 'xlGenerateTableRefA1',
           'xlAddIn', 'xlDialogChartOptionsDataLabelMultiple',
           'xlTextMSDOS', 'XlColorIndex', 'rgbLightSteelBlue',
           'xlParamTypeBinary', 'IOvals', 'xlNoKey',
           'XlPivotFieldOrientation', 'xlActionTypeReport',
           'xlMovingAvg', 'xlDialogNewWebQuery', 'xlNone',
           'IProtectedViewWindow', 'xlVAlignTop', 'xlDataItem',
           'xlValidAlertInformation', 'AddIns2',
           'ColorScaleCriterion', 'xlDayCode', 'xlDialogSubscribeTo',
           'XlQuickAnalysisMode', 'xlMultiply',
           'xlArrowHeadStyleDoubleClosed', 'xlCmdTable',
           'xlAreaStacked100', 'xlIntlMacro',
           'xlOuterCounterClockwisePoint',
           'xlClipboardFormatToolFacePICT', 'Watch', 'xlRowSeparator',
           'xlLineMarkersStacked', 'XlDataSeriesDate',
           'XlFormatConditionOperator', 'xlPasteComments',
           'xlChartShort', 'xlSmartTagControlHelpURL', 'xlPaper11x17',
           'xlAllDatesInPeriodNovember', 'xlGradientFillLinear',
           'xl4DigitYears', 'xlReport7', 'xlReport6', 'xlReport5',
           'xlReport4', 'xlNoAdditionalCalculation', 'xlReport2',
           'xlReport1', 'xlRunningTotal', 'xlScaleLinear',
           'rgbLightGray', 'xlReport9', 'xlReport8',
           'xlDoNotSaveChanges', 'IAutoCorrect',
           'xlMarkerStyleTriangle', 'xlIcon4FilledBoxes',
           'rgbLightGrey', 'xlBeforeOrEqualTo', 'xlDialogOpenLinks',
           'IListRows', 'xlRowHeader', 'xlSortOnIcon',
           'XlTotalsCalculation', 'xlDataBarColor', 'ScrollBars',
           'xlPaperEnvelopeC6', 'xlPaperEnvelopeC4',
           'xlFilterFontColor', 'xlPaperEnvelopeC3', 'xlDown',
           'IIconCriterion', 'ICheckBoxes', 'xlNumber',
           'xlTickLabelPositionNone', 'xlPICT',
           'xlFilterAllDatesInPeriodAugust', 'XlSortMethodOld',
           'xlDialogGallery3dPie', 'XlDirection', 'xlCGM',
           'xlValidateTime', 'xlPageItem', 'xlXYScatterLines',
           'xlDialogSeriesX', 'xlDialogSeriesY', 'rgbDarkSeaGreen',
           'xlProtectedViewWindowMaximized', 'xlScenario', 'IErrors',
           'OptionButton', 'xlTemplate8', 'xlWMF',
           'xlDialogAddChartAutoformat', 'xlFirstTotalCell',
           'XlSearchWithin', 'xlAxisCrossesMaximum',
           'xlErrorBarIncludeBoth', 'xlChangeAttributes',
           'xlLinkInfoPublishers', 'xlLinkStatusMissingFile',
           'xlConnectionTypeTEXT', 'xlRelRowAbsColumn',
           'xlChartElementPositionCustom', 'xlLabelPositionLeft',
           'xlDialogVbaMakeAddin', 'IHiLoLines', 'IPoint', 'xlYears',
           'xlIcon2Bars', 'IShapes', 'AppEvents',
           'xlDialogFormatAuto', 'xlOutline', 'xlIconGreenCircle',
           'xlChart', 'xlHtmlList', 'xlPercentOfParentColumn',
           'xlBlanksCondition', 'xlCaptionDoesNotBeginWith',
           'xlDialogWorkbookName', 'xlMicrosoftMail', 'xlCSVWindows',
           'xlClosed', 'IAddIn', 'xlDialogPivotTableOptions',
           'xlConeColClustered', 'xlCompactRow', 'xlPatternGrid',
           'rgbTomato', 'xlVAlignDistributed', 'xlNextWeek',
           'xlPageBreakAutomatic', 'XlXLMMacroType', 'xlCancel',
           'xlCellTypeAllValidation', 'xlAboveAverage', 'xlDay',
           'IScenarios', 'xlSecondary', 'IParameters',
           'IControlFormat', 'xlRangeAutoFormatTable1',
           'IPivotFields', 'XlThemeColor', 'xlParamTypeNumeric',
           'xlUnlockedCells', 'xlSourceRange', 'xlDialogWorkgroup',
           'xlTextVisualRTL', 'MenuBars', 'XlMarkerStyle',
           'xlOpenXMLWorkbookMacroEnabled', 'xlTIF', 'rgbHoneydew',
           'ISlicerPivotTables', 'xlFullScript',
           'xlDialogEditionOptions', 'xlRangeAutoFormatTable8',
           'xlAllDatesInPeriodQuarter4', 'xlAutomaticScale',
           'xlCaptionDoesNotContain', 'xlRowItem',
           'xlAllDatesInPeriodQuarter1', 'xlAllDatesInPeriodQuarter2',
           'xlAllDatesInPeriodQuarter3', 'xlIconRedDownTriangle',
           'xlBMP', 'XlSeriesNameLevel', 'xlConstant',
           'xlDialogSetPrintTitles', 'xlDialogPivotFieldProperties',
           'xlLeft', 'xlClipboardFormatRTF', 'xlNoSelection',
           'ShapeNodes', 'xlLinkStatusOld', 'xlThousandsSeparator',
           'xlSheetHidden', 'xlDialogSummaryInfo',
           'xlSlicerSortDescending', 'rgbDarkBlue',
           'xlPatternVertical', 'IErrorCheckingOptions',
           'xlPivotCellGrandTotal', 'xlExternal', 'xlExcel2FarEast',
           'ISmartTagAction', 'xlBar', 'xlSourceChart',
           'xlLabelPositionCenter', 'rgbLightCyan',
           'xlIconGrayCircle', 'xlRight', 'Styles',
           'xlInnerClockwisePoint', 'xlIconSets', 'xlDialogNewName',
           'xlClipboardFormatTable', 'xlNoCap', 'xlLabelOnly',
           'ISpeech', 'xlClassic2', 'xlClassic3', 'xlClassic1',
           'xlDialogNameManager', 'XlAxisType', 'xlLocationAsObject',
           'RectangularGradient', 'xlWorksheetShort', 'xlMinusValues',
           'ColorStops', 'xlFillWeekdays', 'xlPyramidBarStacked',
           'xlLegendPositionLeft', 'xlMicrosoftProject', 'xlMin',
           'xlChangeByPowerPivotAddIn', 'IModules', 'xlPaperCsheet',
           'xlAllFaces', 'TableStyle', 'xlDialogWindowMove',
           'xlAreaStacked', 'xlIcon1Bar', 'xlPyramidBarStacked100',
           'xlDialogGalleryColumn', 'xlDialogShowToolbar',
           'xlSlicerHoveredUnselectedItemWithData', 'Toolbars',
           'rgbBlueViolet', 'ColorFormat', 'xlUpdateLinksUserSetting',
           'IDataFeedConnection', 'OLEObjects', 'IAxes',
           'xlMYDFormat', 'xlChartAsWindow', 'XlPageOrientation',
           'xlDataLabelsShowPercent', 'XlCommandUnderlines',
           'xlMedium', 'xlDialogUnhide', 'IModelChanges',
           'xlMarkerStylePicture', 'xlPivotCellCustomSubtotal',
           'XlCellType', 'xlLookForBlanks', 'IFormatColor',
           'xlWorks2FarEast', 'TimelineViewState', 'Corners',
           'xlDialogSeriesAxes', 'XlUpdateLinks', 'xlCellValue',
           'xlDialogSheet', 'xlSourcePrintArea', 'UpBars',
           'XlFormControl', 'xlDialogSendMail',
           'xlClipboardFormatCGM', 'rgbChartreuse', 'xlPatternGray16',
           'ISoundNote', 'xlParamTypeTimestamp', 'xlStack',
           'XlImportDataAs', 'IXPath', 'ModelTableNameChanges',
           'xlPageFieldLabels', 'Dialogs', 'Floor', 'SortField',
           'xlWindows', 'rgbDarkOrange', 'xlDialogMenuEditor',
           'xlSplitByValue', 'xlPortuguesePostReform',
           'xlThousandMillions', 'XlLineStyle',
           'xlExcel4IntlMacroSheet', 'xlIconRedDiamond',
           'ModelRelationships', 'ICellFormat', 'xlBottom10Percent',
           'xlFunction', 'xlNotEqual', 'xlDialogScenarioCells',
           'xlNarrow', 'xlLegendPositionTop',
           'xlPivotTableVersionCurrent', 'xlPartial',
           'rgbDarkGoldenrod', 'xlEndSides', 'xlValidateList',
           'rgbGreen', 'xlMarkerStyleSquare',
           'xlLineMarkersStacked100', 'ISlicerItems', 'xlDuplicate',
           'xlPageBreakManual', 'xlPyramidBarClustered', 'Button',
           'IOptionButtons', 'xlConeToPoint', 'xlValidAlertWarning',
           'xlAbsolute', 'xlConditionValueHighestValue',
           'rgbLavender', 'xlOLEDBQuery', 'xlPaperStatement',
           'xlPatternLightUp', 'xlArrowHeadWidthNarrow', 'ChartGroup',
           'xlFilterAllDatesInPeriodFebruray', 'xlDoubleAccounting',
           'xlAllocateIncrement', 'XlCellInsertionMode',
           'xlIconGraySideArrow', 'xlCheckInMajorVersion',
           'xlDialogMainChart', 'xlDialogStyle', 'xlPageField',
           'IPicture', 'xlColumnStacked', 'xlCubeKPIGoal',
           'xlSinceMyLastSave', 'xlDialogScale', 'rgbBisque',
           'xlTypePDF', 'xlSourceQuery', 'xlDialogDataValidation',
           'xlSYLK', 'xlEditBox', 'rgbGrey',
           'xlSmartTagControlTextbox', 'XlMeasurementUnits',
           'xlPaperFanfoldLegalGerman', 'xlThick', 'SparklineGroups',
           'xlSurfaceTopView', 'CalculatedFields', 'XlPivotCellType',
           'IOLEObjectEvents', 'SlicerCacheLevel',
           'xlCalculationAutomatic', 'xlPivotLineBlank',
           'xlLeaderLines', 'xlIconRedCircleWithBorder',
           'xlListDataTypeMultiLineRichText', 'xlFilterNoIcon',
           'xlCylinderColStacked', 'xlCmdTableCollection',
           'XlOLEVerb', 'xlDialogWebOptionsFonts',
           'xlDialogCheckboxProperties', 'xlDialogRun',
           'xlColumnStacked100', 'xlCylinderColStacked100',
           'xlFilterNextWeek', 'xlPivotLineSubtotal',
           'xlCubeKPIStatus', 'xlCubeHierarchy',
           'xlDialogPivotCalculatedItem', 'xlHtml',
           'XlPivotTableMissingItems', 'Buttons', 'IListObjects',
           'xlExcel8', 'xlExcel7', 'xlExcel5', 'xlExcel4', 'xlExcel3',
           'xlExcel2', 'xlFilterInPlace', 'xlListDataTypeText',
           'xlDataBarBorderSolid', 'xlCountryCode', 'xlDesktop',
           'xlWPG', 'xlFillDays', 'Top10', 'XlSubtototalLocationType',
           'xlLinkStatusInvalidName', 'IRange', 'Drawings',
           'xlRoutingInProgress', 'xlDBF2', 'xlOutlineRow',
           'xlTenMillions', 'xlTickMarkInside',
           'xlDialogWebOptionsBrowsers', 'XmlMap',
           'xlDialogUpdateLink', 'xlDiamond', 'XlRangeAutoFormat',
           'xlErrorBars', 'xlWorksheet4', 'AddIns', 'xlSemiautomatic',
           'xlInsideHorizontal', 'xlOLELink', 'xlDialogFormatLegend',
           'IResearch', 'xlFilterAllDatesInPeriodSeptember',
           'PivotFields', 'xlDateTomorrow', 'ISpinners', 'rgbAqua',
           'xlSrcQuery', 'IDummy', 'CustomProperty',
           'xlIconGrayDownArrow', 'Shapes', 'xlIndicatorAndButton',
           'xlPie', 'xlPivotCellDataField', 'XlAutoFillType',
           'XlParameterDataType', 'xlDebugCodePane', 'xlVertical',
           'xlMinimum', '_DebugTools', 'XlPasteSpecialOperation',
           'xlDialogSetTupleEditorOnColumns',
           'xlListDataTypeCurrency', 'xlTotalsCalculationCustom',
           'CustomViews', 'SlicerItem', 'xlIconPinkCircle',
           'IPivotFormulas', 'xlInches', 'XlBuiltInDialog',
           'xlDataLabel', 'xlFilterBelowAverage', 'xlCSVMac',
           'xlFilterLastYear', 'xlMicrosoftFoxPro', 'Borders',
           'xlFilterTop', 'xlPivotTableVersion14',
           'xlPivotTableVersion15', 'xlPivotTableVersion12',
           'xlPivotTableVersion10', 'xlPivotTableVersion11',
           'xlTomorrow', 'xlLegendPositionRight',
           'IModelTableNameChanges', '_Chart', 'Worksheets',
           'ITableObject', 'xl3TrafficLights2', 'xlDialogColumnWidth',
           'xlTopSum', 'xlDialogChartOptionsDataTable',
           'xlCalculatedMember', 'xlLowerCaseRowLetter',
           'xlFilterStatusOK', 'xl24HourClock', 'xlFirstHeaderCell',
           'xlDialogWorkbookAdd', 'xlProtectedViewCloseEdit',
           'Dialog', 'rgbOldLace', 'rgbYellowGreen', 'xlPercentOfRow',
           'rgbGold', 'xl3DEffects1', 'IToolbarButtons',
           'xlIMEModeHangul', 'xlStandardSummary',
           'xlPasteSpecialOperationMultiply', 'SmartTagAction',
           'xlAxis', 'xlChartTitle', 'IProtectedViewWindows',
           'xlReadOnly', 'rgbNavyBlue', 'LegendEntries',
           'xlDialogAttachText',
           'xlSlicerCrossFilterHideButtonsWithNoData', 'CheckBoxes',
           'xlDialogFormulaFind', 'xlStretch', 'ChartFillFormat',
           'xlDialogFormatChart', 'XlSmartTagControlType',
           'rgbFuchsia', 'xlConnectionTypeWEB', 'Menu',
           'xlTextQualifierSingleQuote', 'Graphic',
           'xlDialogTextToColumns', 'xlLocationAutomatic',
           'xlRDIDocumentManagementPolicy', 'rgbRed',
           'xlParamTypeSmallInt', 'xlLabelPositionInsideBase',
           'xlEditionDate', 'xlPasteFormulasAndNumberFormats',
           'XlDeleteShiftDirection', 'IStyle', 'xlPending',
           'xlOartVerticalOverflowClip', 'rgbMoccasin',
           'XlFixedFormatType', 'xlRowSubheading2', 'IConditionValue',
           'xlAlways', 'xlCubeKPIValue', 'xlTickLabelPositionHigh',
           'IDropDowns', 'xlLabel', 'xlNothing', 'IWorkbookEvents',
           'xlVarP', 'xlClipboardFormatNative',
           'xlCategoryLabelLevelNone', 'xlUpdateLinksAlways',
           'xlSubtotalColumn2', 'xlYes', 'xlAllDatesInPeriodApril',
           'xlPageBreakPartial', 'xlTextWindows',
           'xlTotalsCalculationMin', 'xlAfterOrEqualTo', 'xlOpen',
           'Errors', 'xlLogarithmic', 'xlColGroups',
           'xlRDIDocumentWorkspace', 'XlAxisCrosses', 'xlDone',
           'DataLabels', 'xlCategory', 'XlTrendlineType', 'ChartView',
           'xlLineStacked100', 'ThreeDFormat', 'xlSimple', 'xlDouble',
           'xlSeriesAxis', 'xlInfo', 'xlExclusive', 'xlColumnLabels',
           'xlDBF4', 'TickLabels', 'xlDBF3', 'xlDialogGalleryArea',
           'xlXmlLoadMapXml', 'xlEscKey', 'ISpellingOptions',
           'xlIcon0FilledBoxes', 'xl3DEffects2',
           'xlDialogGallery3dBar', 'xlDataBarSameAsPositive',
           'XlBordersIndex', 'xlConditionValuePercentile',
           'IDrawingObjects', 'xlRowGroups', 'xlUnicodeText',
           'xlLastColumn', 'xlCylinderBarStacked', 'Sparkline',
           'xlNumberAsText', 'xlBIFF', 'ModelTables',
           'XlEditionFormat', 'rgbRoyalBlue', 'IModelTables',
           'xlErrorBarIncludePlusValues', 'xlDialogInsertNameLabel',
           'xlPageBreakFull', 'XlCutCopyMode', 'xlFilterNextYear',
           'IListDataFormat', 'xlDialogChartLocation', 'IStyles',
           'XlOartVerticalOverflow', 'xlNormalLoad',
           'xlWBATWorksheet', 'xlMove', 'xlRangeAutoFormatPTNone',
           'IRefreshEvents', 'xlShowLabel', 'xlZero',
           'xlPaperEnvelope9', 'xlLeftBrace',
           'xlColorScaleBlackWhite', 'xlScrollBar',
           'xlLastHeaderCell', 'Application',
           'xlOartHorizontalOverflowClip', 'xlLegendKey',
           'xlSmartTagControlHelp', 'xlCalculationManual',
           'xlAutomaticAllocation', 'xlEdgeLeft',
           'xlClipboardFormatToolFace', 'xlStDevP', 'xlLegendEntry',
           'xlClipboardFormatPrintPICT', 'XlChartPicturePlacement',
           'xlPowerTalk', 'xlSortOnFontColor', 'ILegendKey', 'Arc',
           'xlAfter', 'xlDisabled', 'xlWebQuery', 'xlODBCQuery',
           'xlDialogCalculation', '_Global', 'ShadowFormat',
           'PivotField', 'XlSlicerSort', 'XlGradientFillType',
           'xlColumnSeparator', 'xlLinkStatusMissingSheet',
           'ITableStyleElement', 'xlShowLabelAndPercent',
           'xlDialogDataLabelMultiple', 'XlLegendPosition',
           'xlGreater', 'xlAtBottom', 'xlReport3', 'ITrendline',
           'xlDialogCreateNames', 'xlDialogCombination',
           'xlAbsRowRelColumn', 'xlSmartTagControlSmartTag',
           'xl3ArrowsGray', 'PivotLine', 'xlLookForErrors',
           'XlSaveAction', 'xlPatternLightDown', 'IPage',
           'xlXmlExportValidationFailed', 'XlPageBreakExtent',
           'XlCalcFor', 'IModelMeasureName', 'xlTabularRow',
           'xlDialogFormatCharttype', 'xlDateThisWeek',
           'xlHebrewFullScript', 'IProtection', 'xlDiagonalUp',
           'xlScreenSize', 'xlPrevious', 'xlStrict', 'xlMixedLabels',
           'xlSmartTagControlActiveX', 'xlPasteSpecialOperationNone',
           'XlRunAutoMacro', 'xlNoRestrictions',
           'xlArrowHeadStyleNone', 'xlTickLabelOrientationDownward',
           'DocEvents', 'xlSparklineRowsSquare', 'xlGreaterEqual',
           'PivotLayout', 'xlMinuteCode', 'SmartTags', 'xlUp',
           'xlRangeAutoFormatList3', 'xlRangeAutoFormatList2',
           'xlRangeAutoFormatList1', 'xlXErrorBars',
           'xlPrintSheetEnd', 'xlIconGreenTrafficLight',
           'xlPaperLegal', 'IHyperlink',
           'xlSlicerUnselectedItemWithData', 'ISlicerCacheLevels',
           'xlActionTypeDrillthrough', 'xlIMEModeOff',
           'xlPivotTableReport', 'xlDialogPrint', 'xlCellNotChanged',
           'xlHeaderRow', 'IModelTable', 'xlFloating',
           'xlDialogRoutingSlip', 'XlPivotFieldRepeatLabels',
           'LeaderLines', 'XlRoutingSlipStatus', 'ListColumn',
           'IPane', 'PivotCache', 'ModelConnection', 'xlFillCopy',
           'xlRowThenColumn', 'xlDialogSaveNewObject',
           'xlParamTypeDate', 'ListDataFormat',
           'xlFilterAllDatesInPeriodNovember', 'xl3DAreaStacked100',
           'xlCommandUnderlinesOff', 'xlDialogPrintPreview',
           'xlTotalRow', 'xlDialogOptionsCalculation', 'ICharacters',
           'xlRTL', 'IModelTableNameChange', 'xlHAlignRight', 'xlRTF',
           'xlRDIPrinterPath', 'IDrawings', 'xlDIF',
           'xlPivotCellPivotField', 'DialogFrame', 'xlPaperDsheet',
           'Pages', 'XlTabPosition', 'Windows',
           'IMultiThreadedCalculation', 'XlSheetVisibility',
           'xlDecimalSeparator', 'xlIconGrayDownInclineArrow',
           'xlDialogShowDetail', 'ServerViewableItems',
           'xlGrandTotalColumn', 'xlMillions', 'IColorStop',
           'xlGenerateTableRefStruct', 'xlDialogStandardFont',
           'xlClipboardFormatText', 'XlIMEMode', 'IGroupBox',
           'xlArrowHeadLengthMedium', 'GroupShapes',
           'xlCellTypeLastCell', 'Filters',
           'xlFilterAllDatesInPeriodMonth', 'xlDialogView3d',
           'xlDialogInsertPicture', 'SlicerCaches',
           'xlIconRedCrossSymbol', 'XlApplicationInternational',
           'ISparkHorizontalAxis', 'xlCylinderBarClustered',
           'xlDialogEditColor', 'xlPaperFolio', 'xlSquare',
           'ITrendlines', 'xlSingle', 'xlDialogWorkbookUnhide',
           'xlDialogDataDelete', 'xlHorizontalCoordinate',
           'XlWBATemplate', 'xlRowStripe1', 'xlDistinctCount',
           'xlRowStripe2', 'IFullSeriesCollection',
           'xlPaperEnvelopeC5', 'xlHebrewMixedScript',
           'xlPrintInPlace', 'IMenuItems', 'xlMarkerStyleCircle',
           'DataTable', 'xlHorizontal', 'xlDialogOutline',
           'xlPivotCellSubtotal', 'xlAllDatesInPeriodMarch',
           'xl3DColumnClustered', 'xlPaperEnvelopeC65',
           'xlLinkStatusNotStarted', 'xlLabelPositionCustom',
           'xlPageBreakPreview', 'PivotItem', 'xlSortRows',
           'ISparkVerticalAxis', 'xlDialogScenarioAdd',
           'xlDoubleOpen', 'DropDowns', 'xlCircle',
           'xlClipboardFormatBitmap', 'IODBCConnection',
           'xlByColumns', 'xlLogical', 'xlGrowth', 'xlYearCode',
           'Global', 'xlA1', 'ChartTitle', 'xlDisplayUnitLabel',
           'Tab', 'xlIconRedCircle', 'IWalls', 'XlXmlLoadOption',
           'XPath', 'xlColumnItem', 'xlDialogSparklineInsertColumn',
           'SeriesLines', 'xl4TrafficLights', 'xlSortColumns',
           'xlColumn', 'Label', 'xlClipboardFormatScreenPICT',
           'xlIMEModeNoControl', 'xlPaperEnvelopeMonarch',
           'IPublishObjects', 'xlDialogAutoCorrect',
           'KEXCELCtrlExtender', 'xlPrintErrorsDisplayed',
           'ITableStyleElements', 'xlMarkerStyleDiamond',
           'TextConnection', 'xlChartArea', 'IPivotFilters',
           'xlDialogDeleteName', 'IMenuItem', 'xlDialogDeleteFormat',
           'xlDialogPivotFieldUngroup', 'ModelMeasureName',
           'xlDialogSlicerSettings', 'xlPercent',
           'XlModelChangeSource', 'xlClipboardFormatBIFF2',
           'xlClipboardFormatBIFF3', 'xlBelowAverage',
           'xlOmittedCells', 'xlCustom', 'xlClipboardFormatBIFF4',
           'xlFileValidationPivotSkip', 'OLEFormat',
           'xlErrorBarTypeCustom', 'xlDialogSaveWorkbook', 'Phonetic',
           'ITimelineViewState', 'xlConnectionTypeNOSOURCE',
           'xlTextImport', 'FullSeriesCollection', 'SmartTagActions',
           'rgbMediumOrchid', 'xlListDataTypeNumber', 'xlTotals',
           'xlSlicerSortDataSourceOrder', 'xlPaperExecutive',
           'xlAutoActivate', 'xlSeriesLines', 'xlDialogPasteSpecial',
           'ChartCategory', 'rgbMaroon', 'xlDialogSetMDXEditor',
           'rgbOrangeRed', 'ISlicerCaches', 'xlColorScaleGYR',
           'xlPriorityLow', 'xlRDIExcelDataModel', 'Ovals',
           'xlAxisCrossesMinimum', 'xlFillDefault',
           'xlTimelineSelectionLabel', 'ToolbarButton', 'Spinner',
           'xlDialogWebOptionsEncoding', 'xlInterrupt', 'XlLinkType',
           'xlParamTypeDouble', 'xlToLeft', 'xlFilterYearToDate',
           'xlMarkerStyleX', 'IOptionButton',
           'xlToolbarProtectionNone', 'xlDayLeadingZero',
           'xlPTClassic', 'DialogSheets',
           'xlDialogExternalDataProperties',
           'xlFilterAllDatesInPeriodHour', 'IGroupShapes',
           'IAboveAverage', 'xlDialogFormatSize', 'xlRankAscending',
           'xlIconWhiteCircleAllWhiteQuarters', 'ISmartTags',
           'ILabel', 'XlFilterStatus', 'IPivotTableChangeList',
           'XlSortOn', 'ListBox', 'xlDialogSeriesOrder',
           'XlPieSliceIndex', 'rgbLightPink', 'XlWindowType',
           'xlCascade', 'xlPyramidColStacked', 'xlValidateCustom',
           'IChartGroups', 'xlClipboardFormatLinkSourceDesc',
           'xlTotalsCalculationNone', 'WorksheetFunction', 'xlAnd',
           'xlFilterCopy', 'xlXmlImportElementsTruncated',
           'ConditionValue', 'xlWeightedAllocation', 'xlPasteAll',
           'PivotFormula', 'ChartColorFormat', 'xlSingleQuote',
           'ModelColumnChanges', 'xlMAPI', 'xlCellTypeVisible',
           'xlFirst', 'xlCubeSet', 'xlOneAfterAnother', 'ModuleView',
           'xlLabelPositionBestFit', 'xlRangeAutoFormatTable10',
           'xlDoubleClosed', 'xlCurrencySpaceBefore',
           'XlChartElementPosition', 'xlSmartTagControlCombo',
           'xlDialogAlignment', 'xlEqual', 'xlPatternDown',
           'xlTrendline', 'xlSummaryAbove', 'xlCmdCube',
           'xlClipboardFormatSYLK', 'xlRDIScenarioComments',
           'xlNextToAxis', 'xlSheetVeryHidden', 'xlFieldsScope',
           'QueryTable', 'rgbSeashell', 'IWindow',
           'xlDialogConditionalFormatting',
           'xlSurfaceTopViewWireframe', 'xlDataLabelSeparatorDefault',
           'xlNormalView', 'xlQualityMinimum',
           'xlSmartTagControlLink', 'WorkbookConnection',
           'IFormatConditions', 'xlSkipColumn', 'IHPageBreak',
           'IconCriteria', 'Series', 'xlNorthwestArrow', 'xlLensOnly',
           'xlPercentOfParentRow', 'UniqueValues',
           'XlProtectedViewWindowState', 'XlYesNoGuess',
           'xlIconYellowFlag', 'xlErrNum', 'XlTextVisualLayoutType',
           'xlCylinderColClustered', 'xlArabicStrictAlefHamza',
           'xlTimelineLevelDays', 'xlNextMonth', 'xlPasteFormats',
           'xlDialogInsertObject', 'xlSet', 'INegativeBarFormat',
           'xlNoLabels', 'xl3DBarStacked100', 'ListObject',
           'ChartArea', 'xlLegendPositionCustom',
           'xlCubeImplicitMeasure', 'XlSaveConflictResolution',
           'xl5Arrows', 'xlColumnStripe1', 'rgbSlateGray',
           'xlClipboardFormatObjectLink', 'xlDialogScenarioEdit',
           'GroupObject', 'xlColumnHeader', 'xlSlicerNoCrossFilter',
           'xlDialogInsert', 'xlWholeTable',
           'xlDialogSlicerPivotTableConnections', 'ISmartTagOptions',
           'xlPageHeader', 'xlColumnStripe2', 'xlAccounting2',
           'xlErrorBarTypeStError', 'xlFillFormats', 'xlAtTop',
           'xlHAlignFill', 'AutoRecover', 'xlDisplayNone', 'xlY',
           'xlX', 'IPivotLayout', 'xlNever', 'ICalculatedMember',
           'xlDatabase', 'XlCalculation', 'TableStyles', 'IPictures',
           'xlSpanishTuteoOnly', 'IComment', 'Watches',
           'ISeriesLines', 'xlSizeIsArea', 'xlContinuous',
           'IModelColumnName', 'xlPasteColumnWidths', 'xlFilterToday',
           'XlApplyNamesOrder', 'xlDialogCreateList',
           'xlIconYellowDash', 'xlDateBetween', 'xlCubeAttribute',
           'IconSets', 'xlDialogFormatNumber', 'xlGrid', 'xlDXF',
           'xlDescending', 'XlErrorBarDirection', 'xlTableBody',
           'RTD', 'SlicerCache', 'xlCubeKPITrend', 'xlCylinderCol',
           'rgbDarkSalmon', 'xlMetric', 'xlDialogWorkbookOptions',
           'xlPyramidCol', 'xlBarStacked100', 'xlTriangle',
           'xlClipboardFormatDspText', 'XlErrorBarType',
           'xlAxisCrossesAutomatic', 'IModule', 'Constants',
           'xlXYScatterSmoothNoMarkers', 'xlBoth',
           'SlicerCacheLevels', 'xlRightBracket', 'xlParamTypeReal',
           'xlFilterAllDatesInPeriodJanuary', 'xlClipboard',
           'IAxisTitle', 'IXmlMaps', 'XlProtectedViewCloseReason',
           'xlPaperLedger', 'xlMidClockwiseRadiusPoint', 'XlDVType',
           'xlPaperB5', 'xlPaperB4', 'xlDialogWebOptionsGeneral',
           'xlLast7Days', 'IVPageBreak', 'ILeaderLines',
           'xlClipboardFormatPICT', 'SortFields', 'DialogSheetView',
           'XlLookFor', 'xlRangeAutoFormatTable4',
           'xlRangeAutoFormatTable5', 'xlRangeAutoFormatTable6',
           'xlRangeAutoFormatTable7', 'xlCmdList',
           'xlRangeAutoFormatTable2', 'xlRangeAutoFormatTable3',
           'SmartTagRecognizers', 'SparkVerticalAxis',
           'xlSlicerCrossFilterShowItemsWithDataAtTop',
           'xlRangeAutoFormatTable9', 'xlDialogSearch',
           'XlTableStyleElementType', 'IListRow',
           'xlRangeAutoFormatAccounting4', 'xlActionTypeUrl',
           'XlTimeUnit', 'xlRangeAutoFormatAccounting1',
           'xlRangeAutoFormatAccounting2',
           'xlRangeAutoFormatAccounting3',
           'xlDisplayPropertyInPivotTable', 'xlDisplayShapes',
           'xlDialogCreatePublisher', 'XlSortType',
           'xlValidAlertStop', 'IRtdServer', 'xlDialogRowHeight',
           'xlErrorHandler', 'xl3Flags', 'xlAllDatesInPeriodFebruary',
           'XlRobustConnect', 'rgbFireBrick', 'IconSet',
           'xlDialogFindFile', 'xlPrinter', 'XlSubscribeToFormat',
           'IOLEDBConnection', 'ICalculatedItems', 'xlRows',
           'xlParamTypeTinyInt', 'xlSpinner', 'xlPivotLineGrandTotal',
           'xlValidateDate', 'xlSmartTagControlButton',
           'xlClipboardFormatLink', 'ODBCErrors', 'xlWBATChart',
           'ISparklineGroup', 'xlTotalsCalculationCount',
           'rgbLimeGreen', 'xlPatternSolid', 'xlDrawingObject',
           'rgbSalmon', 'xlRDIRemovePersonalInformation', 'ISort',
           'xlModule', 'xlPatternGray25', 'xlDialogErrorbarX',
           'xlDialogErrorbarY', 'xlValueIsBetween', 'XlSheetType',
           'xlDialogCopyChart', 'XlTickLabelOrientation',
           'xlDialogParse', 'rgbIndianRed', 'xlPivotCellBlankCell',
           'ModelColumnNames', 'rgbLightGoldenrodYellow',
           'xlCategoryLabelLevelCustom', 'IWatches',
           'xlSummaryPivotTable', 'xlRangeAutoFormatColor3',
           'xlRangeAutoFormatColor2', 'xlRangeAutoFormatColor1',
           'rgbOlive', 'xlConnectionTypeOLEDB', 'xlRoutingComplete',
           'xlListConflictDiscardAllConflicts',
           'xlPasteAllExceptBorders', 'SparkAxes',
           'IWorkbookConnection', 'xlDialogSize', 'Toolbar',
           'xlDialogFormatMove', 'Name', 'RefreshEvents',
           'xlBelowStdDev', 'xlAllDatesInPeriodJune', 'xlPaperNote',
           'xlDialogGallery3dLine', 'xlComplete', 'ColorStop',
           'xlCurrentPlatformText', 'xlIconYellowUpInclineArrow',
           'ModelTableColumns', 'xlDropDown', 'Model', 'Module',
           'xlClipboardFormatEmbeddedObject', 'IPageSetup',
           'xlPatternSemiGray75', 'xlBottomCount', 'xlYear',
           'xlIcon1FilledBox', 'xlRangeAutoFormatLocalFormat2',
           'xlRangeAutoFormatLocalFormat3',
           'xlRangeAutoFormatLocalFormat1',
           'xlRangeAutoFormatLocalFormat4', 'ProtectedViewWindows',
           'xlFileValidationPivotRun', 'Comments', 'Research',
           'xlGradientFillPath', 'xlDialogWorkspace',
           'xlRadarAxisLabels', 'xlLinearTrend', 'IAxis',
           'xlXYScatterSmooth', 'ControlFormat',
           'xlLinkStatusIndeterminate', 'IFilter',
           'xlNumberFormatTypeNumber', 'xlIMEModeKatakana',
           'xlUnlockedFormulaCells', 'IValidation', 'XlDVAlertStyle',
           'xlClipboardFormatOwnerLink', 'CategoryCollection',
           'DataBarBorder', 'xlFilterAllDatesInPeriodDecember',
           'xlDataBarAxisAutomatic', 'xlSolid',
           'xlDialogFontProperties', 'rgbDarkTurquoise',
           'XlInsertShiftDirection', 'ISheetViews',
           'xlSlicerCrossFilterShowItemsWithNoData', 'rgbSkyBlue',
           'xlConeToMax', 'xlTemplate', 'xlLabelPositionOutsideEnd',
           'rgbAquamarine', 'xlIndex', 'xlDialogOpenMail',
           'xlOpenXMLWorkbook', 'xlDialogAssignToTool', 'xlTable10',
           'XlPivotConditionScope', 'xlChronological', 'xlDate',
           'xlAscending', 'ChartFormat', 'xlTimeSeparator', 'xlMixed',
           'xlBuiltIn', 'xlSingleAccounting', 'xlGuess',
           'xlPhoneticAlignCenter', 'xlCurrencyMinusSign',
           'xlAllDatesInPeriodDecember', 'xlDateNextYear',
           'xlVerticalCoordinate', 'xlDialogSeriesOptions',
           'xlVeryHidden', 'xlBitmap',
           'xlTimelineUnselectedTimeBlock', 'IGraphic',
           'ISmartTagRecognizer', 'xlCaptionIsNotBetween',
           'IPhonetic', 'xlIconGoldStar', 'xlAutoFill',
           'rgbMidnightBlue', 'WorksheetDataConnection',
           'TableStyleElement', 'xlFilterAllDatesInPeriodApril',
           'IPivotLine', 'xlCaptionBeginsWith', 'xlDialogAppSize',
           'IModelTableColumns', 'xlInconsistentFormula', 'xlPlus',
           'xlOptionButton', 'rgbBlack', 'xlAllocateValue',
           'xlInnerCenterPoint', 'xlStockOHLC', 'xlKatakana',
           'XlOrientation', 'rgbPurple', 'xlNoErrorsCondition',
           'xlDialogManageRelationships', 'xlCurrencyNegative',
           'xlUserResolution', 'xlGridline', 'xlBottom',
           'ListObjects', 'xlConeColStacked', 'xlDialogProperties',
           'xlNotYetRouted', 'xlDialogSetTupleEditorOnRows',
           'ISmartTagActions', 'rgbPeru', 'xlSyllabary',
           'xlTop10Percent', 'xlInconsistentListFormula', 'IButtons',
           'XlBackground', 'MenuItems', 'xlMaximized', 'DiagramNodes',
           'xlSortNormal', 'xlErrorBarTypeFixedValue',
           'xlDialogColorPalette', 'IMenuBar',
           'xlFilterAllDatesInPeriodMarch',
           'xlTickLabelOrientationVertical',
           'xlRangeValueMSPersistXML', 'xlConditionValueAutomaticMin',
           'IModel', 'xlPatternLightHorizontal', 'Points', 'Action',
           'xlDashDotDot', 'xlRDIDefinedNameComments',
           'xlFilterTopPercent', 'xlSum', 'IDropLines',
           'xlFormatFromLeftOrAbove', 'rgbGoldenrod', 'ShapeNode',
           'xlTop10Top', 'ILegendEntry', 'XlThemeFont',
           'XlDataLabelPosition', 'xlArrowHeadStyleOpen',
           'xlLeftBracket', 'XlFileFormat', 'xlReport10',
           'IIconCriteria', 'XlFormulaLabel', 'xlSummaryOnRight',
           'ITextConnection', 'xlYDMFormat', 'rgbLightGreen',
           'xlDialogOptionsGeneral', 'xlWK1ALL', 'IQuickAnalysis',
           'XlArabicModes', 'xlDialogAssignToObject',
           'XlAllocationValue', 'Menus', 'xlAnyGallery',
           'xlLinkInfoOLELinks', 'AboveAverage', 'Mailer',
           'xlEqualAboveAverage', 'xlSourceAutoFilter',
           'xlFilterAllDatesInPeriodMinute', 'xlEqualAllocation',
           'XlReferenceType', 'xl3DPie', 'Chart', 'rgbDarkSlateBlue',
           'xlImmediatePane', 'xlPivotCellValue', 'rgbDarkGreen',
           'xlSlicerSortAscending', 'xlDialogFormulaGoto',
           'rgbLightSeaGreen', 'XlHtmlType', 'IUpBars',
           'xlThemeColorHyperlink', 'xlAll', 'Modules', 'LegendEntry',
           'xlClipboardFormatBinary', 'IAllowEditRange', 'IChartView',
           'xlParamTypeVarChar', 'IModelRelationships',
           'XlCorruptLoad', 'xlDialogGridlines', 'xlCopy',
           'xlMarkerStyleNone', 'xlPageBreakNone', 'xlNotYetReviewed',
           'xlListConflictRetryAllConflicts', 'xlSparklineNonSquare',
           'xlIconBlackCircleWithBorder',
           'xlFilterAllDatesInPeriodSecond', 'rgbCornsilk',
           'XlCalculatedMemberType', 'rgbLightSkyBlue',
           'xlDialogMailEditMailer', 'XlEnableSelection',
           'xlListSeparator', 'IPanes',
           'xlProtectedViewWindowMinimized', 'xlFillValues',
           'xlTable8', 'xlTable9', 'PictureFormat', 'xlTable1',
           'Phonetics', 'xlTable3', 'xlTable4', 'xlTable5',
           'xlTable6', 'xlTable7', 'Scenarios', 'XlDupeUnique',
           'xlCategoryScale', 'xlTable', 'xlToolbarButton',
           'xlGray25', 'xlCurrencyCode', 'xlCenterPoint',
           'xlNotBetween', 'xlFilterNextMonth',
           'xlAllDatesInPeriodOctober', 'xlCaptionIsBetween',
           'xlTickMarkOutside', 'xlR1C1', 'IName', 'Pictures',
           'xlSlicerHoveredUnselectedItemWithNoData', 'xlFloor',
           'XlCheckInVersionType', 'xlPatternChecker',
           'xlMidCounterClockwiseRadiusPoint', 'DefaultWebOptions',
           'xlDialogGalleryDoughnut', 'xlLabelPositionMixed',
           'PublishObject', 'xlListDataTypeListLookup',
           'CalloutFormat', 'xlLinkStatusCopiedValues', 'ListRow',
           'xlErrRef', '_IQueryTable', 'XlMousePointer',
           'rgbMediumSeaGreen', 'xlCubeMeasure', 'xlButton',
           'IDataLabel', 'xlCap', 'xlArrowHeadLengthLong',
           'DataFeedConnection', 'xlRadar', 'xlInterpolated',
           'xlTickLabelOrientationUpward', 'xlSpanishVoseoOnly',
           'ISortFields', 'xlSortLabels', 'rgbTeal', 'xlStDev',
           'xlDAORecordset', 'XlCreator', 'rgbNavy', 'XlObjectSize',
           'xlListBox', 'xlWide', 'xlFixedWidth', 'XlVAlign',
           'xlColorScaleRYG', 'xlWKS', 'xlIcon3FilledBoxes', 'xlPCT',
           'XmlSchema', 'xlDialogPivotClientServerSet',
           'xlChartTitles', 'xlSubscribers', 'XlListDataType',
           'IBorder', 'xlCommandUnderlinesOn',
           'xlIconCircleWithThreeWhiteQuarters', 'xlScale',
           'rgbFloralWhite', 'xlLinkStatusSourceNotCalculated',
           'xlDialogAppMove', 'xlManualUpdate', 'xlDataAndLabel',
           'xlDays', 'xlDialogPhonetic', 'xlPortuguesePreReform',
           'Solver', 'ErrorCheckingOptions', 'XlSourceType',
           'xlContext', 'xlWithinSheet', 'xlPaperLetterSmall',
           'xlDateSeparator', 'xlListDataTypeCounter', 'rgbMistyRose',
           'xlIcon0Bars', 'xlFilterDynamic', 'xlSides',
           'xlFilterThisYear', 'xlAllChanges', 'rgbPaleVioletRed',
           'xlDialogFont', 'SmartTagRecognizer', 'xl4ArrowsGray',
           'ModelTable', 'xlDialogChartAddData', 'IHPageBreaks',
           'xlColumnSubheading1', 'XlPlacement',
           'xlColumnSubheading2', 'xlDialogScrollbarProperties',
           'rgbGainsboro', 'IGroupObject', 'rgbLawnGreen',
           'XlDataLabelSeparator', 'xlFillWithFormats',
           'xlDialogListboxProperties', 'xlUnderlineStyleDouble',
           'xlGregorian', 'xlCurrencyTrailingZeros', 'XmlSchemas',
           'XlSpeakDirection', 'Arcs', 'rgbWhite', 'XlSparkScale',
           'xlUpperCaseRowLetter', 'xlFilterValues',
           'xlLabelPositionRight', 'Characters', 'xlParamTypeFloat',
           'xlMeasure', 'xlNext', 'xlWhole', 'xlTitleBar',
           'DiagramNode', 'xlDialogSelectSpecial', 'Charts',
           'xlTabPositionFirst', 'rgbPaleGreen', 'xlThemeColorLight1',
           'xlIconGreenCheck', 'xlGeneral', 'Error',
           'xlBottom10Items', 'xlParamTypeLongVarChar', 'DataLabel',
           'xlFullPage', 'ILine', 'xlDialogVbaInsertFile',
           'xlDialogFormatFont', 'xlDownThenOver',
           'XlEditionOptionsOption', 'ListBoxes',
           'xl3DColumnStacked100', 'XlDataBarFillType',
           'xlMissingItemsMax2', 'xl3DBarStacked',
           'IDisplayUnitLabel', 'xlFilterIcon', 'IRectangles',
           'xlRangeAutoFormatSimple', 'xlDialogFunctionWizard',
           'xlComments', 'xlDateYesterday',
           'xlPivotCellPageFieldItem', 'IAutoRecover', 'xlCount',
           'ILegend', 'xlDialogImportTextFile', 'XlOrder',
           'xlLegendPositionBottom', 'xlTotalsCalculationMax',
           'xlSparklines', 'IErrorBars', 'xlEMDFormat',
           'xlRDISendForReview', 'xlBarClustered',
           'xlConnectionTypeODBC', 'xlCalculating',
           'xlFilterThisWeek', 'rgbCadetBlue', 'IWorksheets',
           'xlUpdateSubscriber', 'SheetViews', 'xlThousands',
           'xlPriorityHigh', 'Picture', 'xlLong', 'xlLessEqual',
           'xlCaptionIsGreaterThan', 'ICustomProperties',
           'xlPortrait', 'xlMarkerStyleStar', 'IDataTable',
           'xlHourCode', 'xlHAlignLeft', 'xlPatternNone',
           'xlDialogPermission',
           'xlDialogPivotTableSlicerConnections',
           'xlDialogArrangeAll', 'xlHundredThousands', 'xl3DColumn',
           'XlErrorBarInclude', 'xlCmdDefault', 'IWindows',
           'xlIconYellowDownInclineArrow',
           'xlOpenXMLTemplateMacroEnabled', 'xlConditionValueNone',
           'DrawingObjects', 'xlLinkTypeExcelLinks', 'xlVerbPrimary',
           'xlDialogGallery3dSurface', 'Gridlines',
           'xlCalculationSemiautomatic',
           'xlThemeColorFollowedHyperlink', 'rgbSeaGreen',
           'xlLocationAsNewSheet', 'xlColorScaleWhiteBlack',
           'XlContainsOperator', 'xlOpenXMLTemplate',
           'xlLightVertical', 'xlGeneralFormat',
           'xlTickLabelOrientationHorizontal', 'xlAnyKey',
           'FormatConditions', 'xlAllDatesInPeriodJuly',
           'xlPublishers', 'xlDateThisYear', 'DownBars',
           'xlClipboardFormatCSV', 'xlParamTypeDecimal',
           'IConnectorFormat', 'ISlicers', 'xlWQ1', 'OLEObject',
           'RecentFiles', 'xlConnectionTypeMODEL', 'xlDialogExtract',
           'xlAutoClose', 'EditBoxes', 'XlToolbarProtection',
           'xlLightUp', 'xlLess', 'xlPieOfPie', 'xlLinkTypeOLELinks',
           'xlDMYFormat', 'rgbDarkGray', 'xlGray16',
           'xlSendPublisher', 'Validation', 'FileExportConverters',
           'xlPrompt', 'xlHebrewPartialScript', 'xl3DArea', 'Labels',
           'PivotAxis', 'xlCommentIndicatorOnly', 'IArcs', 'xlUpBars',
           'xlSizeIsWidth', 'xlNoncurrencyDigits', 'xlAboveStdDev',
           'MultiThreadedCalculation', 'xlDialogCreateRelationship',
           'rgbSlateBlue', 'xlNoMailSystem',
           'xlPasteValuesAndNumberFormats', 'IShapeRange',
           'xlYMDFormat', 'xlDialogChartOptionsDataLabels',
           'rgbBeige', 'xlWK3FM3', 'rgbDarkOliveGreen',
           'IRTDUpdateEvent', 'xlDialogOptionsEdit',
           'xlRDIPublishInfo', 'xlXmlImportValidationFailed',
           'xlHigh', 'xlDialogEditSeries', 'xlClipboardFormatMovie',
           'xlRDITaskpaneWebExtensions', 'IFreeformBuilder',
           'IODBCErrors', 'xlSurface', 'xlColorScale',
           'xlDialogRecommendedPivotTables', 'ICalculatedMembers',
           'xlCaptionEquals', 'xlDialogVbaProcedureDefinition',
           'IFont', 'XlArrowHeadStyle', 'xlDialogFileDelete',
           'xlOartVerticalOverflowOverflow', 'rgbBlue', 'xlMax',
           'xlWorkbookDefault', 'xlStockHLC', 'rgbCoral',
           'xlIconRedDownArrow', 'xlSparkLine', 'XlSlicerCacheType',
           'xlDialogAddinManager', 'xlDialogChangeLink', 'xlLegend',
           'rgbLemonChiffon', 'xlClipboardFormatStandardScale',
           'xlFitToPage', 'xlPageLayoutView', 'xlClipboardFormatDIF',
           'OptionButtons', 'xlDialogFillWorkgroup',
           'xlRowSubheading1', 'XlTickMark', 'xlRowSubheading3',
           'xlUnique', 'xlTiled', 'Border', 'Style',
           'IModelTableNames', 'XlLayoutRowType', 'IBorders',
           'xlHundreds', 'IColorScaleCriteria', 'IEXCELCtrlExtender',
           'IModelConnection', 'rgbTurquoise',
           'xlLegendPositionCorner', 'xlWebFormattingAll',
           'IXmlDataBinding', 'ICanvasShapes', 'IScrollBar', 'xlVALU',
           'ITab', 'xlIMEModeAlphaFull', 'XlRgbColor', 'Walls',
           'xlOuterCenterPoint', 'xlErrNA', 'xlDataBarBorderNone',
           'xlConstants', 'xlAxisTitle', 'ILabels', 'rgbSpringGreen',
           'ModelTableNameChange', 'xlTop10', 'xlNoBlanksCondition',
           'xlDialogGalleryBar', 'IVPageBreaks',
           'xlIconRedTrafficLight', 'xlDataLabelsShowLabelAndPercent',
           'xlFilterAllDatesInPeriodOctober', 'xlCellTypeComments',
           'XlRowCol', 'PivotLines', 'xlPivotTable', '_OLEObject',
           'xlUnknown', 'ISortField', 'ICorners', 'xlShape',
           'XlStdColorScale', 'xlUniqueValues', 'xlOutside',
           'xlMonth', 'xlBelow', 'AxisTitle', 'xlSystem',
           'xlMinimized', 'XlLayoutFormType', 'rgbDarkOrchid',
           'xlMissingItemsMax', 'xlCountrySetting',
           'xlProtectedViewWindowNormal', 'XlChartPictureType',
           'xlIconYellowExclamationSymbol', 'XlFormatConditionType',
           'xlRangeAutoFormat3DEffects2', 'xlRadarMarkers',
           'xlBottomSum', 'xlPaperA4', 'xlPaperA5',
           'xlSelectionScope', 'IChartObjects', 'xlPaperA3',
           'xlArrangeStyleCascade', 'xlConnectionTypeWORKSHEET',
           'xlDialogWebOptionsFiles', 'XlTickLabelPosition',
           'PivotItemList', 'xlDialogWorkbookNew',
           'xlRangeAutoFormatClassicPivotTable', 'xl3Symbols', 'Sort',
           'IRanges', 'IListColumns', 'Worksheet', 'xlOrigin',
           'xlColorIndexNone', 'xlRDIAll', 'ColorScale', 'xlNoChange',
           'XlLink', 'IPivotLines', 'xlDialogDataSeries',
           'xlHtmlCalc', 'xlEnd', 'xlPaperA4Small',
           'xlCellTypeSameFormatConditions', 'xlColor1',
           'xlPasteAllUsingSourceTheme', 'XlSortOrientation',
           'xlDialogBorder', 'xlDataBarAxisNone', 'xlWebArchive',
           'xlDialogSeriesShape', 'xlLogicalCursor',
           '_xlDialogPhonetic', 'SlicerPivotTables', 'IModuleView',
           'XlWebSelectionType', 'AllowEditRange', 'xlAccounting3',
           'xlAxisCrossesCustom', 'XlWebFormatting',
           'xlPivotCellDataPivotField', 'xlLinkStatusOK',
           'xlLotusHelp', 'XlFindLookIn', 'xlLocalFormat2',
           'xlPivotChartFieldButton', 'xlDialogMailLogon',
           'xlDialogSetManager', 'xlCSV', 'xlRDIRoutingSlip',
           'xlEndsWith', 'IIconSets', 'IListColumn',
           'xlDialogLabelProperties', 'xl3DSurface', 'xlDialogMove',
           'xlBottomPercent', 'rgbIndigo', 'xl4CRV', 'Connections',
           'xlChangeByExcel', 'XlListConflict', 'XlEditionType',
           'XmlNamespace', 'xlArrangeStyleVertical', 'TextBoxes',
           'xlFrontEnd', '_Application', 'ModelTableColumn',
           'xlExcel12', 'XlMailSystem', 'xlTop10Items', 'rgbKhaki',
           'xlNonEnglishFunctions', 'xlIconBlackCircle',
           'IListObject', 'xlParamTypeVarBinary', 'SparklineGroup',
           'FillFormat', 'xlCylinderBarStacked100',
           'XlPivotFieldDataType', 'IPhonetics',
           'XlCategoryLabelLevel', 'xlIconYellowExclamation',
           'IRectangularGradient', 'XlCVError', 'IXmlSchema',
           'XlErrorChecks', 'SpellingOptions', 'xlStockVHLC',
           'IConnections', 'TextBox', 'xlDataOnly', 'xlNoDocuments',
           'xlDialogClear', 'xlMicrosoftWord', 'xlDialogOpen',
           'rgbDimGray', 'xlFilterAllDatesInPeriodYear',
           'ModelColumnChange', 'Shape', 'xlCurrencyLeadingZeros',
           'xlEPS', 'xlXmlLoadImportToList', 'xlFormula',
           'IParameter', 'xlDialogPivotTableWhatIfAnalysisSettings',
           'xlFilterAllDatesInPeriodQuarter4', 'xlDefaultAutoFormat',
           'xlPasteSpecialOperationDivide',
           'xlFilterAllDatesInPeriodQuarter1',
           'xlFilterAllDatesInPeriodQuarter2',
           'xlFilterAllDatesInPeriodQuarter3', 'Axes',
           'xlHindiNumerals', 'xlHAlignJustify', 'rgbSlateGrey',
           'XlOLEType', 'xlEmptyCellReferences', 'xlSummaryBelow',
           'Panes', 'xlSpeakByColumns', 'xlOuterClockwisePoint',
           'xlCredentialsMethodStored', 'xlList3',
           'xlDialogDefineStyle', 'XlXmlImportResult',
           'xlCaptionIsLessThan', 'xlCaptionContains', 'xlNo',
           'xlNumberFormatTypePercent', 'xlList2', 'xlList1',
           'ConnectorFormat', 'IDocEvents', 'XlCopyPictureFormat',
           'xlSortValues', 'GroupBoxes', 'XlChartLocation',
           'xlADORecordset', 'xlOpaque', 'xlDYMFormat', 'xlHierarchy',
           'xlReadWrite', 'xlUnderlineStyleNone',
           'xlIconYellowSideArrow', 'HPageBreaks', 'xlIBeam',
           'PivotFormulas', 'xlDialogFormatOverlay',
           'xlValueIsLessThanOrEqualTo', 'xlGrandTotalRow',
           'xlPlusValues', 'rgbDeepSkyBlue',
           'xlFilterStatusDateWrongOrder', 'xlToRight',
           'XlDataBarNegativeColorType', 'xlFilterAboveAverage',
           'xlIconGreenUpArrow', 'xlValueIsNotBetween',
           'xlDialogGalleryCustom', 'IListBoxes', 'Rectangles',
           'xlDialogTable', 'xlIconGreenUpTriangle',
           'xlListDataTypeNone', 'xlFilterCellColor', '_Worksheet',
           'xlWorkbookTab', 'WorksheetView', 'XlScaleType',
           'xl4RedToBlack', 'XlEndStyleCap', 'xlCellTypeConstants',
           'CubeFields', 'ISmartTagRecognizers', 'Window',
           'xlSecondCode', 'xlDialogInsertTitle', 'rgbMediumPurple',
           'xlClipboardFormatObjectDesc', 'xlDialogSubtotalCreate',
           'IPivotFormula', 'xlSpecifiedTables',
           'xlPasteSpecialOperationSubtract', 'xlDateOrder',
           'xlDialogCopyPicture', 'xlPercentDifferenceFrom',
           'xlYesterday', 'xlDateLastMonth', 'xlStError',
           'xlRangeValueXMLSpreadsheet', 'IGroupObjects',
           'xlClipboardFormatVALU', 'DialogSheet',
           'xlThreadModeAutomatic', 'xlIconGreenFlag', 'xlMDY',
           'xlIcon4Bars', 'xlCalculatedMeasure', 'xlCellChanged',
           'xlCorner', 'xlVerbOpen', 'xlDialogPasteNames',
           'xlDialogFillGroup', 'xlPaperEsheet', 'IconCriterion',
           'xlTimePeriod', 'xlCenterAcrossSelection',
           'XlPhoneticCharacterType', 'xlDialogSaveCopyAs',
           'WorkbookEvents', 'xlPercentOfParent',
           'xlWBATExcel4MacroSheet', 'xlDialogTabOrder',
           'rgbForestGreen', 'rgbDarkViolet', 'xl3DColumnStacked',
           'rgbDarkMagenta', 'xlFilterYesterday', 'rgbGreenYellow',
           'xlValidateTextLength', 'IDialogSheet',
           'XlArrowHeadLength', 'IChartTitle', 'xlDefault', 'IArc',
           'ODBCConnection', 'xlShared', 'ISmartTag',
           'xlCheckInMinorVersion', 'xlLowerCaseColumnLetter',
           'xlReference', 'rgbLime', 'xlSlicerSelectedItemWithNoData',
           'xlTable2', 'xlCmdSql', 'PivotCaches',
           'XlFixedFormatQuality', 'xlWithinWorkbook',
           'IPivotLineCells', 'UsedObjects',
           'xlDialogSparklineInsertLine', 'xlExcelLinks', 'IMailer',
           'xlDialogSplit', 'FormatCondition', 'xlChartSeries',
           'EditBox', 'xlMillimeters', 'xlPrintErrorsBlank',
           'xlDialogSortSpecial', 'xlIconGrayUpArrow', 'Pane',
           'xlDialogGallery3dColumn', 'xlSemiGray75',
           'xlPriorityNormal', 'xlHiragana', 'Workbooks',
           'xlRDIInactiveDataConnections', 'IDiagram', 'xlNotPlotted',
           'ChartObjects', 'PivotCell', 'WebOptions',
           'XlDataBarAxisPosition', 'xlBetween', 'XlActionType',
           'ISeries', 'xlChart4', 'xlInteger', 'rgbMediumSpringGreen',
           'xlTotalsCalculationVar', 'XlClipboardFormat',
           'xlMoveAndSize', 'xlSubscribeToText', 'xlRadarFilled',
           'xlRDIEmailHeader', 'Adjustments', 'ITableStyles',
           'Outline', 'xlCellChangeApplied', 'xlNotSpecificDate',
           'xlGray75', 'xlSparkColumn', 'xlArrowHeadLengthShort',
           'XlCredentialsMethod', 'xlMaximum', 'xlAllValues',
           'xlExpression', 'xlPaperFanfoldUS', 'xlPrimaryButton',
           'xlDisplayPropertyInTooltip', 'IPivotItemList',
           'xlFillWithContents', 'xlAverage',
           'XlDynamicFilterCriteria', 'xlWebFormattingRTF',
           'xl3DBarClustered', 'xlXmlLoadPromptUser',
           'xlLineStyleNone', 'xlDialogOpenText', 'QuickAnalysis',
           'xlMicrosoftAccess', 'xl3DLine', 'xlTextString',
           'xlPrintNoComments', 'xlEdgeTop', 'xlXYScatter',
           'SparkPoints', 'xlStockVOHLC', 'XlConsolidationFunction',
           'xlDoughnut', 'xlArrowHeadStyleDoubleOpen', 'xlWeekday',
           'xl5Quarters', 'Rectangle', 'XlMouseButton',
           'xlPolynomial', 'xlDialogPromote', 'xlFill', 'xlBox',
           'Protection', 'xlTypeXPS', 'CubeField',
           'xlLinkStatusSourceOpen', 'xlSubtract',
           'XlCellChangedState', 'xlDataField', 'XlLocationInTable',
           'xlShiftDown', 'xlDialogDisplay',
           'xlTimelineSelectedTimeBlockSpace',
           'xlDialogObjectProperties', 'xlCellTypeFormulas',
           'xlDateNotBetween', 'xlDialogReplaceFont',
           'xlXMLSpreadsheet', 'xlRelative', 'XlChartType',
           'CalculatedMembers', 'xlCredentialsMethodNone',
           'xlSmartTagControlImage', 'IRoutingSlip', 'rgbLightSalmon',
           'IIconSetCondition', 'XlSlicerCrossFilterType',
           'xlOpenXMLAddIn', 'OLEDBError', 'xlDoubleQuote',
           'xlLastCell', 'xlErrValue', 'XlBarShape', 'IToolbar',
           'xlRangeAutoFormatReport10',
           'xlCommandUnderlinesAutomatic', 'xlBlanks',
           'xlPaperEnvelopePersonal', 'XlLinkInfo', 'XlCmdType',
           'SparkHorizontalAxis', 'xlYearToDate', 'ISparkColor',
           'IError', 'xlVisualCursor', 'XlTimelineLevel',
           'xlSourcePivotTable', 'IDialogs', 'xlFilterNoFill',
           'xlToday', 'xlFilterLastWeek', 'xlDashDot', 'INames',
           'CustomProperties', 'xlDateNextQuarter', 'rgbSandyBrown',
           'FormatColor', 'xlLow', 'xlXmlExportSuccess',
           'XlSmartTagDisplayMode', 'xlTables', 'IAddIns',
           'xlDialogPushbuttonProperties', 'xlDialogMainChartType',
           'xlRepairFile', 'Lines', 'xlManualAllocation', 'xlTabular',
           'XlSpecialCellsValue', 'xlCodePage', 'xlTopToBottom',
           'xl3Triangles', 'xlOn', 'xlDialogSaveAs',
           'xlLinkInfoStatus', 'ISlicerCache', 'xlBidiCalendar',
           'xlUpward', 'ValueChange', 'xlWBATExcel4IntlMacroSheet',
           'xlParamTypeTime', 'Names', 'xlLinear',
           'xlTotalsCalculationAverage', 'IAddIns2',
           'xlHAlignDistributed', 'xlParamTypeWChar', 'xlOr',
           'xlDialogFormulaReplace', 'IRecentFile',
           'xlNoShapeChanges', 'xlDataLabelsShowBubbleSizes',
           'xlPTNone', 'xlCenter', 'xlPower', 'xlPasteValidation',
           'xlCustomSet', 'xlLinkInfoSubscribers', 'IChartFormat',
           'xlRankDecending', 'xlValue', 'xlIcon2FilledBoxes',
           'xlPieExploded', 'xlTimeLeadingZero', 'XlPageBreak',
           'xlFilterThisQuarter', 'XlSortMethod', 'xlPyramidToPoint',
           'xlWJ2WD1', 'xlFilterAllDatesInPeriodJune',
           'xlCredentialsMethodIntegrated', 'xlMarkerStyleDash',
           'xlPatternRectangularGradient', 'Icon', 'IDisplayFormat',
           'XlPrintLocation', 'xlTotalsCalculationCountNums',
           'xlPartialScript', 'rgbDarkCyan', 'DisplayUnitLabel',
           'IWorksheetFunction', 'xlStackScale', 'rgbTan', 'Slicer',
           'SlicerItems', 'XlCubeFieldSubType', 'XlSparkType',
           'xlSelect', 'xlSrcExternal', 'xlDialogWorkbookMove',
           'xlEdgeRight', 'xlColor2', 'xlGroupBox', 'Font',
           'XlSearchOrder', 'xlConnectionTypeDATAFEED', 'xlLast',
           'xlTextMac', 'Trendlines', 'xlEntireChart',
           'xlSeriesNameLevelNone', 'xlPatternLinearGradient',
           'xlTimelineSelectedTimeBlock', 'xlAllTables',
           'xlSortOnCellColor', 'IChartArea', 'xlEqualBelowAverage',
           'xlDropLines', 'xlGray8', 'xlOLEControl', 'XlPlatform',
           'xlMinorGridlines', 'xlValueEquals', 'xlConeColStacked100',
           'xlAbove', 'ISlicerItem', 'xlCurrencyBefore', 'xlPart',
           'TextEffectFormat', 'xlPercentOfTotal', 'xlRowField',
           'XlPivotFilterType', 'xlNumbers', 'IconSetCondition',
           'xlButtonOnly', 'XlDataSeriesType',
           'xlMarkerStyleAutomatic', 'xlPrimary', 'IWatch',
           'xlDialogOptionsME', 'IDialog', 'xlPhoneticAlignLeft',
           'Comment', 'IFloor', 'LegendKey', 'xlSourceSheet',
           'XlHighlightChangesTime', 'IODBCError', 'XlSummaryColumn',
           'xlPatternLightVertical', 'xlSparkScaleSingle', 'GroupBox',
           'xlUserDefined', 'IModelRelationship', 'IDataLabels',
           'IListBox', 'IPages', 'xlMillionMillions',
           'rgbNavajoWhite', 'xlDialogGalleryPie', 'XlHebrewModes',
           'xlDataFieldScope', 'xlBackgroundAutomatic', 'xlFormulas',
           'xlTimeline', 'DropLines', 'xlBidi', 'xlValidateInputOnly',
           'xlCommand', 'xlLinkStatusSourceNotOpen', 'IEditBox',
           'xlTextVisualLTR', 'IPivotTables', '_QueryTable',
           'rgbLightBlue', 'XlConnectionType', 'rgbLightSlateGray',
           'xlSubscribeToPicture', 'XlAllocation',
           'XlFileValidationPivotMode',
           'xlFileValidationPivotDefault', 'xlDialogOptionsView',
           'xlTickMarkNone', 'xlFillWithAll', 'xlTimelineLevelYears',
           'Filter', 'xlLastTotalCell', 'xlHidden',
           'xlDialogPropertyFields', 'xlSplitByPercentValue',
           'ITableStyle', 'xlOverwriteCells',
           'xlPhoneticAlignDistributed', 'xlCurrencyDigits',
           'xlDialogGalleryRadar', 'xlColor3', 'xlLatin',
           'ITickLabels', 'rgbMediumSlateBlue', 'xlPicture',
           'xlSpecificDate', 'IChartFillFormat',
           'FileExportConverter', 'rgbPeachPuff', 'xlLightDown',
           'xlTop', 'ChartGroups', 'IShape', 'xlTimelineTimeLevel',
           'XlBorderWeight', 'xlPCX', 'xlExcel9795', 'RoutingSlip',
           'xlDialogStandardWidth', 'TextFrame',
           'xlCategoryLabelLevelAll', 'IDialogSheets',
           'xlDialogPatterns', 'CellFormat', 'xlLandscape',
           'xlUpdateLinksNever', 'XlDataBarBorderType', 'xl3Signs',
           'xlDialogFormatMain', '_xlDialogChartSourceData',
           'XlTopBottom', 'xlGray50', 'xlHide', 'xlPageFieldValues',
           'xlDateLastQuarter', 'IWorksheetDataConnection',
           'xlChecker', 'XlIcon', 'xlDirect', 'xlFreeFloating',
           'xlSlicerHoveredSelectedItemWithNoData', 'rgbYellow',
           'xlHAlignGeneral', 'xlThemeColorLight2', 'rgbOliveDrab',
           'xlDialogGalleryLine', 'xlRangeAutoFormatReport9',
           'xlClipboardFormatWK1', 'xlArea', 'xlSortTextAsNumbers',
           'xlSmartTagControlLabel', 'XlPivotTableSourceType',
           'IPoints', 'xlVar', 'TableStyleElements', 'xlFront',
           'xlActionTypeRowset', 'XlAxisGroup',
           'XlRangeValueDataType', 'xlIconSilverStar', 'xl4Arrows',
           'xlCreatorCode', 'rgbPapayaWhip', 'rgbLightYellow',
           'xlDialogErrorChecking', 'IDialogSheetView',
           'xlQueryTable', 'xlExponential', 'xlHtmlChart',
           'DebugTools', 'xlCmdExcel', 'xlTotalsCalculationSum',
           'XlLinkStatus', 'xlDialogOptionsTransition', 'xlDataTable',
           'xlDRW', 'xlOpenDocumentSpreadsheet', 'XlUnderlineStyle',
           'XlDisplayBlanksAs', 'XlReferenceStyle', 'ListRows',
           'xlIconYellowTrafficLight', 'xlOLEEmbed', 'xlLine',
           'xlDialogCellProtection', 'xlWatchPane', 'xlShowPercent',
           'xlDialogFileSharing', 'XlPasteType',
           'xlSpanishTuteoAndVoseo', 'xlRDIInlineWebExtensions',
           'ProtectedViewWindow', 'xlShowValue',
           'xlTimelinePeriodLabels2', 'IScenario',
           'xlTimelinePeriodLabels1', 'xlDialogChartType',
           'xlIMEModeKatakanaHalf', 'xlPasteValues',
           'xlRangeAutoFormatClassic2', 'xlRangeAutoFormatClassic3',
           'xlRangeAutoFormatClassic1', 'IAreas', 'xlDownBars',
           'xlIconNoCellIcon', 'xlNoChanges', 'xlGrowthTrend',
           'xlDialogInsertHyperlink',
           'xlChartElementPositionAutomatic', 'xlInsertEntireRows',
           'xlDataLabelsShowValue', 'ShapeRange',
           'xlPaperFanfoldStdGerman', 'xlRangeAutoFormatNone',
           'xlOff', 'xlAllAtOnce', 'Line', 'MenuBar', 'xlErrDiv0',
           'xlSmartTagControlRadioGroup', 'xlDivide',
           'xlShiftToRight', 'xlMicrosoftSchedulePlus', 'IOval',
           'ITop10', 'IEditBoxes', 'xlDialogPivotShowPages',
           'xlPlotArea', 'IRecentFiles', 'xlBefore', 'xlLTR',
           'xlAllDatesInPeriodAugust', 'XlLookAt',
           'xlCommentAndIndicator', 'ILegendEntries', 'IAppEvents',
           'xlFillYears', 'xlValueIsGreaterThanOrEqualTo', 'xlCut',
           'XlSearchDirection', 'XlPrintErrors',
           'xlIMEModeHangulFull', 'xlCombination', 'rgbOrchid',
           'xlSlicerSelectedItemWithData', 'xlStroke',
           'IColorScaleCriterion', 'xlPaperEnvelopeItaly',
           'XlTextQualifier', 'XlRemoveDocInfoType', 'xlLocalFormat1',
           'xlRDIDocumentProperties', 'xlThreadModeManual',
           'xlSubscriber', 'xlDialogApplyStyle', 'IGroupBoxes',
           'IMenus', 'xlSparkScaleCustom', 'rgbMediumAquamarine',
           'ModelChanges', 'LinkFormat', 'IDropDown',
           'rgbMediumTurquoise', 'xlExtractData', 'IPivotItems',
           'IIcon', 'xlFilterLastQuarter', 'ICustomView',
           'xlDataBarAxisMidpoint', 'RecentFile',
           'xlDataBarFillSolid', 'xlPrintErrorsNA',
           'xlDialogMacroOptions', 'IToolbarButton',
           'xlArrowHeadWidthMedium', 'xlBubble', 'xlDoesNotContain',
           'xlPaperUser', 'xlInsideVertical', 'xlTopCount',
           'xlDelimited', 'xlSeries', 'DiagramNodeChildren',
           'xlProtectedViewCloseNormal', 'xlAutomatic',
           'xlColumnField', 'rgbMediumVioletRed',
           'xlHebrewMixedAuthorizedScript', 'rgbDarkGrey',
           'XlCalcMemNumberFormatType', 'IHeaderFooter',
           'xlDialogOverlay', 'xlVAlignJustify', '_Workbook',
           'xlSaveChanges', 'XlFileAccess', 'xlConeBarClustered',
           'xlDialogWebOptionsPictures', 'xlDialogWorkbookTabSplit',
           'xlPercentOfColumn', 'IColorStops', 'xlGeneralFormatName',
           'xl5Boxes', 'xlFormats', 'XlPTSelectionMode',
           'IFileExportConverters', 'TableObject',
           'xlClipboardFormatBIFF12', 'IPlotArea', 'rgbPaleTurquoise',
           'XlSummaryReportType', 'xlArabicNone', 'XlSummaryRow',
           'rgbAzure', 'xlParamTypeBigInt', 'xlListDataTypeChoice',
           'IDownBars', 'xlCylinder', 'xlDialogNew',
           'xlDateThisMonth', 'xlTop10Bottom',
           'xlConnectionTypeXMLMAP', 'xlRightBrace', 'rgbPowderBlue',
           'xlConeBarStacked100', 'ISparkAxes', 'Hyperlink',
           'xlDateToday', 'xlFormatConditions', 'xlEntirePage',
           'xlPercentRunningTotal', 'XlDisplayDrawingObjects',
           'xlSlicerUnselectedItemWithNoData',
           'xlIconCircleWithTwoWhiteQuarters',
           'xlDialogPivotCalculatedField', 'IMenu', 'XlPriority',
           'xlParamTypeLongVarBinary', 'xlCaptionDoesNotEndWith',
           'ILinearGradient', 'AutoCorrect', 'ISlicerCacheLevel',
           'xlPaperQuarto', 'XlCalculationState', 'xlSummaryOnLeft',
           'ITextFrame', 'xlStar', 'SoundNote', 'xlIMEModeOn',
           'IPivotField', 'xlMajorGridlines', 'ISlicer',
           'xlPaper10x14', 'xlColumnSubheading3', 'xlDataHeader',
           'xlDateThisQuarter', 'IChartObject', 'xlManual',
           'Interior', 'xlDialogProtectSharing', 'IMenuBars',
           'xlConditionValueLowestValue', 'xlPlaceholders',
           'xlKatakanaHalf', 'xlClipboardFormatEmbedSource',
           'rgbBlanchedAlmond', 'XlPieSliceLocation', 'xlDialogAxes',
           'xlDialogSort', 'xlListDataTypeMultiLineText',
           'xlThemeColorDark1', 'xlTextFormat', 'xlThemeColorDark2',
           'rgbLightCoral', 'xlDoughnutExploded', 'IFormatCondition',
           'rgbDarkSlateGrey', 'xlValues', 'xlFilterNextQuarter',
           'IPivotTable', 'xlVisible', 'ModelColumnName', 'rgbOrange',
           'XlSaveAsAccessMode', 'xlMarkerStyleDot',
           'ICustomProperty', 'Trendline', 'xlPatternGray50',
           'XlDisplayUnit', 'xlDialogSetUpdateStatus',
           'xl3DPieExploded', 'xlLightHorizontal',
           'ICategoryCollection', 'xlIconGrayUpInclineArrow',
           'ISeriesCollection', 'xlArrowHeadWidthWide',
           'xlArabicStrictFinalYaa', 'XlPictureAppearance',
           'xlBarStacked', 'XlChartSplitType', 'PivotTable',
           'IPivotCell', 'XlAboveBelow', 'Parameter',
           'xlDoNotRepeatLabels', 'xlRowLabels', 'xlWJ3FJ3',
           'XlThreadMode', 'xlCross', 'xlColumns',
           'xlFilterAutomaticFontColor',
           'xlFilterAllDatesInPeriodMay', 'SeriesCollection',
           'xlIconYellowTriangle', 'XlDataLabelsType', 'xlCorners',
           'IQueryTables', 'xlPatternUp', 'QueryTables',
           'xlConditionValuePercent', 'xlInsertDeleteCells',
           'xlAutoOpen', 'xlDifferenceFrom',
           'xlClipboardFormatLinkSource', 'IValueChange',
           'xlDataSeriesLinear', 'xlPaperEnvelope14',
           'xl3TrafficLights1', 'xlPaperEnvelope10',
           'xlPaperEnvelope11', 'xlPaperEnvelope12', 'UserAccess',
           'xlDialogSaveWorkspace', 'Drawing', 'rgbSnow',
           'xlErrorBarTypeStDev', 'xlDialogFilter', 'Point',
           'xlPivotLineRegular', 'xlTabPositionLast', 'xlLineMarkers',
           'xlPaperEnvelopeDL', 'PlotArea', 'IOutline',
           'xlButtonControl', 'IXmlNamespaces', 'xlSrcXml',
           'xlDialogWindowSize', 'xlIconRedCross',
           'xlLocalSessionChanges', 'XlSortDataOption',
           'xlAllDatesInPeriodMay', 'xlTransparent', 'UserAccessList',
           'xlCellTypeBlanks', 'xlParamTypeUnknown', 'xl3Stars',
           'Speech', 'xlPublisher', 'xlPatternCrissCross',
           'xlListDataTypeHyperLink', 'rgbGray',
           'xlValidateWholeNumber', 'xlSubtotalRow2',
           'xlSubtotalRow3', 'xlFlashFill', 'xlSubtotalRow1',
           'DisplayFormat', 'IXmlSchemas', 'IOLEObjects',
           'xlSparkScaleGroup', 'xlHAlignCenter', 'xlHiLoLines',
           'xlDialogAttachToolbars', 'xlErrorBarIncludeMinusValues',
           'xlMonthLeadingZero', 'xlDistributed', 'XlMSApplication',
           'XlPropertyDisplayedIn', 'XlTextParsingType', 'Slicers',
           'rgbPaleGoldenrod', 'xlIcons', 'xlTopPercent',
           'xlLabelPositionBelow', 'XlSparklineRowCol',
           'xlPaperLetter', 'xlPasteAllMergingConditionalFormats',
           'IRTD', 'XlPivotFormatType', 'IAllowEditRanges',
           'xlBackgroundTransparent', 'Oval', 'xlValueIsGreaterThan',
           'rgbBrown', 'CalculatedItems', 'IIconSet',
           'xlQualityStandard', 'xlSlicerHoveredSelectedItemWithData',
           'XlRoutingSlipDelivery', 'IPivotValueCell', 'xlFrontSides',
           'xlIntlAddIn', 'xlRangeValueDefault', 'ILinkFormat',
           'ISparkline', 'xlDialogActiveCellFont', 'xlTextBox',
           'xlParamTypeBit', 'xlSrcRange', 'xlSubtotalColumn3',
           'xlDialogGallery3dArea', 'xlSubtotalColumn1', 'xlNotes',
           'Diagram', 'xlListDataTypeCheckbox', 'xlCalculatedSet',
           'IOLEDBError', 'IAction', 'xlDialogChartSourceData',
           'xlCellTypeSameValidation', 'IChartEvents',
           'XlCalculationInterruptKey', 'CalculatedMember',
           'rgbDarkRed', 'ICheckBox', 'xlJustify', 'rgbDimGrey',
           'xlDownward', 'xlFilterAllDatesInPeriodDay',
           'xl3DAreaStacked', 'xl3DBar', 'rgbCrimson',
           'XlParameterType', 'xl3Symbols2', 'xlAdd',
           'xlDialogCustomizeToolbar', 'Actions', 'xlTextPrinter',
           'xlDialogProtectDocument', 'XlPhoneticAlignment',
           'xlPivotTableVersion2000', 'XlQueryType', 'xlLastMonth',
           'XlPaperSize', 'xlYErrorBars', 'xlPortugueseBoth',
           'xlDialogObjectProtection', 'xlPIC', 'LinearGradient',
           'xlBarOfPie', 'PivotTableChangeList', 'xlNoIndicator',
           'SmartTagOptions', 'xlAutomaticUpdate', 'xlInside',
           'NegativeBarFormat', 'XmlNamespaces', 'xlMissingItemsNone',
           'xlDash', 'PivotFilter', 'ColorScaleCriteria',
           'xlMonthNameChars', 'xlSmartTagControlCheckbox',
           'xlDialogEditboxProperties', 'xlThisWeek', 'xl3Arrows',
           'xlMicrosoftPowerPoint', 'XlHAlign', 'Legend', 'Areas',
           'xlParamTypeChar', 'xlFilterThisMonth', 'IColorScale',
           'AddIn', 'XlLinkInfoType', 'IFilters', 'xlNoConversion',
           'xlScreen', 'rgbBurlyWood', 'XlPictureConvertorType',
           'xlNoButton', 'IXmlMap', 'xlEvaluateToError',
           'xlRDIDocumentServerProperties', 'ISparklineGroups',
           'xl5ArrowsGray', 'xlDataLabelsShowNone',
           'xlPrintErrorsDash', 'TreeviewControl', 'xlMacintosh',
           'rgbWhiteSmoke', 'xlDialogActivate', 'ICharts',
           'xlColumnClustered', 'xlMDYFormat', 'XlWindowView',
           'xlProduct', 'xlMacrosheetCell',
           'xlAllDatesInPeriodSeptember', 'Hyperlinks', 'IPivotItem',
           'MenuItem', 'xlValidateDecimal', 'xlFixedValue',
           'xlXmlLoadOpenXml', 'XlArrangeStyle', 'xlMarkerStylePlus',
           'xlIMEModeDisable', 'xlThemeFontMajor',
           'xlProtectedViewCloseForced', 'IInterior',
           'xlSmartTagControlSeparator', 'rgbMintCream',
           'xlTickMarkCross', 'ErrorBars', 'XlInsertFormatOrigin',
           'xlCubeKPIWeight', 'DropDown', 'xlTenThousands',
           'rgbMediumBlue', 'IDrawing', 'GroupObjects', 'XlFillWith',
           'xlPyramidColStacked100', 'XlIconSet',
           'xlScaleLogarithmic', 'xlPasteFormulas',
           'xlConditionValueNumber', 'HPageBreak', 'IUniqueValues',
           'xlColorIndexAutomatic', 'xlCubeCalculatedMeasure',
           'XlFilterAction', 'Spinners', 'xlEdgeBottom',
           'xlDialogSparklineInsertWinLoss',
           'xlArrangeStyleHorizontal', 'LineFormat',
           'xlDialogSetBackgroundPicture', 'OLEObjectEvents',
           'xlTickLabelPositionNextToAxis', 'Axis',
           'xlSplitByPosition', 'xlIconYellowCircle', 'xlNormal',
           'xlDiagonalDown', 'ITextBox', 'TimelineState',
           'IHyperlinks', 'rgbCornflowerBlue', 'xlExcelMenus',
           'xlValueDoesNotEqual', 'xlBackgroundOpaque', 'xlConeCol',
           'xlPatternHorizontal', 'rgbAntiqueWhite', 'rgbAliceBlue',
           'VPageBreaks', 'xlUpperCaseColumnLetter',
           'xlAboveAverageCondition', 'xlShiftToLeft',
           'xlAllExceptBorders', 'rgbDodgerBlue', 'ScrollBar',
           'XlListObjectSourceType', 'IServerViewableItems',
           'xlDialogScenarioSummary', 'HeaderFooter',
           'xlRDIInkAnnotations', 'ToolbarButtons', 'xlSheetVisible',
           'IPivotCache', 'ICalculatedFields', 'xlCSVMSDOS',
           'xlDataBarFillGradient', 'xlLastWeek', 'xlUpdateState',
           'IUsedObjects', 'AutoFilter', 'xlArrowHeadStyleClosed',
           'xlSrcModel', 'xlDialogPlacement', 'xlWK3',
           'xlExcel4Workbook', 'xlDialogApplyNames', 'IGridlines',
           'xlListDataTypeDateTime', 'ModelMeasureNames',
           'xlMixedAuthorizedScript', 'xlAddIn8', 'XlCubeFieldType',
           'SparkColor', 'xlThin', 'rgbSienna', 'xlIMEModeHiragana',
           'xlDisplayPropertyInPivotTableAndTooltip',
           'xlUnderlineStyleSingleAccounting', 'xlFilterBottom',
           'xlWK1', 'xlToolbar', 'VPageBreak', 'xlWorksheetCell',
           'xlIMEModeAlpha', 'IModelColumnNames', 'XlCategoryType',
           'rgbHotPink', 'xlSecondaryButton', 'xlDot',
           'xlIconRedFlag', 'ChartEvents', 'ISparkPoints',
           'xlRangeAutoFormat3DEffects1', 'XlConditionValueTypes',
           'xlExtended', 'xlCrissCross', 'Scenario', 'xlLineStacked',
           'xlFilterStatusInvalidDate', 'xlCheckInOverwriteVersion',
           'xlWebFormattingNone', 'xlTimelineLevelQuarters',
           'xlDialogOverlayChartType', 'xlDialogOptionsChart',
           'xlAccounting1', 'xlCmdDAX', 'xlThemeColorAccent1',
           'xlThemeColorAccent3', 'xlThemeColorAccent2',
           'xlThemeColorAccent5', 'xlThemeColorAccent4',
           'IModelColumnChanges', 'xlThemeColorAccent6',
           'xlAccounting4', 'xlTotalsCalculationStdDev',
           'xlXmlImportSuccess', 'CustomView',
           'xlListDataTypeChoiceMulti', 'XlPattern',
           'XlXmlExportResult', 'rgbDarkKhaki', 'xlMonths',
           'xlDialogPublishAsWebPage', 'xlErrorBarIncludeNone',
           'xlBlankRow', 'IPivotAxis', 'xlIconHalfGoldStar',
           'xlMonthCode', 'IAutoFilter', 'xlDataLabelsShowLabel',
           'OLEDBConnection', 'ITimelineState',
           'xlSparklineColumnsSquare', 'xlDialogWorkbookCopy',
           'xlDialogEvaluateFormula', 'xlNumberFormatTypeDefault',
           'xlNoButtonChanges', 'xlPatternAutomatic',
           'xlFilterLastMonth', 'xlDialogPrinterSetup', 'xlCheckBox',
           'PivotValueCell', 'xlUnderlineStyleSingle', 'xlErrNull',
           'xlRDIComments', 'XlAutoFilterOperator', 'xlSlicer',
           'IPivotFilter', 'xlWorkbook', 'xlListDataValidation',
           'xlDialogFilterAdvanced', 'IButton', 'XlFormatFilterTypes',
           'ModelTableNames', 'XlWindowState', 'xlListConflictError',
           'XlChartItem', 'xlSmartTagControlListbox', 'XmlMaps',
           'xlUnderlineStyleDoubleAccounting', 'XlEnableCancelKey',
           'rgbLavenderBlush', 'xlDialogScenarioMerge',
           'xlDialogPivotSolveOrder', 'xlPyramidToMax',
           'xlSourceWorkbook', 'rgbPlum', 'xlVAlignCenter',
           'xlLabelPositionAbove', 'xlAsRequired', 'rgbThistle',
           'xlContains', 'xlClipboardFormatStandardFont',
           'xlDialogPivotTableWizard', 'xlDialogChartTrend',
           'AllowEditRanges', 'IFileExportConverter', '_IOLEObject',
           'xlDialogFormatText', 'xlConeBarStacked', 'rgbRosyBrown',
           'xlFilterStatusDateHasTime', 'xlDialogMyPermission',
           'xlDialogWorkbookInsert', 'CheckBox', 'xlDateNextMonth',
           'xlDateLastYear', 'Parameters', 'Databar',
           'xlArrangeStyleTiled', 'xlWorksheet',
           'xlTextQualifierNone', 'xlThemeFontMinor',
           'xlWeekdayNameChars', 'xlFormatFromRightOrBelow',
           'xlBeginsWith', 'xlSurfaceWireframe', 'XlArrowHeadWidth',
           'xlAutoDeactivate', 'rgbPink',
           'xlHAlignCenterAcrossSelection',
           'xlRangeAutoFormatReport8', 'xlRangeAutoFormatReport7',
           'xlRangeAutoFormatReport6', 'xlRangeAutoFormatReport5',
           'xlRangeAutoFormatReport4', 'xlRangeAutoFormatReport3',
           'xlRangeAutoFormatReport2', 'xlRangeAutoFormatReport1',
           'xlDialogGoalSeek', 'xlConsolidation',
           'xlDialogMailNextLetter', 'XlCommentDisplayMode',
           'XlFilterAllDatesInPeriod', 'xlFirstColumn',
           'xlOpenSource', 'xlValueIsLessThan',
           'xlDialogOptionsListsAdd', 'xlDialogWorkbookProtect',
           'xlShiftUp', 'XlOartHorizontalOverflow', 'xlContents',
           'Range', 'xlXYScatterLinesNoMarkers', 'xlWait',
           'FreeformBuilder', 'xlText', 'xlIconGreenCheckSymbol',
           'IChartColorFormat', 'xlSplitByCustomSplit',
           'xlPatternGray75', 'xlDateLastWeek', 'xlOLELinks',
           'XlPortugueseReform', 'xlChartInPlace', 'xlCountNums',
           'xlIconCircleWithOneWhiteQuarter', 'xlTimelineLevelMonths',
           'xlPLT', 'XlChartGallery', 'XlPivotLineType',
           'xlDialogPivotFieldGroup', 'xlIcon3Bars',
           'xlSeriesNameLevelAll', 'xlPhoneticAlignNoControl',
           'xlCaptionIsLessThanOrEqualTo', 'ISpinner', 'IOLEFormat',
           'xlPercentOf', 'xlInnerCounterClockwisePoint',
           'xlPaperEnvelopeB5', 'xlPaperEnvelopeB4',
           'xlPaperEnvelopeB6', 'PivotTables',
           'xlFilterAllDatesInPeriodJuly', 'xlDialogEditDelete',
           'xlDialogNote', 'xlHGL', 'xlColumnThenRow', 'xl5CRV',
           'xlErrors', 'xlConditionValueAutomaticMax',
           'xlHundredMillions', 'xlDialogZoom', 'IWorksheetView',
           'xlThemeFontNone', 'ChartObject',
           'xlOartVerticalOverflowEllipsis', 'xlCentimeters',
           'rgbDeepPink', 'xlDialogDataLabel', 'xlRecommendedCharts',
           'PivotLineCells', 'xlDialogGalleryScatter',
           'XlPivotFieldCalculation', 'xlClipboardFormatBIFF',
           'IRectangle', 'IDatabar', 'IUserAccess', 'HiLoLines',
           'xlWalls', 'xlTickLabelPositionLow', 'IUserAccessList',
           'xlCaptionEndsWith', 'xlPatternGray8',
           'xlErrorBarTypePercent', 'IModelTableColumn',
           'xlBubble3DEffect', 'XlAllocationMethod',
           'xlTickLabelOrientationAutomatic', 'xlOverThenDown',
           'IDialogFrame', 'xlErrName', 'xlMissingItemsDefault',
           'xlLabelPositionInsideEnd', 'ICustomViews',
           'xlPasteSpecialOperationAdd', 'ListColumns',
           'xlNoDockingChanges', 'xlListConflictDialog',
           'xlErrorsCondition', 'rgbGhostWhite', 'xlWorkbookNormal',
           'xlWJ3', 'xlHtmlStatic', 'xlSlantDashDot', 'xlLeftToRight',
           'xlPivotCellPivotItem', 'xlDialogDefineName',
           'xlArabicBothStrict', 'xlPaperTabloid', 'xlVAlignBottom',
           'IXmlNamespace', 'xlByRows', 'rgbDarkSlateGray',
           'xlDatabar', 'xlWK4', 'ILines', 'xlFillMonths',
           'xlDialogConsolidate', 'Page', 'IModelMeasureNames',
           'xlOpenXMLStrictWorkbook', 'xlLookForFormulas',
           'xlSparkColumnStacked100', 'xlAlternateArraySeparator',
           'xlMSDOS', 'xlConditionValueFormula',
           'XlPivotTableVersionList', 'PageSetup', 'IPivotCaches']
from comtypes import _check_version; _check_version('', 1602216515.485774)
