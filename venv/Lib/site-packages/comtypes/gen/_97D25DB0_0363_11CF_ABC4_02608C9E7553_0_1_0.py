# -*- coding: mbcs -*-
typelib_path = 'C:\\Windows\\system32\\activeds.tlb'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from comtypes import BSTR
from ctypes import HRESULT
from comtypes.automation import VARIANT
from comtypes.automation import VARIANT
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
from ctypes.wintypes import VARIANT_BOOL
WSTRING = c_wchar_p
from comtypes import CoClass
from comtypes.typeinfo import tagCALLCONV
from comtypes import IUnknown
from comtypes.typeinfo import tagDESCKIND
from comtypes.typeinfo import ITypeComp
from comtypes.automation import IDispatch
from comtypes.typeinfo import tagFUNCKIND
from comtypes.typeinfo import tagFUNCDESC
from comtypes.typeinfo import tagTYPEKIND
from comtypes.typeinfo import tagTYPEDESC
from comtypes.typeinfo import ITypeLib
from comtypes.typeinfo import tagVARKIND
from comtypes.typeinfo import ULONG_PTR
from comtypes.typeinfo import tagIDLDESC
from ctypes.wintypes import DWORD
from comtypes.typeinfo import tagPARAMDESCEX
from comtypes.typeinfo import tagPARAMDESC
from ctypes.wintypes import _LARGE_INTEGER
from comtypes.typeinfo import tagARRAYDESC
from comtypes.automation import tagINVOKEKIND
from comtypes.typeinfo import tagARRAYDESC
from comtypes.typeinfo import tagELEMDESC
from comtypes.typeinfo import tagTLIBATTR
from comtypes.typeinfo import tagTYPEATTR
from comtypes.typeinfo import tagVARDESC
from comtypes.typeinfo import tagSAFEARRAYBOUND
from comtypes.typeinfo import tagSYSKIND
from comtypes.typeinfo import ITypeInfo


class IADs(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FD8256D0-FD15-11CE-ABC4-02608C9E7553}')
    _idlflags_ = ['dual', 'oleautomation']
class IADsProperty(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{C8F93DD3-4AE0-11CF-9E73-00AA004A5691}')
    _idlflags_ = ['dual', 'oleautomation']
IADs._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Class',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'GUID',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ADsPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Schema',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(8)], HRESULT, 'GetInfo'),
    COMMETHOD([dispid(9)], HRESULT, 'SetInfo'),
    COMMETHOD([dispid(10)], HRESULT, 'Get',
              ( ['in'], BSTR, 'bstrName' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvProp' )),
    COMMETHOD([dispid(11)], HRESULT, 'Put',
              ( ['in'], BSTR, 'bstrName' ),
              ( ['in'], VARIANT, 'vProp' )),
    COMMETHOD([dispid(12)], HRESULT, 'GetEx',
              ( ['in'], BSTR, 'bstrName' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvProp' )),
    COMMETHOD([dispid(13)], HRESULT, 'PutEx',
              ( ['in'], c_int, 'lnControlCode' ),
              ( ['in'], BSTR, 'bstrName' ),
              ( ['in'], VARIANT, 'vProp' )),
    COMMETHOD([dispid(14)], HRESULT, 'GetInfoEx',
              ( ['in'], VARIANT, 'vProperties' ),
              ( ['in'], c_int, 'lnReserved' )),
]
################################################################
## code template for IADs implementation
##class IADs_Impl(object):
##    def GetEx(self, bstrName):
##        '-no docstring-'
##        #return pvProp
##
##    def PutEx(self, lnControlCode, bstrName, vProp):
##        '-no docstring-'
##        #return 
##
##    def SetInfo(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return retval
##
##    def GetInfo(self):
##        '-no docstring-'
##        #return 
##
##    def Get(self, bstrName):
##        '-no docstring-'
##        #return pvProp
##
##    @property
##    def ADsPath(self):
##        '-no docstring-'
##        #return retval
##
##    def Put(self, bstrName, vProp):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GUID(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def Class(self):
##        '-no docstring-'
##        #return retval
##
##    def GetInfoEx(self, vProperties, lnReserved):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Schema(self):
##        '-no docstring-'
##        #return retval
##

class IADsCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{72B945E0-253B-11CF-A988-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsProperty._methods_ = [
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'OID',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'OID',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Syntax',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'Syntax',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'MaxRange',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'MaxRange',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'MinRange',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'MinRange',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'MultiValued',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'MultiValued',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(22)], HRESULT, 'Qualifiers',
              ( ['retval', 'out'], POINTER(POINTER(IADsCollection)), 'ppQualifiers' )),
]
################################################################
## code template for IADsProperty implementation
##class IADsProperty_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MaxRange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MinRange = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Syntax = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MultiValued = property(_get, _set, doc = _set.__doc__)
##
##    def Qualifiers(self):
##        '-no docstring-'
##        #return ppQualifiers
##

class __MIDL___MIDL_itf_ads_0000_0000_0006(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0006._fields_ = [
    ('PostalAddress', WSTRING * 6),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0006) == 48, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0006)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0006) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0006)

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0021'
ADS_SCOPE_BASE = 0
ADS_SCOPE_ONELEVEL = 1
ADS_SCOPE_SUBTREE = 2
__MIDL___MIDL_itf_ads_0000_0000_0021 = c_int # enum
class NameTranslate(CoClass):
    _reg_clsid_ = GUID('{274FAE1F-3626-11D1-A3A4-00C04FB950DC}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsNameTranslate(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B1B272A3-3625-11D1-A3A4-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
NameTranslate._com_interfaces_ = [IADsNameTranslate, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0048_0004'
ADS_FLAG_OBJECT_TYPE_PRESENT = 1
ADS_FLAG_INHERITED_OBJECT_TYPE_PRESENT = 2
__MIDL___MIDL_itf_ads_0001_0048_0004 = c_int # enum
ADS_FLAGTYPE_ENUM = __MIDL___MIDL_itf_ads_0001_0048_0004
class IADsCaseIgnoreList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7B66B533-4680-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsCaseIgnoreList._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'CaseIgnoreList',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'CaseIgnoreList',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsCaseIgnoreList implementation
##class IADsCaseIgnoreList_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    CaseIgnoreList = property(_get, _set, doc = _set.__doc__)
##

class ReplicaPointer(CoClass):
    _reg_clsid_ = GUID('{F5D1BADF-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsReplicaPointer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F60FB803-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
ReplicaPointer._com_interfaces_ = [IADsReplicaPointer, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class IADsHold(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B3EB3B37-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsHold._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ObjectName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ObjectName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Amount',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Amount',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsHold implementation
##class IADsHold_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Amount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ObjectName = property(_get, _set, doc = _set.__doc__)
##

class IADsMembers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{451A0030-72EC-11CF-B03B-00AA006E0975}')
    _idlflags_ = ['dual', 'oleautomation']
IADsMembers._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnumerator' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Filter',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvFilter' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Filter',
              ( ['in'], VARIANT, 'pvFilter' )),
]
################################################################
## code template for IADsMembers implementation
##class IADsMembers_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return plCount
##
##    def _get(self):
##        '-no docstring-'
##        #return pvFilter
##    def _set(self, pvFilter):
##        '-no docstring-'
##    Filter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnumerator
##


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0048_0002'
ADS_ACETYPE_ACCESS_ALLOWED = 0
ADS_ACETYPE_ACCESS_DENIED = 1
ADS_ACETYPE_SYSTEM_AUDIT = 2
ADS_ACETYPE_ACCESS_ALLOWED_OBJECT = 5
ADS_ACETYPE_ACCESS_DENIED_OBJECT = 6
ADS_ACETYPE_SYSTEM_AUDIT_OBJECT = 7
ADS_ACETYPE_SYSTEM_ALARM_OBJECT = 8
ADS_ACETYPE_ACCESS_ALLOWED_CALLBACK = 9
ADS_ACETYPE_ACCESS_DENIED_CALLBACK = 10
ADS_ACETYPE_ACCESS_ALLOWED_CALLBACK_OBJECT = 11
ADS_ACETYPE_ACCESS_DENIED_CALLBACK_OBJECT = 12
ADS_ACETYPE_SYSTEM_AUDIT_CALLBACK = 13
ADS_ACETYPE_SYSTEM_ALARM_CALLBACK = 14
ADS_ACETYPE_SYSTEM_AUDIT_CALLBACK_OBJECT = 15
ADS_ACETYPE_SYSTEM_ALARM_CALLBACK_OBJECT = 16
__MIDL___MIDL_itf_ads_0001_0048_0002 = c_int # enum
ADS_ACETYPE_ENUM = __MIDL___MIDL_itf_ads_0001_0048_0002

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0026'
ADS_PASSWORD_ENCODE_REQUIRE_SSL = 0
ADS_PASSWORD_ENCODE_CLEAR = 1
__MIDL___MIDL_itf_ads_0000_0000_0026 = c_int # enum
class IADsTypedName(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B371A349-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsTypedName._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ObjectName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ObjectName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Level',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Level',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Interval',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Interval',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsTypedName implementation
##class IADsTypedName_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Interval = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ObjectName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Level = property(_get, _set, doc = _set.__doc__)
##

class _ads_object_info(Structure):
    pass
_ads_object_info._fields_ = [
    ('pszRDN', WSTRING),
    ('pszObjectDN', WSTRING),
    ('pszParentDN', WSTRING),
    ('pszSchemaDN', WSTRING),
    ('pszClassName', WSTRING),
]
assert sizeof(_ads_object_info) == 40, sizeof(_ads_object_info)
assert alignment(_ads_object_info) == 8, alignment(_ads_object_info)
class IADsContainer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{001677D0-FD16-11CE-ABC4-02608C9E7553}')
    _idlflags_ = ['dual', 'oleautomation']
IADsContainer._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Filter',
              ( ['retval', 'out'], POINTER(VARIANT), 'pVar' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Filter',
              ( ['in'], VARIANT, 'pVar' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Hints',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvFilter' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Hints',
              ( ['in'], VARIANT, 'pvFilter' )),
    COMMETHOD([dispid(5)], HRESULT, 'GetObject',
              ( ['in'], BSTR, 'ClassName' ),
              ( ['in'], BSTR, 'RelativeName' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppObject' )),
    COMMETHOD([dispid(6)], HRESULT, 'Create',
              ( ['in'], BSTR, 'ClassName' ),
              ( ['in'], BSTR, 'RelativeName' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppObject' )),
    COMMETHOD([dispid(7)], HRESULT, 'Delete',
              ( ['in'], BSTR, 'bstrClassName' ),
              ( ['in'], BSTR, 'bstrRelativeName' )),
    COMMETHOD([dispid(8)], HRESULT, 'CopyHere',
              ( ['in'], BSTR, 'SourceName' ),
              ( ['in'], BSTR, 'NewName' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppObject' )),
    COMMETHOD([dispid(9)], HRESULT, 'MoveHere',
              ( ['in'], BSTR, 'SourceName' ),
              ( ['in'], BSTR, 'NewName' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppObject' )),
]
################################################################
## code template for IADsContainer implementation
##class IADsContainer_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return retval
##
##    def GetObject(self, ClassName, RelativeName):
##        '-no docstring-'
##        #return ppObject
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return retval
##
##    def MoveHere(self, SourceName, NewName):
##        '-no docstring-'
##        #return ppObject
##
##    def Create(self, ClassName, RelativeName):
##        '-no docstring-'
##        #return ppObject
##
##    def _get(self):
##        '-no docstring-'
##        #return pVar
##    def _set(self, pVar):
##        '-no docstring-'
##    Filter = property(_get, _set, doc = _set.__doc__)
##
##    def CopyHere(self, SourceName, NewName):
##        '-no docstring-'
##        #return ppObject
##
##    def Delete(self, bstrClassName, bstrRelativeName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pvFilter
##    def _set(self, pvFilter):
##        '-no docstring-'
##    Hints = property(_get, _set, doc = _set.__doc__)
##

class IADsDNWithString(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{370DF02E-F934-11D2-BA96-00C04FB6D0D1}')
    _idlflags_ = ['dual', 'oleautomation']
IADsDNWithString._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'StringValue',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'StringValue',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'DNString',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'DNString',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsDNWithString implementation
##class IADsDNWithString_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    StringValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DNString = property(_get, _set, doc = _set.__doc__)
##

class __MIDL___MIDL_itf_ads_0000_0000_0010(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0010._fields_ = [
    ('ObjectName', WSTRING),
    ('Amount', c_ulong),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0010) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0010)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0010) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0010)
class LargeInteger(CoClass):
    _reg_clsid_ = GUID('{927971F5-0939-11D1-8BE1-00C04FD8D503}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsLargeInteger(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9068270B-0939-11D1-8BE1-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
LargeInteger._com_interfaces_ = [IADsLargeInteger, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0048_0001'
ADS_RIGHT_DELETE = 65536
ADS_RIGHT_READ_CONTROL = 131072
ADS_RIGHT_WRITE_DAC = 262144
ADS_RIGHT_WRITE_OWNER = 524288
ADS_RIGHT_SYNCHRONIZE = 1048576
ADS_RIGHT_ACCESS_SYSTEM_SECURITY = 16777216
ADS_RIGHT_GENERIC_READ = -2147483648
ADS_RIGHT_GENERIC_WRITE = 1073741824
ADS_RIGHT_GENERIC_EXECUTE = 536870912
ADS_RIGHT_GENERIC_ALL = 268435456
ADS_RIGHT_DS_CREATE_CHILD = 1
ADS_RIGHT_DS_DELETE_CHILD = 2
ADS_RIGHT_ACTRL_DS_LIST = 4
ADS_RIGHT_DS_SELF = 8
ADS_RIGHT_DS_READ_PROP = 16
ADS_RIGHT_DS_WRITE_PROP = 32
ADS_RIGHT_DS_DELETE_TREE = 64
ADS_RIGHT_DS_LIST_OBJECT = 128
ADS_RIGHT_DS_CONTROL_ACCESS = 256
__MIDL___MIDL_itf_ads_0001_0048_0001 = c_int # enum
ADS_RIGHTS_ENUM = __MIDL___MIDL_itf_ads_0001_0048_0001
class IADsWinNTSystemInfo(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{6C6D65DC-AFD1-11D2-9CB9-0000F87A369E}')
    _idlflags_ = ['dual', 'oleautomation']
IADsWinNTSystemInfo._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'UserName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ComputerName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'DomainName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'PDC',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
]
################################################################
## code template for IADsWinNTSystemInfo implementation
##class IADsWinNTSystemInfo_Impl(object):
##    @property
##    def UserName(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def ComputerName(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def PDC(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def DomainName(self):
##        '-no docstring-'
##        #return retval
##


# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0023'
ADSI_DIALECT_LDAP = 0
ADSI_DIALECT_SQL = 1
__MIDL___MIDL_itf_ads_0000_0000_0023 = c_int # enum
ADSI_DIALECT_ENUM = __MIDL___MIDL_itf_ads_0000_0000_0023
class IADsPathname(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D592AED4-F420-11D0-A36E-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPathname._methods_ = [
    COMMETHOD([dispid(2)], HRESULT, 'Set',
              ( ['in'], BSTR, 'bstrADsPath' ),
              ( ['in'], c_int, 'lnSetType' )),
    COMMETHOD([dispid(3)], HRESULT, 'SetDisplayType',
              ( ['in'], c_int, 'lnDisplayType' )),
    COMMETHOD([dispid(4)], HRESULT, 'Retrieve',
              ( ['in'], c_int, 'lnFormatType' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrADsPath' )),
    COMMETHOD([dispid(5)], HRESULT, 'GetNumElements',
              ( ['retval', 'out'], POINTER(c_int), 'plnNumPathElements' )),
    COMMETHOD([dispid(6)], HRESULT, 'GetElement',
              ( ['in'], c_int, 'lnElementIndex' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrElement' )),
    COMMETHOD([dispid(7)], HRESULT, 'AddLeafElement',
              ( ['in'], BSTR, 'bstrLeafElement' )),
    COMMETHOD([dispid(8)], HRESULT, 'RemoveLeafElement'),
    COMMETHOD([dispid(9)], HRESULT, 'CopyPath',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppAdsPath' )),
    COMMETHOD([dispid(10)], HRESULT, 'GetEscapedElement',
              ( ['in'], c_int, 'lnReserved' ),
              ( ['in'], BSTR, 'bstrInStr' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrOutStr' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'EscapedMode',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'EscapedMode',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsPathname implementation
##class IADsPathname_Impl(object):
##    def Set(self, bstrADsPath, lnSetType):
##        '-no docstring-'
##        #return 
##
##    def Retrieve(self, lnFormatType):
##        '-no docstring-'
##        #return pbstrADsPath
##
##    def GetElement(self, lnElementIndex):
##        '-no docstring-'
##        #return pbstrElement
##
##    def GetNumElements(self):
##        '-no docstring-'
##        #return plnNumPathElements
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    EscapedMode = property(_get, _set, doc = _set.__doc__)
##
##    def GetEscapedElement(self, lnReserved, bstrInStr):
##        '-no docstring-'
##        #return pbstrOutStr
##
##    def RemoveLeafElement(self):
##        '-no docstring-'
##        #return 
##
##    def CopyPath(self):
##        '-no docstring-'
##        #return ppAdsPath
##
##    def SetDisplayType(self, lnDisplayType):
##        '-no docstring-'
##        #return 
##
##    def AddLeafElement(self, bstrLeafElement):
##        '-no docstring-'
##        #return 
##


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0077_0001'
ADS_OPTION_SERVERNAME = 0
ADS_OPTION_REFERRALS = 1
ADS_OPTION_PAGE_SIZE = 2
ADS_OPTION_SECURITY_MASK = 3
ADS_OPTION_MUTUAL_AUTH_STATUS = 4
ADS_OPTION_QUOTA = 5
ADS_OPTION_PASSWORD_PORTNUMBER = 6
ADS_OPTION_PASSWORD_METHOD = 7
ADS_OPTION_ACCUMULATIVE_MODIFICATION = 8
ADS_OPTION_SKIP_SID_LOOKUP = 9
__MIDL___MIDL_itf_ads_0001_0077_0001 = c_int # enum
ADS_OPTION_ENUM = __MIDL___MIDL_itf_ads_0001_0077_0001
class SecurityDescriptor(CoClass):
    _reg_clsid_ = GUID('{B958F73C-9BDD-11D0-852C-00C04FD8D503}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsSecurityDescriptor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B8C787CA-9BDD-11D0-852C-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
SecurityDescriptor._com_interfaces_ = [IADsSecurityDescriptor, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0048_0003'
ADS_ACEFLAG_INHERIT_ACE = 2
ADS_ACEFLAG_NO_PROPAGATE_INHERIT_ACE = 4
ADS_ACEFLAG_INHERIT_ONLY_ACE = 8
ADS_ACEFLAG_INHERITED_ACE = 16
ADS_ACEFLAG_VALID_INHERIT_FLAGS = 31
ADS_ACEFLAG_SUCCESSFUL_ACCESS = 64
ADS_ACEFLAG_FAILED_ACCESS = 128
__MIDL___MIDL_itf_ads_0001_0048_0003 = c_int # enum
ADS_ACEFLAG_ENUM = __MIDL___MIDL_itf_ads_0001_0048_0003
class WinNTSystemInfo(CoClass):
    _reg_clsid_ = GUID('{66182EC4-AFD1-11D2-9CB9-0000F87A369E}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
WinNTSystemInfo._com_interfaces_ = [IADsWinNTSystemInfo, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class _ads_attr_def(Structure):
    pass

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0001'
ADSTYPE_INVALID = 0
ADSTYPE_DN_STRING = 1
ADSTYPE_CASE_EXACT_STRING = 2
ADSTYPE_CASE_IGNORE_STRING = 3
ADSTYPE_PRINTABLE_STRING = 4
ADSTYPE_NUMERIC_STRING = 5
ADSTYPE_BOOLEAN = 6
ADSTYPE_INTEGER = 7
ADSTYPE_OCTET_STRING = 8
ADSTYPE_UTC_TIME = 9
ADSTYPE_LARGE_INTEGER = 10
ADSTYPE_PROV_SPECIFIC = 11
ADSTYPE_OBJECT_CLASS = 12
ADSTYPE_CASEIGNORE_LIST = 13
ADSTYPE_OCTET_LIST = 14
ADSTYPE_PATH = 15
ADSTYPE_POSTALADDRESS = 16
ADSTYPE_TIMESTAMP = 17
ADSTYPE_BACKLINK = 18
ADSTYPE_TYPEDNAME = 19
ADSTYPE_HOLD = 20
ADSTYPE_NETADDRESS = 21
ADSTYPE_REPLICAPOINTER = 22
ADSTYPE_FAXNUMBER = 23
ADSTYPE_EMAIL = 24
ADSTYPE_NT_SECURITY_DESCRIPTOR = 25
ADSTYPE_UNKNOWN = 26
ADSTYPE_DN_WITH_BINARY = 27
ADSTYPE_DN_WITH_STRING = 28
__MIDL___MIDL_itf_ads_0000_0000_0001 = c_int # enum
ADSTYPEENUM = __MIDL___MIDL_itf_ads_0000_0000_0001
_ads_attr_def._fields_ = [
    ('pszAttrName', WSTRING),
    ('dwADsType', ADSTYPEENUM),
    ('dwMinRange', c_ulong),
    ('dwMaxRange', c_ulong),
    ('fMultiValued', c_int),
]
assert sizeof(_ads_attr_def) == 24, sizeof(_ads_attr_def)
assert alignment(_ads_attr_def) == 8, alignment(_ads_attr_def)
class IADsDeleteOps(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B2BD0902-8878-11D1-8C21-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
IADsDeleteOps._methods_ = [
    COMMETHOD([dispid(2)], HRESULT, 'DeleteObject',
              ( ['in'], c_int, 'lnFlags' )),
]
################################################################
## code template for IADsDeleteOps implementation
##class IADsDeleteOps_Impl(object):
##    def DeleteObject(self, lnFlags):
##        '-no docstring-'
##        #return 
##

class IDirectoryObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{E798DE2C-22E4-11D0-84FE-00C04FD8D503}')
    _idlflags_ = []
class _ads_attr_info(Structure):
    pass
IDirectoryObject._methods_ = [
    COMMETHOD([], HRESULT, 'GetObjectInformation',
              ( ['out'], POINTER(POINTER(_ads_object_info)), 'ppObjInfo' )),
    COMMETHOD([], HRESULT, 'GetObjectAttributes',
              ( ['in'], POINTER(WSTRING), 'pAttributeNames' ),
              ( ['in'], c_ulong, 'dwNumberAttributes' ),
              ( ['out'], POINTER(POINTER(_ads_attr_info)), 'ppAttributeEntries' ),
              ( ['out'], POINTER(c_ulong), 'pdwNumAttributesReturned' )),
    COMMETHOD([], HRESULT, 'SetObjectAttributes',
              ( ['in'], POINTER(_ads_attr_info), 'pAttributeEntries' ),
              ( ['in'], c_ulong, 'dwNumAttributes' ),
              ( ['out'], POINTER(c_ulong), 'pdwNumAttributesModified' )),
    COMMETHOD([], HRESULT, 'CreateDSObject',
              ( ['in'], WSTRING, 'pszRDNName' ),
              ( ['in'], POINTER(_ads_attr_info), 'pAttributeEntries' ),
              ( ['in'], c_ulong, 'dwNumAttributes' ),
              ( ['out'], POINTER(POINTER(IDispatch)), 'ppObject' )),
    COMMETHOD([], HRESULT, 'DeleteDSObject',
              ( ['in'], WSTRING, 'pszRDNName' )),
]
################################################################
## code template for IDirectoryObject implementation
##class IDirectoryObject_Impl(object):
##    def GetObjectInformation(self):
##        '-no docstring-'
##        #return ppObjInfo
##
##    def DeleteDSObject(self, pszRDNName):
##        '-no docstring-'
##        #return 
##
##    def CreateDSObject(self, pszRDNName, pAttributeEntries, dwNumAttributes):
##        '-no docstring-'
##        #return ppObject
##
##    def SetObjectAttributes(self, pAttributeEntries, dwNumAttributes):
##        '-no docstring-'
##        #return pdwNumAttributesModified
##
##    def GetObjectAttributes(self, pAttributeNames, dwNumberAttributes):
##        '-no docstring-'
##        #return ppAttributeEntries, pdwNumAttributesReturned
##


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0078_0001'
ADS_SETTYPE_FULL = 1
ADS_SETTYPE_PROVIDER = 2
ADS_SETTYPE_SERVER = 3
ADS_SETTYPE_DN = 4
__MIDL___MIDL_itf_ads_0001_0078_0001 = c_int # enum
class IADsAggregatee(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{1346CE8C-9039-11D0-8528-00C04FD8D503}')
    _idlflags_ = []
IADsAggregatee._methods_ = [
    COMMETHOD([], HRESULT, 'ConnectAsAggregatee',
              ( [], POINTER(IUnknown), 'pOuterUnknown' )),
    COMMETHOD([], HRESULT, 'DisconnectAsAggregatee'),
    COMMETHOD([], HRESULT, 'RelinquishInterface',
              ( [], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.GUID), 'riid' )),
    COMMETHOD([], HRESULT, 'RestoreInterface',
              ( [], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.GUID), 'riid' )),
]
################################################################
## code template for IADsAggregatee implementation
##class IADsAggregatee_Impl(object):
##    def RestoreInterface(self, riid):
##        '-no docstring-'
##        #return 
##
##    def RelinquishInterface(self, riid):
##        '-no docstring-'
##        #return 
##
##    def DisconnectAsAggregatee(self):
##        '-no docstring-'
##        #return 
##
##    def ConnectAsAggregatee(self, pOuterUnknown):
##        '-no docstring-'
##        #return 
##

class IADsSecurityUtility(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{A63251B2-5F21-474B-AB52-4A8EFAD10895}')
    _idlflags_ = ['dual', 'oleautomation']
IADsSecurityUtility._methods_ = [
    COMMETHOD([dispid(2)], HRESULT, 'GetSecurityDescriptor',
              ( ['in'], VARIANT, 'varPath' ),
              ( ['in'], c_int, 'lPathFormat' ),
              ( ['in'], c_int, 'lFormat' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pVariant' )),
    COMMETHOD([dispid(3)], HRESULT, 'SetSecurityDescriptor',
              ( ['in'], VARIANT, 'varPath' ),
              ( ['in'], c_int, 'lPathFormat' ),
              ( ['in'], VARIANT, 'varData' ),
              ( ['in'], c_int, 'lDataFormat' )),
    COMMETHOD([dispid(4)], HRESULT, 'ConvertSecurityDescriptor',
              ( ['in'], VARIANT, 'varSD' ),
              ( ['in'], c_int, 'lDataFormat' ),
              ( ['in'], c_int, 'lOutFormat' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pResult' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'SecurityMask',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'SecurityMask',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsSecurityUtility implementation
##class IADsSecurityUtility_Impl(object):
##    def GetSecurityDescriptor(self, varPath, lPathFormat, lFormat):
##        '-no docstring-'
##        #return pVariant
##
##    def SetSecurityDescriptor(self, varPath, lPathFormat, varData, lDataFormat):
##        '-no docstring-'
##        #return 
##
##    def ConvertSecurityDescriptor(self, varSD, lDataFormat, lOutFormat):
##        '-no docstring-'
##        #return pResult
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SecurityMask = property(_get, _set, doc = _set.__doc__)
##

class PropertyValue(CoClass):
    _reg_clsid_ = GUID('{7B9E38B0-A97C-11D0-8534-00C04FD8D503}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsPropertyValue(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{79FA9AD0-A97C-11D0-8534-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
PropertyValue._com_interfaces_ = [IADsPropertyValue, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class IADsOU(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{A2F733B8-EFFE-11CF-8ABC-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
IADsOU._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'LocalityName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'LocalityName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'PostalAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'PostalAddress',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'TelephoneNumber',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'TelephoneNumber',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'FaxNumber',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'FaxNumber',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'SeeAlso',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'SeeAlso',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'BusinessCategory',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'BusinessCategory',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsOU implementation
##class IADsOU_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    TelephoneNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    BusinessCategory = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    FaxNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LocalityName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PostalAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SeeAlso = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0048_0005'
ADS_SD_CONTROL_SE_OWNER_DEFAULTED = 1
ADS_SD_CONTROL_SE_GROUP_DEFAULTED = 2
ADS_SD_CONTROL_SE_DACL_PRESENT = 4
ADS_SD_CONTROL_SE_DACL_DEFAULTED = 8
ADS_SD_CONTROL_SE_SACL_PRESENT = 16
ADS_SD_CONTROL_SE_SACL_DEFAULTED = 32
ADS_SD_CONTROL_SE_DACL_AUTO_INHERIT_REQ = 256
ADS_SD_CONTROL_SE_SACL_AUTO_INHERIT_REQ = 512
ADS_SD_CONTROL_SE_DACL_AUTO_INHERITED = 1024
ADS_SD_CONTROL_SE_SACL_AUTO_INHERITED = 2048
ADS_SD_CONTROL_SE_DACL_PROTECTED = 4096
ADS_SD_CONTROL_SE_SACL_PROTECTED = 8192
ADS_SD_CONTROL_SE_SELF_RELATIVE = 32768
__MIDL___MIDL_itf_ads_0001_0048_0005 = c_int # enum

# values for enumeration '__MIDL___MIDL_itf_ads_0001_0017_0001'
ADS_SYSTEMFLAG_DISALLOW_DELETE = -2147483648
ADS_SYSTEMFLAG_CONFIG_ALLOW_RENAME = 1073741824
ADS_SYSTEMFLAG_CONFIG_ALLOW_MOVE = 536870912
ADS_SYSTEMFLAG_CONFIG_ALLOW_LIMITED_MOVE = 268435456
ADS_SYSTEMFLAG_DOMAIN_DISALLOW_RENAME = 134217728
ADS_SYSTEMFLAG_DOMAIN_DISALLOW_MOVE = 67108864
ADS_SYSTEMFLAG_CR_NTDS_NC = 1
ADS_SYSTEMFLAG_CR_NTDS_DOMAIN = 2
ADS_SYSTEMFLAG_ATTR_NOT_REPLICATED = 1
ADS_SYSTEMFLAG_ATTR_IS_CONSTRUCTED = 4
__MIDL___MIDL_itf_ads_0001_0017_0001 = c_int # enum

# values for enumeration '__MIDL___MIDL_itf_ads_0001_0078_0002'
ADS_FORMAT_WINDOWS = 1
ADS_FORMAT_WINDOWS_NO_SERVER = 2
ADS_FORMAT_WINDOWS_DN = 3
ADS_FORMAT_WINDOWS_PARENT = 4
ADS_FORMAT_X500 = 5
ADS_FORMAT_X500_NO_SERVER = 6
ADS_FORMAT_X500_DN = 7
ADS_FORMAT_X500_PARENT = 8
ADS_FORMAT_SERVER = 9
ADS_FORMAT_PROVIDER = 10
ADS_FORMAT_LEAF = 11
__MIDL___MIDL_itf_ads_0001_0078_0002 = c_int # enum
class IADsNetAddress(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B21A50A9-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsNetAddress._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'AddressType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'AddressType',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Address',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Address',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsNetAddress implementation
##class IADsNetAddress_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AddressType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Address = property(_get, _set, doc = _set.__doc__)
##

class ADSystemInfo(CoClass):
    _reg_clsid_ = GUID('{50B6327F-AFD1-11D2-9CB9-0000F87A369E}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsADSystemInfo(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5BB11929-AFD1-11D2-9CB9-0000F87A369E}')
    _idlflags_ = ['dual', 'oleautomation']
ADSystemInfo._com_interfaces_ = [IADsADSystemInfo, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class __MIDL___MIDL_itf_ads_0000_0000_0008(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0008._fields_ = [
    ('RemoteID', c_ulong),
    ('ObjectName', WSTRING),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0008) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0008)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0008) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0008)
class __MIDL___MIDL_itf_ads_0000_0000_0013(Structure):
    pass
ADS_FAXNUMBER = __MIDL___MIDL_itf_ads_0000_0000_0013
ADS_SCOPEENUM = __MIDL___MIDL_itf_ads_0000_0000_0021
class IADsClass(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{C8F93DD0-4AE0-11CF-9E73-00AA004A5691}')
    _idlflags_ = ['dual', 'oleautomation']
IADsClass._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'PrimaryInterface',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'CLSID',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'CLSID',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'OID',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'OID',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Abstract',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'Abstract',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Auxiliary',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'Auxiliary',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'MandatoryProperties',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'MandatoryProperties',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'OptionalProperties',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'OptionalProperties',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'NamingProperties',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'NamingProperties',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'DerivedFrom',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'DerivedFrom',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'AuxDerivedFrom',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'AuxDerivedFrom',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'PossibleSuperiors',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'PossibleSuperiors',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'Containment',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'Containment',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'Container',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'Container',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'HelpFileName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'HelpFileName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'HelpFileContext',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'HelpFileContext',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(25)], HRESULT, 'Qualifiers',
              ( ['retval', 'out'], POINTER(POINTER(IADsCollection)), 'ppQualifiers' )),
]
################################################################
## code template for IADsClass implementation
##class IADsClass_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Containment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    NamingProperties = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Container = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Auxiliary = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    HelpFileName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PrimaryInterface(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DerivedFrom = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Abstract = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    HelpFileContext = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    CLSID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OptionalProperties = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MandatoryProperties = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PossibleSuperiors = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AuxDerivedFrom = property(_get, _set, doc = _set.__doc__)
##
##    def Qualifiers(self):
##        '-no docstring-'
##        #return ppQualifiers
##

class _ads_class_def(Structure):
    pass
_ads_class_def._fields_ = [
    ('pszClassName', WSTRING),
    ('dwMandatoryAttrs', c_ulong),
    ('ppszMandatoryAttrs', POINTER(WSTRING)),
    ('optionalAttrs', c_ulong),
    ('ppszOptionalAttrs', POINTER(POINTER(WSTRING))),
    ('dwNamingAttrs', c_ulong),
    ('ppszNamingAttrs', POINTER(POINTER(WSTRING))),
    ('dwSuperClasses', c_ulong),
    ('ppszSuperClasses', POINTER(POINTER(WSTRING))),
    ('fIsContainer', c_int),
]
assert sizeof(_ads_class_def) == 80, sizeof(_ads_class_def)
assert alignment(_ads_class_def) == 8, alignment(_ads_class_def)

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0024'
ADS_CHASE_REFERRALS_NEVER = 0
ADS_CHASE_REFERRALS_SUBORDINATE = 32
ADS_CHASE_REFERRALS_EXTERNAL = 64
ADS_CHASE_REFERRALS_ALWAYS = 96
__MIDL___MIDL_itf_ads_0000_0000_0024 = c_int # enum
ADS_CHASE_REFERRALS_ENUM = __MIDL___MIDL_itf_ads_0000_0000_0024
class IADsOctetList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7B28B80F-4680-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsOctetList._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'OctetList',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'OctetList',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsOctetList implementation
##class IADsOctetList_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OctetList = property(_get, _set, doc = _set.__doc__)
##

class AccessControlList(CoClass):
    _reg_clsid_ = GUID('{B85EA052-9BDD-11D0-852C-00C04FD8D503}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsAccessControlList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B7EE91CC-9BDD-11D0-852C-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
AccessControlList._com_interfaces_ = [IADsAccessControlList, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class __MIDL_IOleAutomationTypes_0006(Union):
    pass
__MIDL_IOleAutomationTypes_0006._fields_ = [
    ('oInst', c_ulong),
    ('lpvarValue', POINTER(VARIANT)),
]
assert sizeof(__MIDL_IOleAutomationTypes_0006) == 8, sizeof(__MIDL_IOleAutomationTypes_0006)
assert alignment(__MIDL_IOleAutomationTypes_0006) == 8, alignment(__MIDL_IOleAutomationTypes_0006)

# values for enumeration '__MIDL___MIDL_itf_ads_0001_0078_0003'
ADS_DISPLAY_FULL = 1
ADS_DISPLAY_VALUE_ONLY = 2
__MIDL___MIDL_itf_ads_0001_0078_0003 = c_int # enum
ADS_DISPLAY_ENUM = __MIDL___MIDL_itf_ads_0001_0078_0003
class _SYSTEMTIME(Structure):
    pass
_SYSTEMTIME._fields_ = [
    ('wYear', c_ushort),
    ('wMonth', c_ushort),
    ('wDayOfWeek', c_ushort),
    ('wDay', c_ushort),
    ('wHour', c_ushort),
    ('wMinute', c_ushort),
    ('wSecond', c_ushort),
    ('wMilliseconds', c_ushort),
]
assert sizeof(_SYSTEMTIME) == 16, sizeof(_SYSTEMTIME)
assert alignment(_SYSTEMTIME) == 2, alignment(_SYSTEMTIME)

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0019'
ADS_STATUS_S_OK = 0
ADS_STATUS_INVALID_SEARCHPREF = 1
ADS_STATUS_INVALID_SEARCHPREFVALUE = 2
__MIDL___MIDL_itf_ads_0000_0000_0019 = c_int # enum
class IADsPropertyValue2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{306E831C-5BC7-11D1-A3B8-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPropertyValue2._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'GetObjectProperty',
              ( ['in', 'out'], POINTER(c_int), 'lnADsType' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvProp' )),
    COMMETHOD([dispid(2)], HRESULT, 'PutObjectProperty',
              ( ['in'], c_int, 'lnADsType' ),
              ( ['in'], VARIANT, 'vProp' )),
]
################################################################
## code template for IADsPropertyValue2 implementation
##class IADsPropertyValue2_Impl(object):
##    def PutObjectProperty(self, lnADsType, vProp):
##        '-no docstring-'
##        #return 
##
##    def GetObjectProperty(self):
##        '-no docstring-'
##        #return lnADsType, pvProp
##

class __MIDL___MIDL_itf_ads_0000_0000_0012(Structure):
    pass
ADS_REPLICAPOINTER = __MIDL___MIDL_itf_ads_0000_0000_0012
class __MIDL___MIDL_itf_ads_0000_0000_0016(Structure):
    pass
ADS_DN_WITH_STRING = __MIDL___MIDL_itf_ads_0000_0000_0016
IADsPropertyValue._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'Clear'),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ADsType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ADsType',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'DNString',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'DNString',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'CaseExactString',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'CaseExactString',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'CaseIgnoreString',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'CaseIgnoreString',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'PrintableString',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'PrintableString',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'NumericString',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'NumericString',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Boolean',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Boolean',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Integer',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Integer',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'OctetString',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'OctetString',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'SecurityDescriptor',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'retval' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'SecurityDescriptor',
              ( ['in'], POINTER(IDispatch), 'retval' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'LargeInteger',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'retval' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'LargeInteger',
              ( ['in'], POINTER(IDispatch), 'retval' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'UTCTime',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'UTCTime',
              ( ['in'], c_double, 'retval' )),
]
################################################################
## code template for IADsPropertyValue implementation
##class IADsPropertyValue_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OctetString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SecurityDescriptor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    CaseIgnoreString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    CaseExactString = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    NumericString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PrintableString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ADsType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    UTCTime = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Boolean = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DNString = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LargeInteger = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Integer = property(_get, _set, doc = _set.__doc__)
##

__MIDL___MIDL_itf_ads_0000_0000_0013._fields_ = [
    ('TelephoneNumber', WSTRING),
    ('NumberOfBits', c_ulong),
    ('Parameters', POINTER(c_ubyte)),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0013) == 24, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0013)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0013) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0013)
class IADsResource(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{34A05B20-4AAB-11CF-AE2C-00AA006EBFB9}')
    _idlflags_ = ['dual', 'oleautomation']
IADsResource._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'User',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'UserPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'LockCount',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
]
################################################################
## code template for IADsResource implementation
##class IADsResource_Impl(object):
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def LockCount(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def UserPath(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def User(self):
##        '-no docstring-'
##        #return retval
##

class Timestamp(CoClass):
    _reg_clsid_ = GUID('{B2BED2EB-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsTimestamp(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B2F5A901-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
Timestamp._com_interfaces_ = [IADsTimestamp, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class IADsDNWithBinary(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7E99C0A2-F935-11D2-BA96-00C04FB6D0D1}')
    _idlflags_ = ['dual', 'oleautomation']
IADsDNWithBinary._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'BinaryValue',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'BinaryValue',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'DNString',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'DNString',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsDNWithBinary implementation
##class IADsDNWithBinary_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    BinaryValue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DNString = property(_get, _set, doc = _set.__doc__)
##

ADS_SYSTEMFLAG_ENUM = __MIDL___MIDL_itf_ads_0001_0017_0001
class IDirectorySchemaMgmt(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{75DB3B9C-A4D8-11D0-A79C-00C04FD8D5A8}')
    _idlflags_ = []
IDirectorySchemaMgmt._methods_ = [
    COMMETHOD([], HRESULT, 'EnumAttributes',
              ( [], POINTER(WSTRING), 'ppszAttrNames' ),
              ( [], c_ulong, 'dwNumAttributes' ),
              ( [], POINTER(POINTER(_ads_attr_def)), 'ppAttrDefinition' ),
              ( [], POINTER(c_ulong), 'pdwNumAttributes' )),
    COMMETHOD([], HRESULT, 'CreateAttributeDefinition',
              ( [], WSTRING, 'pszAttributeName' ),
              ( [], POINTER(_ads_attr_def), 'pAttributeDefinition' )),
    COMMETHOD([], HRESULT, 'WriteAttributeDefinition',
              ( [], WSTRING, 'pszAttributeName' ),
              ( [], POINTER(_ads_attr_def), 'pAttributeDefinition' )),
    COMMETHOD([], HRESULT, 'DeleteAttributeDefinition',
              ( [], WSTRING, 'pszAttributeName' )),
    COMMETHOD([], HRESULT, 'EnumClasses',
              ( [], POINTER(WSTRING), 'ppszClassNames' ),
              ( [], c_ulong, 'dwNumClasses' ),
              ( [], POINTER(POINTER(_ads_class_def)), 'ppClassDefinition' ),
              ( [], POINTER(c_ulong), 'pdwNumClasses' )),
    COMMETHOD([], HRESULT, 'WriteClassDefinition',
              ( [], WSTRING, 'pszClassName' ),
              ( [], POINTER(_ads_class_def), 'pClassDefinition' )),
    COMMETHOD([], HRESULT, 'CreateClassDefinition',
              ( [], WSTRING, 'pszClassName' ),
              ( [], POINTER(_ads_class_def), 'pClassDefinition' )),
    COMMETHOD([], HRESULT, 'DeleteClassDefinition',
              ( [], WSTRING, 'pszClassName' )),
]
################################################################
## code template for IDirectorySchemaMgmt implementation
##class IDirectorySchemaMgmt_Impl(object):
##    def CreateClassDefinition(self, pszClassName, pClassDefinition):
##        '-no docstring-'
##        #return 
##
##    def WriteClassDefinition(self, pszClassName, pClassDefinition):
##        '-no docstring-'
##        #return 
##
##    def DeleteAttributeDefinition(self, pszAttributeName):
##        '-no docstring-'
##        #return 
##
##    def CreateAttributeDefinition(self, pszAttributeName, pAttributeDefinition):
##        '-no docstring-'
##        #return 
##
##    def WriteAttributeDefinition(self, pszAttributeName, pAttributeDefinition):
##        '-no docstring-'
##        #return 
##
##    def EnumAttributes(self, ppszAttrNames, dwNumAttributes, ppAttrDefinition, pdwNumAttributes):
##        '-no docstring-'
##        #return 
##
##    def DeleteClassDefinition(self, pszClassName):
##        '-no docstring-'
##        #return 
##
##    def EnumClasses(self, ppszClassNames, dwNumClasses, ppClassDefinition, pdwNumClasses):
##        '-no docstring-'
##        #return 
##

class IADsServiceOperations(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{5D7B33F0-31CA-11CF-A98A-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
class IADsFileServiceOperations(IADsServiceOperations):
    _case_insensitive_ = True
    _iid_ = GUID('{A02DED10-31CA-11CF-A98A-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsServiceOperations._methods_ = [
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(28)], HRESULT, 'Start'),
    COMMETHOD([dispid(29)], HRESULT, 'Stop'),
    COMMETHOD([dispid(30)], HRESULT, 'Pause'),
    COMMETHOD([dispid(31)], HRESULT, 'Continue'),
    COMMETHOD([dispid(32)], HRESULT, 'SetPassword',
              ( ['in'], BSTR, 'bstrNewPassword' )),
]
################################################################
## code template for IADsServiceOperations implementation
##class IADsServiceOperations_Impl(object):
##    @property
##    def Status(self):
##        '-no docstring-'
##        #return retval
##
##    def Pause(self):
##        '-no docstring-'
##        #return 
##
##    def Stop(self):
##        '-no docstring-'
##        #return 
##
##    def Start(self):
##        '-no docstring-'
##        #return 
##
##    def Continue(self):
##        '-no docstring-'
##        #return 
##
##    def SetPassword(self, bstrNewPassword):
##        '-no docstring-'
##        #return 
##

IADsFileServiceOperations._methods_ = [
    COMMETHOD([dispid(35)], HRESULT, 'Sessions',
              ( ['retval', 'out'], POINTER(POINTER(IADsCollection)), 'ppSessions' )),
    COMMETHOD([dispid(36)], HRESULT, 'Resources',
              ( ['retval', 'out'], POINTER(POINTER(IADsCollection)), 'ppResources' )),
]
################################################################
## code template for IADsFileServiceOperations implementation
##class IADsFileServiceOperations_Impl(object):
##    def Resources(self):
##        '-no docstring-'
##        #return ppResources
##
##    def Sessions(self):
##        '-no docstring-'
##        #return ppSessions
##


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0078_0004'
ADS_ESCAPEDMODE_DEFAULT = 1
ADS_ESCAPEDMODE_ON = 2
ADS_ESCAPEDMODE_OFF = 3
ADS_ESCAPEDMODE_OFF_EX = 4
__MIDL___MIDL_itf_ads_0001_0078_0004 = c_int # enum
ADS_ESCAPE_MODE_ENUM = __MIDL___MIDL_itf_ads_0001_0078_0004
__MIDL___MIDL_itf_ads_0000_0000_0016._fields_ = [
    ('pszStringValue', WSTRING),
    ('pszDNString', WSTRING),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0016) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0016)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0016) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0016)
class __MIDL___MIDL_itf_ads_0000_0000_0005(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0005._fields_ = [
    ('Type', c_ulong),
    ('VolumeName', WSTRING),
    ('Path', WSTRING),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0005) == 24, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0005)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0005) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0005)

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0020'
ADS_DEREF_NEVER = 0
ADS_DEREF_SEARCHING = 1
ADS_DEREF_FINDING = 2
ADS_DEREF_ALWAYS = 3
__MIDL___MIDL_itf_ads_0000_0000_0020 = c_int # enum

# values for enumeration '__MIDL___MIDL_itf_ads_0001_0088_0001'
ADS_PATH_FILE = 1
ADS_PATH_FILESHARE = 2
ADS_PATH_REGISTRY = 3
__MIDL___MIDL_itf_ads_0001_0088_0001 = c_int # enum
class __MIDL___MIDL_itf_ads_0000_0000_0007(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0007._fields_ = [
    ('WholeSeconds', c_ulong),
    ('EventID', c_ulong),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0007) == 8, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0007)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0007) == 4, alignment(__MIDL___MIDL_itf_ads_0000_0000_0007)
class IADsAcl(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8452D3AB-0869-11D1-A377-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsAcl._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ProtectedAttrName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ProtectedAttrName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'SubjectName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'SubjectName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Privileges',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Privileges',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(5)], HRESULT, 'CopyAcl',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppAcl' )),
]
################################################################
## code template for IADsAcl implementation
##class IADsAcl_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SubjectName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ProtectedAttrName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Privileges = property(_get, _set, doc = _set.__doc__)
##
##    def CopyAcl(self):
##        '-no docstring-'
##        #return ppAcl
##

class FaxNumber(CoClass):
    _reg_clsid_ = GUID('{A5062215-4681-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsFaxNumber(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{A910DEA9-4680-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
FaxNumber._com_interfaces_ = [IADsFaxNumber, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class IADsComputerOperations(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{EF497680-1D9F-11CF-B1F3-02608C9E7553}')
    _idlflags_ = ['dual', 'oleautomation']
IADsComputerOperations._methods_ = [
    COMMETHOD([dispid(33)], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppObject' )),
    COMMETHOD([dispid(34)], HRESULT, 'Shutdown',
              ( ['in'], VARIANT_BOOL, 'bReboot' )),
]
################################################################
## code template for IADsComputerOperations implementation
##class IADsComputerOperations_Impl(object):
##    def Status(self):
##        '-no docstring-'
##        #return ppObject
##
##    def Shutdown(self, bReboot):
##        '-no docstring-'
##        #return 
##

IADsAccessControlList._methods_ = [
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'AclRevision',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'AclRevision',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'AceCount',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'AceCount',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(5)], HRESULT, 'AddAce',
              ( ['in'], POINTER(IDispatch), 'pAccessControlEntry' )),
    COMMETHOD([dispid(6)], HRESULT, 'RemoveAce',
              ( ['in'], POINTER(IDispatch), 'pAccessControlEntry' )),
    COMMETHOD([dispid(7)], HRESULT, 'CopyAccessList',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppAccessControlList' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'retval' )),
]
################################################################
## code template for IADsAccessControlList implementation
##class IADsAccessControlList_Impl(object):
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AceCount = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveAce(self, pAccessControlEntry):
##        '-no docstring-'
##        #return 
##
##    def CopyAccessList(self):
##        '-no docstring-'
##        #return ppAccessControlList
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AclRevision = property(_get, _set, doc = _set.__doc__)
##
##    def AddAce(self, pAccessControlEntry):
##        '-no docstring-'
##        #return 
##

class TypedName(CoClass):
    _reg_clsid_ = GUID('{B33143CB-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
TypedName._com_interfaces_ = [IADsTypedName, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]


# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0022'
ADSIPROP_ASYNCHRONOUS = 0
ADSIPROP_DEREF_ALIASES = 1
ADSIPROP_SIZE_LIMIT = 2
ADSIPROP_TIME_LIMIT = 3
ADSIPROP_ATTRIBTYPES_ONLY = 4
ADSIPROP_SEARCH_SCOPE = 5
ADSIPROP_TIMEOUT = 6
ADSIPROP_PAGESIZE = 7
ADSIPROP_PAGED_TIME_LIMIT = 8
ADSIPROP_CHASE_REFERRALS = 9
ADSIPROP_SORT_ON = 10
ADSIPROP_CACHE_RESULTS = 11
ADSIPROP_ADSIFLAG = 12
__MIDL___MIDL_itf_ads_0000_0000_0022 = c_int # enum

# values for enumeration '__MIDL___MIDL_itf_ads_0001_0088_0002'
ADS_SD_FORMAT_IID = 1
ADS_SD_FORMAT_RAW = 2
ADS_SD_FORMAT_HEXSTRING = 3
__MIDL___MIDL_itf_ads_0001_0088_0002 = c_int # enum
class PropertyEntry(CoClass):
    _reg_clsid_ = GUID('{72D3EDC2-A4C4-11D0-8533-00C04FD8D503}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsPropertyEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{05792C8E-941F-11D0-8529-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
PropertyEntry._com_interfaces_ = [IADsPropertyEntry, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class IADsEmail(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{97AF011A-478E-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsEmail._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Address',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Address',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsEmail implementation
##class IADsEmail_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Address = property(_get, _set, doc = _set.__doc__)
##

class DNWithBinary(CoClass):
    _reg_clsid_ = GUID('{7E99C0A3-F935-11D2-BA96-00C04FB6D0D1}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
DNWithBinary._com_interfaces_ = [IADsDNWithBinary, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

ADS_SD_CONTROL_ENUM = __MIDL___MIDL_itf_ads_0001_0048_0005
class __MIDL___MIDL_itf_ads_0000_0000_0015(Structure):
    pass
ADS_DN_WITH_BINARY = __MIDL___MIDL_itf_ads_0000_0000_0015
IADsCollection._methods_ = [
    COMMETHOD([dispid(-4), 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnumerator' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in'], BSTR, 'bstrName' ),
              ( ['in'], VARIANT, 'vItem' )),
    COMMETHOD([dispid(5)], HRESULT, 'Remove',
              ( ['in'], BSTR, 'bstrItemToBeRemoved' )),
    COMMETHOD([dispid(6)], HRESULT, 'GetObject',
              ( ['in'], BSTR, 'bstrName' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvItem' )),
]
################################################################
## code template for IADsCollection implementation
##class IADsCollection_Impl(object):
##    def GetObject(self, bstrName):
##        '-no docstring-'
##        #return pvItem
##
##    def Add(self, bstrName, vItem):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnumerator
##
##    def Remove(self, bstrItemToBeRemoved):
##        '-no docstring-'
##        #return 
##

IADsLargeInteger._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'HighPart',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'HighPart',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'LowPart',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'LowPart',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsLargeInteger implementation
##class IADsLargeInteger_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    HighPart = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LowPart = property(_get, _set, doc = _set.__doc__)
##

class IADsUser(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{3E37E320-17E2-11CF-ABC4-02608C9E7553}')
    _idlflags_ = ['dual', 'oleautomation']
IADsUser._methods_ = [
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'BadLoginAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(54), 'propget'], HRESULT, 'BadLoginCount',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'LastLogin',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'LastLogoff',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'LastFailedLogin',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'PasswordLastChanged',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Division',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'Division',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(122), 'propget'], HRESULT, 'Department',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(122), 'propput'], HRESULT, 'Department',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'EmployeeID',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'EmployeeID',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'FullName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'FullName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'FirstName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'FirstName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'LastName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'LastName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'OtherName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'OtherName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'NamePrefix',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(114), 'propput'], HRESULT, 'NamePrefix',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'NameSuffix',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(115), 'propput'], HRESULT, 'NameSuffix',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Manager',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'Manager',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'TelephoneHome',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'TelephoneHome',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'TelephoneMobile',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(33), 'propput'], HRESULT, 'TelephoneMobile',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'TelephoneNumber',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'TelephoneNumber',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'TelephonePager',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'TelephonePager',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'FaxNumber',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'FaxNumber',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'OfficeLocations',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'OfficeLocations',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'PostalAddresses',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'PostalAddresses',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'PostalCodes',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'PostalCodes',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(117), 'propget'], HRESULT, 'SeeAlso',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(117), 'propput'], HRESULT, 'SeeAlso',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'AccountDisabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(37), 'propput'], HRESULT, 'AccountDisabled',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(38), 'propget'], HRESULT, 'AccountExpirationDate',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(38), 'propput'], HRESULT, 'AccountExpirationDate',
              ( ['in'], c_double, 'retval' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'GraceLoginsAllowed',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(41), 'propput'], HRESULT, 'GraceLoginsAllowed',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(42), 'propget'], HRESULT, 'GraceLoginsRemaining',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(42), 'propput'], HRESULT, 'GraceLoginsRemaining',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(43), 'propget'], HRESULT, 'IsAccountLocked',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(43), 'propput'], HRESULT, 'IsAccountLocked',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(45), 'propget'], HRESULT, 'LoginHours',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(45), 'propput'], HRESULT, 'LoginHours',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(46), 'propget'], HRESULT, 'LoginWorkstations',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(46), 'propput'], HRESULT, 'LoginWorkstations',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'MaxLogins',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(47), 'propput'], HRESULT, 'MaxLogins',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'MaxStorage',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(48), 'propput'], HRESULT, 'MaxStorage',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(49), 'propget'], HRESULT, 'PasswordExpirationDate',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(49), 'propput'], HRESULT, 'PasswordExpirationDate',
              ( ['in'], c_double, 'retval' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'PasswordMinimumLength',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(50), 'propput'], HRESULT, 'PasswordMinimumLength',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(51), 'propget'], HRESULT, 'PasswordRequired',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(51), 'propput'], HRESULT, 'PasswordRequired',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'RequireUniquePassword',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(52), 'propput'], HRESULT, 'RequireUniquePassword',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(60), 'propget'], HRESULT, 'EmailAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(60), 'propput'], HRESULT, 'EmailAddress',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'HomeDirectory',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(61), 'propput'], HRESULT, 'HomeDirectory',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(62), 'propget'], HRESULT, 'Languages',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(62), 'propput'], HRESULT, 'Languages',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(63), 'propget'], HRESULT, 'Profile',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(63), 'propput'], HRESULT, 'Profile',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(64), 'propget'], HRESULT, 'LoginScript',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(64), 'propput'], HRESULT, 'LoginScript',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'Picture',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(65), 'propput'], HRESULT, 'Picture',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(120), 'propget'], HRESULT, 'HomePage',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(120), 'propput'], HRESULT, 'HomePage',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(66)], HRESULT, 'Groups',
              ( ['retval', 'out'], POINTER(POINTER(IADsMembers)), 'ppGroups' )),
    COMMETHOD([dispid(67)], HRESULT, 'SetPassword',
              ( ['in'], BSTR, 'NewPassword' )),
    COMMETHOD([dispid(68)], HRESULT, 'ChangePassword',
              ( ['in'], BSTR, 'bstrOldPassword' ),
              ( ['in'], BSTR, 'bstrNewPassword' )),
]
################################################################
## code template for IADsUser implementation
##class IADsUser_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    TelephoneNumber = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LastLogoff(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    FirstName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LastName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OfficeLocations = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PostalCodes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Languages = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    RequireUniquePassword = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LastLogin(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    HomeDirectory = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Department = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PostalAddresses = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BadLoginAddress(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Profile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Division = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    GraceLoginsRemaining = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SeeAlso = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BadLoginCount(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LoginScript = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    FaxNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PasswordMinimumLength = property(_get, _set, doc = _set.__doc__)
##
##    def ChangePassword(self, bstrOldPassword, bstrNewPassword):
##        '-no docstring-'
##        #return 
##
##    def Groups(self):
##        '-no docstring-'
##        #return ppGroups
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    HomePage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    GraceLoginsAllowed = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AccountDisabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    TelephonePager = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PasswordRequired = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PasswordLastChanged(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    TelephoneHome = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MaxLogins = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    NameSuffix = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OtherName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LoginHours = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MaxStorage = property(_get, _set, doc = _set.__doc__)
##
##    def SetPassword(self, NewPassword):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PasswordExpirationDate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AccountExpirationDate = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    IsAccountLocked = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    EmployeeID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def LastFailedLogin(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Manager = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    EmailAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LoginWorkstations = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    NamePrefix = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Picture = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    FullName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    TelephoneMobile = property(_get, _set, doc = _set.__doc__)
##

class __MIDL___MIDL_itf_ads_0000_0000_0011(Structure):
    pass
ADS_NETADDRESS = __MIDL___MIDL_itf_ads_0000_0000_0011
class IADsFileShare(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{EB6DCAF0-4B83-11CF-A995-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsFileShare._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'CurrentUserCount',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'HostComputer',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'HostComputer',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'Path',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'MaxUserCount',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'MaxUserCount',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsFileShare implementation
##class IADsFileShare_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    HostComputer = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CurrentUserCount(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MaxUserCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Path = property(_get, _set, doc = _set.__doc__)
##

class IADsO(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{A1CD2DC6-EFFE-11CF-8ABC-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
IADsO._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'LocalityName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'LocalityName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'PostalAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'PostalAddress',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'TelephoneNumber',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'TelephoneNumber',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'FaxNumber',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'FaxNumber',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'SeeAlso',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'SeeAlso',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsO implementation
##class IADsO_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    TelephoneNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    FaxNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LocalityName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PostalAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SeeAlso = property(_get, _set, doc = _set.__doc__)
##

ADS_PASSWORD_ENCODING_ENUM = __MIDL___MIDL_itf_ads_0000_0000_0026
ADS_STATUSENUM = __MIDL___MIDL_itf_ads_0000_0000_0019
ADS_PREFERENCES_ENUM = __MIDL___MIDL_itf_ads_0000_0000_0022
class IADsDomain(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{00E4C220-FD16-11CE-ABC4-02608C9E7553}')
    _idlflags_ = ['dual', 'oleautomation']
IADsDomain._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'IsWorkgroup',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'MinPasswordLength',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'MinPasswordLength',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'MinPasswordAge',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'MinPasswordAge',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'MaxPasswordAge',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'MaxPasswordAge',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'MaxBadPasswordsAllowed',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'MaxBadPasswordsAllowed',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'PasswordHistoryLength',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'PasswordHistoryLength',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'PasswordAttributes',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'PasswordAttributes',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'AutoUnlockInterval',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'AutoUnlockInterval',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'LockoutObservationInterval',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'LockoutObservationInterval',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsDomain implementation
##class IADsDomain_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MinPasswordAge = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AutoUnlockInterval = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PasswordAttributes = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PasswordHistoryLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LockoutObservationInterval = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MaxPasswordAge = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsWorkgroup(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MinPasswordLength = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MaxBadPasswordsAllowed = property(_get, _set, doc = _set.__doc__)
##

class __MIDL___MIDL_itf_ads_0000_0000_0017(Union):
    pass
class __MIDL___MIDL_itf_ads_0000_0000_0002(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0002._fields_ = [
    ('dwLength', c_ulong),
    ('lpValue', POINTER(c_ubyte)),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0002) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0002)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0002) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0002)
ADS_OCTET_STRING = __MIDL___MIDL_itf_ads_0000_0000_0002
class __MIDL___MIDL_itf_ads_0000_0000_0004(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0004._fields_ = [
    ('dwLength', c_ulong),
    ('lpValue', POINTER(c_ubyte)),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0004) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0004)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0004) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0004)
ADS_PROV_SPECIFIC = __MIDL___MIDL_itf_ads_0000_0000_0004
class _ADS_CASEIGNORE_LIST(Structure):
    pass
class _ADS_OCTET_LIST(Structure):
    pass
ADS_TIMESTAMP = __MIDL___MIDL_itf_ads_0000_0000_0007
ADS_BACKLINK = __MIDL___MIDL_itf_ads_0000_0000_0008
class __MIDL___MIDL_itf_ads_0000_0000_0009(Structure):
    pass
ADS_HOLD = __MIDL___MIDL_itf_ads_0000_0000_0010
class __MIDL___MIDL_itf_ads_0000_0000_0014(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0014._fields_ = [
    ('Address', WSTRING),
    ('Type', c_ulong),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0014) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0014)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0014) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0014)
ADS_EMAIL = __MIDL___MIDL_itf_ads_0000_0000_0014
class __MIDL___MIDL_itf_ads_0000_0000_0003(Structure):
    pass
__MIDL___MIDL_itf_ads_0000_0000_0003._fields_ = [
    ('dwLength', c_ulong),
    ('lpValue', POINTER(c_ubyte)),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0003) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0003)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0003) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0003)
ADS_NT_SECURITY_DESCRIPTOR = __MIDL___MIDL_itf_ads_0000_0000_0003
__MIDL___MIDL_itf_ads_0000_0000_0017._fields_ = [
    ('DNString', WSTRING),
    ('CaseExactString', WSTRING),
    ('CaseIgnoreString', WSTRING),
    ('PrintableString', WSTRING),
    ('NumericString', WSTRING),
    ('Boolean', c_ulong),
    ('Integer', c_ulong),
    ('OctetString', ADS_OCTET_STRING),
    ('UTCTime', _SYSTEMTIME),
    ('LargeInteger', _LARGE_INTEGER),
    ('ClassName', WSTRING),
    ('ProviderSpecific', ADS_PROV_SPECIFIC),
    ('pCaseIgnoreList', POINTER(_ADS_CASEIGNORE_LIST)),
    ('pOctetList', POINTER(_ADS_OCTET_LIST)),
    ('pPath', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0005)),
    ('pPostalAddress', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0006)),
    ('Timestamp', ADS_TIMESTAMP),
    ('BackLink', ADS_BACKLINK),
    ('pTypedName', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0009)),
    ('Hold', ADS_HOLD),
    ('pNetAddress', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0011)),
    ('pReplicaPointer', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0012)),
    ('pFaxNumber', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0013)),
    ('Email', ADS_EMAIL),
    ('SecurityDescriptor', ADS_NT_SECURITY_DESCRIPTOR),
    ('pDNWithBinary', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0015)),
    ('pDNWithString', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0016)),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0017) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0017)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0017) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0017)
IADsNameTranslate._methods_ = [
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'ChaseReferral',
              ( ['in'], c_int, 'rhs' )),
    COMMETHOD([dispid(2)], HRESULT, 'Init',
              ( ['in'], c_int, 'lnSetType' ),
              ( ['in'], BSTR, 'bstrADsPath' )),
    COMMETHOD([dispid(3)], HRESULT, 'InitEx',
              ( ['in'], c_int, 'lnSetType' ),
              ( ['in'], BSTR, 'bstrADsPath' ),
              ( ['in'], BSTR, 'bstrUserID' ),
              ( ['in'], BSTR, 'bstrDomain' ),
              ( ['in'], BSTR, 'bstrPassword' )),
    COMMETHOD([dispid(4)], HRESULT, 'Set',
              ( ['in'], c_int, 'lnSetType' ),
              ( ['in'], BSTR, 'bstrADsPath' )),
    COMMETHOD([dispid(5)], HRESULT, 'Get',
              ( ['in'], c_int, 'lnFormatType' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrADsPath' )),
    COMMETHOD([dispid(6)], HRESULT, 'SetEx',
              ( ['in'], c_int, 'lnFormatType' ),
              ( ['in'], VARIANT, 'pVar' )),
    COMMETHOD([dispid(7)], HRESULT, 'GetEx',
              ( ['in'], c_int, 'lnFormatType' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pVar' )),
]
################################################################
## code template for IADsNameTranslate implementation
##class IADsNameTranslate_Impl(object):
##    def Set(self, lnSetType, bstrADsPath):
##        '-no docstring-'
##        #return 
##
##    def GetEx(self, lnFormatType):
##        '-no docstring-'
##        #return pVar
##
##    def Get(self, lnFormatType):
##        '-no docstring-'
##        #return pbstrADsPath
##
##    def InitEx(self, lnSetType, bstrADsPath, bstrUserID, bstrDomain, bstrPassword):
##        '-no docstring-'
##        #return 
##
##    def SetEx(self, lnFormatType, pVar):
##        '-no docstring-'
##        #return 
##
##    def Init(self, lnSetType, bstrADsPath):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        '-no docstring-'
##    ChaseReferral = property(fset = _set, doc = _set.__doc__)
##

class IADsObjectOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{46F14FDA-232B-11D1-A808-00C04FD8D5A8}')
    _idlflags_ = ['dual', 'oleautomation']
IADsObjectOptions._methods_ = [
    COMMETHOD([dispid(2)], HRESULT, 'GetOption',
              ( ['in'], c_int, 'lnOption' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvValue' )),
    COMMETHOD([dispid(3)], HRESULT, 'SetOption',
              ( ['in'], c_int, 'lnOption' ),
              ( ['in'], VARIANT, 'vValue' )),
]
################################################################
## code template for IADsObjectOptions implementation
##class IADsObjectOptions_Impl(object):
##    def SetOption(self, lnOption, vValue):
##        '-no docstring-'
##        #return 
##
##    def GetOption(self, lnOption):
##        '-no docstring-'
##        #return pvValue
##

class ads_searchpref_info(Structure):
    pass

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0025'
ADS_SEARCHPREF_ASYNCHRONOUS = 0
ADS_SEARCHPREF_DEREF_ALIASES = 1
ADS_SEARCHPREF_SIZE_LIMIT = 2
ADS_SEARCHPREF_TIME_LIMIT = 3
ADS_SEARCHPREF_ATTRIBTYPES_ONLY = 4
ADS_SEARCHPREF_SEARCH_SCOPE = 5
ADS_SEARCHPREF_TIMEOUT = 6
ADS_SEARCHPREF_PAGESIZE = 7
ADS_SEARCHPREF_PAGED_TIME_LIMIT = 8
ADS_SEARCHPREF_CHASE_REFERRALS = 9
ADS_SEARCHPREF_SORT_ON = 10
ADS_SEARCHPREF_CACHE_RESULTS = 11
ADS_SEARCHPREF_DIRSYNC = 12
ADS_SEARCHPREF_TOMBSTONE = 13
ADS_SEARCHPREF_VLV = 14
ADS_SEARCHPREF_ATTRIBUTE_QUERY = 15
ADS_SEARCHPREF_SECURITY_MASK = 16
ADS_SEARCHPREF_DIRSYNC_FLAG = 17
ADS_SEARCHPREF_EXTENDED_DN = 18
__MIDL___MIDL_itf_ads_0000_0000_0025 = c_int # enum
ADS_SEARCHPREF_ENUM = __MIDL___MIDL_itf_ads_0000_0000_0025
class _adsvalue(Structure):
    pass
_adsvalue._fields_ = [
    ('dwType', ADSTYPEENUM),
    ('__MIDL____MIDL_itf_ads_0000_00000000', __MIDL___MIDL_itf_ads_0000_0000_0017),
]
assert sizeof(_adsvalue) == 24, sizeof(_adsvalue)
assert alignment(_adsvalue) == 8, alignment(_adsvalue)
ads_searchpref_info._fields_ = [
    ('dwSearchPref', ADS_SEARCHPREF_ENUM),
    ('vValue', _adsvalue),
    ('dwStatus', ADS_STATUSENUM),
]
assert sizeof(ads_searchpref_info) == 40, sizeof(ads_searchpref_info)
assert alignment(ads_searchpref_info) == 8, alignment(ads_searchpref_info)

# values for enumeration '__MIDL___MIDL_itf_ads_0001_0077_0002'
ADS_SECURITY_INFO_OWNER = 1
ADS_SECURITY_INFO_GROUP = 2
ADS_SECURITY_INFO_DACL = 4
ADS_SECURITY_INFO_SACL = 8
__MIDL___MIDL_itf_ads_0001_0077_0002 = c_int # enum
_ADS_OCTET_LIST._fields_ = [
    ('Next', POINTER(_ADS_OCTET_LIST)),
    ('Length', c_ulong),
    ('Data', POINTER(c_ubyte)),
]
assert sizeof(_ADS_OCTET_LIST) == 24, sizeof(_ADS_OCTET_LIST)
assert alignment(_ADS_OCTET_LIST) == 8, alignment(_ADS_OCTET_LIST)
class IPrivateDispatch(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{86AB4BBE-65F6-11D1-8C13-00C04FD8D503}')
    _idlflags_ = []
IPrivateDispatch._methods_ = [
    COMMETHOD([], HRESULT, 'ADSIInitializeDispatchManager',
              ( ['in'], c_int, 'dwExtensionId' )),
    COMMETHOD([], HRESULT, 'ADSIGetTypeInfoCount',
              ( ['out'], POINTER(c_uint), 'pctinfo' )),
    COMMETHOD([], HRESULT, 'ADSIGetTypeInfo',
              ( ['in'], c_uint, 'itinfo' ),
              ( ['in'], c_ulong, 'lcid' ),
              ( ['out'], POINTER(POINTER(ITypeInfo)), 'ppTInfo' )),
    COMMETHOD([], HRESULT, 'ADSIGetIDsOfNames',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.GUID), 'riid' ),
              ( ['in'], POINTER(POINTER(c_ushort)), 'rgszNames' ),
              ( ['in'], c_uint, 'cNames' ),
              ( ['in'], c_ulong, 'lcid' ),
              ( ['out'], POINTER(c_int), 'rgdispid' )),
    COMMETHOD([], HRESULT, 'ADSIInvoke',
              ( ['in'], c_int, 'dispidMember' ),
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.GUID), 'riid' ),
              ( ['in'], c_ulong, 'lcid' ),
              ( ['in'], c_ushort, 'wFlags' ),
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.DISPPARAMS), 'pdispparams' ),
              ( ['out'], POINTER(VARIANT), 'pvarResult' ),
              ( ['out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.EXCEPINFO), 'pexcepinfo' ),
              ( ['out'], POINTER(c_uint), 'puArgErr' )),
]
################################################################
## code template for IPrivateDispatch implementation
##class IPrivateDispatch_Impl(object):
##    def ADSIInitializeDispatchManager(self, dwExtensionId):
##        '-no docstring-'
##        #return 
##
##    def ADSIGetTypeInfo(self, itinfo, lcid):
##        '-no docstring-'
##        #return ppTInfo
##
##    def ADSIGetIDsOfNames(self, riid, rgszNames, cNames, lcid):
##        '-no docstring-'
##        #return rgdispid
##
##    def ADSIGetTypeInfoCount(self):
##        '-no docstring-'
##        #return pctinfo
##
##    def ADSIInvoke(self, dispidMember, riid, lcid, wFlags, pdispparams):
##        '-no docstring-'
##        #return pvarResult, pexcepinfo, puArgErr
##


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0050_0002'
ADS_NAME_INITTYPE_DOMAIN = 1
ADS_NAME_INITTYPE_SERVER = 2
ADS_NAME_INITTYPE_GC = 3
__MIDL___MIDL_itf_ads_0001_0050_0002 = c_int # enum
ADS_NAME_INITTYPE_ENUM = __MIDL___MIDL_itf_ads_0001_0050_0002
class IADsPrintQueueOperations(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{124BE5C0-156E-11CF-A986-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPrintQueueOperations._methods_ = [
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(28)], HRESULT, 'PrintJobs',
              ( ['retval', 'out'], POINTER(POINTER(IADsCollection)), 'pObject' )),
    COMMETHOD([dispid(29)], HRESULT, 'Pause'),
    COMMETHOD([dispid(30)], HRESULT, 'Resume'),
    COMMETHOD([dispid(31)], HRESULT, 'Purge'),
]
################################################################
## code template for IADsPrintQueueOperations implementation
##class IADsPrintQueueOperations_Impl(object):
##    @property
##    def Status(self):
##        '-no docstring-'
##        #return retval
##
##    def Purge(self):
##        '-no docstring-'
##        #return 
##
##    def Pause(self):
##        '-no docstring-'
##        #return 
##
##    def PrintJobs(self):
##        '-no docstring-'
##        #return pObject
##
##    def Resume(self):
##        '-no docstring-'
##        #return 
##

class __MIDL_IOleAutomationTypes_0005(Union):
    pass
__MIDL_IOleAutomationTypes_0005._fields_ = [
    ('lptdesc', POINTER(tagTYPEDESC)),
    ('lpadesc', POINTER(tagARRAYDESC)),
    ('hreftype', c_ulong),
]
assert sizeof(__MIDL_IOleAutomationTypes_0005) == 8, sizeof(__MIDL_IOleAutomationTypes_0005)
assert alignment(__MIDL_IOleAutomationTypes_0005) == 8, alignment(__MIDL_IOleAutomationTypes_0005)

# values for enumeration '__MIDL___MIDL_itf_ads_0001_0050_0001'
ADS_NAME_TYPE_1779 = 1
ADS_NAME_TYPE_CANONICAL = 2
ADS_NAME_TYPE_NT4 = 3
ADS_NAME_TYPE_DISPLAY = 4
ADS_NAME_TYPE_DOMAIN_SIMPLE = 5
ADS_NAME_TYPE_ENTERPRISE_SIMPLE = 6
ADS_NAME_TYPE_GUID = 7
ADS_NAME_TYPE_UNKNOWN = 8
ADS_NAME_TYPE_USER_PRINCIPAL_NAME = 9
ADS_NAME_TYPE_CANONICAL_EX = 10
ADS_NAME_TYPE_SERVICE_PRINCIPAL_NAME = 11
ADS_NAME_TYPE_SID_OR_SID_HISTORY_NAME = 12
__MIDL___MIDL_itf_ads_0001_0050_0001 = c_int # enum
ADS_NAME_TYPE_ENUM = __MIDL___MIDL_itf_ads_0001_0050_0001
__MIDL___MIDL_itf_ads_0000_0000_0012._fields_ = [
    ('ServerName', WSTRING),
    ('ReplicaType', c_ulong),
    ('ReplicaNumber', c_ulong),
    ('Count', c_ulong),
    ('ReplicaAddressHints', POINTER(__MIDL___MIDL_itf_ads_0000_0000_0011)),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0012) == 32, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0012)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0012) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0012)
class AccessControlEntry(CoClass):
    _reg_clsid_ = GUID('{B75AC000-9BDD-11D0-852C-00C04FD8D503}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsAccessControlEntry(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B4F3A14C-9BDD-11D0-852C-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
AccessControlEntry._com_interfaces_ = [IADsAccessControlEntry, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]


# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0018'
ADS_SECURE_AUTHENTICATION = 1
ADS_USE_ENCRYPTION = 2
ADS_USE_SSL = 2
ADS_READONLY_SERVER = 4
ADS_PROMPT_CREDENTIALS = 8
ADS_NO_AUTHENTICATION = 16
ADS_FAST_BIND = 32
ADS_USE_SIGNING = 64
ADS_USE_SEALING = 128
ADS_USE_DELEGATION = 256
ADS_SERVER_BIND = 512
ADS_NO_REFERRAL_CHASING = 1024
ADS_AUTH_RESERVED = -2147483648
__MIDL___MIDL_itf_ads_0000_0000_0018 = c_int # enum
ADS_POSTALADDRESS = __MIDL___MIDL_itf_ads_0000_0000_0006
class IADsPrintJob(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{32FB6780-1ED0-11CF-A988-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPrintJob._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'HostPrintQueue',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'User',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'UserPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'TimeSubmitted',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'TotalPages',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(234), 'propget'], HRESULT, 'Size',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'StartTime',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'StartTime',
              ( ['in'], c_double, 'retval' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'UntilTime',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'UntilTime',
              ( ['in'], c_double, 'retval' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'Notify',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'Notify',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'NotifyPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'NotifyPath',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsPrintJob implementation
##class IADsPrintJob_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    UntilTime = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UserPath(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def HostPrintQueue(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Notify = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    NotifyPath = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def User(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    StartTime = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TimeSubmitted(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def TotalPages(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def Size(self):
##        '-no docstring-'
##        #return retval
##


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0023_0001'
ADS_GROUP_TYPE_GLOBAL_GROUP = 2
ADS_GROUP_TYPE_DOMAIN_LOCAL_GROUP = 4
ADS_GROUP_TYPE_LOCAL_GROUP = 4
ADS_GROUP_TYPE_UNIVERSAL_GROUP = 8
ADS_GROUP_TYPE_SECURITY_ENABLED = -2147483648
__MIDL___MIDL_itf_ads_0001_0023_0001 = c_int # enum
ADS_GROUP_TYPE_ENUM = __MIDL___MIDL_itf_ads_0001_0023_0001
_ads_attr_info._fields_ = [
    ('pszAttrName', WSTRING),
    ('dwControlCode', c_ulong),
    ('dwADsType', ADSTYPEENUM),
    ('pADsValues', POINTER(_adsvalue)),
    ('dwNumValues', c_ulong),
]
assert sizeof(_ads_attr_info) == 32, sizeof(_ads_attr_info)
assert alignment(_ads_attr_info) == 8, alignment(_ads_attr_info)

# values for enumeration '__MIDL___MIDL_itf_ads_0000_0000_0027'
ADS_PROPERTY_CLEAR = 1
ADS_PROPERTY_UPDATE = 2
ADS_PROPERTY_APPEND = 3
ADS_PROPERTY_DELETE = 4
__MIDL___MIDL_itf_ads_0000_0000_0027 = c_int # enum
class IADsGroup(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{27636B00-410F-11CF-B1FF-02608C9E7553}')
    _idlflags_ = ['dual', 'oleautomation']
IADsGroup._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(16)], HRESULT, 'Members',
              ( ['retval', 'out'], POINTER(POINTER(IADsMembers)), 'ppMembers' )),
    COMMETHOD([dispid(17)], HRESULT, 'IsMember',
              ( ['in'], BSTR, 'bstrMember' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'bMember' )),
    COMMETHOD([dispid(18)], HRESULT, 'Add',
              ( ['in'], BSTR, 'bstrNewItem' )),
    COMMETHOD([dispid(19)], HRESULT, 'Remove',
              ( ['in'], BSTR, 'bstrItemToBeRemoved' )),
]
################################################################
## code template for IADsGroup implementation
##class IADsGroup_Impl(object):
##    def Add(self, bstrNewItem):
##        '-no docstring-'
##        #return 
##
##    def Remove(self, bstrItemToBeRemoved):
##        '-no docstring-'
##        #return 
##
##    def IsMember(self, bstrMember):
##        '-no docstring-'
##        #return bMember
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def Members(self):
##        '-no docstring-'
##        #return ppMembers
##

class IADsPath(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B287FCD5-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPath._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Type',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'VolumeName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'VolumeName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Path',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsPath implementation
##class IADsPath_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    VolumeName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Type = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Path = property(_get, _set, doc = _set.__doc__)
##

class IADsComputer(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{EFE3CC70-1D9F-11CF-B1F3-02608C9E7553}')
    _idlflags_ = ['dual', 'oleautomation']
IADsComputer._methods_ = [
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'ComputerID',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Site',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'Location',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'PrimaryUser',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'PrimaryUser',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'Owner',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'Owner',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'Division',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'Division',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'Department',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'Department',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'Role',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'Role',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'OperatingSystem',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'OperatingSystem',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'OperatingSystemVersion',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'OperatingSystemVersion',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'Model',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(28), 'propput'], HRESULT, 'Model',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'Processor',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'Processor',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'ProcessorCount',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'ProcessorCount',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'MemorySize',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(31), 'propput'], HRESULT, 'MemorySize',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'StorageCapacity',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'StorageCapacity',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'NetAddresses',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'NetAddresses',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsComputer implementation
##class IADsComputer_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PrimaryUser = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Division = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    NetAddresses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ComputerID(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MemorySize = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Site(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Processor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    StorageCapacity = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Department = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Role = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OperatingSystemVersion = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Owner = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Model = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ProcessorCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OperatingSystem = property(_get, _set, doc = _set.__doc__)
##

class IADsNamespaces(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{28B96BA0-B330-11CF-A9AD-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsNamespaces._methods_ = [
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'DefaultContainer',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(1), 'propput'], HRESULT, 'DefaultContainer',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsNamespaces implementation
##class IADsNamespaces_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DefaultContainer = property(_get, _set, doc = _set.__doc__)
##

class Hold(CoClass):
    _reg_clsid_ = GUID('{B3AD3E13-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
Hold._com_interfaces_ = [IADsHold, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]


# values for enumeration '__MIDL___MIDL_itf_ads_0001_0048_0006'
ADS_SD_REVISION_DS = 4
__MIDL___MIDL_itf_ads_0001_0048_0006 = c_int # enum
class IADsExtension(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{3D35553C-D2B0-11D1-B17B-0000F87593A0}')
    _idlflags_ = []
IADsExtension._methods_ = [
    COMMETHOD([], HRESULT, 'Operate',
              ( ['in'], c_ulong, 'dwCode' ),
              ( ['in'], VARIANT, 'varData1' ),
              ( ['in'], VARIANT, 'varData2' ),
              ( ['in'], VARIANT, 'varData3' )),
    COMMETHOD([], HRESULT, 'PrivateGetIDsOfNames',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.GUID), 'riid' ),
              ( ['in'], POINTER(POINTER(c_ushort)), 'rgszNames' ),
              ( ['in'], c_uint, 'cNames' ),
              ( ['in'], c_ulong, 'lcid' ),
              ( ['out'], POINTER(c_int), 'rgdispid' )),
    COMMETHOD([], HRESULT, 'PrivateInvoke',
              ( ['in'], c_int, 'dispidMember' ),
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.GUID), 'riid' ),
              ( ['in'], c_ulong, 'lcid' ),
              ( ['in'], c_ushort, 'wFlags' ),
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.DISPPARAMS), 'pdispparams' ),
              ( ['out'], POINTER(VARIANT), 'pvarResult' ),
              ( ['out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.EXCEPINFO), 'pexcepinfo' ),
              ( ['out'], POINTER(c_uint), 'puArgErr' )),
]
################################################################
## code template for IADsExtension implementation
##class IADsExtension_Impl(object):
##    def PrivateGetIDsOfNames(self, riid, rgszNames, cNames, lcid):
##        '-no docstring-'
##        #return rgdispid
##
##    def Operate(self, dwCode, varData1, varData2, varData3):
##        '-no docstring-'
##        #return 
##
##    def PrivateInvoke(self, dispidMember, riid, lcid, wFlags, pdispparams):
##        '-no docstring-'
##        #return pvarResult, pexcepinfo, puArgErr
##

ADS_SD_FORMAT_ENUM = __MIDL___MIDL_itf_ads_0001_0088_0002
ADS_PATH = __MIDL___MIDL_itf_ads_0000_0000_0005
ADS_TYPEDNAME = __MIDL___MIDL_itf_ads_0000_0000_0009
ADS_PATHTYPE_ENUM = __MIDL___MIDL_itf_ads_0001_0088_0001
class IADsPrintJobOperations(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{9A52DB30-1ECF-11CF-A988-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPrintJobOperations._methods_ = [
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Status',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'TimeElapsed',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'PagesPrinted',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(29), 'propput'], HRESULT, 'Position',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(30)], HRESULT, 'Pause'),
    COMMETHOD([dispid(31)], HRESULT, 'Resume'),
]
################################################################
## code template for IADsPrintJobOperations implementation
##class IADsPrintJobOperations_Impl(object):
##    @property
##    def Status(self):
##        '-no docstring-'
##        #return retval
##
##    def Pause(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TimeElapsed(self):
##        '-no docstring-'
##        #return retval
##
##    def Resume(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PagesPrinted(self):
##        '-no docstring-'
##        #return retval
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##

IADsAccessControlEntry._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'AccessMask',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'AccessMask',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'AceType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'AceType',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'AceFlags',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'AceFlags',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Flags',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Flags',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'ObjectType',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'InheritedObjectType',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'InheritedObjectType',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Trustee',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Trustee',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsAccessControlEntry implementation
##class IADsAccessControlEntry_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AccessMask = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    InheritedObjectType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Flags = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AceType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Trustee = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    AceFlags = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ObjectType = property(_get, _set, doc = _set.__doc__)
##

class IADsLocality(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{A05E03A2-EFFE-11CF-8ABC-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
IADsLocality._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'LocalityName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'LocalityName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'PostalAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'PostalAddress',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'SeeAlso',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'SeeAlso',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsLocality implementation
##class IADsLocality_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PostalAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LocalityName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SeeAlso = property(_get, _set, doc = _set.__doc__)
##

class IADsSession(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{398B7DA0-4AAB-11CF-AE2C-00AA006EBFB9}')
    _idlflags_ = ['dual', 'oleautomation']
IADsSession._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'User',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'UserPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Computer',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ComputerPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'ConnectTime',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'IdleTime',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
]
################################################################
## code template for IADsSession implementation
##class IADsSession_Impl(object):
##    @property
##    def UserPath(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def IdleTime(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def ConnectTime(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def ComputerPath(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def Computer(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def User(self):
##        '-no docstring-'
##        #return retval
##

ADS_AUTHENTICATION_ENUM = __MIDL___MIDL_itf_ads_0000_0000_0018
class IPrivateUnknown(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{89126BAB-6EAD-11D1-8C18-00C04FD8D503}')
    _idlflags_ = []
IPrivateUnknown._methods_ = [
    COMMETHOD([], HRESULT, 'ADSIInitializeObject',
              ( ['in'], BSTR, 'lpszUserName' ),
              ( ['in'], BSTR, 'lpszPassword' ),
              ( ['in'], c_int, 'lnReserved' )),
    COMMETHOD([], HRESULT, 'ADSIReleaseObject'),
]
################################################################
## code template for IPrivateUnknown implementation
##class IPrivateUnknown_Impl(object):
##    def ADSIInitializeObject(self, lpszUserName, lpszPassword, lnReserved):
##        '-no docstring-'
##        #return 
##
##    def ADSIReleaseObject(self):
##        '-no docstring-'
##        #return 
##

class IDirectorySearch(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{109BA8EC-92F0-11D0-A790-00C04FD8D5A8}')
    _idlflags_ = []
class ads_search_column(Structure):
    pass
IDirectorySearch._methods_ = [
    COMMETHOD([], HRESULT, 'SetSearchPreference',
              ( ['in'], POINTER(ads_searchpref_info), 'pSearchPrefs' ),
              ( ['in'], c_ulong, 'dwNumPrefs' )),
    COMMETHOD([], HRESULT, 'ExecuteSearch',
              ( ['in'], WSTRING, 'pszSearchFilter' ),
              ( ['in'], POINTER(WSTRING), 'pAttributeNames' ),
              ( ['in'], c_ulong, 'dwNumberAttributes' ),
              ( ['out'], POINTER(c_void_p), 'phSearchResult' )),
    COMMETHOD([], HRESULT, 'AbandonSearch',
              ( ['in'], c_void_p, 'phSearchResult' )),
    COMMETHOD([], HRESULT, 'GetFirstRow',
              ( ['in'], c_void_p, 'hSearchResult' )),
    COMMETHOD([], HRESULT, 'GetNextRow',
              ( ['in'], c_void_p, 'hSearchResult' )),
    COMMETHOD([], HRESULT, 'GetPreviousRow',
              ( ['in'], c_void_p, 'hSearchResult' )),
    COMMETHOD([], HRESULT, 'GetNextColumnName',
              ( ['in'], c_void_p, 'hSearchHandle' ),
              ( ['out'], POINTER(WSTRING), 'ppszColumnName' )),
    COMMETHOD([], HRESULT, 'GetColumn',
              ( ['in'], c_void_p, 'hSearchResult' ),
              ( ['in'], WSTRING, 'szColumnName' ),
              ( ['out'], POINTER(ads_search_column), 'pSearchColumn' )),
    COMMETHOD([], HRESULT, 'FreeColumn',
              ( ['in'], POINTER(ads_search_column), 'pSearchColumn' )),
    COMMETHOD([], HRESULT, 'CloseSearchHandle',
              ( ['in'], c_void_p, 'hSearchResult' )),
]
################################################################
## code template for IDirectorySearch implementation
##class IDirectorySearch_Impl(object):
##    def SetSearchPreference(self, pSearchPrefs, dwNumPrefs):
##        '-no docstring-'
##        #return 
##
##    def GetFirstRow(self, hSearchResult):
##        '-no docstring-'
##        #return 
##
##    def GetColumn(self, hSearchResult, szColumnName):
##        '-no docstring-'
##        #return pSearchColumn
##
##    def AbandonSearch(self, phSearchResult):
##        '-no docstring-'
##        #return 
##
##    def ExecuteSearch(self, pszSearchFilter, pAttributeNames, dwNumberAttributes):
##        '-no docstring-'
##        #return phSearchResult
##
##    def CloseSearchHandle(self, hSearchResult):
##        '-no docstring-'
##        #return 
##
##    def GetNextColumnName(self, hSearchHandle):
##        '-no docstring-'
##        #return ppszColumnName
##
##    def GetNextRow(self, hSearchResult):
##        '-no docstring-'
##        #return 
##
##    def FreeColumn(self, pSearchColumn):
##        '-no docstring-'
##        #return 
##
##    def GetPreviousRow(self, hSearchResult):
##        '-no docstring-'
##        #return 
##

class BackLink(CoClass):
    _reg_clsid_ = GUID('{FCBF906F-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
class IADsBackLink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FD1302BD-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
BackLink._com_interfaces_ = [IADsBackLink, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

IADsReplicaPointer._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ServerName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'ServerName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ReplicaType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'ReplicaType',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ReplicaNumber',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'ReplicaNumber',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Count',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ReplicaAddressHints',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'ReplicaAddressHints',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsReplicaPointer implementation
##class IADsReplicaPointer_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Count = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ServerName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ReplicaAddressHints = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ReplicaNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ReplicaType = property(_get, _set, doc = _set.__doc__)
##

class Pathname(CoClass):
    _reg_clsid_ = GUID('{080D0D78-F421-11D0-A36E-00C04FB950DC}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
Pathname._com_interfaces_ = [IADsPathname, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class IADsPropertyList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C6F602B6-8F69-11D0-8528-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPropertyList._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'PropertyCount',
              ( ['retval', 'out'], POINTER(c_int), 'plCount' )),
    COMMETHOD([dispid(3)], HRESULT, 'Next',
              ( ['retval', 'out'], POINTER(VARIANT), 'pVariant' )),
    COMMETHOD([dispid(4)], HRESULT, 'Skip',
              ( ['in'], c_int, 'cElements' )),
    COMMETHOD([dispid(5)], HRESULT, 'Reset'),
    COMMETHOD([dispid(0)], HRESULT, 'Item',
              ( ['in'], VARIANT, 'varIndex' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pVariant' )),
    COMMETHOD([dispid(6)], HRESULT, 'GetPropertyItem',
              ( ['in'], BSTR, 'bstrName' ),
              ( ['in'], c_int, 'lnADsType' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pVariant' )),
    COMMETHOD([dispid(7)], HRESULT, 'PutPropertyItem',
              ( ['in'], VARIANT, 'varData' )),
    COMMETHOD([dispid(8)], HRESULT, 'ResetPropertyItem',
              ( ['in'], VARIANT, 'varEntry' )),
    COMMETHOD([dispid(9)], HRESULT, 'PurgePropertyList'),
]
################################################################
## code template for IADsPropertyList implementation
##class IADsPropertyList_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def GetPropertyItem(self, bstrName, lnADsType):
##        '-no docstring-'
##        #return pVariant
##
##    def Skip(self, cElements):
##        '-no docstring-'
##        #return 
##
##    def PutPropertyItem(self, varData):
##        '-no docstring-'
##        #return 
##
##    def Next(self):
##        '-no docstring-'
##        #return pVariant
##
##    def Item(self, varIndex):
##        '-no docstring-'
##        #return pVariant
##
##    def ResetPropertyItem(self, varEntry):
##        '-no docstring-'
##        #return 
##
##    def PurgePropertyList(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PropertyCount(self):
##        '-no docstring-'
##        #return plCount
##

class IADsService(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{68AF66E0-31CA-11CF-A98A-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsService._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'HostComputer',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'HostComputer',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'DisplayName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'DisplayName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Version',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'Version',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ServiceType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'ServiceType',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'StartType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'StartType',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'Path',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'StartupParameters',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'StartupParameters',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'ErrorControl',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'ErrorControl',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'LoadOrderGroup',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'LoadOrderGroup',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'ServiceAccountName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'ServiceAccountName',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'ServiceAccountPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'ServiceAccountPath',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'Dependencies',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'Dependencies',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsService implementation
##class IADsService_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ServiceType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    LoadOrderGroup = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DisplayName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ServiceAccountName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    StartupParameters = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    HostComputer = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ServiceAccountPath = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Dependencies = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Version = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    StartType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Path = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ErrorControl = property(_get, _set, doc = _set.__doc__)
##

ADS_SECURITY_INFO_ENUM = __MIDL___MIDL_itf_ads_0001_0077_0002
IADsSecurityDescriptor._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Revision',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Revision',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Control',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Control',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Owner',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Owner',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'OwnerDefaulted',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'OwnerDefaulted',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Group',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'GroupDefaulted',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'GroupDefaulted',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'DiscretionaryAcl',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'retval' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'DiscretionaryAcl',
              ( ['in'], POINTER(IDispatch), 'retval' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'DaclDefaulted',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'DaclDefaulted',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'SystemAcl',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'retval' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'SystemAcl',
              ( ['in'], POINTER(IDispatch), 'retval' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'SaclDefaulted',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'SaclDefaulted',
              ( ['in'], VARIANT_BOOL, 'retval' )),
    COMMETHOD([dispid(12)], HRESULT, 'CopySecurityDescriptor',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppSecurityDescriptor' )),
]
################################################################
## code template for IADsSecurityDescriptor implementation
##class IADsSecurityDescriptor_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Control = property(_get, _set, doc = _set.__doc__)
##
##    def CopySecurityDescriptor(self):
##        '-no docstring-'
##        #return ppSecurityDescriptor
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Group = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OwnerDefaulted = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SystemAcl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DiscretionaryAcl = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DaclDefaulted = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    SaclDefaulted = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Owner = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    GroupDefaulted = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Revision = property(_get, _set, doc = _set.__doc__)
##

__MIDL___MIDL_itf_ads_0000_0000_0009._fields_ = [
    ('ObjectName', WSTRING),
    ('Level', c_ulong),
    ('Interval', c_ulong),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0009) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0009)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0009) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0009)
IADsTimestamp._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'WholeSeconds',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'WholeSeconds',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'EventID',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'EventID',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsTimestamp implementation
##class IADsTimestamp_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    EventID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    WholeSeconds = property(_get, _set, doc = _set.__doc__)
##

ADS_SETTYPE_ENUM = __MIDL___MIDL_itf_ads_0001_0078_0001
ADS_SD_REVISION_ENUM = __MIDL___MIDL_itf_ads_0001_0048_0006
class IADsPrintQueue(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{B15160D0-1226-11CF-A985-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPrintQueue._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'PrinterPath',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'PrinterPath',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Model',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'Model',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Datatype',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'Datatype',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'PrintProcessor',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'PrintProcessor',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Location',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'Location',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'StartTime',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'StartTime',
              ( ['in'], c_double, 'retval' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'UntilTime',
              ( ['retval', 'out'], POINTER(c_double), 'retval' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'UntilTime',
              ( ['in'], c_double, 'retval' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'DefaultJobPriority',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(23), 'propput'], HRESULT, 'DefaultJobPriority',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(24), 'propput'], HRESULT, 'Priority',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'BannerPage',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'BannerPage',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'PrintDevices',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'PrintDevices',
              ( ['in'], VARIANT, 'retval' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'NetAddresses',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(27), 'propput'], HRESULT, 'NetAddresses',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsPrintQueue implementation
##class IADsPrintQueue_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PrinterPath = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    DefaultJobPriority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Datatype = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    UntilTime = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    BannerPage = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PrintDevices = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Location = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    StartTime = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Model = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    NetAddresses = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PrintProcessor = property(_get, _set, doc = _set.__doc__)
##

class IADsAggregator(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{52DB5FB0-941F-11D0-8529-00C04FD8D503}')
    _idlflags_ = []
IADsAggregator._methods_ = [
    COMMETHOD([], HRESULT, 'ConnectAsAggregator',
              ( [], POINTER(IUnknown), 'pAggregatee' )),
    COMMETHOD([], HRESULT, 'DisconnectAsAggregator'),
]
################################################################
## code template for IADsAggregator implementation
##class IADsAggregator_Impl(object):
##    def ConnectAsAggregator(self, pAggregatee):
##        '-no docstring-'
##        #return 
##
##    def DisconnectAsAggregator(self):
##        '-no docstring-'
##        #return 
##

class Library(object):
    u'Active DS Type Library'
    name = u'ActiveDs'
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)

IADsBackLink._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'RemoteID',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'RemoteID',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ObjectName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'ObjectName',
              ( ['in'], BSTR, 'retval' )),
]
################################################################
## code template for IADsBackLink implementation
##class IADsBackLink_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    RemoteID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ObjectName = property(_get, _set, doc = _set.__doc__)
##

class _ads_vlv(Structure):
    pass
_ads_vlv._fields_ = [
    ('dwBeforeCount', c_ulong),
    ('dwAfterCount', c_ulong),
    ('dwOffset', c_ulong),
    ('dwContentCount', c_ulong),
    ('pszTarget', WSTRING),
    ('dwContextIDLength', c_ulong),
    ('lpContextID', POINTER(c_ubyte)),
]
assert sizeof(_ads_vlv) == 40, sizeof(_ads_vlv)
assert alignment(_ads_vlv) == 8, alignment(_ads_vlv)
class CaseIgnoreList(CoClass):
    _reg_clsid_ = GUID('{15F88A55-4680-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
CaseIgnoreList._com_interfaces_ = [IADsCaseIgnoreList, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class _ads_sortkey(Structure):
    pass
_ads_sortkey._fields_ = [
    ('pszAttrType', WSTRING),
    ('pszReserved', WSTRING),
    ('fReverseorder', c_char),
]
assert sizeof(_ads_sortkey) == 24, sizeof(_ads_sortkey)
assert alignment(_ads_sortkey) == 8, alignment(_ads_sortkey)
__MIDL___MIDL_itf_ads_0000_0000_0015._fields_ = [
    ('dwLength', c_ulong),
    ('lpBinaryValue', POINTER(c_ubyte)),
    ('pszDNString', WSTRING),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0015) == 24, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0015)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0015) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0015)
class NetAddress(CoClass):
    _reg_clsid_ = GUID('{B0B71247-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
NetAddress._com_interfaces_ = [IADsNetAddress, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class Email(CoClass):
    _reg_clsid_ = GUID('{8F92A857-478E-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
Email._com_interfaces_ = [IADsEmail, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

IADsFaxNumber._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'TelephoneNumber',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'TelephoneNumber',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Parameters',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'Parameters',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsFaxNumber implementation
##class IADsFaxNumber_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    TelephoneNumber = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Parameters = property(_get, _set, doc = _set.__doc__)
##

class IADsFileService(IADsService):
    _case_insensitive_ = True
    _iid_ = GUID('{A89D1900-31CA-11CF-A98A-00AA006BC149}')
    _idlflags_ = ['dual', 'oleautomation']
IADsFileService._methods_ = [
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(33), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'MaxUserCount',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'MaxUserCount',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsFileService implementation
##class IADsFileService_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    MaxUserCount = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##

ads_search_column._fields_ = [
    ('pszAttrName', WSTRING),
    ('dwADsType', ADSTYPEENUM),
    ('pADsValues', POINTER(_adsvalue)),
    ('dwNumValues', c_ulong),
    ('hReserved', c_void_p),
]
assert sizeof(ads_search_column) == 40, sizeof(ads_search_column)
assert alignment(ads_search_column) == 8, alignment(ads_search_column)
ADS_FORMAT_ENUM = __MIDL___MIDL_itf_ads_0001_0078_0002
IADsADSystemInfo._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'UserName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ComputerName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'SiteName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'DomainShortName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'DomainDNSName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ForestDNSName',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'PDCRoleOwner',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'SchemaRoleOwner',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'IsNativeMode',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'retval' )),
    COMMETHOD([dispid(11)], HRESULT, 'GetAnyDCName',
              ( ['retval', 'out'], POINTER(BSTR), 'pszDCName' )),
    COMMETHOD([dispid(12)], HRESULT, 'GetDCSiteName',
              ( ['in'], BSTR, 'szServer' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pszSiteName' )),
    COMMETHOD([dispid(13)], HRESULT, 'RefreshSchemaCache'),
    COMMETHOD([dispid(14)], HRESULT, 'GetTrees',
              ( ['retval', 'out'], POINTER(VARIANT), 'pvTrees' )),
]
################################################################
## code template for IADsADSystemInfo implementation
##class IADsADSystemInfo_Impl(object):
##    @property
##    def UserName(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def ComputerName(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def PDCRoleOwner(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def DomainDNSName(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def IsNativeMode(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def SchemaRoleOwner(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def SiteName(self):
##        '-no docstring-'
##        #return retval
##
##    def GetAnyDCName(self):
##        '-no docstring-'
##        #return pszDCName
##
##    def RefreshSchemaCache(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DomainShortName(self):
##        '-no docstring-'
##        #return retval
##
##    @property
##    def ForestDNSName(self):
##        '-no docstring-'
##        #return retval
##
##    def GetDCSiteName(self, szServer):
##        '-no docstring-'
##        #return pszSiteName
##
##    def GetTrees(self):
##        '-no docstring-'
##        #return pvTrees
##

ADS_DEREFENUM = __MIDL___MIDL_itf_ads_0000_0000_0020

# values for enumeration 'ADS_USER_FLAG'
ADS_UF_SCRIPT = 1
ADS_UF_ACCOUNTDISABLE = 2
ADS_UF_HOMEDIR_REQUIRED = 8
ADS_UF_LOCKOUT = 16
ADS_UF_PASSWD_NOTREQD = 32
ADS_UF_PASSWD_CANT_CHANGE = 64
ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED = 128
ADS_UF_TEMP_DUPLICATE_ACCOUNT = 256
ADS_UF_NORMAL_ACCOUNT = 512
ADS_UF_INTERDOMAIN_TRUST_ACCOUNT = 2048
ADS_UF_WORKSTATION_TRUST_ACCOUNT = 4096
ADS_UF_SERVER_TRUST_ACCOUNT = 8192
ADS_UF_DONT_EXPIRE_PASSWD = 65536
ADS_UF_MNS_LOGON_ACCOUNT = 131072
ADS_UF_SMARTCARD_REQUIRED = 262144
ADS_UF_TRUSTED_FOR_DELEGATION = 524288
ADS_UF_NOT_DELEGATED = 1048576
ADS_UF_USE_DES_KEY_ONLY = 2097152
ADS_UF_DONT_REQUIRE_PREAUTH = 4194304
ADS_UF_PASSWORD_EXPIRED = 8388608
ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION = 16777216
ADS_USER_FLAG = c_int # enum
class IADsPostalAddress(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7ADECF29-4680-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['dual', 'oleautomation']
IADsPostalAddress._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'PostalAddress',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'PostalAddress',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsPostalAddress implementation
##class IADsPostalAddress_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    PostalAddress = property(_get, _set, doc = _set.__doc__)
##

class DNWithString(CoClass):
    _reg_clsid_ = GUID('{334857CC-F934-11D2-BA96-00C04FB6D0D1}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
DNWithString._com_interfaces_ = [IADsDNWithString, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class Path(CoClass):
    _reg_clsid_ = GUID('{B2538919-4080-11D1-A3AC-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
Path._com_interfaces_ = [IADsPath, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

_ADS_CASEIGNORE_LIST._fields_ = [
    ('Next', POINTER(_ADS_CASEIGNORE_LIST)),
    ('String', WSTRING),
]
assert sizeof(_ADS_CASEIGNORE_LIST) == 16, sizeof(_ADS_CASEIGNORE_LIST)
assert alignment(_ADS_CASEIGNORE_LIST) == 8, alignment(_ADS_CASEIGNORE_LIST)
ADS_PROPERTY_OPERATION_ENUM = __MIDL___MIDL_itf_ads_0000_0000_0027
class OctetList(CoClass):
    _reg_clsid_ = GUID('{1241400F-4680-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
OctetList._com_interfaces_ = [IADsOctetList, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class IADsSyntax(IADs):
    _case_insensitive_ = True
    _iid_ = GUID('{C8F93DD2-4AE0-11CF-9E73-00AA004A5691}')
    _idlflags_ = ['dual', 'oleautomation']
IADsSyntax._methods_ = [
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'OleAutoDataType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'OleAutoDataType',
              ( ['in'], c_int, 'retval' )),
]
################################################################
## code template for IADsSyntax implementation
##class IADsSyntax_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    OleAutoDataType = property(_get, _set, doc = _set.__doc__)
##

IADsPropertyEntry._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'Clear'),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'retval' )),
    COMMETHOD([dispid(2), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'retval' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ADsType',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(3), 'propput'], HRESULT, 'ADsType',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ControlCode',
              ( ['retval', 'out'], POINTER(c_int), 'retval' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'ControlCode',
              ( ['in'], c_int, 'retval' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Values',
              ( ['retval', 'out'], POINTER(VARIANT), 'retval' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Values',
              ( ['in'], VARIANT, 'retval' )),
]
################################################################
## code template for IADsPropertyEntry implementation
##class IADsPropertyEntry_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ADsType = property(_get, _set, doc = _set.__doc__)
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Values = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return retval
##    def _set(self, retval):
##        '-no docstring-'
##    ControlCode = property(_get, _set, doc = _set.__doc__)
##

class ADsSecurityUtility(CoClass):
    _reg_clsid_ = GUID('{F270C64A-FFB8-4AE4-85FE-3A75E5347966}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
ADsSecurityUtility._com_interfaces_ = [IADsSecurityUtility, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

class PostalAddress(CoClass):
    _reg_clsid_ = GUID('{0A75AFCD-4680-11D1-A3B4-00C04FB950DC}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{97D25DB0-0363-11CF-ABC4-02608C9E7553}', 1, 0)
PostalAddress._com_interfaces_ = [IADsPostalAddress, comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch]

__MIDL___MIDL_itf_ads_0000_0000_0011._fields_ = [
    ('AddressType', c_ulong),
    ('AddressLength', c_ulong),
    ('Address', POINTER(c_ubyte)),
]
assert sizeof(__MIDL___MIDL_itf_ads_0000_0000_0011) == 16, sizeof(__MIDL___MIDL_itf_ads_0000_0000_0011)
assert alignment(__MIDL___MIDL_itf_ads_0000_0000_0011) == 8, alignment(__MIDL___MIDL_itf_ads_0000_0000_0011)
class IADsOpenDSObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DDF2891E-0F9C-11D0-8AD4-00C04FD8D503}')
    _idlflags_ = ['dual', 'oleautomation']
IADsOpenDSObject._methods_ = [
    COMMETHOD([dispid(1)], HRESULT, 'OpenDSObject',
              ( ['in'], BSTR, 'lpszDNName' ),
              ( ['in'], BSTR, 'lpszUserName' ),
              ( ['in'], BSTR, 'lpszPassword' ),
              ( ['in'], c_int, 'lnReserved' ),
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppOleDsObj' )),
]
################################################################
## code template for IADsOpenDSObject implementation
##class IADsOpenDSObject_Impl(object):
##    def OpenDSObject(self, lpszDNName, lpszUserName, lpszPassword, lnReserved):
##        '-no docstring-'
##        #return ppOleDsObj
##

__all__ = [ 'IADsObjectOptions', 'ADS_FAXNUMBER', 'ADS_ACETYPE_ENUM',
           'NameTranslate', 'ADS_STATUS_INVALID_SEARCHPREFVALUE',
           'ADS_NAME_TYPE_DOMAIN_SIMPLE', 'ADS_BACKLINK',
           'ADS_STATUS_S_OK', 'FaxNumber', 'ADS_SD_FORMAT_ENUM',
           'ADS_RIGHT_DS_SELF', 'ADS_UF_USE_DES_KEY_ONLY',
           'ADS_USE_SEALING', 'ADSTYPEENUM', '_SYSTEMTIME',
           'IADsPathname', 'ADSIPROP_CHASE_REFERRALS', 'LargeInteger',
           'ADSIPROP_SEARCH_SCOPE', 'ADS_ESCAPEDMODE_OFF',
           'ADS_PROPERTY_CLEAR', 'Hold', 'ADSTYPE_NETADDRESS',
           'ADSTYPE_HOLD', 'AccessControlEntry',
           'ADS_SEARCHPREF_CACHE_RESULTS', 'ADSTYPE_OCTET_LIST',
           'ADS_SD_CONTROL_SE_SACL_AUTO_INHERITED',
           'IADsDNWithString', 'ADS_SYSTEMFLAG_CR_NTDS_NC',
           'ADS_UF_INTERDOMAIN_TRUST_ACCOUNT', 'ADS_FAST_BIND',
           'ADS_SD_CONTROL_SE_SACL_PROTECTED',
           'ADS_ACETYPE_SYSTEM_AUDIT_CALLBACK_OBJECT',
           'ADS_SD_CONTROL_SE_SELF_RELATIVE', 'ADS_GROUP_TYPE_ENUM',
           'ADS_PATH_FILE', 'IDirectorySearch', 'ADSTYPE_BOOLEAN',
           'IADsClass', 'SecurityDescriptor', 'ADS_FLAGTYPE_ENUM',
           'ADS_PASSWORD_ENCODE_REQUIRE_SSL',
           'ADS_SEARCHPREF_DIRSYNC_FLAG',
           'ADS_CHASE_REFERRALS_SUBORDINATE',
           'ADS_ACETYPE_ACCESS_ALLOWED_OBJECT',
           'ADS_ESCAPEDMODE_DEFAULT', 'ADSTYPE_DN_STRING',
           '_ADS_OCTET_LIST', 'ADSIPROP_DEREF_ALIASES', 'IADsPath',
           'ADS_SD_FORMAT_HEXSTRING', 'IADsFileShare',
           'ADS_ACETYPE_ACCESS_DENIED_CALLBACK_OBJECT',
           'ADS_SD_CONTROL_ENUM', '__MIDL_IOleAutomationTypes_0006',
           '__MIDL_IOleAutomationTypes_0005',
           'ADS_UF_DONT_REQUIRE_PREAUTH', 'ADS_USE_DELEGATION',
           'IADsAccessControlEntry', 'ADSIPROP_TIME_LIMIT',
           'ADSTYPE_OBJECT_CLASS', 'ADS_UF_NOT_DELEGATED',
           'ADSTYPE_INTEGER', 'IADsGroup', 'ADSTYPE_OCTET_STRING',
           'ADS_NETADDRESS', 'ADS_TIMESTAMP', 'ADS_RIGHT_SYNCHRONIZE',
           'ADSIPROP_SIZE_LIMIT', 'ADSIPROP_TIMEOUT',
           'ADS_SETTYPE_PROVIDER', 'IADsPrintJobOperations',
           'ADS_SD_CONTROL_SE_DACL_AUTO_INHERIT_REQ', 'IADsMembers',
           'Pathname', 'ADS_RIGHT_DS_CONTROL_ACCESS',
           'IADsFileServiceOperations', 'TypedName', 'IADsLocality',
           'ADS_SYSTEMFLAG_DOMAIN_DISALLOW_MOVE', 'ADS_FORMAT_X500',
           'ADS_PROMPT_CREDENTIALS', 'ADS_RIGHT_DS_CREATE_CHILD',
           'ADS_UF_LOCKOUT', 'IPrivateUnknown',
           'ADS_ACEFLAG_INHERIT_ACE', 'ADSTYPE_DN_WITH_BINARY',
           'ADS_NAME_TYPE_SID_OR_SID_HISTORY_NAME',
           'ADS_GROUP_TYPE_SECURITY_ENABLED', 'IPrivateDispatch',
           'ADS_SEARCHPREF_TIME_LIMIT', 'ADS_DEREFENUM',
           'ADS_ACETYPE_SYSTEM_ALARM_CALLBACK_OBJECT',
           'ADS_DN_WITH_STRING', 'ADS_NAME_TYPE_ENUM', 'IADsBackLink',
           'IADsNamespaces', 'PostalAddress', 'ADS_UF_SCRIPT',
           'ADS_OPTION_PASSWORD_METHOD', 'ADS_PROPERTY_UPDATE',
           'ADS_FLAG_INHERITED_OBJECT_TYPE_PRESENT',
           'ADS_SYSTEMFLAG_ATTR_IS_CONSTRUCTED',
           'ADS_ACEFLAG_FAILED_ACCESS',
           '__MIDL___MIDL_itf_ads_0001_0077_0001',
           '__MIDL___MIDL_itf_ads_0001_0077_0002',
           'ADS_PASSWORD_ENCODE_CLEAR', 'ADSTYPE_PATH',
           'ADS_NAME_INITTYPE_ENUM', 'ADS_SETTYPE_ENUM',
           'ADS_ACEFLAG_INHERITED_ACE', 'ADSTYPE_CASE_EXACT_STRING',
           'ADS_SYSTEMFLAG_CR_NTDS_DOMAIN',
           'ADS_RIGHT_GENERIC_EXECUTE', 'ADS_NAME_TYPE_1779',
           'ADS_DISPLAY_FULL', 'Path', '_ads_class_def',
           'ADS_RIGHT_DS_LIST_OBJECT', 'IADsHold',
           'ADS_RIGHT_GENERIC_READ', 'ADS_FORMAT_X500_DN',
           'IADsAggregator', 'ADS_ACETYPE_ACCESS_ALLOWED_CALLBACK',
           'ADS_SD_CONTROL_SE_DACL_PROTECTED', 'ADS_SD_FORMAT_RAW',
           'IADsEmail', 'ADS_POSTALADDRESS',
           'ADS_GROUP_TYPE_UNIVERSAL_GROUP', 'ADS_FORMAT_ENUM',
           'ADSTYPE_CASE_IGNORE_STRING', 'ads_searchpref_info',
           'OctetList', 'ADS_SEARCHPREF_ATTRIBUTE_QUERY',
           'ADS_SECURITY_INFO_OWNER', 'ADS_FORMAT_X500_PARENT',
           '_ads_sortkey', 'ADS_ACEFLAG_SUCCESSFUL_ACCESS',
           'ADSystemInfo', 'ADS_NO_REFERRAL_CHASING',
           'ADS_PROPERTY_APPEND', 'ADS_STATUS_INVALID_SEARCHPREF',
           'ADS_NO_AUTHENTICATION',
           '__MIDL___MIDL_itf_ads_0000_0000_0019',
           'ADS_NT_SECURITY_DESCRIPTOR', 'ADS_FORMAT_LEAF', 'IADsAcl',
           'IADsTypedName', 'ADS_SD_REVISION_ENUM',
           'ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED',
           '__MIDL___MIDL_itf_ads_0001_0017_0001', 'ADSI_DIALECT_SQL',
           'IDirectoryObject', '__MIDL___MIDL_itf_ads_0001_0078_0001',
           'IADs', '__MIDL___MIDL_itf_ads_0001_0078_0003',
           '__MIDL___MIDL_itf_ads_0001_0078_0002',
           'ADS_SECURITY_INFO_ENUM',
           '__MIDL___MIDL_itf_ads_0001_0078_0004', 'IADsSyntax',
           'ADS_ACEFLAG_VALID_INHERIT_FLAGS', 'ADS_TYPEDNAME',
           'ADSTYPE_PROV_SPECIFIC', 'ADS_ACETYPE_ACCESS_ALLOWED',
           'ADSTYPE_BACKLINK', 'ADS_SD_REVISION_DS',
           'ADS_UF_TRUSTED_FOR_DELEGATION', 'ADS_RIGHT_GENERIC_ALL',
           'ADS_SEARCHPREF_EXTENDED_DN', 'ADS_UF_NORMAL_ACCOUNT',
           'ADS_HOLD', 'IADsOctetList',
           'ADS_SEARCHPREF_ATTRIBTYPES_ONLY',
           'ADS_UF_PASSWD_CANT_CHANGE', '_ads_attr_def',
           'ADS_NAME_INITTYPE_SERVER',
           '__MIDL___MIDL_itf_ads_0000_0000_0025',
           '__MIDL___MIDL_itf_ads_0000_0000_0024',
           '__MIDL___MIDL_itf_ads_0000_0000_0027',
           '__MIDL___MIDL_itf_ads_0000_0000_0026',
           '__MIDL___MIDL_itf_ads_0000_0000_0021',
           '__MIDL___MIDL_itf_ads_0000_0000_0020',
           '__MIDL___MIDL_itf_ads_0000_0000_0023',
           '__MIDL___MIDL_itf_ads_0000_0000_0022',
           '__MIDL___MIDL_itf_ads_0001_0048_0002',
           'ADS_OPTION_PASSWORD_PORTNUMBER',
           'ADS_ACETYPE_SYSTEM_ALARM_CALLBACK',
           '__MIDL___MIDL_itf_ads_0001_0048_0006',
           '__MIDL___MIDL_itf_ads_0001_0048_0004',
           '__MIDL___MIDL_itf_ads_0001_0048_0005',
           'ADS_NAME_TYPE_UNKNOWN', 'ADSTYPE_REPLICAPOINTER',
           'ADSIPROP_SORT_ON', 'ADS_DISPLAY_ENUM',
           'ADS_UF_PASSWD_NOTREQD', 'ADS_NAME_TYPE_ENTERPRISE_SIMPLE',
           'ADSIPROP_ADSIFLAG', 'ADSI_DIALECT_ENUM',
           'ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION',
           'ADS_OPTION_REFERRALS',
           '__MIDL___MIDL_itf_ads_0001_0050_0002',
           '__MIDL___MIDL_itf_ads_0001_0050_0001', 'IADsService',
           'ADS_REPLICAPOINTER', 'IADsResource',
           'ADS_UF_SMARTCARD_REQUIRED',
           'ADS_CHASE_REFERRALS_EXTERNAL', 'ADSTYPE_UNKNOWN',
           'ADS_OPTION_QUOTA', 'ReplicaPointer',
           'ADS_SECURE_AUTHENTICATION', 'ADS_NAME_TYPE_DISPLAY',
           'IADsWinNTSystemInfo', 'ADS_SEARCHPREF_SORT_ON',
           'ADS_SYSTEMFLAG_ENUM', '_adsvalue',
           'ADS_SEARCHPREF_SIZE_LIMIT', 'ADS_OPTION_SERVERNAME',
           'ADS_NAME_INITTYPE_GC', 'ADS_UF_WORKSTATION_TRUST_ACCOUNT',
           'ADS_STATUSENUM', 'ADS_SECURITY_INFO_DACL',
           'IADsLargeInteger', 'ADS_DEREF_FINDING',
           'ADS_CHASE_REFERRALS_ENUM', 'ADSIPROP_PAGED_TIME_LIMIT',
           'ADS_FORMAT_WINDOWS_PARENT', 'ADS_RIGHT_DS_WRITE_PROP',
           '__MIDL___MIDL_itf_ads_0001_0023_0001',
           'IADsPostalAddress', 'ADS_FORMAT_SERVER',
           'AccessControlList', 'ADsSecurityUtility',
           'ADS_UF_PASSWORD_EXPIRED',
           'ADS_NAME_TYPE_USER_PRINCIPAL_NAME',
           'ADS_RIGHT_DS_DELETE_CHILD', 'ADS_RIGHTS_ENUM',
           'ADS_ACETYPE_ACCESS_ALLOWED_CALLBACK_OBJECT',
           'ADS_SECURITY_INFO_GROUP',
           '__MIDL___MIDL_itf_ads_0000_0000_0014',
           '__MIDL___MIDL_itf_ads_0000_0000_0015',
           '__MIDL___MIDL_itf_ads_0000_0000_0016',
           '__MIDL___MIDL_itf_ads_0000_0000_0017',
           '__MIDL___MIDL_itf_ads_0000_0000_0010', 'ADS_DEREF_ALWAYS',
           '__MIDL___MIDL_itf_ads_0000_0000_0012',
           '__MIDL___MIDL_itf_ads_0000_0000_0013',
           '__MIDL___MIDL_itf_ads_0000_0000_0018', 'ADS_SCOPEENUM',
           'ADS_ACETYPE_SYSTEM_ALARM_OBJECT', 'ADS_DN_WITH_BINARY',
           'ADS_ACEFLAG_ENUM', 'IADsAggregatee', 'IADsNameTranslate',
           'ADSTYPE_FAXNUMBER',
           '__MIDL___MIDL_itf_ads_0000_0000_0011',
           'ADSTYPE_LARGE_INTEGER', 'ADS_RIGHT_GENERIC_WRITE',
           'ADS_PATHTYPE_ENUM', '_ads_vlv', 'Timestamp',
           '__MIDL___MIDL_itf_ads_0001_0088_0002',
           '__MIDL___MIDL_itf_ads_0001_0088_0001',
           'ADS_SEARCHPREF_PAGESIZE',
           'ADS_ACETYPE_ACCESS_DENIED_CALLBACK',
           'ADS_FORMAT_WINDOWS_DN', 'ADS_ACEFLAG_INHERIT_ONLY_ACE',
           'ADS_NAME_TYPE_CANONICAL_EX', 'ADS_UF_ACCOUNTDISABLE',
           'IADsReplicaPointer', 'IADsExtension',
           'ADS_RIGHT_WRITE_DAC', 'CaseIgnoreList',
           'ADS_RIGHT_ACCESS_SYSTEM_SECURITY', 'WinNTSystemInfo',
           'IADsAccessControlList', 'ADS_SCOPE_ONELEVEL',
           'ADS_FORMAT_X500_NO_SERVER', 'ADS_SECURITY_INFO_SACL',
           'ADS_SD_CONTROL_SE_OWNER_DEFAULTED',
           'ADS_FLAG_OBJECT_TYPE_PRESENT', 'ADSTYPE_DN_WITH_STRING',
           'ADS_SETTYPE_SERVER', 'ADS_SCOPE_SUBTREE',
           '_ads_attr_info', 'IADsComputerOperations',
           'ADS_PASSWORD_ENCODING_ENUM', 'ADS_OCTET_STRING',
           'ADS_ESCAPEDMODE_OFF_EX', 'ADS_PATH_FILESHARE',
           'ADSIPROP_ASYNCHRONOUS',
           '__MIDL___MIDL_itf_ads_0001_0048_0003',
           'ADS_SEARCHPREF_CHASE_REFERRALS', 'NetAddress', 'IADsOU',
           'ADS_SEARCHPREF_SEARCH_SCOPE', 'ADS_UF_HOMEDIR_REQUIRED',
           '__MIDL___MIDL_itf_ads_0001_0048_0001',
           'ADS_SD_CONTROL_SE_DACL_AUTO_INHERITED',
           'ADS_ACETYPE_ACCESS_DENIED_OBJECT', 'IADsDNWithBinary',
           'ADS_ESCAPEDMODE_ON', 'IADsPropertyEntry',
           'ADS_OPTION_PAGE_SIZE', 'ADS_EMAIL',
           'ADS_SYSTEMFLAG_ATTR_NOT_REPLICATED',
           'ADS_CHASE_REFERRALS_NEVER',
           'ADS_SD_CONTROL_SE_SACL_AUTO_INHERIT_REQ',
           'ADS_ACEFLAG_NO_PROPAGATE_INHERIT_ACE', 'IADsPrintQueue',
           'ADS_NAME_TYPE_GUID', 'ADS_USE_ENCRYPTION',
           'ADS_NAME_TYPE_CANONICAL', 'ADS_FORMAT_PROVIDER',
           'ADS_RIGHT_DS_READ_PROP', 'ADS_PATH_REGISTRY',
           'ADS_OPTION_SKIP_SID_LOOKUP', 'ads_search_column',
           'ADS_CHASE_REFERRALS_ALWAYS', 'IADsFaxNumber',
           'ADS_DEREF_NEVER', 'ADS_FORMAT_WINDOWS',
           'ADSTYPE_CASEIGNORE_LIST', 'IADsPropertyValue2',
           'ADS_SD_CONTROL_SE_DACL_PRESENT', 'ADS_PREFERENCES_ENUM',
           'ADS_USE_SIGNING', 'ADS_PROPERTY_DELETE',
           'ADS_SYSTEMFLAG_CONFIG_ALLOW_LIMITED_MOVE', 'IADsPrintJob',
           'ADS_SD_CONTROL_SE_DACL_DEFAULTED', 'ADS_READONLY_SERVER',
           'ADS_UF_DONT_EXPIRE_PASSWD', 'IADsPropertyList',
           'ADS_SETTYPE_FULL', 'ADS_ACETYPE_ACCESS_DENIED',
           'ADS_SCOPE_BASE', 'IDirectorySchemaMgmt', 'ADS_USER_FLAG',
           'ADS_SEARCHPREF_VLV', 'ADSIPROP_ATTRIBTYPES_ONLY',
           'BackLink', 'IADsDomain', 'ADS_FORMAT_WINDOWS_NO_SERVER',
           'DNWithBinary', 'IADsComputer', 'IADsTimestamp', 'IADsO',
           'ADS_DISPLAY_VALUE_ONLY', 'ADS_OPTION_ENUM',
           'ADS_SEARCHPREF_ASYNCHRONOUS', 'IADsOpenDSObject', 'Email',
           'ADS_SEARCHPREF_DEREF_ALIASES', 'IADsSecurityUtility',
           'IADsDeleteOps', 'ADS_NAME_INITTYPE_DOMAIN',
           'IADsServiceOperations',
           'ADS_OPTION_ACCUMULATIVE_MODIFICATION',
           'ADS_RIGHT_DS_DELETE_TREE',
           'ADS_UF_TEMP_DUPLICATE_ACCOUNT', 'ADSTYPE_TYPEDNAME',
           'ADS_GROUP_TYPE_GLOBAL_GROUP', 'PropertyEntry',
           'ADS_NAME_TYPE_NT4',
           'ADS_SYSTEMFLAG_DOMAIN_DISALLOW_RENAME',
           'ADS_SEARCHPREF_ENUM', 'IADsPropertyValue', 'IADsProperty',
           'ADS_SEARCHPREF_PAGED_TIME_LIMIT',
           'ADS_SYSTEMFLAG_DISALLOW_DELETE',
           'ADS_SD_CONTROL_SE_SACL_DEFAULTED',
           'ADS_SEARCHPREF_SECURITY_MASK',
           'ADS_ACETYPE_SYSTEM_AUDIT_OBJECT',
           'ADS_OPTION_MUTUAL_AUTH_STATUS', 'ADS_SEARCHPREF_TIMEOUT',
           'ADS_ESCAPE_MODE_ENUM', 'PropertyValue',
           '__MIDL___MIDL_itf_ads_0000_0000_0007',
           '__MIDL___MIDL_itf_ads_0000_0000_0006',
           '__MIDL___MIDL_itf_ads_0000_0000_0005',
           '__MIDL___MIDL_itf_ads_0000_0000_0004',
           '__MIDL___MIDL_itf_ads_0000_0000_0003',
           '__MIDL___MIDL_itf_ads_0000_0000_0002',
           '__MIDL___MIDL_itf_ads_0000_0000_0001',
           'IADsCaseIgnoreList',
           '__MIDL___MIDL_itf_ads_0000_0000_0009',
           '__MIDL___MIDL_itf_ads_0000_0000_0008',
           'ADS_SEARCHPREF_DIRSYNC', 'IADsSecurityDescriptor',
           'ADS_SEARCHPREF_TOMBSTONE', 'IADsNetAddress',
           'IADsCollection', 'ADS_SD_FORMAT_IID',
           'ADS_ACETYPE_SYSTEM_AUDIT', 'ADS_UF_MNS_LOGON_ACCOUNT',
           'ADS_GROUP_TYPE_DOMAIN_LOCAL_GROUP',
           'ADS_GROUP_TYPE_LOCAL_GROUP', 'ADSTYPE_INVALID',
           'ADSTYPE_EMAIL', 'ADS_UF_SERVER_TRUST_ACCOUNT',
           'DNWithString', 'IADsFileService',
           'ADSTYPE_NUMERIC_STRING', 'ADS_PROPERTY_OPERATION_ENUM',
           'ADS_SD_CONTROL_SE_SACL_PRESENT',
           'ADS_ACETYPE_SYSTEM_AUDIT_CALLBACK', 'ADS_DEREF_SEARCHING',
           'ADS_RIGHT_WRITE_OWNER', '_ADS_CASEIGNORE_LIST',
           'ADS_RIGHT_READ_CONTROL', 'ADS_OPTION_SECURITY_MASK',
           'ADSIPROP_PAGESIZE', 'IADsContainer', '_ads_object_info',
           'ADS_NAME_TYPE_SERVICE_PRINCIPAL_NAME', 'ADS_USE_SSL',
           'ADS_SD_CONTROL_SE_GROUP_DEFAULTED',
           'ADS_RIGHT_ACTRL_DS_LIST', 'ADS_RIGHT_DELETE',
           'ADSTYPE_NT_SECURITY_DESCRIPTOR', 'IADsUser',
           'ADSTYPE_TIMESTAMP', 'ADS_SYSTEMFLAG_CONFIG_ALLOW_MOVE',
           'ADS_SETTYPE_DN', 'IADsPrintQueueOperations',
           'ADS_AUTHENTICATION_ENUM', 'ADS_SERVER_BIND',
           'ADSIPROP_CACHE_RESULTS', 'ADSTYPE_POSTALADDRESS',
           'ADSTYPE_UTC_TIME', 'IADsADSystemInfo', 'ADS_PATH',
           'ADSI_DIALECT_LDAP', 'ADS_SYSTEMFLAG_CONFIG_ALLOW_RENAME',
           'IADsSession', 'ADS_PROV_SPECIFIC', 'ADS_AUTH_RESERVED',
           'ADSTYPE_PRINTABLE_STRING']
from comtypes import _check_version; _check_version('', 1552970668.035833)
