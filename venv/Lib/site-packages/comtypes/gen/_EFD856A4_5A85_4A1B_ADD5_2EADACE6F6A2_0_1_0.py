# -*- coding: mbcs -*-
typelib_path = 'C:\\Windows\\system32\\rendezvousSession.tlb'
_lcid = 0 # change this if required
from ctypes import *
from comtypes import GUID
from comtypes import CoClass
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from ctypes import HRESULT
from comtypes import BSTR
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
from comtypes import DISPMETHOD, DISPPROPERTY, helpstring
from comtypes import IUnknown


class RendezvousApplication(CoClass):
    _reg_clsid_ = GUID('{0B7E019A-B5DE-47FA-8966-9082F82FB192}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{EFD856A4-5A85-4A1B-ADD5-2EADACE6F6A2}', 1, 0)
class IRendezvousApplication(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{4F4D070B-A275-49FB-B10D-8EC26387B50D}')
    _idlflags_ = ['oleautomation']
RendezvousApplication._com_interfaces_ = [IRendezvousApplication]


# values for enumeration '__MIDL___MIDL_itf_rendezvoussession_0000_0000_0001'
RSS_UNKNOWN = 0
RSS_READY = 1
RSS_INVITATION = 2
RSS_ACCEPTED = 3
RSS_CONNECTED = 4
RSS_CANCELLED = 5
RSS_DECLINED = 6
RSS_TERMINATED = 7
__MIDL___MIDL_itf_rendezvoussession_0000_0000_0001 = c_int # enum
class IRendezvousSession(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    u'IRendezvousSession Interface'
    _iid_ = GUID('{9BA4B1DD-8B0C-48B7-9E7C-2F25857C8DF5}')
    _idlflags_ = ['oleautomation']
RENDEZVOUS_SESSION_STATE = __MIDL___MIDL_itf_rendezvoussession_0000_0000_0001
IRendezvousSession._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'State',
              ( ['retval', 'out'], POINTER(RENDEZVOUS_SESSION_STATE), 'pSessionState' )),
    COMMETHOD(['propget'], HRESULT, 'RemoteUser',
              ( ['retval', 'out'], POINTER(BSTR), 'bstrUserName' )),
    COMMETHOD(['propget'], HRESULT, 'Flags',
              ( ['retval', 'out'], POINTER(c_int), 'pFlags' )),
    COMMETHOD([], HRESULT, 'SendContextData',
              ( ['in'], BSTR, 'bstrData' )),
    COMMETHOD([], HRESULT, 'Terminate',
              ( ['in'], HRESULT, 'hr' ),
              ( ['in'], BSTR, 'bstrAppData' )),
]
################################################################
## code template for IRendezvousSession implementation
##class IRendezvousSession_Impl(object):
##    @property
##    def RemoteUser(self):
##        '-no docstring-'
##        #return bstrUserName
##
##    @property
##    def State(self):
##        '-no docstring-'
##        #return pSessionState
##
##    @property
##    def Flags(self):
##        '-no docstring-'
##        #return pFlags
##
##    def Terminate(self, hr, bstrAppData):
##        '-no docstring-'
##        #return 
##
##    def SendContextData(self, bstrData):
##        '-no docstring-'
##        #return 
##

class Library(object):
    u'Rendezvous 1.0 Type Library'
    name = u'RendezvousSessionLib'
    _reg_typelib_ = ('{EFD856A4-5A85-4A1B-ADD5-2EADACE6F6A2}', 1, 0)

class DRendezvousSessionEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3FA19CF8-64C4-4F53-AE60-635B3806ECA6}')
    _idlflags_ = []
    _methods_ = []
DRendezvousSessionEvents._disp_methods_ = [
    DISPMETHOD([dispid(5), helpstring(u'method OnStateChanged')], None, 'OnStateChanged',
               ( ['in'], RENDEZVOUS_SESSION_STATE, 'prevState' )),
    DISPMETHOD([dispid(6), helpstring(u'method OnTermination')], None, 'OnTermination',
               ( ['in'], c_int, 'lReturnCode' ),
               ( ['in'], BSTR, 'bstrData' )),
    DISPMETHOD([dispid(7), helpstring(u'method OnContextData')], None, 'OnContextData',
               ( ['in'], BSTR, 'bstrData' )),
    DISPMETHOD([dispid(8), helpstring(u'method OnSendError')], None, 'OnSendError',
               ( ['in'], c_int, 'lReturnCode' )),
]
IRendezvousApplication._methods_ = [
    COMMETHOD([], HRESULT, 'SetRendezvousSession',
              ( ['in'], POINTER(IUnknown), 'pRendezvousSession' )),
]
################################################################
## code template for IRendezvousApplication implementation
##class IRendezvousApplication_Impl(object):
##    def SetRendezvousSession(self, pRendezvousSession):
##        '-no docstring-'
##        #return 
##


# values for enumeration '__MIDL___MIDL_itf_rendezvoussession_0000_0000_0002'
RSF_NONE = 0
RSF_INVITER = 1
RSF_INVITEE = 2
RSF_ORIGINAL_INVITER = 4
RSF_REMOTE_LEGACYSESSION = 8
RSF_REMOTE_WIN7SESSION = 16
__MIDL___MIDL_itf_rendezvoussession_0000_0000_0002 = c_int # enum
RENDEZVOUS_SESSION_FLAGS = __MIDL___MIDL_itf_rendezvoussession_0000_0000_0002
__all__ = [ 'RENDEZVOUS_SESSION_FLAGS', 'RSS_READY', 'RSF_INVITER',
           'RSS_INVITATION', 'RSS_UNKNOWN',
           '__MIDL___MIDL_itf_rendezvoussession_0000_0000_0002',
           'RSF_INVITEE', 'RENDEZVOUS_SESSION_STATE',
           'DRendezvousSessionEvents', 'IRendezvousSession',
           '__MIDL___MIDL_itf_rendezvoussession_0000_0000_0001',
           'RSS_ACCEPTED', 'RSS_CONNECTED', 'RSS_DECLINED',
           'RSF_REMOTE_WIN7SESSION', 'RSS_CANCELLED',
           'RendezvousApplication', 'RSS_TERMINATED',
           'RSF_ORIGINAL_INVITER', 'RSF_REMOTE_LEGACYSESSION',
           'IRendezvousApplication', 'RSF_NONE']
from comtypes import _check_version; _check_version('', 1552970801.350805)
