# -*- coding: mbcs -*-
typelib_path = u'C:\\Program Files\\Microsoft Office\\Office15\\VISLIB.DLL'
_lcid = 0 # change this if required
from ctypes import *
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from comtypes import GUID
from comtypes import CoClass
from ctypes import HRESULT
from comtypes import BSTR
from ctypes.wintypes import VARIANT_BOOL
from comtypes import helpstring
from comtypes import COMMETHOD
from comtypes import dispid
from comtypes import IUnknown
from comtypes.automation import VARIANT
from comtypes.automation import _midlSAFEARRAY
from comtypes import DISPMETHOD, DISPPROPERTY, helpstring
from comtypes.automation import IDispatch



# values for enumeration 'VisSelectMode'
visSelModeSkipSuper = 256
visSelModeOnlySuper = 512
visSelModeSkipSub = 1024
visSelModeOnlySub = 2048
VisSelectMode = c_int # enum

# values for enumeration 'VisRegionalUIOptions'
VisRegionalUIOptionsUseSystemSettings = 65535
VisRegionalUIOptionsHide = 0
VisRegionalUIOptionsShow = 1
VisRegionalUIOptions = c_int # enum
class IVValidation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D073A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOVALIDATION = POINTER(IVValidation)

# values for enumeration 'VisTextDisplayQualityTypes'
visTextDisplayFaster = 0
visTextDisplayHigherQuality = 1
visTextDisplayClear = 2
VisTextDisplayQualityTypes = c_int # enum
class KeyboardEvent(CoClass):
    u'Object passed as subject of KeyDown, KeyPress and KeyUp events.'
    _reg_clsid_ = GUID('{000D0A29-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVKeyboardEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Interface to enable passing relevant info about keyboard messages through Visio automation events.'
    _iid_ = GUID('{000D072B-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
KeyboardEvent._com_interfaces_ = [IVKeyboardEvent]

class IVStatusBarItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0272-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVStatusBarItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0275-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVStatusBarItem._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809)], HRESULT, 'IconFileName',
              ( ['in'], BSTR, 'IconFileName' )),
    COMMETHOD([dispid(1610743810), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pActionText' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'plIndex' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBarItems)), 'lplpVStatusBarItems' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'CmdNum',
              ( ['in'], c_short, 'pwCmd' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'CmdNum',
              ( ['retval', 'out'], POINTER(c_short), 'pwCmd' )),
    COMMETHOD([dispid(1610743815), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpContextID',
              ( ['in'], c_short, 'pHelpContextID' )),
    COMMETHOD([dispid(1610743815), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpContextID',
              ( ['retval', 'out'], POINTER(c_short), 'pHelpContextID' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'ActionText',
              ( ['in'], BSTR, 'pActionText' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ActionText',
              ( ['retval', 'out'], POINTER(BSTR), 'pActionText' )),
    COMMETHOD([dispid(1610743819), 'propput'], HRESULT, 'AddOnName',
              ( ['in'], BSTR, 'pAddOnName' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'AddOnName',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnName' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'AddOnArgs',
              ( ['in'], BSTR, 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'AddOnArgs',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743823), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpFile',
              ( ['in'], BSTR, 'pHelpFile' )),
    COMMETHOD([dispid(1610743823), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpFile',
              ( ['retval', 'out'], POINTER(BSTR), 'pHelpFile' )),
    COMMETHOD([dispid(1610743825), 'propput'], HRESULT, 'CntrlType',
              ( ['in'], c_short, 'pwCntrlType' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'CntrlType',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlType' )),
    COMMETHOD([dispid(1610743827), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'CntrlID',
              ( ['in'], c_short, 'pwCntrlID' )),
    COMMETHOD([dispid(1610743827), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'CntrlID',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlID' )),
    COMMETHOD([dispid(1610743829), 'propput'], HRESULT, 'TypeSpecific1',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743829), 'propget'], HRESULT, 'TypeSpecific1',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743831), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Priority',
              ( ['in'], c_short, 'pwPriority' )),
    COMMETHOD([dispid(1610743831), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_short), 'pwPriority' )),
    COMMETHOD([dispid(1610743833), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_short, 'pwSpacing' )),
    COMMETHOD([dispid(1610743833), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Spacing',
              ( ['retval', 'out'], POINTER(c_short), 'pwSpacing' )),
    COMMETHOD([dispid(1610743835), 'propput'], HRESULT, 'TypeSpecific2',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'TypeSpecific2',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743837), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(1610743837), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743839), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propput'], HRESULT, 'MiniHelp',
              ( ['in'], BSTR, 'pMiniHelp' )),
    COMMETHOD([dispid(1610743839), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propget'], HRESULT, 'MiniHelp',
              ( ['retval', 'out'], POINTER(BSTR), 'pMiniHelp' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbBuiltIn' )),
    COMMETHOD([dispid(1610743842), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pbEnabled' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEnabled' )),
    COMMETHOD([dispid(1610743844), 'propput'], HRESULT, 'FaceID',
              ( ['in'], c_short, 'pwFaceID' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'FaceID',
              ( ['retval', 'out'], POINTER(c_short), 'pwFaceID' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'State',
              ( ['in'], c_short, 'pwState' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'State',
              ( ['retval', 'out'], POINTER(c_short), 'pwState' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'Style',
              ( ['in'], c_short, 'pwStyle' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(c_short), 'pwStyle' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'Width',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
    COMMETHOD([dispid(1610743854), 'propput'], HRESULT, 'PaletteWidth',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743854), 'propget'], HRESULT, 'PaletteWidth',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
    COMMETHOD([dispid(1610743856), 'propget'], HRESULT, 'StatusBarItems',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBarItems)), 'lplpVStatusBarItems' )),
    COMMETHOD([dispid(1610743857), helpstring(u'IsSeparator is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'IsSeparator',
              ( ['retval', 'out'], POINTER(c_short), 'pIsSeparator' )),
    COMMETHOD([dispid(1610743858), 'propget'], HRESULT, 'IsHierarchical',
              ( ['retval', 'out'], POINTER(c_short), 'pIsHierarchical' )),
]
################################################################
## code template for IVStatusBarItem implementation
##class IVStatusBarItem_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return plIndex
##
##    def _get(self):
##        '-no docstring-'
##        #return pwStyle
##    def _set(self, pwStyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnName
##    def _set(self, pAddOnName):
##        '-no docstring-'
##    AddOnName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pActionText
##    def _set(self, pActionText):
##        '-no docstring-'
##    ActionText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Spacing is obsolete as of Visio 2000.'
##        #return pwSpacing
##    def _set(self, pwSpacing):
##        u'Spacing is obsolete as of Visio 2000.'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCmd
##    def _set(self, pwCmd):
##        '-no docstring-'
##    CmdNum = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Priority is obsolete as of Visio 2000.'
##        #return pwPriority
##    def _set(self, pwPriority):
##        u'Priority is obsolete as of Visio 2000.'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwState
##    def _set(self, pwState):
##        '-no docstring-'
##    State = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsHierarchical(self):
##        '-no docstring-'
##        #return pIsHierarchical
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVStatusBarItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    PaletteWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Minihelp is obsolete as of Visio 2002.'
##        #return pMiniHelp
##    def _set(self, pMiniHelp):
##        u'Minihelp is obsolete as of Visio 2002.'
##    MiniHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'HelpContextID is obsolete as of Visio 2000.'
##        #return pHelpContextID
##    def _set(self, pHelpContextID):
##        u'HelpContextID is obsolete as of Visio 2000.'
##    HelpContextID = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pActionText
##
##    def _get(self):
##        '-no docstring-'
##        #return pbEnabled
##    def _set(self, pbEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCntrlType
##    def _set(self, pwCntrlType):
##        '-no docstring-'
##    CntrlType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnArgs
##    def _set(self, pAddOnArgs):
##        '-no docstring-'
##    AddOnArgs = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsSeparator(self):
##        u'IsSeparator is obsolete as of Visio 2000.'
##        #return pIsSeparator
##
##    def _get(self):
##        u'HelpFile is obsolete as of Visio 2000.'
##        #return pHelpFile
##    def _set(self, pHelpFile):
##        u'HelpFile is obsolete as of Visio 2000.'
##    HelpFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'CntrlID is obsolete as of Visio 2000.'
##        #return pwCntrlID
##    def _set(self, pwCntrlID):
##        u'CntrlID is obsolete as of Visio 2000.'
##    CntrlID = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def StatusBarItems(self):
##        '-no docstring-'
##        #return lplpVStatusBarItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific2 = property(_get, _set, doc = _set.__doc__)
##
##    def IconFileName(self, IconFileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pbBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return pwFaceID
##    def _set(self, pwFaceID):
##        '-no docstring-'
##    FaceID = property(_get, _set, doc = _set.__doc__)
##


# values for enumeration 'VisRowIndices'
visRowInval = -1
visRowFirst = 0
visRowLast = -2
visRowNone = -1
visRowXFormOut = 1
visRowXFormIn = 1
visRowLine = 2
visRowFill = 3
visRowXForm1D = 4
visRowEvent = 5
visRowLayerMem = 6
visRowGuide = 7
visRowStyle = 8
visRowForeign = 9
visRowPage = 10
visRowText = 11
visRowTextXForm = 12
visRowAlign = 14
visRowLock = 15
visRowHelpCopyright = 16
visRowData123 = 16
visRowMisc = 17
visRowRulerGrid = 18
visRowHyperlink = 19
visRowDoc = 20
visRowImage = 21
visRowGroup = 22
visRowShapeLayout = 23
visRowPageLayout = 24
visRowPrintProperties = 25
visRowGradientProperties = 26
visRowQuickStyleProperties = 27
visRowOtherEffectProperties = 28
visRowBevelProperties = 29
visRow3DRotationProperties = 30
visRowThemeProperties = 31
visRowReplaceBehaviors = 32
visRowComponent = 0
visRowVertex = 1
visRowMember = 0
visRowCharacter = 0
visRowParagraph = 0
visRowTab = 0
visRowScratch = 0
visRowConnectionPts = 0
visRowExport = 0
visRowField = 0
visRowControl = 0
visRowAction = 0
visRowLayer = 0
visRowUser = 0
visRowProp = 0
visRow1stHyperlink = 0
visRowFormat = 0
visRowReviewer = 0
visRowAnnotation = 0
visRowSmartTag = 0
visRowGradientStop = 0
VisRowIndices = c_int # enum
class ToolbarSets(CoClass):
    u'The toolbar sets associated with a Visio UIObject. The first ToolbarSet in a ToolbarSets collection is item 0.'
    _reg_clsid_ = GUID('{000D0265-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVToolbarSets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0266-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
ToolbarSets._com_interfaces_ = [IVToolbarSets]


# values for enumeration 'VisGeomFlags'
visGeomExcludeLastPoint = 1
visGeomWHPct = 16
visGeomXYLocal = 32
VisGeomFlags = c_int # enum

# values for enumeration 'VisArcSweepFlags'
visArcSweepFlagConcave = 0
visArcSweepFlagConvex = 1
VisArcSweepFlags = c_int # enum

# values for enumeration 'VisUniqueIDArgs'
visGetGUID = 0
visGetOrMakeGUID = 1
visDeleteGUID = 2
visGetOrMakeGUIDWithUndo = 3
visDeleteGUIDWithUndo = 4
VisUniqueIDArgs = c_int # enum
tagVisUniqueIDArgs = VisUniqueIDArgs

# values for enumeration 'VisPageSizingBehaviors'
visNeverResizePages = 0
visResizePages = 1
VisPageSizingBehaviors = c_int # enum

# values for enumeration 'VisExistsFlags'
visExistsLocally = 1
visExistsAnywhere = 0
VisExistsFlags = c_int # enum

# values for enumeration 'VisSelectItemStatus'
visSelIsPrimaryItem = 1
visSelIsSubItem = 2
visSelIsSuperItem = 4
VisSelectItemStatus = c_int # enum
tagVisSelectItemStatus = VisSelectItemStatus

# values for enumeration 'VisGraphicField'
visGraphicPropertyLabel = 1
visGraphicExpression = 2
VisGraphicField = c_int # enum
class IVPaths(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0720-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVApplication(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0700-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVPath(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0721-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVPaths._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypePaths (40).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(999), 'hidden', 'propget'], HRESULT, 'Item16',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVPath)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Paths collection is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVPath)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVPaths implementation
##class IVPaths_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Item(self, Index):
##        u'The first item in a Paths collection is item 1.'
##        #return lpdispRet
##
##    @property
##    def Item16(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypePaths (40).'
##        #return lpi2Ret
##

class IEnumVMenu(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0223-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

LPVISIOENUMVMENU = POINTER(IEnumVMenu)

# values for enumeration 'VisWindowStates'
visWSNone = 0
visWSMaximized = 1073741824
visWSMinimized = 536870912
visWSRestored = 268435456
visWSVisible = 134217728
visWSDockedLeft = 1
visWSDockedTop = 2
visWSDockedRight = 4
visWSDockedBottom = 8
visWSFloating = 16
visWSAnchorLeft = 32
visWSAnchorTop = 64
visWSAnchorRight = 128
visWSAnchorBottom = 256
visWSAnchorAutoHide = 512
visWSAnchorMerged = 1024
visWSActive = 67108864
VisWindowStates = c_int # enum
class IVCell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0701-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVShape(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D070C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVDocument(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0705-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D070E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVEventList(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D071B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVRow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0725-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVCell._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeCell (4).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Error',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), helpstring(u"Cell's formula in locale specific syntax."), 'propget'], HRESULT, 'Formula',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(4), helpstring(u"Cell's formula in locale specific syntax."), 'propput'], HRESULT, 'Formula',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(5), helpstring(u"Sets cell's formula overriding guard. Parsed against locale specific syntax."), 'propput'], HRESULT, 'FormulaForce',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(6)], HRESULT, 'GlueTo',
              ( ['in'], POINTER(IVCell), 'CellObject' )),
    COMMETHOD([dispid(7)], HRESULT, 'GlueToPos',
              ( ['in'], POINTER(IVShape), 'SheetObject' ),
              ( ['in'], c_double, 'xPercent' ),
              ( ['in'], c_double, 'yPercent' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Result',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'Result',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'ResultForce',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'rhs' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ResultIU',
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'ResultIU',
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'ResultIUForce',
              ( ['in'], c_double, 'rhs' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Units',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13), helpstring(u"Cell's name in locale independent syntax."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(14), helpstring(u"Cell's name in locale specific syntax."), 'propget'], HRESULT, 'LocalName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(15), helpstring(u"Name of cell's row in locale specific syntax."), 'propput'], HRESULT, 'RowName',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Section',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Row',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'Column',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'IsConstant',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'IsInherited',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'ResultInt',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_short, 'fRound' ),
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(2499), 'propput'], HRESULT, 'ResultFromInt',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_int, 'rhs' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'ResultFromIntForce',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_int, 'rhs' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'ResultStr',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(27)], HRESULT, 'Trigger'),
    COMMETHOD([dispid(15), helpstring(u"Name of cell's row in locale specific syntax."), 'propget'], HRESULT, 'RowName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'ContainingRow',
              ( ['retval', 'out'], POINTER(POINTER(IVRow)), 'lpdispRet' )),
    COMMETHOD([dispid(31), helpstring(u"Cell's formula in locale independent syntax."), 'propget'], HRESULT, 'FormulaU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(31), helpstring(u"Cell's formula in locale independent syntax."), 'propput'], HRESULT, 'FormulaU',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(32), helpstring(u"Sets cell's formula overriding guard. Parsed against locale independent syntax."), 'propput'], HRESULT, 'FormulaForceU',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(33), helpstring(u"Name of cell's row in locale independent syntax."), 'propget'], HRESULT, 'RowNameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(33), helpstring(u"Name of cell's row in locale independent syntax."), 'propput'], HRESULT, 'RowNameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(1610743849), 'propget'], HRESULT, 'InheritedValueSource',
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'ppCell' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'InheritedFormulaSource',
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'ppCell' )),
    COMMETHOD([dispid(1610743851), helpstring(u'An array of cells that depend on this cell.'), 'propget'], HRESULT, 'Dependents',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(POINTER(IVCell))), 'dependentCellsArray' )),
    COMMETHOD([dispid(1610743852), helpstring(u'An array of cells that this cell depends on.'), 'propget'], HRESULT, 'Precedents',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(POINTER(IVCell))), 'precedentCellsArray' )),
    COMMETHOD([dispid(1610743853), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743854), 'propget'], HRESULT, 'ContainingMasterID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743855), 'propget'], HRESULT, 'ResultStrU',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
]
################################################################
## code template for IVCell implementation
##class IVCell_Impl(object):
##    def _set(self, UnitsNameOrCode, rhs):
##        '-no docstring-'
##    ResultFromIntForce = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def Style(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ResultStr(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        u"Cell's formula in locale independent syntax."
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        u"Cell's formula in locale independent syntax."
##    FormulaU = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Section(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def GlueTo(self, CellObject):
##        '-no docstring-'
##        #return 
##
##    def Trigger(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def _set(self, rhs):
##        u"Sets cell's formula overriding guard. Parsed against locale specific syntax."
##    FormulaForce = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def Units(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        u"Cell's formula in locale specific syntax."
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        u"Cell's formula in locale specific syntax."
##    Formula = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def IsInherited(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Precedents(self):
##        u'An array of cells that this cell depends on.'
##        #return precedentCellsArray
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ResultInt(self, UnitsNameOrCode, fRound):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ContainingRow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, lpr8Ret):
##        '-no docstring-'
##    ResultIU = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsConstant(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _set(self, rhs):
##        '-no docstring-'
##    ResultIUForce = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def InheritedFormulaSource(self):
##        '-no docstring-'
##        #return ppCell
##
##    @property
##    def InheritedValueSource(self):
##        '-no docstring-'
##        #return ppCell
##
##    def _set(self, rhs):
##        u"Sets cell's formula overriding guard. Parsed against locale independent syntax."
##    FormulaForceU = property(fset = _set, doc = _set.__doc__)
##
##    def GlueToPos(self, SheetObject, xPercent, yPercent):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeCell (4).'
##        #return lpi2Ret
##
##    def _set(self, UnitsNameOrCode, rhs):
##        '-no docstring-'
##    ResultForce = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        u"Cell's name in locale independent syntax."
##        #return lpLocaleIndependentName
##
##    @property
##    def Column(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u"Name of cell's row in locale specific syntax."
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        u"Name of cell's row in locale specific syntax."
##    RowName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Error(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def LocalName(self):
##        u"Cell's name in locale specific syntax."
##        #return lpLocaleSpecificName
##
##    @property
##    def Dependents(self):
##        u'An array of cells that depend on this cell.'
##        #return dependentCellsArray
##
##    def _set(self, UnitsNameOrCode, rhs):
##        '-no docstring-'
##    ResultFromInt = property(fset = _set, doc = _set.__doc__)
##
##    def _get(self):
##        u"Name of cell's row in locale independent syntax."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"Name of cell's row in locale independent syntax."
##    RowNameU = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingMasterID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, UnitsNameOrCode, lpr8Ret):
##        '-no docstring-'
##    Result = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ResultStrU(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def Row(self):
##        '-no docstring-'
##        #return lpi2Ret
##

class IEnumVAccelTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D02A3-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

LPVISIOENUMVACCELTABLE = POINTER(IEnumVAccelTable)
tagVisGeomFlags = VisGeomFlags
class EShape(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Shape Event Interface'
    _iid_ = GUID('{000D0B0B-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class IVSelection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D070B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
EShape._disp_methods_ = [
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(8256)], None, 'ShapeChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(902)], None, 'SelectionAdded',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(16448)], None, 'BeforeShapeDelete',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(805)], None, 'ShapeLinkAdded',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(806)], None, 'ShapeLinkDeleted',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
]
tagVisExistsFlags = VisExistsFlags

# values for enumeration 'VisRoleSelectionTypes'
visRoleSelConnector = 1
visRoleSelContainer = 2
visRoleSelCallout = 4
VisRoleSelectionTypes = c_int # enum

# values for enumeration 'VisSelectionTypes'
visSelTypeEmpty = 0
visSelTypeAll = 1
visSelTypeSingle = 2
visSelTypeByLayer = 3
visSelTypeByType = 4
visSelTypeByMaster = 5
visSelTypeByDataGraphic = 6
visSelTypeByRole = 7
VisSelectionTypes = c_int # enum
class IVMasterShortcut(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0727-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0710-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVMasterShortcut._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), helpstring(u'Returns visObjTypeMasterShortcut (47).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u"MasterShortcut's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(0), helpstring(u"MasterShortcut's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Prompt',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Prompt',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'AlignName',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'AlignName',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'IconSize',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'IconSize',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(9)], HRESULT, 'Delete'),
    COMMETHOD([dispid(10)], HRESULT, 'ImportIcon',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(11)], HRESULT, 'ExportIcon',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in', 'optional'], VARIANT, 'TransparentRGB' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(13)], HRESULT, 'OpenIconWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'TargetDocumentName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(14), 'propput'], HRESULT, 'TargetDocumentName',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(15), helpstring(u'Locale independent name of target Master.'), 'propget'], HRESULT, 'TargetMasterName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(15), helpstring(u'Locale independent name of target Master.'), 'propput'], HRESULT, 'TargetMasterName',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(16), 'hidden', 'propget'], HRESULT, 'TargetBaseID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(16), 'hidden', 'propput'], HRESULT, 'TargetBaseID',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'DropActions',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'DropActions',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'ShapeHelp',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'ShapeHelp',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(19), helpstring(u"MasterShortcut's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(19), helpstring(u"MasterShortcut's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'IndexInStencil',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743839), 'propget'], HRESULT, 'Icon',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743839), 'propputref'], HRESULT, 'Icon',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp), 'ppPictureDisp' )),
    COMMETHOD([dispid(20), 'propput'], HRESULT, 'IndexInStencil',
              ( ['in'], c_short, 'lpi2Ret' )),
]
################################################################
## code template for IVMasterShortcut implementation
##class IVMasterShortcut_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def ExportIcon(self, FileName, Flags, TransparentRGB):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    ShapeHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    DropActions = property(_get, _set, doc = _set.__doc__)
##
##    def ImportIcon(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    AlignName = property(_get, _set, doc = _set.__doc__)
##
##    def Icon(self, ppPictureDisp):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u"MasterShortcut's locale specific name."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"MasterShortcut's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    TargetDocumentName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def OpenIconWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Prompt = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IconSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u"MasterShortcut's locale independent name."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"MasterShortcut's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Locale independent name of target Master.'
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u'Locale independent name of target Master.'
##    TargetMasterName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IndexInStencil = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeMasterShortcut (47).'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    TargetBaseID = property(_get, _set, doc = _set.__doc__)
##

class IEnumVStatusBar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0283-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

LPVISIOENUMVSTATUSBAR = POINTER(IEnumVStatusBar)

# values for enumeration 'VisCellError'
visErrorSuccess = 0
visErrorDivideByZero = 39
visErrorValue = 47
visErrorReference = 55
visErrorName = 61
visErrorNumber = 68
visErrorNotAvailable = 74
VisCellError = c_int # enum

# values for enumeration 'VisTypeSelectionTypes'
visTypeSelGroup = 1
visTypeSelShape = 2
visTypeSelGuide = 4
visTypeSelMetafile = 8
visTypeSelBitmap = 16
visTypeSelInk = 32
visTypeSelOLE = 64
VisTypeSelectionTypes = c_int # enum

# values for enumeration 'VisPageTypes'
visPageTypeInval = 0
visTypeForeground = 1
visTypeBackground = 2
visTypeMarkup = 3
VisPageTypes = c_int # enum

# values for enumeration 'VisDrawRegionFlags'
visDrawRegionDeleteInput = 4
visDrawRegionIncludeHidden = 16
visDrawRegionIgnoreVisible = 32
visDrawRegionIncludeDataGraphics = 64
VisDrawRegionFlags = c_int # enum
tagVisDrawRegionFlags = VisDrawRegionFlags

# values for enumeration 'VisRoundFlags'
visTruncate = 0
visRound = 1
VisRoundFlags = c_int # enum
class OLEObject(CoClass):
    u'A control, object link or embedded object in a Visio Document.'
    _reg_clsid_ = GUID('{000D0A1D-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVOLEObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D071F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
OLEObject._com_interfaces_ = [IVOLEObject]


# values for enumeration 'VisTraceFlags'
visTraceEvents = 1
visTraceAdvises = 2
visTraceAddonInvokes = 4
visTraceCallsToVBA = 8
VisTraceFlags = c_int # enum
tagVisCellError = VisCellError

# values for enumeration 'VisWindowFit'
visFitNone = 0
visFitPage = 1
visFitWidth = 2
VisWindowFit = c_int # enum
class IVConnects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0704-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVConnect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0703-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVConnects._methods_ = [
    COMMETHOD([dispid(4), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(999), 'hidden', 'propget'], HRESULT, 'Item16',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVConnect)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'FromSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeConnects (9).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ToSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Connects collection is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVConnect)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVConnects implementation
##class IVConnects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ToSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, Index):
##        u'The first item in a Connects collection is item 1.'
##        #return lpdispRet
##
##    @property
##    def FromSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Item16(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeConnects (9).'
##        #return lpi2Ret
##

class Hyperlink(CoClass):
    u'A navigable link from a Visio Shape to another Visio or non-Visio object.'
    _reg_clsid_ = GUID('{000D0A1B-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVHyperlink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D071D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Hyperlink._com_interfaces_ = [IVHyperlink]


# values for enumeration 'VisUISpacingTypes'
visCtrlSpacingNONE = 0
visCtrlSpacingVARIABLE_BEFORE = 1
visCtrlSpacingVARIABLE_AFTER = 2
visCtrlSpacingFIXED_BEFORE = 4
visCtrlSpacingFIXED_AFTER = 8
visCtrlSpacingNEW_ROW = 16
visCtrlSpacingTB_NOTFIXED = 32
visCtrlSpacingPALETTERIGHT = 64
visCtrlSpacingNEW_ROW_PALETTERIGHT = 80
VisUISpacingTypes = c_int # enum
tagVisRoundFlags = VisRoundFlags
class EWindow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Window Event Interface'
    _iid_ = GUID('{000D0B02-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class IVMSGWrap(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0729-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
EWindow._disp_methods_ = [
    DISPMETHOD([dispid(701)], None, 'SelectionChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(16385)], None, 'BeforeWindowClosed',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(4224)], None, 'WindowActivated',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(702)], None, 'BeforeWindowSelDelete',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(703)], None, 'BeforeWindowPageTurn',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(704)], None, 'WindowTurnedToPage',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(8193), helpstring(u"Fires after a window's size or position changes")], None, 'WindowChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(705), helpstring(u'Fires after scroll or zoom in a drawing window')], None, 'ViewChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(706), helpstring(u'Cancel close of window? T:Yes F:No')], None, 'QueryCancelWindowClose',
               ( ['in'], POINTER(IVWindow), 'Window' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(707), helpstring(u'Window close operation was canceled.')], None, 'WindowCloseCanceled',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(708), helpstring(u'Called when keystroke message received for Addon window. True return indicates message was handled.')], None, 'OnKeystrokeMessageForAddon',
               ( ['in'], POINTER(IVMSGWrap), 'MSG' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(709), helpstring(u'Called when mousedown message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseDown',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(710), helpstring(u'Called when mousemove message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseMove',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(711), helpstring(u'Called when mouseup message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseUp',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(712), helpstring(u'Called when keydown message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyDown',
               ( ['in'], c_int, 'KeyCode' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(713), helpstring(u'Called when keypress message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyPress',
               ( ['in'], c_int, 'KeyAscii' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(714), helpstring(u'Called when keyup message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyUp',
               ( ['in'], c_int, 'KeyCode' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
]

# values for enumeration 'VisWindowScrollX'
visScrollNoneX = 9
visScrollLeft = 0
visScrollLeftPage = 2
visScrollRight = 1
visScrollRightPage = 3
visScrollToLeft = 6
visScrollToRight = 7
VisWindowScrollX = c_int # enum

# values for enumeration 'VisPrintOutRange'
visPrintAll = 0
visPrintFromTo = 1
visPrintCurrentPage = 2
visPrintSelection = 3
visPrintCurrentView = 4
VisPrintOutRange = c_int # enum

# values for enumeration 'VisRasterExportResolutionUnits'
visRasterPixelsPerInch = 0
visRasterPixelsPerCm = 1
VisRasterExportResolutionUnits = c_int # enum
class Paths(CoClass):
    u"The paths described by a Visio Shape's geometry. The first Path in a Paths collection is item 1."
    _reg_clsid_ = GUID('{000D0A1E-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Paths._com_interfaces_ = [IVPaths]


# values for enumeration 'VisPrimaryKeySettings'
visKeyRowOrder = 1
visKeySingle = 2
visKeyComposite = 3
VisPrimaryKeySettings = c_int # enum
class Path(CoClass):
    u"A contiguous sequence of curves describing one path of a Shape's geometry. The first Curve in a Path is item 1."
    _reg_clsid_ = GUID('{000D0A1F-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Path._com_interfaces_ = [IVPath]


# values for enumeration 'VisRunTypes'
visCharPropRow = 1
visParaPropRow = 2
visTabPropRow = 3
visWordRun = 10
visParaRun = 11
visFieldRun = 20
VisRunTypes = c_int # enum
tagVisRunTypes = VisRunTypes
class Curve(CoClass):
    u'Geometric description of the stroke used to draw part of a Path of a Visio Shape.'
    _reg_clsid_ = GUID('{000D0A20-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVCurve(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0722-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Curve._com_interfaces_ = [IVCurve]


# values for enumeration 'VisCharsBias'
visBiasLetVisioChoose = 0
visBiasLeft = 1
visBiasRight = 2
VisCharsBias = c_int # enum
class IVHyperlinks(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0723-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOHYPERLINKS = POINTER(IVHyperlinks)
class IVApplicationSettings(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Interface provides access  Global application settings'
    _iid_ = GUID('{000D072D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']

# values for enumeration 'VisObjectTypes'
visObjTypeUnknown = 1
visObjTypeApp = 3
visObjTypeCell = 4
visObjTypeChars = 5
visObjTypeConnect = 8
visObjTypeConnects = 9
visObjTypeDoc = 10
visObjTypeDocs = 11
visObjTypeMaster = 12
visObjTypeMasters = 13
visObjTypePage = 14
visObjTypePages = 15
visObjTypeSelection = 16
visObjTypeShape = 17
visObjTypeShapes = 18
visObjTypeStyle = 19
visObjTypeStyles = 20
visObjTypeWindow = 21
visObjTypeWindows = 22
visObjTypeLayer = 25
visObjTypeLayers = 26
visObjTypeFont = 27
visObjTypeFonts = 28
visObjTypeColor = 29
visObjTypeColors = 30
visObjTypeAddon = 31
visObjTypeAddons = 32
visObjTypeEvent = 33
visObjTypeEventList = 34
visObjTypeGlobal = 36
visObjTypeHyperlink = 37
visObjTypeOLEObjects = 38
visObjTypeOLEObject = 39
visObjTypePaths = 40
visObjTypePath = 41
visObjTypeCurve = 42
visObjTypeHyperlinks = 43
visObjTypeSection = 44
visObjTypeRow = 45
visObjTypeMasterShortcuts = 46
visObjTypeMasterShortcut = 47
visObjTypeMSGWrap = 48
visObjTypeMouseEvent = 49
visObjTypeKeyboardEvent = 50
visObjTypeApplicationSettings = 51
visObjTypeDataRecordsets = 52
visObjTypeDataRecordset = 53
visObjTypeDataConnection = 54
visObjTypeDataColumns = 55
visObjTypeDataColumn = 56
visObjTypeDataRecordsetChangedEvent = 57
visObjTypeGraphicItems = 58
visObjTypeGraphicItem = 59
visObjTypeContainerProperties = 60
visObjTypeRelatedShapePairEvent = 61
visObjTypeMovedSelectionEvent = 62
visObjTypeServerPublishOptions = 63
visObjTypeValidation = 64
visObjTypeValidationRuleSets = 65
visObjTypeValidationRuleSet = 66
visObjTypeValidationRules = 67
visObjTypeValidationRule = 68
visObjTypeValidationIssues = 69
visObjTypeValidationIssue = 70
visObjTypeReplaceShapesEvent = 71
visObjTypeComments = 73
visObjTypeComment = 74
VisObjectTypes = c_int # enum

# values for enumeration 'VisDefaultSaveFormats'
visDefaultSaveCurrent = 0
visDefaultSaveCurrentBinary = 0
visDefaultSavePreviousBinary = 1
visDefaultSaveCurrentXML = 2
visDefaultSaveCurrentMacroEnabled = 3
VisDefaultSaveFormats = c_int # enum

# values for enumeration 'VisRasterExportResolution'
visRasterUseScreenResolution = 0
visRasterUsePrinterResolution = 1
visRasterUseSourceResolution = 2
visRasterUseCustomResolution = 3
VisRasterExportResolution = c_int # enum

# values for enumeration 'VisRasterExportSize'
visRasterFitToScreenSize = 0
visRasterFitToPrinterSize = 1
visRasterFitToSourceSize = 2
visRasterFitToCustomSize = 3
VisRasterExportSize = c_int # enum

# values for enumeration 'VisRasterExportSizeUnits'
visRasterPixel = 0
visRasterCm = 1
visRasterInch = 2
VisRasterExportSizeUnits = c_int # enum

# values for enumeration 'VisRasterExportDataFormat'
visRasterInterlace = 0
visRasterNonInterlace = 1
VisRasterExportDataFormat = c_int # enum

# values for enumeration 'VisRasterExportDataCompression'
visRasterNone = 0
visRasterRLE = 1
visRasterGroup3 = 2
visRasterPackbits = 3
visRasterGroup4 = 4
visRasterLZW = 5
visRasterModifiedHuffman = 6
VisRasterExportDataCompression = c_int # enum

# values for enumeration 'VisRasterExportColorReduction'
visRasterAdaptive = 0
visRasterDiffusion = 1
visRasterHalftone = 2
VisRasterExportColorReduction = c_int # enum

# values for enumeration 'VisRasterExportColorFormat'
visRasterBiLevel = 0
visRaster16Color = 1
visRaster256Color = 2
visRaster24Bit = 3
visRasterRGB = 4
visRasterYCC = 5
visRasterGrayScale = 6
visRasterCMYK = 7
visRaster16ColorGrayScale = 8
visRaster256ColorGrayScale = 9
visRaster16Bit = 10
VisRasterExportColorFormat = c_int # enum

# values for enumeration 'VisRasterExportOperation'
visRasterBaseline = 0
visRasterProgressive = 1
VisRasterExportOperation = c_int # enum

# values for enumeration 'VisRasterExportRotation'
visRasterNoRotation = 0
visRasterRotateLeft = 1
visRasterRotateRight = 2
VisRasterExportRotation = c_int # enum

# values for enumeration 'VisRasterExportFlip'
visRasterNoFlip = 0
visRasterFlipHorizontal = 1
visRasterFlipVertical = 2
VisRasterExportFlip = c_int # enum

# values for enumeration 'VisSVGExportFormat'
visSVGIncludeVisioElements = 0
visSVGExcludeVisioElements = 1
VisSVGExportFormat = c_int # enum
IVApplicationSettings._methods_ = [
    COMMETHOD([dispid(1610743808), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743809), helpstring(u'Returns visObjTypeApplicationSettings (51).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(VisObjectTypes), 'peType' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'DrawingAids',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'RetVal' )),
    COMMETHOD([dispid(1610743810), 'propput'], HRESULT, 'DrawingAids',
              ( ['in'], VARIANT_BOOL, 'RetVal' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'SnapStrengthRulerX',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'SnapStrengthRulerX',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'SnapStrengthRulerY',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'SnapStrengthRulerY',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'SnapStrengthGridX',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'SnapStrengthGridX',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'SnapStrengthGridY',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'SnapStrengthGridY',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'SnapStrengthGuidesX',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'SnapStrengthGuidesX',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'SnapStrengthGuidesY',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'SnapStrengthGuidesY',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'SnapStrengthPointsX',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'SnapStrengthPointsX',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'SnapStrengthPointsY',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'SnapStrengthPointsY',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'SnapStrengthGeometryX',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'SnapStrengthGeometryX',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'SnapStrengthGeometryY',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'SnapStrengthGeometryY',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'SnapStrengthExtensionsX',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'SnapStrengthExtensionsX',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'SnapStrengthExtensionsY',
              ( ['retval', 'out'], POINTER(c_int), 'strength' )),
    COMMETHOD([dispid(1610743834), 'propput'], HRESULT, 'SnapStrengthExtensionsY',
              ( ['in'], c_int, 'strength' )),
    COMMETHOD([dispid(1610743836), 'propget'], HRESULT, 'ShowFileSaveWarnings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Show' )),
    COMMETHOD([dispid(1610743836), 'propput'], HRESULT, 'ShowFileSaveWarnings',
              ( ['in'], VARIANT_BOOL, 'Show' )),
    COMMETHOD([dispid(1610743838), 'propget'], HRESULT, 'ShowFileOpenWarnings',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Show' )),
    COMMETHOD([dispid(1610743838), 'propput'], HRESULT, 'ShowFileOpenWarnings',
              ( ['in'], VARIANT_BOOL, 'Show' )),
    COMMETHOD([dispid(1610743840), 'propget'], HRESULT, 'DefaultSaveFormat',
              ( ['retval', 'out'], POINTER(VisDefaultSaveFormats), 'pFormatType' )),
    COMMETHOD([dispid(1610743840), 'propput'], HRESULT, 'DefaultSaveFormat',
              ( ['in'], VisDefaultSaveFormats, 'pFormatType' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'DrawingPageColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743842), 'propput'], HRESULT, 'DrawingPageColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'DrawingBackgroundColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743844), 'propput'], HRESULT, 'DrawingBackgroundColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'DrawingBackgroundColorGradient',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'DrawingBackgroundColorGradient',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'StencilBackgroundColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'StencilBackgroundColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'StencilBackgroundColorGradient',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'StencilBackgroundColorGradient',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'StencilTextColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'StencilTextColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743854), 'hidden', 'propget'], HRESULT, 'PrintPreviewBackgroundColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743854), 'hidden', 'propput'], HRESULT, 'PrintPreviewBackgroundColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743856), 'hidden', 'propget'], HRESULT, 'FullScreenBackgroundColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743856), 'hidden', 'propput'], HRESULT, 'FullScreenBackgroundColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743858), 'hidden', 'propget'], HRESULT, 'ShowStartupDialog',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pShow' )),
    COMMETHOD([dispid(1610743858), 'hidden', 'propput'], HRESULT, 'ShowStartupDialog',
              ( ['in'], VARIANT_BOOL, 'pShow' )),
    COMMETHOD([dispid(1610743860), 'propget'], HRESULT, 'ShowSmartTags',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pShow' )),
    COMMETHOD([dispid(1610743860), 'propput'], HRESULT, 'ShowSmartTags',
              ( ['in'], VARIANT_BOOL, 'pShow' )),
    COMMETHOD([dispid(1610743862), 'hidden', 'propget'], HRESULT, 'TextDisplayQuality',
              ( ['retval', 'out'], POINTER(VisTextDisplayQualityTypes), 'pTextQuality' )),
    COMMETHOD([dispid(1610743862), 'hidden', 'propput'], HRESULT, 'TextDisplayQuality',
              ( ['in'], VisTextDisplayQualityTypes, 'pTextQuality' )),
    COMMETHOD([dispid(1610743864), 'hidden', 'propget'], HRESULT, 'HigherQualityShapeDisplay',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743864), 'hidden', 'propput'], HRESULT, 'HigherQualityShapeDisplay',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743866), 'hidden', 'propget'], HRESULT, 'SmoothDrawing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743866), 'hidden', 'propput'], HRESULT, 'SmoothDrawing',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743868), 'propget'], HRESULT, 'StencilCharactersPerLine',
              ( ['retval', 'out'], POINTER(c_int), 'pCharCount' )),
    COMMETHOD([dispid(1610743868), 'propput'], HRESULT, 'StencilCharactersPerLine',
              ( ['in'], c_int, 'pCharCount' )),
    COMMETHOD([dispid(1610743870), 'propget'], HRESULT, 'StencilLinesPerMaster',
              ( ['retval', 'out'], POINTER(c_int), 'pLineCount' )),
    COMMETHOD([dispid(1610743870), 'propput'], HRESULT, 'StencilLinesPerMaster',
              ( ['in'], c_int, 'pLineCount' )),
    COMMETHOD([dispid(1610743872), 'propget'], HRESULT, 'UserName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610743872), 'propput'], HRESULT, 'UserName',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(1610743874), 'propget'], HRESULT, 'UserInitials',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610743874), 'propput'], HRESULT, 'UserInitials',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(1610743876), 'propget'], HRESULT, 'ZoomOnRoll',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743876), 'propput'], HRESULT, 'ZoomOnRoll',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743878), 'propget'], HRESULT, 'UndoLevels',
              ( ['retval', 'out'], POINTER(c_int), 'pNumLevels' )),
    COMMETHOD([dispid(1610743878), 'propput'], HRESULT, 'UndoLevels',
              ( ['in'], c_int, 'pNumLevels' )),
    COMMETHOD([dispid(1610743880), 'propget'], HRESULT, 'RecentFilesListSize',
              ( ['retval', 'out'], POINTER(c_int), 'pNumFiles' )),
    COMMETHOD([dispid(1610743880), 'propput'], HRESULT, 'RecentFilesListSize',
              ( ['in'], c_int, 'pNumFiles' )),
    COMMETHOD([dispid(1610743882), 'propget'], HRESULT, 'CenterSelectionOnZoom',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743882), 'propput'], HRESULT, 'CenterSelectionOnZoom',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743884), 'propget'], HRESULT, 'ConnectorSplittingEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743884), 'propput'], HRESULT, 'ConnectorSplittingEnabled',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743886), 'propget'], HRESULT, 'AsianTextUI',
              ( ['retval', 'out'], POINTER(VisRegionalUIOptions), 'pAsianTextUIOption' )),
    COMMETHOD([dispid(1610743886), 'hidden', 'propput'], HRESULT, 'AsianTextUI',
              ( ['in'], VisRegionalUIOptions, 'pAsianTextUIOption' )),
    COMMETHOD([dispid(1610743888), 'propget'], HRESULT, 'ComplexTextUI',
              ( ['retval', 'out'], POINTER(VisRegionalUIOptions), 'pComplexTextUIOption' )),
    COMMETHOD([dispid(1610743888), 'hidden', 'propput'], HRESULT, 'ComplexTextUI',
              ( ['in'], VisRegionalUIOptions, 'pComplexTextUIOption' )),
    COMMETHOD([dispid(1610743890), 'propget'], HRESULT, 'KanaFindAndReplace',
              ( ['retval', 'out'], POINTER(VisRegionalUIOptions), 'pKanaOption' )),
    COMMETHOD([dispid(1610743890), 'hidden', 'propput'], HRESULT, 'KanaFindAndReplace',
              ( ['in'], VisRegionalUIOptions, 'pKanaOption' )),
    COMMETHOD([dispid(1610743892), 'propget'], HRESULT, 'FreeformDrawingPrecision',
              ( ['retval', 'out'], POINTER(c_int), 'plVal' )),
    COMMETHOD([dispid(1610743892), 'propput'], HRESULT, 'FreeformDrawingPrecision',
              ( ['in'], c_int, 'plVal' )),
    COMMETHOD([dispid(1610743894), 'propget'], HRESULT, 'FreeformDrawingSmoothing',
              ( ['retval', 'out'], POINTER(c_int), 'plVal' )),
    COMMETHOD([dispid(1610743894), 'propput'], HRESULT, 'FreeformDrawingSmoothing',
              ( ['in'], c_int, 'plVal' )),
    COMMETHOD([dispid(1610743896), 'propget'], HRESULT, 'DeveloperMode',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743896), 'propput'], HRESULT, 'DeveloperMode',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743898), 'propget'], HRESULT, 'ShowChooseDrawingTypePane',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pShow' )),
    COMMETHOD([dispid(1610743898), 'propput'], HRESULT, 'ShowChooseDrawingTypePane',
              ( ['in'], VARIANT_BOOL, 'pShow' )),
    COMMETHOD([dispid(1610743900), 'propget'], HRESULT, 'ShowShapeSearchPane',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743900), 'propput'], HRESULT, 'ShowShapeSearchPane',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743902), 'propget'], HRESULT, 'ApplyThemesOnShapeAdd',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743902), 'propput'], HRESULT, 'ApplyThemesOnShapeAdd',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743904), 'propget'], HRESULT, 'SATextUI',
              ( ['retval', 'out'], POINTER(VisRegionalUIOptions), 'pSATextUIOption' )),
    COMMETHOD([dispid(1610743905), 'propget'], HRESULT, 'BIDITextUI',
              ( ['retval', 'out'], POINTER(VisRegionalUIOptions), 'pBIDITextUIOption' )),
    COMMETHOD([dispid(1610743906), 'propget'], HRESULT, 'KashidaTextUI',
              ( ['retval', 'out'], POINTER(VisRegionalUIOptions), 'pKashidaTextUIOption' )),
    COMMETHOD([dispid(1610743907), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743908), 'propget'], HRESULT, 'ShowMoreShapeHandlesOnHover',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743908), 'propput'], HRESULT, 'ShowMoreShapeHandlesOnHover',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743910), 'propget'], HRESULT, 'EnableAutoConnect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743910), 'propput'], HRESULT, 'EnableAutoConnect',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743912), 'propget'], HRESULT, 'ApplyBackgroundToDocument',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743912), 'propput'], HRESULT, 'ApplyBackgroundToDocument',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743914), 'propget'], HRESULT, 'TransitionsEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743914), 'propput'], HRESULT, 'TransitionsEnabled',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743916), 'propget'], HRESULT, 'EnableFormulaAutoComplete',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743916), 'propput'], HRESULT, 'EnableFormulaAutoComplete',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743918), 'propget'], HRESULT, 'DeleteConnectorsEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743918), 'propput'], HRESULT, 'DeleteConnectorsEnabled',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743920), 'hidden', 'propget'], HRESULT, 'RecentTemplatesListSize',
              ( ['retval', 'out'], POINTER(c_int), 'pNumFiles' )),
    COMMETHOD([dispid(1610743920), 'hidden', 'propput'], HRESULT, 'RecentTemplatesListSize',
              ( ['in'], c_int, 'pNumFiles' )),
    COMMETHOD([dispid(1610743922)], HRESULT, 'SetRasterExportResolution',
              ( ['in'], VisRasterExportResolution, 'resolution' ),
              ( ['in', 'optional'], c_double, 'Width', 0.0 ),
              ( ['in', 'optional'], c_double, 'Height', 0.0 ),
              ( ['in', 'optional'], VisRasterExportResolutionUnits, 'resolutionUnits' )),
    COMMETHOD([dispid(1610743923)], HRESULT, 'GetRasterExportResolution',
              ( ['out'], POINTER(VisRasterExportResolution), 'pResolution' ),
              ( ['out'], POINTER(c_double), 'pWidth' ),
              ( ['out'], POINTER(c_double), 'pHeight' ),
              ( ['out'], POINTER(VisRasterExportResolutionUnits), 'pResolutionUnits' )),
    COMMETHOD([dispid(1610743924)], HRESULT, 'SetRasterExportSize',
              ( ['in'], VisRasterExportSize, 'size' ),
              ( ['in', 'optional'], c_double, 'Width', 0.0 ),
              ( ['in', 'optional'], c_double, 'Height', 0.0 ),
              ( ['in', 'optional'], VisRasterExportSizeUnits, 'sizeUnits' )),
    COMMETHOD([dispid(1610743925)], HRESULT, 'GetRasterExportSize',
              ( ['out'], POINTER(VisRasterExportSize), 'pSize' ),
              ( ['out'], POINTER(c_double), 'pWidth' ),
              ( ['out'], POINTER(c_double), 'pHeight' ),
              ( ['out'], POINTER(VisRasterExportSizeUnits), 'pSizeUnits' )),
    COMMETHOD([dispid(1610743926), 'propget'], HRESULT, 'RasterExportDataFormat',
              ( ['retval', 'out'], POINTER(VisRasterExportDataFormat), 'pFormat' )),
    COMMETHOD([dispid(1610743926), 'propput'], HRESULT, 'RasterExportDataFormat',
              ( ['in'], VisRasterExportDataFormat, 'pFormat' )),
    COMMETHOD([dispid(1610743928), 'propget'], HRESULT, 'RasterExportDataCompression',
              ( ['retval', 'out'], POINTER(VisRasterExportDataCompression), 'pCompressionType' )),
    COMMETHOD([dispid(1610743928), 'propput'], HRESULT, 'RasterExportDataCompression',
              ( ['in'], VisRasterExportDataCompression, 'pCompressionType' )),
    COMMETHOD([dispid(1610743930), 'propget'], HRESULT, 'RasterExportColorReduction',
              ( ['retval', 'out'], POINTER(VisRasterExportColorReduction), 'pReduction' )),
    COMMETHOD([dispid(1610743930), 'propput'], HRESULT, 'RasterExportColorReduction',
              ( ['in'], VisRasterExportColorReduction, 'pReduction' )),
    COMMETHOD([dispid(1610743932), 'propget'], HRESULT, 'RasterExportColorFormat',
              ( ['retval', 'out'], POINTER(VisRasterExportColorFormat), 'pFormat' )),
    COMMETHOD([dispid(1610743932), 'propput'], HRESULT, 'RasterExportColorFormat',
              ( ['in'], VisRasterExportColorFormat, 'pFormat' )),
    COMMETHOD([dispid(1610743934), 'propget'], HRESULT, 'RasterExportOperation',
              ( ['retval', 'out'], POINTER(VisRasterExportOperation), 'pOperation' )),
    COMMETHOD([dispid(1610743934), 'propput'], HRESULT, 'RasterExportOperation',
              ( ['in'], VisRasterExportOperation, 'pOperation' )),
    COMMETHOD([dispid(1610743936), 'propget'], HRESULT, 'RasterExportRotation',
              ( ['retval', 'out'], POINTER(VisRasterExportRotation), 'pRotation' )),
    COMMETHOD([dispid(1610743936), 'propput'], HRESULT, 'RasterExportRotation',
              ( ['in'], VisRasterExportRotation, 'pRotation' )),
    COMMETHOD([dispid(1610743938), 'propget'], HRESULT, 'RasterExportFlip',
              ( ['retval', 'out'], POINTER(VisRasterExportFlip), 'plFlip' )),
    COMMETHOD([dispid(1610743938), 'propput'], HRESULT, 'RasterExportFlip',
              ( ['in'], VisRasterExportFlip, 'plFlip' )),
    COMMETHOD([dispid(1610743940), 'propget'], HRESULT, 'RasterExportBackgroundColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743940), 'propput'], HRESULT, 'RasterExportBackgroundColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743942), 'propget'], HRESULT, 'RasterExportTransparencyColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743942), 'propput'], HRESULT, 'RasterExportTransparencyColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743944), 'propget'], HRESULT, 'RasterExportUseTransparencyColor',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743944), 'propput'], HRESULT, 'RasterExportUseTransparencyColor',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743946), 'propget'], HRESULT, 'RasterExportQuality',
              ( ['retval', 'out'], POINTER(c_int), 'plQuality' )),
    COMMETHOD([dispid(1610743946), 'propput'], HRESULT, 'RasterExportQuality',
              ( ['in'], c_int, 'plQuality' )),
    COMMETHOD([dispid(1610743948), 'propget'], HRESULT, 'SVGExportFormat',
              ( ['retval', 'out'], POINTER(VisSVGExportFormat), 'plFormat' )),
    COMMETHOD([dispid(1610743948), 'propput'], HRESULT, 'SVGExportFormat',
              ( ['in'], VisSVGExportFormat, 'plFormat' )),
    COMMETHOD([dispid(1610743950), 'propget'], HRESULT, 'EnterCommitsText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pVal' )),
    COMMETHOD([dispid(1610743950), 'propput'], HRESULT, 'EnterCommitsText',
              ( ['in'], VARIANT_BOOL, 'pVal' )),
    COMMETHOD([dispid(1610743952), 'propget'], HRESULT, 'UseLocalUserInfo',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pfUseLocalUserInfo' )),
    COMMETHOD([dispid(1610743952), 'propput'], HRESULT, 'UseLocalUserInfo',
              ( ['in'], VARIANT_BOOL, 'pfUseLocalUserInfo' )),
    COMMETHOD([dispid(1610743954), 'propget'], HRESULT, 'RecentFoldersListSize',
              ( ['retval', 'out'], POINTER(c_int), 'pNumFolders' )),
    COMMETHOD([dispid(1610743954), 'propput'], HRESULT, 'RecentFoldersListSize',
              ( ['in'], c_int, 'pNumFolders' )),
]
################################################################
## code template for IVApplicationSettings implementation
##class IVApplicationSettings_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return RetVal
##    def _set(self, RetVal):
##        '-no docstring-'
##    DrawingAids = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    UserName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return plFormat
##    def _set(self, plFormat):
##        '-no docstring-'
##    SVGExportFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthPointsY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthPointsX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    DrawingPageColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    ZoomOnRoll = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    FullScreenBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCharCount
##    def _set(self, pCharCount):
##        '-no docstring-'
##    StencilCharactersPerLine = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pShow
##    def _set(self, pShow):
##        '-no docstring-'
##    ShowSmartTags = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pNumLevels
##    def _set(self, pNumLevels):
##        '-no docstring-'
##    UndoLevels = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    DeveloperMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pNumFiles
##    def _set(self, pNumFiles):
##        '-no docstring-'
##    RecentFilesListSize = property(_get, _set, doc = _set.__doc__)
##
##    def GetRasterExportSize(self):
##        '-no docstring-'
##        #return pSize, pWidth, pHeight, pSizeUnits
##
##    def _get(self):
##        '-no docstring-'
##        #return pKanaOption
##    def _set(self, pKanaOption):
##        '-no docstring-'
##    KanaFindAndReplace = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return plQuality
##    def _set(self, plQuality):
##        '-no docstring-'
##    RasterExportQuality = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    SmoothDrawing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    UserInitials = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    DrawingBackgroundColorGradient = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pFormatType
##    def _set(self, pFormatType):
##        '-no docstring-'
##    DefaultSaveFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    CenterSelectionOnZoom = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthGeometryX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthGeometryY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pNumFiles
##    def _set(self, pNumFiles):
##        '-no docstring-'
##    RecentTemplatesListSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    PrintPreviewBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def SetRasterExportResolution(self, resolution, Width, Height, resolutionUnits):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pOperation
##    def _set(self, pOperation):
##        '-no docstring-'
##    RasterExportOperation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    ShowMoreShapeHandlesOnHover = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    TransitionsEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    RasterExportTransparencyColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Show
##    def _set(self, Show):
##        '-no docstring-'
##    ShowFileSaveWarnings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pNumFolders
##    def _set(self, pNumFolders):
##        '-no docstring-'
##    RecentFoldersListSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    DrawingBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    EnableAutoConnect = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SATextUI(self):
##        '-no docstring-'
##        #return pSATextUIOption
##
##    def _get(self):
##        '-no docstring-'
##        #return pFormat
##    def _set(self, pFormat):
##        '-no docstring-'
##    RasterExportDataFormat = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pShow
##    def _set(self, pShow):
##        '-no docstring-'
##    ShowChooseDrawingTypePane = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pFormat
##    def _set(self, pFormat):
##        '-no docstring-'
##    RasterExportColorFormat = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeApplicationSettings (51).'
##        #return peType
##
##    def _get(self):
##        '-no docstring-'
##        #return plVal
##    def _set(self, plVal):
##        '-no docstring-'
##    FreeformDrawingSmoothing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pLineCount
##    def _set(self, pLineCount):
##        '-no docstring-'
##    StencilLinesPerMaster = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCompressionType
##    def _set(self, pCompressionType):
##        '-no docstring-'
##    RasterExportDataCompression = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BIDITextUI(self):
##        '-no docstring-'
##        #return pBIDITextUIOption
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    EnableFormulaAutoComplete = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    RasterExportBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    ApplyBackgroundToDocument = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pfUseLocalUserInfo
##    def _set(self, pfUseLocalUserInfo):
##        '-no docstring-'
##    UseLocalUserInfo = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return plFlip
##    def _set(self, plFlip):
##        '-no docstring-'
##    RasterExportFlip = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    StencilTextColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthRulerY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthRulerX = property(_get, _set, doc = _set.__doc__)
##
##    def GetRasterExportResolution(self):
##        '-no docstring-'
##        #return pResolution, pWidth, pHeight, pResolutionUnits
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    StencilBackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    ShowShapeSearchPane = property(_get, _set, doc = _set.__doc__)
##
##    def SetRasterExportSize(self, size, Width, Height, sizeUnits):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pAsianTextUIOption
##    def _set(self, pAsianTextUIOption):
##        '-no docstring-'
##    AsianTextUI = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthGuidesY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthGuidesX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    ApplyThemesOnShapeAdd = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pReduction
##    def _set(self, pReduction):
##        '-no docstring-'
##    RasterExportColorReduction = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    DeleteConnectorsEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pRotation
##    def _set(self, pRotation):
##        '-no docstring-'
##    RasterExportRotation = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def KashidaTextUI(self):
##        '-no docstring-'
##        #return pKashidaTextUIOption
##
##    def _get(self):
##        '-no docstring-'
##        #return pTextQuality
##    def _set(self, pTextQuality):
##        '-no docstring-'
##    TextDisplayQuality = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    ConnectorSplittingEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthGridX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthGridY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Show
##    def _set(self, Show):
##        '-no docstring-'
##    ShowFileOpenWarnings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pComplexTextUIOption
##    def _set(self, pComplexTextUIOption):
##        '-no docstring-'
##    ComplexTextUI = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return plVal
##    def _set(self, plVal):
##        '-no docstring-'
##    FreeformDrawingPrecision = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    EnterCommitsText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pVal
##    def _set(self, pVal):
##        '-no docstring-'
##    RasterExportUseTransparencyColor = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pShow
##    def _set(self, pShow):
##        '-no docstring-'
##    ShowStartupDialog = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthExtensionsX = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return strength
##    def _set(self, strength):
##        '-no docstring-'
##    SnapStrengthExtensionsY = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    HigherQualityShapeDisplay = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    StencilBackgroundColorGradient = property(_get, _set, doc = _set.__doc__)
##

class IVMasterShortcuts(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0726-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOMASTERSHORTCUTS = POINTER(IVMasterShortcuts)

# values for enumeration 'VisToolbarFlavors'
visToolBarNone = -1
visToolBarOn = 0
visToolBarMSOffice = 0
visToolBarLotusSS = 0
VisToolbarFlavors = c_int # enum
class Addon(CoClass):
    u'An operation implemented by an EXE or VSL that can be invoked from a Visio Application.'
    _reg_clsid_ = GUID('{000D0A13-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVAddon(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0718-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Addon._com_interfaces_ = [IVAddon]

IVPath._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypePath (41).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(999), 'hidden', 'propget'], HRESULT, 'Item16',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCurve)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Closed',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5)], HRESULT, 'Points',
              ( ['in'], c_double, 'Tolerance' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Path is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCurve)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVPath implementation
##class IVPath_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, Index):
##        u'The first item in a Path is item 1.'
##        #return lpdispRet
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Points(self, Tolerance):
##        '-no docstring-'
##        #return xyArray
##
##    @property
##    def Closed(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Item16(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypePath (41).'
##        #return lpi2Ret
##


# values for enumeration 'VisConnectorEnds'
visConnectorBeginpoint = 0
visConnectorEndPoint = 1
visConnectorBothEnds = 2
VisConnectorEnds = c_int # enum
LPVISIOROW = POINTER(IVRow)

# values for enumeration 'VisBoundingBoxArgs'
visBBoxUprightWH = 1
visBBoxUprightText = 2
visBBoxExtents = 4
visBBoxIncludeHidden = 16
visBBoxIgnoreVisible = 32
visBBoxIncludeDataGraphics = 64
visBBoxIncludeGuides = 4096
visBBoxDrawingCoords = 8192
visBBoxNoNonPrint = 16384
VisBoundingBoxArgs = c_int # enum
tagVisBoundingBoxArgs = VisBoundingBoxArgs
class IVPage(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0709-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVDocuments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0706-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVWindows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0711-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVUIObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0202-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVAddons(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0719-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']

# values for enumeration 'VisOnComponentEnterCodes'
visComponentStateModal = 1
visModalDeferEvents = 65536
visModalNoBeforeAfter = 131072
visModalDontBlockMessages = 262144
visModalDisableVisiosFrame = 524288
VisOnComponentEnterCodes = c_int # enum

# values for enumeration 'VisZoomBehavior'
visZoomNone = 0
visZoomInPlaceContainer = 1
visZoomVisio = 2
visZoomVisioExact = 4
VisZoomBehavior = c_int # enum

# values for enumeration 'VisRibbonXModes'
visRXModeNone = 0
visRXModeDrawing = 1
visRXModeStencil = 2
visRXModePrintPreview = 4
VisRibbonXModes = c_int # enum

# values for enumeration 'VisBuiltInStencilTypes'
visBuiltInStencilBackgrounds = 0
visBuiltInStencilBorders = 1
visBuiltInStencilContainers = 2
visBuiltInStencilCallouts = 3
visBuiltInStencilLegends = 4
VisBuiltInStencilTypes = c_int # enum

# values for enumeration 'VisMeasurementSystem'
visMSDefault = 0
visMSMetric = 1
visMSUS = 2
VisMeasurementSystem = c_int # enum

# values for enumeration 'VisEdition'
visEditionStandard = 0
visEditionProfessional = 1
visEditionPremium = 2
VisEdition = c_int # enum
IVApplication._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ActiveDocument',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ActivePage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ActiveWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Documents',
              ( ['retval', 'out'], POINTER(POINTER(IVDocuments)), 'lpdispRet' )),
    COMMETHOD([dispid(5), helpstring(u'Returns visObjTypeApp (3).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'OnDataChangeDelay',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'OnDataChangeDelay',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ProcessID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(9)], HRESULT, 'Quit'),
    COMMETHOD([dispid(10)], HRESULT, 'Redo'),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'ScreenUpdating',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'ScreenUpdating',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13)], HRESULT, 'Undo'),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Version',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(15), 'hidden', 'propget'], HRESULT, 'WindowHandle',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Windows',
              ( ['retval', 'out'], POINTER(POINTER(IVWindows)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Language',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'IsVisio16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'IsVisio32',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'WindowHandle32',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(20), 'hidden', 'propget'], HRESULT, 'InstanceHandle',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'InstanceHandle32',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'BuiltInMenus',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'BuiltInToolbars',
              ( ['in'], c_short, 'fIgnored' ),
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'CustomMenus',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([dispid(25)], HRESULT, 'SetCustomMenus',
              ( ['in'], POINTER(IVUIObject), 'MenusObject' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'CustomMenusFile',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'CustomMenusFile',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(27)], HRESULT, 'ClearCustomMenus'),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'CustomToolbars',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([dispid(29)], HRESULT, 'SetCustomToolbars',
              ( ['in'], POINTER(IVUIObject), 'ToolbarsObject' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'CustomToolbarsFile',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'CustomToolbarsFile',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(31)], HRESULT, 'ClearCustomToolbars'),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'AddonPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(32), 'propput'], HRESULT, 'AddonPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'DrawingPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(33), 'propput'], HRESULT, 'DrawingPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(34), 'hidden', 'propget'], HRESULT, 'FilterPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(34), 'hidden', 'propput'], HRESULT, 'FilterPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'HelpPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(35), 'propput'], HRESULT, 'HelpPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'StartupPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'StartupPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'StencilPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(37), 'propput'], HRESULT, 'StencilPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(38), 'propget'], HRESULT, 'TemplatePaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(38), 'propput'], HRESULT, 'TemplatePaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(39), 'propget'], HRESULT, 'UserName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(39), 'propput'], HRESULT, 'UserName',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(40), 'propget'], HRESULT, 'PromptForSummary',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(40), 'propput'], HRESULT, 'PromptForSummary',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'Addons',
              ( ['retval', 'out'], POINTER(POINTER(IVAddons)), 'lpdispRet' )),
    COMMETHOD([dispid(42), 'hidden'], HRESULT, 'SaveWorkspaceAs',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(43)], HRESULT, 'DoCmd',
              ( ['in'], c_short, 'CommandID' )),
    COMMETHOD([dispid(44), helpstring(u'ProfileName is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'ProfileName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(45), 'propget'], HRESULT, 'EventInfo',
              ( ['in'], c_int, 'eventSeqNum' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(46), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'Active',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(49), 'propget'], HRESULT, 'DeferRecalc',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(49), 'propput'], HRESULT, 'DeferRecalc',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'AlertResponse',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(50), 'propput'], HRESULT, 'AlertResponse',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(51), 'propget'], HRESULT, 'ShowProgress',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(51), 'propput'], HRESULT, 'ShowProgress',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(52), helpstring(u'Interface returned is VBIDE.VBE.'), 'propget'], HRESULT, 'Vbe',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(53), helpstring(u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'), 'hidden', 'propget'], HRESULT, 'ShowMenus',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(53), helpstring(u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'), 'hidden', 'propput'], HRESULT, 'ShowMenus',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(54), helpstring(u'Superseded by App.ShowToolbar as of Visio 5.0.'), 'hidden', 'propget'], HRESULT, 'ToolbarStyle',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(54), helpstring(u'Superseded by App.ShowToolbar as of Visio 5.0.'), 'hidden', 'propput'], HRESULT, 'ToolbarStyle',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'ShowStatusBar',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(55), 'propput'], HRESULT, 'ShowStatusBar',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'EventsEnabled',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(56), 'propput'], HRESULT, 'EventsEnabled',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(57)], HRESULT, 'FormatResult',
              ( ['in'], VARIANT, 'StringOrNumber' ),
              ( ['in'], VARIANT, 'UnitsIn' ),
              ( ['in'], VARIANT, 'UnitsOut' ),
              ( ['in'], BSTR, 'Format' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(58)], HRESULT, 'ConvertResult',
              ( ['in'], VARIANT, 'StringOrNumber' ),
              ( ['in'], VARIANT, 'UnitsIn' ),
              ( ['in'], VARIANT, 'UnitsOut' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(60)], HRESULT, 'EnumDirectories',
              ( ['in'], BSTR, 'PathsString' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'TraceFlags',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(61), 'propput'], HRESULT, 'TraceFlags',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(62)], HRESULT, 'PurgeUndo'),
    COMMETHOD([dispid(63)], HRESULT, 'QueueMarkerEvent',
              ( ['in'], BSTR, 'ContextString' ),
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(64), helpstring(u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.'), 'propget'], HRESULT, 'ShowToolbar',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(64), helpstring(u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.'), 'propput'], HRESULT, 'ShowToolbar',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'LiveDynamics',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(65), 'propput'], HRESULT, 'LiveDynamics',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'AutoLayout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(66), 'propput'], HRESULT, 'AutoLayout',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(67), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(67), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(68)], HRESULT, 'BeginUndoScope',
              ( ['in'], BSTR, 'bstrUndoScopeName' ),
              ( ['retval', 'out'], POINTER(c_int), 'pnScopeID' )),
    COMMETHOD([dispid(69)], HRESULT, 'EndUndoScope',
              ( ['in'], c_int, 'nScopeID' ),
              ( ['in'], VARIANT_BOOL, 'bCommit' )),
    COMMETHOD([dispid(70)], HRESULT, 'AddUndoUnit',
              ( ['in'], POINTER(IUnknown), 'pUndoUnit' )),
    COMMETHOD([dispid(71), 'propget'], HRESULT, 'CommandLine',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCmdLine' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'IsUndoingOrRedoing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbInUndoOrRedo' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'CurrentScope',
              ( ['retval', 'out'], POINTER(c_int), 'pnCmdID' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'IsInScope',
              ( ['in'], c_int, 'nCmdID' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbInScope' )),
    COMMETHOD([dispid(75), helpstring(u'Collection of COM Addins that are registered.'), 'hidden', 'propget'], HRESULT, 'old_Addins',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(76), helpstring(u'ProductName is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'ProductName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(77), 'propget'], HRESULT, 'UndoEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(77), 'propput'], HRESULT, 'UndoEnabled',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(78), 'propget'], HRESULT, 'ShowChanges',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(78), 'propput'], HRESULT, 'ShowChanges',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(79), 'propget'], HRESULT, 'TypelibMajorVersion',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(80), 'propget'], HRESULT, 'TypelibMinorVersion',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(81), 'propget'], HRESULT, 'AutoRecoverInterval',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(81), 'propput'], HRESULT, 'AutoRecoverInterval',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(1610743918), 'propget'], HRESULT, 'InhibitSelectChange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743918), 'propput'], HRESULT, 'InhibitSelectChange',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743920), 'propget'], HRESULT, 'ActivePrinter',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPrinterName' )),
    COMMETHOD([dispid(1610743920), 'propput'], HRESULT, 'ActivePrinter',
              ( ['in'], BSTR, 'pbstrPrinterName' )),
    COMMETHOD([dispid(1610743922), helpstring(u'Use the elements returned in this array with the ActivePrinter property.'), 'propget'], HRESULT, 'AvailablePrinters',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(BSTR)), 'NamesArray' )),
    COMMETHOD([dispid(1610743923), helpstring(u'Renames the currently open top level undo scope such that bstrScopeName shows up in the do menu item. Raises an exception if not in an open scope.')], HRESULT, 'RenameCurrentScope',
              ( ['in'], BSTR, 'bstrScopeName' )),
    COMMETHOD([dispid(1610743924)], HRESULT, 'InvokeHelp',
              ( ['in'], BSTR, 'bstrHelpFileName' ),
              ( ['in'], c_int, 'Command' ),
              ( ['in'], c_int, 'Data' )),
    COMMETHOD([dispid(1610743925), helpstring(u'Interface returned is Office.CommandBars.'), 'propget'], HRESULT, 'CommandBars',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743926), 'propget'], HRESULT, 'Build',
              ( ['retval', 'out'], POINTER(c_int), 'pnBuild' )),
    COMMETHOD([dispid(1610743927), helpstring(u'Interface returned is Office.COMAddIns.'), 'propget'], HRESULT, 'COMAddIns',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743928), 'hidden', 'propget'], HRESULT, 'DefaultPageUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743928), 'hidden', 'propput'], HRESULT, 'DefaultPageUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743930), 'propget'], HRESULT, 'DefaultTextUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743930), 'propput'], HRESULT, 'DefaultTextUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743932), 'propget'], HRESULT, 'DefaultAngleUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743932), 'propput'], HRESULT, 'DefaultAngleUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743934), 'propget'], HRESULT, 'DefaultDurationUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743934), 'propput'], HRESULT, 'DefaultDurationUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743936), 'propget'], HRESULT, 'FullBuild',
              ( ['retval', 'out'], POINTER(c_int), 'pnFullBuild' )),
    COMMETHOD([dispid(1610743937)], HRESULT, 'OnComponentEnterState',
              ( ['in'], VisOnComponentEnterCodes, 'uStateID' ),
              ( ['in'], VARIANT_BOOL, 'bEnter' )),
    COMMETHOD([dispid(1610743938), 'propget'], HRESULT, 'VBAEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743939), 'propget'], HRESULT, 'DefaultZoomBehavior',
              ( ['retval', 'out'], POINTER(VisZoomBehavior), 'pnZoomBehavior' )),
    COMMETHOD([dispid(1610743939), 'propput'], HRESULT, 'DefaultZoomBehavior',
              ( ['in'], VisZoomBehavior, 'pnZoomBehavior' )),
    COMMETHOD([dispid(1610743941), 'hidden'], HRESULT, 'GetUsageStatistic',
              ( ['in'], c_int, 'nWhichStatistic' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvStatistic' )),
    COMMETHOD([dispid(1610743942), helpstring(u'Returns font Visio is using in its dialogs.'), 'propget'], HRESULT, 'DialogFont',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IFontDisp)), 'ppFontDisp' )),
    COMMETHOD([dispid(1610743943), 'propget'], HRESULT, 'LanguageHelp',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743944), 'propget'], HRESULT, 'Window',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743945), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD([dispid(1610743946), 'propget'], HRESULT, 'ConnectorToolDataObject',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743947), 'propget'], HRESULT, 'Settings',
              ( ['retval', 'out'], POINTER(POINTER(IVApplicationSettings)), 'lpSettingRet' )),
    COMMETHOD([dispid(1610743948)], HRESULT, 'FormatResultEx',
              ( ['in'], VARIANT, 'StringOrNumber' ),
              ( ['in'], VARIANT, 'UnitsIn' ),
              ( ['in'], VARIANT, 'UnitsOut' ),
              ( ['in'], BSTR, 'Format' ),
              ( ['in', 'optional'], c_int, 'LangID', 0 ),
              ( ['in', 'optional'], c_int, 'CalendarID', -1 ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610743949), 'propget'], HRESULT, 'SaveAsWebObject',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743950), 'hidden', 'propget'], HRESULT, 'MsoDebugOptions',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743951), 'propget'], HRESULT, 'MyShapesPath',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610743951), 'propput'], HRESULT, 'MyShapesPath',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(1610743953), 'propget'], HRESULT, 'DefaultRectangleDataObject',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lpunkRet' )),
    COMMETHOD([dispid(1610743954), 'propget'], HRESULT, 'DataFeaturesEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743955), helpstring(u'Interface returned is Office.LanguageSettings.'), 'propget'], HRESULT, 'LanguageSettings',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743956), 'propget'], HRESULT, 'Assistance',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743957)], HRESULT, 'RegisterRibbonX',
              ( ['in'], POINTER(IUnknown), 'SourceAddOn' ),
              ( ['in'], POINTER(IVDocument), 'TargetDocument' ),
              ( ['in'], VisRibbonXModes, 'TargetModes' ),
              ( ['in'], BSTR, 'FriendlyName' )),
    COMMETHOD([dispid(1610743958)], HRESULT, 'UnregisterRibbonX',
              ( ['in'], POINTER(IUnknown), 'SourceAddOn' ),
              ( ['in'], POINTER(IVDocument), 'TargetDocument' )),
    COMMETHOD([dispid(1610743959)], HRESULT, 'GetPreviewEnabled',
              ( ['in'], BSTR, 'GalleryName' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743960)], HRESULT, 'SetPreviewEnabled',
              ( ['in'], BSTR, 'GalleryName' ),
              ( [], VARIANT_BOOL, 'OnOrOff' )),
    COMMETHOD([dispid(1610743961)], HRESULT, 'GetBuiltInStencilFile',
              ( ['in'], VisBuiltInStencilTypes, 'StencilType' ),
              ( ['in'], VisMeasurementSystem, 'MeasurementSystem' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610743962)], HRESULT, 'GetCustomStencilFile',
              ( ['in'], VisBuiltInStencilTypes, 'StencilType' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610743963), 'propget'], HRESULT, 'DeferRelationshipRecalc',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743963), 'propput'], HRESULT, 'DeferRelationshipRecalc',
              ( ['in'], VARIANT_BOOL, 'lpi2Ret' )),
    COMMETHOD([dispid(1610743965), 'propget'], HRESULT, 'CurrentEdition',
              ( ['retval', 'out'], POINTER(VisEdition), 'pbRet' )),
    COMMETHOD([dispid(1610743966), 'propget'], HRESULT, 'InstanceHandle64',
              ( ['retval', 'out'], POINTER(c_longlong), 'lpi8Ret' )),
]
################################################################
## code template for IVApplication implementation
##class IVApplication_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    LiveDynamics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrPrinterName
##    def _set(self, pbstrPrinterName):
##        '-no docstring-'
##    ActivePrinter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InstanceHandle32(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def ClearCustomMenus(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TypelibMajorVersion(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    AutoLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    TraceFlags = property(_get, _set, doc = _set.__doc__)
##
##    def GetBuiltInStencilFile(self, StencilType, MeasurementSystem):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def Undo(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ActiveDocument(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def IsUndoingOrRedoing(self):
##        '-no docstring-'
##        #return pbInUndoOrRedo
##
##    def _get(self):
##        '-no docstring-'
##        #return pnZoomBehavior
##    def _set(self, pnZoomBehavior):
##        '-no docstring-'
##    DefaultZoomBehavior = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowProgress = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeApp (3).'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    AutoRecoverInterval = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CommandLine(self):
##        '-no docstring-'
##        #return pbstrCmdLine
##
##    def InvokeHelp(self, bstrHelpFileName, Command, Data):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsInScope(self, nCmdID):
##        '-no docstring-'
##        #return pbInScope
##
##    def BeginUndoScope(self, bstrUndoScopeName):
##        '-no docstring-'
##        #return pnScopeID
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    UndoEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    CustomToolbarsFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Superseded by App.ShowToolbar as of Visio 5.0.'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        u'Superseded by App.ShowToolbar as of Visio 5.0.'
##    ToolbarStyle = property(_get, _set, doc = _set.__doc__)
##
##    def SetCustomMenus(self, MenusObject):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ScreenUpdating = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.'
##    ShowToolbar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultAngleUnits = property(_get, _set, doc = _set.__doc__)
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Documents(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    StencilPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ConnectorToolDataObject(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    HelpPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Version(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def CustomMenus(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Build(self):
##        '-no docstring-'
##        #return pnBuild
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    MyShapesPath = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WindowHandle32(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def DefaultRectangleDataObject(self):
##        '-no docstring-'
##        #return lpunkRet
##
##    def SaveWorkspaceAs(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def SetPreviewEnabled(self, GalleryName, OnOrOff):
##        '-no docstring-'
##        #return 
##
##    @property
##    def COMAddIns(self):
##        u'Interface returned is Office.COMAddIns.'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    DeferRelationshipRecalc = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Settings(self):
##        '-no docstring-'
##        #return lpSettingRet
##
##    @property
##    def CurrentEdition(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def LanguageHelp(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    DeferRecalc = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EventInfo(self, eventSeqNum):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def OnComponentEnterState(self, uStateID, bEnter):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BuiltInToolbars(self, fIgnored):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ProductName(self):
##        u'ProductName is obsolete as of Visio 2000.'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultTextUnits = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProfileName(self):
##        u'ProfileName is obsolete as of Visio 2000.'
##        #return lpbstrRet
##
##    @property
##    def Assistance(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def FormatResultEx(self, StringOrNumber, UnitsIn, UnitsOut, Format, LangID, CalendarID):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def GetCustomStencilFile(self, StencilType):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    UserName = property(_get, _set, doc = _set.__doc__)
##
##    def FormatResult(self, StringOrNumber, UnitsIn, UnitsOut, Format):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    DrawingPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsVisio32(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def MsoDebugOptions(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CustomToolbars(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetUsageStatistic(self, nWhichStatistic):
##        '-no docstring-'
##        #return pvStatistic
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    CustomMenusFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    AddonPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultDurationUnits = property(_get, _set, doc = _set.__doc__)
##
##    def UnregisterRibbonX(self, SourceAddOn, TargetDocument):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    StartupPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def TypelibMinorVersion(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def LanguageSettings(self):
##        u'Interface returned is Office.LanguageSettings.'
##        #return lpdispRet
##
##    @property
##    def ActivePage(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def InstanceHandle64(self):
##        '-no docstring-'
##        #return lpi8Ret
##
##    @property
##    def Language(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    FilterPaths = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    OnDataChangeDelay = property(_get, _set, doc = _set.__doc__)
##
##    def PurgeUndo(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Addons(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def QueueMarkerEvent(self, ContextString):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowStatusBar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    TemplatePaths = property(_get, _set, doc = _set.__doc__)
##
##    def SetCustomToolbars(self, ToolbarsObject):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Window(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Redo(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CommandBars(self):
##        u'Interface returned is Office.CommandBars.'
##        #return lpdispRet
##
##    @property
##    def SaveAsWebObject(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ProcessID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def IsVisio16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'
##    ShowMenus = property(_get, _set, doc = _set.__doc__)
##
##    def ClearCustomToolbars(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def WindowHandle(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def VBAEnabled(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def CurrentScope(self):
##        '-no docstring-'
##        #return pnCmdID
##
##    @property
##    def FullBuild(self):
##        '-no docstring-'
##        #return pnFullBuild
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    ShowChanges = property(_get, _set, doc = _set.__doc__)
##
##    def RegisterRibbonX(self, SourceAddOn, TargetDocument, TargetModes, FriendlyName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BuiltInMenus(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def RenameCurrentScope(self, bstrScopeName):
##        u'Renames the currently open top level undo scope such that bstrScopeName shows up in the do menu item. Raises an exception if not in an open scope.'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultPageUnits = property(_get, _set, doc = _set.__doc__)
##
##    def EnumDirectories(self, PathsString):
##        '-no docstring-'
##        #return NameArray
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    PromptForSummary = property(_get, _set, doc = _set.__doc__)
##
##    def ConvertResult(self, StringOrNumber, UnitsIn, UnitsOut):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    InhibitSelectChange = property(_get, _set, doc = _set.__doc__)
##
##    def EndUndoScope(self, nScopeID, bCommit):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    @property
##    def Vbe(self):
##        u'Interface returned is VBIDE.VBE.'
##        #return lpdispRet
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DoCmd(self, CommandID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DataFeaturesEnabled(self):
##        '-no docstring-'
##        #return pbRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    EventsEnabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DialogFont(self):
##        u'Returns font Visio is using in its dialogs.'
##        #return ppFontDisp
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    AlertResponse = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def old_Addins(self):
##        u'Collection of COM Addins that are registered.'
##        #return lpdispRet
##
##    @property
##    def InstanceHandle(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetPreviewEnabled(self, GalleryName):
##        '-no docstring-'
##        #return pbRet
##
##    def AddUndoUnit(self, pUndoUnit):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AvailablePrinters(self):
##        u'Use the elements returned in this array with the ActivePrinter property.'
##        #return NamesArray
##

tagVisCharsBias = VisCharsBias
class IVMovedSelectionEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0738-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOMOVEDSELECTIONEVENT = POINTER(IVMovedSelectionEvent)

# values for enumeration 'VisLayoutIncrementalType'
visLayoutIncrAlign = 1
visLayoutIncrSpace = 2
VisLayoutIncrementalType = c_int # enum

# values for enumeration 'VisDrawSplineFlags'
visSplinePeriodic = 1
visSplineDoCircles = 2
visSplineAbrupt = 4
visSpline1D = 8
visPolyline1D = 8
visPolyarcs = 256
VisDrawSplineFlags = c_int # enum
tagVisDrawSplineFlags = VisDrawSplineFlags
class IVDataConnection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0730-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVDataConnection._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'DataConnectionID' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'ConnectionString',
              ( ['retval', 'out'], POINTER(BSTR), 'ConnectionString' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'ConnectionString',
              ( ['in'], BSTR, 'ConnectionString' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'FileName',
              ( ['retval', 'out'], POINTER(BSTR), 'FileName' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Timeout',
              ( ['retval', 'out'], POINTER(c_int), 'Timeout' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Timeout',
              ( ['in'], c_int, 'Timeout' )),
]
################################################################
## code template for IVDataConnection implementation
##class IVDataConnection_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return ConnectionString
##    def _set(self, ConnectionString):
##        '-no docstring-'
##    ConnectionString = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FileName(self):
##        '-no docstring-'
##        #return FileName
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return Timeout
##    def _set(self, Timeout):
##        '-no docstring-'
##    Timeout = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return DataConnectionID
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

class IVDispExtender(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Dispatch interface of extensions Visio gives to a control contained in a Visio Document.'
    _iid_ = GUID('{000D0D0F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
class IVMaster(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0707-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVLayer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0712-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVDispExtender._disp_methods_ = [
    DISPMETHOD([dispid(-2147418112), 'propget'], BSTR, 'Name'),
    DISPMETHOD([dispid(-2147418112), 'propput'], None, 'Name',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-802), 'propget'], POINTER(IUnknown), 'Object'),
    DISPMETHOD([dispid(-2147418104), 'propget'], POINTER(IUnknown), 'Parent'),
    DISPMETHOD([dispid(-801), 'hidden'], None, 'Delete'),
    DISPMETHOD([dispid(-804), 'hidden'], None, 'Index'),
    DISPMETHOD([dispid(-2147417856), 'propget'], POINTER(IVShape), 'Shape'),
    DISPMETHOD([dispid(-2147417811), 'hidden'], None, 'VoidGroup'),
    DISPMETHOD([dispid(-2147417810)], None, 'BringForward'),
    DISPMETHOD([dispid(-2147417809)], None, 'BringToFront'),
    DISPMETHOD([dispid(-2147417808)], None, 'ConvertToGroup'),
    DISPMETHOD([dispid(-2147417804)], None, 'SendBackward'),
    DISPMETHOD([dispid(-2147417803)], None, 'SendToBack'),
    DISPMETHOD([dispid(-2147417812), 'propget'], POINTER(IVDocument), 'Document'),
    DISPMETHOD([dispid(-2147417800), 'propget'], POINTER(IDispatch), 'ShapeParent'),
    DISPMETHOD([dispid(-2147417855), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], POINTER(IVApplication), 'Application'),
    DISPMETHOD([dispid(-2147417835), 'propget'], POINTER(IVMaster), 'Master'),
    DISPMETHOD([dispid(-2147417843), 'propget'], POINTER(IVCell), 'Cells',
               ( ['in'], BSTR, 'localeSpecificCellName' )),
    DISPMETHOD([dispid(-2147417842), 'propget'], POINTER(IVCell), 'CellsSRC',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' ),
               ( ['in'], c_short, 'Column' )),
    DISPMETHOD([dispid(-2147417841), 'propget'], BSTR, 'Data1'),
    DISPMETHOD([dispid(-2147417841), 'propput'], None, 'Data1',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417840), 'propget'], BSTR, 'Data2'),
    DISPMETHOD([dispid(-2147417840), 'propput'], None, 'Data2',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417839), 'propget'], BSTR, 'Data3'),
    DISPMETHOD([dispid(-2147417839), 'propput'], None, 'Data3',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417838), 'propget'], BSTR, 'Help'),
    DISPMETHOD([dispid(-2147417838), 'propput'], None, 'Help',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417852), 'propget'], BSTR, 'NameID'),
    DISPMETHOD([dispid(-2147417847)], None, 'ShapeCopy'),
    DISPMETHOD([dispid(-2147417846)], None, 'ShapeCut'),
    DISPMETHOD([dispid(-2147417845)], None, 'ShapeDelete'),
    DISPMETHOD([dispid(-2147417844), 'hidden'], None, 'VoidShapeDuplicate'),
    DISPMETHOD([dispid(-2147417832), 'propget'], c_short, 'RowCount',
               ( ['in'], c_short, 'Section' )),
    DISPMETHOD([dispid(-2147417831)], c_short, 'AddSection',
               ( ['in'], c_short, 'Section' )),
    DISPMETHOD([dispid(-2147417830)], None, 'DeleteSection',
               ( ['in'], c_short, 'Section' )),
    DISPMETHOD([dispid(-2147417829)], c_short, 'AddRow',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' ),
               ( ['in'], c_short, 'RowTag' )),
    DISPMETHOD([dispid(-2147417828)], None, 'DeleteRow',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' )),
    DISPMETHOD([dispid(-2147417827), 'propget'], c_short, 'RowsCellCount',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' )),
    DISPMETHOD([dispid(-2147417826), 'propget'], c_short, 'RowType',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' )),
    DISPMETHOD([dispid(-2147417826), 'propput'], None, 'RowType',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' ),
               ( ['in'], c_short, 'rhs' )),
    DISPMETHOD([dispid(-2147417825)], None, 'SetCenter',
               ( ['in'], c_double, 'xPos' ),
               ( ['in'], c_double, 'yPos' )),
    DISPMETHOD([dispid(-2147417822), 'propget'], POINTER(IVConnects), 'Connects'),
    DISPMETHOD([dispid(-2147417821), 'hidden', 'propget'], c_short, 'ShapeIndex16'),
    DISPMETHOD([dispid(-2147417820), 'propget'], BSTR, 'Style'),
    DISPMETHOD([dispid(-2147417820), 'propput'], None, 'Style',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417816), 'propput'], None, 'StyleKeepFmt',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417819), 'propget'], BSTR, 'LineStyle'),
    DISPMETHOD([dispid(-2147417819), 'propput'], None, 'LineStyle',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417815), 'propput'], None, 'LineStyleKeepFmt',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417818), 'propget'], BSTR, 'FillStyle'),
    DISPMETHOD([dispid(-2147417818), 'propput'], None, 'FillStyle',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417814), 'propput'], None, 'FillStyleKeepFmt',
               ( ['in'], BSTR, 'rhs' )),
    DISPMETHOD([dispid(-2147417799)], None, 'Export',
               ( ['in'], BSTR, 'FileName' )),
    DISPMETHOD([dispid(-2147417795), 'propget'], BSTR, 'UniqueID',
               ( ['in'], c_short, 'fUniqueID' )),
    DISPMETHOD([dispid(-2147417794), 'propget'], POINTER(IVPage), 'ContainingPage'),
    DISPMETHOD([dispid(-2147417793), 'propget'], POINTER(IVMaster), 'ContainingMaster'),
    DISPMETHOD([dispid(-2147417792), 'propget'], POINTER(IVShape), 'ContainingShape'),
    DISPMETHOD([dispid(-2147417791), 'propget'], c_short, 'SectionExists',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'fExistsLocally' )),
    DISPMETHOD([dispid(-2147417790), 'propget'], c_short, 'RowExists',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' ),
               ( ['in'], c_short, 'fExistsLocally' )),
    DISPMETHOD([dispid(-2147417789), 'propget'], c_short, 'CellExists',
               ( ['in'], BSTR, 'localeSpecificCellName' ),
               ( ['in'], c_short, 'fExistsLocally' )),
    DISPMETHOD([dispid(-2147417788), 'propget'], c_short, 'CellsSRCExists',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' ),
               ( ['in'], c_short, 'Column' ),
               ( ['in'], c_short, 'fExistsLocally' )),
    DISPMETHOD([dispid(-2147417787), 'propget'], c_short, 'LayerCount'),
    DISPMETHOD([dispid(-2147417786), 'propget'], POINTER(IVLayer), 'Layer',
               ( ['in'], c_short, 'Index' )),
    DISPMETHOD([dispid(-2147417785)], c_short, 'AddNamedRow',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], BSTR, 'RowName' ),
               ( ['in'], c_short, 'RowTag' )),
    DISPMETHOD([dispid(-2147417784)], c_short, 'AddRows',
               ( ['in'], c_short, 'Section' ),
               ( ['in'], c_short, 'Row' ),
               ( ['in'], c_short, 'RowTag' ),
               ( ['in'], c_short, 'RowCount' )),
    DISPMETHOD([dispid(-2147417783), 'propget'], POINTER(IVEventList), 'EventList'),
    DISPMETHOD([dispid(-2147417782), 'propget'], c_short, 'PersistsEvents'),
    DISPMETHOD([dispid(-2147417770), 'propget'], BSTR, 'ClassID'),
    DISPMETHOD([dispid(-2147417768), 'propget'], POINTER(IDispatch), 'ShapeObject'),
    DISPMETHOD([dispid(-2147417766)], POINTER(IVWindow), 'OpenSheetWindow'),
    DISPMETHOD([dispid(-2147417765), 'hidden', 'propget'], c_short, 'ShapeID16'),
    DISPMETHOD([dispid(-2147417763)], None, 'GetFormulas',
               ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
               ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    DISPMETHOD([dispid(-2147417762)], None, 'GetResults',
               ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
               ( ['in'], c_short, 'Flags' ),
               ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
               ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' )),
    DISPMETHOD([dispid(-2147417761)], c_short, 'SetFormulas',
               ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
               ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' ),
               ( ['in'], c_short, 'Flags' )),
    DISPMETHOD([dispid(-2147417760)], c_short, 'SetResults',
               ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
               ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
               ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' ),
               ( ['in'], c_short, 'Flags' )),
    DISPMETHOD([dispid(-2147417759), 'propget'], POINTER(IVConnects), 'FromConnects'),
    DISPMETHOD([dispid(-2147417757)], None, 'BoundingBox',
               ( ['in'], c_short, 'Flags' ),
               ( ['out'], POINTER(c_double), 'lpr8Left' ),
               ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
               ( ['out'], POINTER(c_double), 'lpr8Right' ),
               ( ['out'], POINTER(c_double), 'lpr8Top' )),
    DISPMETHOD([dispid(-2147417756)], c_short, 'HitTest',
               ( ['in'], c_double, 'xPos' ),
               ( ['in'], c_double, 'yPos' ),
               ( ['in'], c_double, 'Tolerance' )),
    DISPMETHOD([dispid(-2147417755), 'propget'], POINTER(IVHyperlink), 'Hyperlink'),
    DISPMETHOD([dispid(-2147417754), 'propget'], BSTR, 'ProgID'),
    DISPMETHOD([dispid(-2147417753), 'propget'], c_short, 'ObjectIsInherited'),
    DISPMETHOD([dispid(-2147417749), 'propget'], c_int, 'ShapeID'),
    DISPMETHOD([dispid(-2147417748), 'propget'], c_int, 'ShapeIndex'),
    DISPMETHOD([dispid(-2147417726), helpstring(u'Returns the created group shape')], POINTER(IVShape), 'Group'),
    DISPMETHOD([dispid(-2147417725), helpstring(u'Returns the duplicated shape')], POINTER(IVShape), 'ShapeDuplicate'),
    DISPMETHOD([dispid(-2147417724)], None, 'VisualBoundingBox',
               ( ['in'], c_short, 'Flags' ),
               ( ['out'], POINTER(c_double), 'lpr8Left' ),
               ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
               ( ['out'], POINTER(c_double), 'lpr8Right' ),
               ( ['out'], POINTER(c_double), 'lpr8Top' )),
]
tagVisObjectTypes = VisObjectTypes

# values for enumeration 'VisSelectArgs'
visDeselect = 1
visSelect = 2
visSubSelect = 3
visSelectAll = 4
visDeselectAll = 256
VisSelectArgs = c_int # enum
tagVisSelectArgs = VisSelectArgs
class IEnumVToolbarSet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0263-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

class IVToolbarSet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0262-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IEnumVToolbarSet._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVToolbarSet)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVToolbarSet)), 'ppenm' )),
]
################################################################
## code template for IEnumVToolbarSet implementation
##class IEnumVToolbarSet_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

class IVBUndoUnit(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'VB-Implements-Capable undo unit interface definition. Use an object that implements this interface in AddUndoUnit calls.'
    _iid_ = GUID('{000D1305-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
class IVBUndoManager(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'VB Undo Manager - VB classes that implement IVBUndoUnit require this for their Do method.'
    _iid_ = GUID('{000D1306-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVBUndoUnit._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Do',
              ( ['in'], POINTER(IVBUndoManager), 'pMgr' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrDesc' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'UnitTypeCLSID',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCLSID' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'OnNextAdd'),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'UnitTypeLong',
              ( ['retval', 'out'], POINTER(c_int), 'pnType' )),
    COMMETHOD([dispid(1610743813), helpstring(u'Size in bytes. Used to measure how much memory undo information is using.'), 'propget'], HRESULT, 'UnitSize',
              ( ['retval', 'out'], POINTER(c_int), 'pnSize' )),
]
################################################################
## code template for IVBUndoUnit implementation
##class IVBUndoUnit_Impl(object):
##    def Do(self, pMgr):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return pbstrDesc
##
##    def OnNextAdd(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UnitSize(self):
##        u'Size in bytes. Used to measure how much memory undo information is using.'
##        #return pnSize
##
##    @property
##    def UnitTypeCLSID(self):
##        '-no docstring-'
##        #return pbstrCLSID
##
##    @property
##    def UnitTypeLong(self):
##        '-no docstring-'
##        #return pnType
##


# values for enumeration 'VisDistributeTypes'
visDistHorzSpace = 0
visDistHorzLeft = 1
visDistHorzCenter = 2
visDistHorzRight = 3
visDistVertSpace = 4
visDistVertTop = 5
visDistVertMiddle = 6
visDistVertBottom = 7
VisDistributeTypes = c_int # enum

# values for enumeration 'VisFlipTypes'
visFlipSelection = 0
visFlipSelectionWithPin = 1
visFlipShapes = 2
VisFlipTypes = c_int # enum

# values for enumeration 'VisVerticalAlignTypes'
visVertAlignNone = 0
visVertAlignTop = 1
visVertAlignMiddle = 2
visVertAlignBottom = 3
VisVerticalAlignTypes = c_int # enum
class EStyles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Styles Event Interface'
    _iid_ = GUID('{000D0B05-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
EStyles._disp_methods_ = [
    DISPMETHOD([dispid(32772)], None, 'StyleAdded',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(8196)], None, 'StyleChanged',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(16388)], None, 'BeforeStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(300), helpstring(u'Cancel delete of style? T:Yes F:No')], None, 'QueryCancelStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(301), helpstring(u'Delete style operation was canceled.')], None, 'StyleDeleteCanceled',
               ( ['in'], POINTER(IVStyle), 'Style' )),
]
class IVStatusBars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0285-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVStatusBar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0282-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVStatusBars._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVStatusBar' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a StatusBars collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBar)), 'lplpStatusBar' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ItemAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBar)), 'lplpStatusBar' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBar)), 'lplpStatusBar' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'AddAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBar)), 'lplpStatusBar' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lplpVUIObject' )),
]
################################################################
## code template for IVStatusBars implementation
##class IVStatusBars_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVStatusBar
##
##    @property
##    def ItemAtID(self, lID):
##        '-no docstring-'
##        #return lplpStatusBar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVUIObject
##
##    def AddAtID(self, lID):
##        '-no docstring-'
##        #return lplpStatusBar
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a StatusBars collection is item 0.'
##        #return lplpStatusBar
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpStatusBar
##


# values for enumeration 'VisPageAndMasterIDs'
visInvalPageID = -1
visInvalMasterID = -1
VisPageAndMasterIDs = c_int # enum

# values for enumeration 'VisUIStringIDs'
visStrIDPlaceHolder = 0
VisUIStringIDs = c_int # enum
class Toolbar(CoClass):
    u'The ToolbarItems constituting a toolbar.'
    _reg_clsid_ = GUID('{000D0250-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVToolbar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0252-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Toolbar._com_interfaces_ = [IVToolbar]


# values for enumeration 'VisRotationTypes'
visRotateSelection = 0
visRotateSelectionWithPin = 1
visRotateShapes = 2
VisRotationTypes = c_int # enum
class IVOLEObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D071E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVOLEObjects._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeOLEObjects (38).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in an OLEObjects collection is item 1. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVOLEObject)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVOLEObjects implementation
##class IVOLEObjects_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in an OLEObjects collection is item 1. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeOLEObjects (38).'
##        #return lpi2Ret
##


# values for enumeration 'VisWindowArrange'
visArrangeTileVertical = 1
visArrangeTileHorizontal = 2
visArrangeCascade = 3
VisWindowArrange = c_int # enum
class IVGraphicItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0734-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVGraphicItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0735-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVGraphicItems._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(VisObjectTypes), 'ObjectType' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'DataGraphic',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'DataGraphic' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'Enum' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(1610743814)], HRESULT, 'AddCopy',
              ( ['in'], POINTER(IVGraphicItem), 'GraphicItem' ),
              ( ['retval', 'out'], POINTER(POINTER(IVGraphicItem)), 'GraphicItemCopy' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVGraphicItem)), 'GraphicItem' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVGraphicItem)), 'GraphicItem' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
]
################################################################
## code template for IVGraphicItems implementation
##class IVGraphicItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return Enum
##
##    @property
##    def DataGraphic(self):
##        '-no docstring-'
##        #return DataGraphic
##
##    @property
##    def ItemFromID(self, ObjectID):
##        '-no docstring-'
##        #return GraphicItem
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return GraphicItem
##
##    def AddCopy(self, GraphicItem):
##        '-no docstring-'
##        #return GraphicItemCopy
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

class Color(CoClass):
    u'A color available for use by Shapes or Styles in a Visio Document.'
    _reg_clsid_ = GUID('{000D0A11-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVColor(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0716-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Color._com_interfaces_ = [IVColor]


# values for enumeration 'VisLinkReplaceBehavior'
visLinkReplaceNever = 0
visLinkReplaceAlways = 1
visLinkReplacePrompt = 2
VisLinkReplaceBehavior = c_int # enum

# values for enumeration 'VisSpatialRelationCodes'
visSpatialOverlap = 1
visSpatialContain = 2
visSpatialContainedIn = 4
visSpatialTouching = 8
VisSpatialRelationCodes = c_int # enum

# values for enumeration 'VisDocModeArgs'
visInvalDocID = -1
visDocModeRun = 0
visDocModeDesign = 1
VisDocModeArgs = c_int # enum

# values for enumeration 'VisContainerMemberState'
visContainerMemberNotAMember = 0
visContainerMemberInterior = 1
visContainerMemberOnBoundary = 2
visContainerMemberOutside = 3
visContainerMemberInList = 4
VisContainerMemberState = c_int # enum
tagVisUIStringIDs = VisUIStringIDs

# values for enumeration 'VisMasterTypes'
visTypeMaster = 1
visTypeFillPattern = 2
visTypeLinePattern = 3
visTypeLineEnd = 4
visTypeDataGraphic = 5
visTypeThemeColors = 6
visTypeThemeEffects = 7
VisMasterTypes = c_int # enum
IVLayer._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Page',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Master',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Row',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7)], HRESULT, 'Add',
              ( ['in'], POINTER(IVShape), 'SheetObject' ),
              ( ['in'], c_short, 'fPresMems' )),
    COMMETHOD([dispid(8)], HRESULT, 'Remove',
              ( ['in'], POINTER(IVShape), 'SheetObject' ),
              ( ['in'], c_short, 'fPresMems' )),
    COMMETHOD([dispid(9)], HRESULT, 'Delete',
              ( ['in'], c_short, 'fDeleteShapes' )),
    COMMETHOD([dispid(0), helpstring(u"Layer's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(0), helpstring(u"Layer's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'CellsC',
              ( ['in'], c_short, 'Column' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(11), helpstring(u'Returns visObjTypeLayer (25).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(15), helpstring(u"Layer's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(15), helpstring(u"Layer's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
]
################################################################
## code template for IVLayer implementation
##class IVLayer_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        u"Layer's locale specific name."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Layer's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CellsC(self, Column):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeLayer (25).'
##        #return lpi2Ret
##
##    def Remove(self, SheetObject, fPresMems):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self, SheetObject, fPresMems):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u"Layer's locale independent name."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"Layer's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Master(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Page(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Delete(self, fDeleteShapes):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Row(self):
##        '-no docstring-'
##        #return lpi2Ret
##


# values for enumeration 'VisScrollbarStates'
visScrollBarNeither = 0
visScrollBarHoriz = 1
visScrollBarVert = 4
visScrollBarBoth = 5
VisScrollbarStates = c_int # enum
tagVisScrollbarStates = VisScrollbarStates

# values for enumeration 'VisHorizontalAlignTypes'
visHorzAlignNone = 0
visHorzAlignLeft = 1
visHorzAlignCenter = 2
visHorzAlignRight = 3
VisHorizontalAlignTypes = c_int # enum
tagVisOnComponentEnterCodes = VisOnComponentEnterCodes
IVToolbarSets._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVToolbarSet' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a ToolbarSets collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarSet)), 'lplpToolbarSet' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ItemAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarSet)), 'lplpToolbarSet' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarSet)), 'lplpToolbarSet' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'AddAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarSet)), 'lplpToolbarSet' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lplpVUIObject' )),
]
################################################################
## code template for IVToolbarSets implementation
##class IVToolbarSets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVToolbarSet
##
##    @property
##    def ItemAtID(self, lID):
##        '-no docstring-'
##        #return lplpToolbarSet
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVUIObject
##
##    def AddAtID(self, lID):
##        '-no docstring-'
##        #return lplpToolbarSet
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a ToolbarSets collection is item 0.'
##        #return lplpToolbarSet
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpToolbarSet
##


# values for enumeration 'VisFlipDirection'
visFlipHorizontal = 1
visFlipVertical = 2
VisFlipDirection = c_int # enum
tagVisDocModeArgs = VisDocModeArgs
class IVComments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0743-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVComment(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0744-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVComments._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVComment)), 'ppComment' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'Enum' )),
    COMMETHOD([dispid(1610743815)], HRESULT, 'Add',
              ( ['in'], BSTR, 'Text' ),
              ( ['retval', 'out'], POINTER(POINTER(IVComment)), 'ppComment' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'DeleteAll'),
]
################################################################
## code template for IVComments implementation
##class IVComments_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return Enum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ppComment
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Add(self, Text):
##        '-no docstring-'
##        #return ppComment
##
##    def DeleteAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##


# values for enumeration 'VisPaperSizes'
visPaperSizeUnknown = 0
visPaperSizeLetter = 1
visPaperSizeLegal = 5
visPaperSizeA3 = 8
visPaperSizeA4 = 9
visPaperSizeA5 = 11
visPaperSizeB4 = 12
visPaperSizeB5 = 13
visPaperSizeFolio = 14
visPaperSizeNote = 18
visPaperSizeC = 24
visPaperSizeD = 25
visPaperSizeE = 26
VisPaperSizes = c_int # enum
class IVDataColumn(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0732-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVDataRecordset(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D072F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']

# values for enumeration 'VisDataColumnProperties'
visDataColumnPropertyType = 1
visDataColumnPropertyLangID = 2
visDataColumnPropertyCalendar = 3
visDataColumnPropertyUnits = 4
visDataColumnPropertyCurrency = 5
visDataColumnPropertyDisplayName = 6
visDataColumnPropertyVisible = 7
visDataColumnPropertyHyperlink = 8
VisDataColumnProperties = c_int # enum
IVDataColumn._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'DataRecordset',
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'DisplayName',
              ( ['retval', 'out'], POINTER(BSTR), 'DisplayName' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'DisplayName',
              ( ['in'], BSTR, 'DisplayName' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Visible' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'Visible' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'GetProperty',
              ( ['in'], VisDataColumnProperties, 'Property' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'Value' )),
    COMMETHOD([dispid(1610743819)], HRESULT, 'SetProperty',
              ( ['in'], VisDataColumnProperties, 'Property' ),
              ( ['in'], VARIANT, 'Value' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Hyperlink',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Hyperlink' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Hyperlink',
              ( ['in'], VARIANT_BOOL, 'Hyperlink' )),
]
################################################################
## code template for IVDataColumn implementation
##class IVDataColumn_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return DisplayName
##    def _set(self, DisplayName):
##        '-no docstring-'
##    DisplayName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return Name
##
##    def _get(self):
##        '-no docstring-'
##        #return Visible
##    def _set(self, Visible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Hyperlink
##    def _set(self, Hyperlink):
##        '-no docstring-'
##    Hyperlink = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def DataRecordset(self):
##        '-no docstring-'
##        #return DataRecordset
##
##    def SetProperty(self, Property, Value):
##        '-no docstring-'
##        #return 
##
##    def GetProperty(self, Property):
##        '-no docstring-'
##        #return Value
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##


# values for enumeration 'VisDocCleanActions'
visDocCleanActLocalFormulas = 1
visDocCleanActEmptyRowsAndSects = 2
visDocCleanActNonDefaultFonts = 4
visDocCleanActStaleResults = 8
visDocCleanActMissingSubs = 16
visDocCleanActConstantFormulas = 32
visDocCleanActNearZero = 64
visDocCleanActDuplicateSubs = 128
visDocCleanActBadDisplayLists = 256
visDocCleanActBadFieldCounts = 512
visDocCleanActDeletedFields = 1024
visDocCleanActBadFieldFormulas = 2048
visDocCleanActBadFieldMarks = 4096
visDocCleanActBadReferences = 8192
visDocCleanActAll = 16383
visDocCleanActDefault = 8152
visDocCleanAlertDefault = 0
visDocCleanFixDefault = 984
VisDocCleanActions = c_int # enum
tagVisDocCleanActions = VisDocCleanActions
tagVisTraceFlags = VisTraceFlags
IVBUndoManager._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Add',
              ( ['in'], POINTER(IVBUndoUnit), 'pUnit' )),
]
################################################################
## code template for IVBUndoManager implementation
##class IVBUndoManager_Impl(object):
##    def Add(self, pUnit):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'VisContainerTypes'
visContainerTypeNormal = 0
visContainerTypeList = 1
VisContainerTypes = c_int # enum
class IVEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D071A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVEvent._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Event',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Event',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Action',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Action',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Target',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Target',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'TargetArgs',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'TargetArgs',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(7)], HRESULT, 'Trigger',
              ( ['in'], BSTR, 'ContextString' )),
    COMMETHOD([dispid(8)], HRESULT, 'Delete'),
    COMMETHOD([dispid(9), helpstring(u'Returns visObjTypeEvent (33).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'Enabled',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'Persistable',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Persistent',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13), 'propput'], HRESULT, 'Persistent',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(1610743828)], HRESULT, 'GetFilterObjects',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'Objects' )),
    COMMETHOD([dispid(1610743829)], HRESULT, 'SetFilterObjects',
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'Objects' )),
    COMMETHOD([dispid(1610743830)], HRESULT, 'GetFilterCommands',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'Commands' )),
    COMMETHOD([dispid(1610743831)], HRESULT, 'SetFilterCommands',
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'Commands' )),
    COMMETHOD([dispid(1610743832)], HRESULT, 'GetFilterSRC',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' )),
    COMMETHOD([dispid(1610743833)], HRESULT, 'SetFilterSRC',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' )),
    COMMETHOD([dispid(1610743834)], HRESULT, 'GetFilterActions',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'filterActionStream' )),
    COMMETHOD([dispid(1610743835)], HRESULT, 'SetFilterActions',
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'filterActionStream' )),
]
################################################################
## code template for IVEvent implementation
##class IVEvent_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def SetFilterSRC(self, SRCStream):
##        '-no docstring-'
##        #return 
##
##    def SetFilterCommands(self, Commands):
##        '-no docstring-'
##        #return 
##
##    def Trigger(self, ContextString):
##        '-no docstring-'
##        #return 
##
##    def GetFilterObjects(self):
##        '-no docstring-'
##        #return Objects
##
##    @property
##    def Persistable(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeEvent (33).'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Target = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SetFilterObjects(self, Objects):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Persistent = property(_get, _set, doc = _set.__doc__)
##
##    def GetFilterActions(self):
##        '-no docstring-'
##        #return filterActionStream
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Action = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Event = property(_get, _set, doc = _set.__doc__)
##
##    def GetFilterSRC(self):
##        '-no docstring-'
##        #return SRCStream
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    TargetArgs = property(_get, _set, doc = _set.__doc__)
##
##    def SetFilterActions(self, filterActionStream):
##        '-no docstring-'
##        #return 
##
##    def GetFilterCommands(self):
##        '-no docstring-'
##        #return Commands
##

class IVToolbarItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0242-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOTOOLBARITEM = POINTER(IVToolbarItem)
tagVisSpatialRelationCodes = VisSpatialRelationCodes

# values for enumeration 'VisSpatialRelationFlags'
visSpatialIncludeGuides = 2
visSpatialFrontToBack = 4
visSpatialBackToFront = 8
visSpatialIncludeHidden = 16
visSpatialIgnoreVisible = 32
visSpatialIncludeDataGraphics = 64
visSpatialIncludeContainerShapes = 128
VisSpatialRelationFlags = c_int # enum
tagVisSpatialRelationFlags = VisSpatialRelationFlags
class IVServerPublishOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0739-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPSERVERPUBLISHOPTIONS = POINTER(IVServerPublishOptions)
class Pages(CoClass):
    u'The pages in a Visio Document. The first Page in a Pages collection is item 1.'
    _reg_clsid_ = GUID('{000D0A05-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVPages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D070A-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class EPages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Pages Event Interface'
    _iid_ = GUID('{000D0B09-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Pages._com_interfaces_ = [IVPages]
Pages._outgoing_interfaces_ = [EPages]

class IVMenuItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0212-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOMENUITEM = POINTER(IVMenuItem)

# values for enumeration 'VisListAlignment'
visListAlignLeftOrTop = 0
visListAlignCenterOrMiddle = 1
visListAlignRightOrBottom = 2
VisListAlignment = c_int # enum
IVOLEObject._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeOLEObject (39).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ClassID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ProgID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ForeignType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Object',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
]
################################################################
## code template for IVOLEObject implementation
##class IVOLEObject_Impl(object):
##    @property
##    def ClassID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ProgID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def ForeignType(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeOLEObject (39).'
##        #return lpi2Ret
##

class IVCharacters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0702-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOCHARS = POINTER(IVCharacters)

# values for enumeration 'VisValidationFlags'
visValidationDefault = 0
visValidationNoOpenWindow = 1
VisValidationFlags = c_int # enum
class ECharacters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Characters Event Interface'
    _iid_ = GUID('{000D0B0C-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ECharacters._disp_methods_ = [
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
]
LPVISIOAPPLICATION = POINTER(IVApplication)

# values for enumeration 'VisCellIndices'
visCellInval = 255
visCellFirst = 0
visCellNone = 255
visXFormPinX = 0
visXFormPinY = 1
visXFormWidth = 2
visXFormHeight = 3
visXFormLocPinX = 4
visXFormLocPinY = 5
visXFormAngle = 6
visXFormFlipX = 7
visXFormFlipY = 8
visXFormResizeMode = 9
visLineWeight = 0
visLineColor = 1
visLinePattern = 2
visLineRounding = 3
visLineArrowSize = 4
visLineEndArrowSize = 4
visLineBeginArrow = 5
visLineEndArrow = 6
visLineEndCap = 7
visLineBeginArrowSize = 8
visLineColorTrans = 9
visCompoundType = 10
visFillForegnd = 0
visFillBkgnd = 1
visFillPattern = 2
visFillShdwForegnd = 3
visFillShdwBkgnd = 4
visFillShdwPattern = 5
visFillForegndTrans = 6
visFillBkgndTrans = 7
visFillShdwForegndTrans = 8
visFillShdwBkgndTrans = 9
visFillShdwType = 10
visFillShdwOffsetX = 11
visFillShdwOffsetY = 12
visFillShdwObliqueAngle = 13
visFillShdwScaleFactor = 14
visFillShdwBlur = 15
visFillShdwShow = 16
vis1DBeginX = 0
vis1DBeginY = 1
vis1DEndX = 2
vis1DEndY = 3
visEvtCellTheData = 0
visEvtCellTheText = 1
visEvtCellDblClick = 2
visEvtCellXFMod = 3
visEvtCellDrop = 4
visLayerMember = 0
visGuideFlags = 2
visStyleIncludesLine = 0
visStyleIncludesFill = 1
visStyleIncludesText = 2
visStyleHidden = 3
visFrgnImgOffsetX = 0
visFrgnImgOffsetY = 1
visFrgnImgWidth = 2
visFrgnImgHeight = 3
visFrgnImgClippingPath = 4
visPageWidth = 0
visPageHeight = 1
visPageShdwOffsetX = 2
visPageShdwOffsetY = 3
visPageScale = 4
visPageDrawingScale = 5
visPageDrawSizeType = 6
visPageDrawScaleType = 7
visPageInhibitSnap = 26
visPageLockReplace = 27
visPageLockDuplicate = 28
visPageUIVisibility = 34
visPageShdwType = 35
visPageShdwObliqueAngle = 36
visPageShdwScaleFactor = 37
visPageDrawResizeType = 38
visPageZOrderChanged = 39
visTxtBlkLeftMargin = 0
visTxtBlkRightMargin = 1
visTxtBlkTopMargin = 2
visTxtBlkBottomMargin = 3
visTxtBlkVerticalAlign = 4
visTxtBlkBkgnd = 5
visTxtBlkDefaultTabStop = 6
visTxtBlkDirection = 10
visTxtBlkBkgndTrans = 11
visAlignLeft = 0
visAlignCenter = 1
visAlignRight = 2
visAlignTop = 3
visAlignMiddle = 4
visAlignBottom = 5
visLockWidth = 0
visLockHeight = 1
visLockMoveX = 2
visLockMoveY = 3
visLockAspect = 4
visLockDelete = 5
visLockBegin = 6
visLockEnd = 7
visLockRotate = 8
visLockCrop = 9
visLockVtxEdit = 10
visLockTextEdit = 11
visLockFormat = 12
visLockGroup = 13
visLockCalcWH = 14
visLockSelect = 15
visLockCustProp = 16
visObjHelp = 0
visCopyright = 1
visNoObjHandles = 0
visNonPrinting = 1
visNoCtlHandles = 2
visNoAlignBox = 3
visUpdateAlignBox = 4
visHideText = 5
visVerticalText = 6
visDynFeedback = 8
visGlueType = 9
visWalkPref = 10
visBegTrigger = 11
visEndTrigger = 12
visLOFlags = 13
visLOInteraction = 14
visLOBehavior = 15
visComment = 16
visDropSource = 17
visNoLiveDynamics = 18
visObjLocalizeMerge = 19
visObjNoProofing = 20
visObjCalendar = 25
visObjLangID = 26
visObjKeywords = 27
visObjDropOnPageScale = 28
visObjTheme = 29
visObjThemeModern = 30
visXRulerDensity = 0
visYRulerDensity = 1
visXRulerOrigin = 4
visYRulerOrigin = 5
visXGridDensity = 6
visYGridDensity = 7
visXGridSpacing = 8
visYGridSpacing = 9
visXGridOrigin = 10
visYGridOrigin = 11
visDocOutputFormat = 0
visDocLockPreview = 1
visDocMetric = 2
visDocAddMarkup = 3
visDocViewMarkup = 4
visDocLockReplace = 5
visDocNoCoauth = 6
visDocLockDuplicatePage = 7
visDocPreviewQuality = 9
visDocPreviewScope = 10
visDocLangID = 19
visImageGamma = 0
visImageContrast = 1
visImageBrightness = 2
visImageSharpen = 3
visImageBlur = 4
visImageDenoise = 5
visImageTransparency = 6
visGroupSelectMode = 0
visGroupDisplayMode = 1
visGroupIsDropTarget = 2
visGroupIsSnapTarget = 3
visGroupIsTextEditTarget = 4
visGroupDontMoveChildren = 5
visSLOPermX = 0
visSLOPermY = 1
visSLOPermeablePlace = 2
visSLORelationships = 3
visSLOFixedCode = 8
visSLOPlowCode = 9
visSLORouteStyle = 10
visSLOPlaceStyle = 11
visSLOConFixedCode = 12
visSLOJumpCode = 13
visSLOJumpStyle = 14
visSLOJumpDirX = 16
visSLOJumpDirY = 17
visSLOPlaceFlip = 18
visSLOLineRouteExt = 19
visSLOSplit = 20
visSLOSplittable = 21
visSLODisplayLevel = 22
visSLORelChanged = 23
visSLOCategoryChanged = 24
visPLOResizePage = 0
visPLOEnableGrid = 1
visPLODynamicsOff = 2
visPLOCtrlAsInput = 3
visPLOAvoidPageBreaks = 4
visPLOPlaceStyle = 8
visPLORouteStyle = 9
visPLOPlaceDepth = 10
visPLOPlowCode = 11
visPLOJumpCode = 12
visPLOJumpStyle = 13
visPLOJumpDirX = 14
visPLOJumpDirY = 15
visPLOLineToNodeX = 16
visPLOLineToNodeY = 17
visPLOBlockSizeX = 18
visPLOBlockSizeY = 19
visPLOAvenueSizeX = 20
visPLOAvenueSizeY = 21
visPLOLineToLineX = 22
visPLOLineToLineY = 23
visPLOJumpFactorX = 24
visPLOJumpFactorY = 25
visPLOLineAdjustFrom = 26
visPLOLineAdjustTo = 27
visPLOPlaceFlip = 28
visPLOLineRouteExt = 29
visPLOSplit = 30
visCharacterFont = 0
visCharacterColor = 1
visCharacterStyle = 2
visCharacterCase = 3
visCharacterPos = 4
visCharacterFontScale = 5
visCharacterLocale = 6
visCharacterSize = 7
visCharacterDblUnderline = 8
visCharacterOverline = 9
visCharacterStrikethru = 10
visCharacterPerpendicular = 12
visCharacterDoubleStrikethrough = 13
visCharacterRTLText = 14
visCharacterUseVertical = 15
visCharacterLetterspace = 16
visCharacterColorTrans = 17
visCharacterAsianFont = 51
visCharacterComplexScriptFont = 52
visCharacterLocalizeFont = 53
visCharacterComplexScriptSize = 54
visCharacterLangID = 57
visIndentFirst = 0
visIndentLeft = 1
visIndentRight = 2
visSpaceLine = 3
visSpaceBefore = 4
visSpaceAfter = 5
visHorzAlign = 6
visBulletIndex = 7
visBulletString = 8
visBulletFont = 9
visLocalizeBulletFont = 10
visBulletFontSize = 11
visTextPosAfterBullet = 12
visFlags = 13
visTabStopCount = 0
visTabPos = 1
visTabAlign = 2
visScratchX = 0
visScratchY = 1
visScratchA = 2
visScratchB = 3
visScratchC = 4
visScratchD = 5
visCnnctX = 0
visCnnctY = 1
visCnnctDirX = 2
visCnnctDirY = 3
visCnnctType = 4
visCnnctAutoGen = 5
visCnnctA = 2
visCnnctB = 3
visCnnctC = 4
visCnnctD = 5
visFieldCell = 0
visFieldEditMode = 1
visFieldFormat = 2
visFieldType = 3
visFieldUICategory = 4
visFieldUICode = 5
visFieldUIFormat = 6
visFieldCalendar = 7
visFieldObjectKind = 10
visCtlX = 0
visCtlY = 1
visCtlXDyn = 2
visCtlYDyn = 3
visCtlXCon = 4
visCtlYCon = 5
visCtlGlue = 6
visCtlType = 7
visCtlTip = 8
visCompNoFill = 0
visCompNoLine = 1
visCompNoShow = 2
visCompNoSnap = 3
visCompPath = 4
visCompNoQuickDrag = 5
visX = 0
visY = 1
visBow = 2
visInfiniteLineX1 = 0
visInfiniteLineY1 = 1
visInfiniteLineX2 = 2
visInfiniteLineY2 = 3
visEllipseCenterX = 0
visEllipseCenterY = 1
visEllipseMajorX = 2
visEllipseMajorY = 3
visEllipseMinorX = 4
visEllipseMinorY = 5
visControlX = 2
visControlY = 3
visEccentricityAngle = 4
visAspectRatio = 5
visSplineKnot = 2
visSplineKnot2 = 3
visSplineKnot3 = 4
visSplineDegree = 5
visPolylineData = 2
visControl1X = 2
visControl1Y = 3
visControl2X = 4
visControl2Y = 5
visNURBSKnot = 2
visNURBSWeight = 3
visNURBSKnotPrev = 4
visNURBSWeightPrev = 5
visNURBSData = 6
visActionMenu = 0
visActionPrompt = 1
visActionHelp = 2
visActionAction = 3
visActionChecked = 4
visActionDisabled = 5
visActionReadOnly = 6
visActionInvisible = 7
visActionBeginGroup = 8
visActionFlyoutChild = 9
visActionTagName = 14
visActionButtonFace = 15
visActionSortKey = 16
visLayerName = 0
visLayerColor = 2
visLayerStatus = 3
visLayerVisible = 4
visLayerPrint = 5
visLayerActive = 6
visLayerLock = 7
visLayerSnap = 8
visLayerGlue = 9
visLayerNameUniv = 10
visLayerColorTrans = 11
visUserValue = 0
visUserPrompt = 1
visCustPropsValue = 0
visCustPropsPrompt = 1
visCustPropsLabel = 2
visCustPropsFormat = 3
visCustPropsSortKey = 4
visCustPropsType = 5
visCustPropsInvis = 6
visCustPropsAsk = 7
visCustPropsDataLinked = 8
visCustPropsLangID = 14
visCustPropsCalendar = 15
visHLinkDescription = 0
visHLinkAddress = 1
visHLinkSubAddress = 2
visHLinkExtraInfo = 3
visHLinkFrame = 4
visHLinkNewWin = 5
visHLinkDefault = 7
visHLinkInvisible = 8
visHLinkSortKey = 15
visReviewerName = 0
visReviewerInitials = 1
visReviewerColor = 2
visReviewerReviewerID = 3
visReviewerCurrentIndex = 4
visAnnotationX = 0
visAnnotationY = 1
visAnnotationReviewerID = 2
visAnnotationMarkerIndex = 3
visAnnotationDate = 4
visAnnotationComment = 5
visAnnotationLangID = 6
visSmartTagX = 0
visSmartTagY = 1
visSmartTagName = 2
visSmartTagXJustify = 3
visSmartTagYJustify = 4
visSmartTagDisplayMode = 5
visSmartTagButtonFace = 6
visSmartTagDisabled = 7
visSmartTagDescription = 15
visPrintPropertiesLeftMargin = 0
visPrintPropertiesRightMargin = 1
visPrintPropertiesTopMargin = 2
visPrintPropertiesBottomMargin = 3
visPrintPropertiesScaleX = 4
visPrintPropertiesScaleY = 5
visPrintPropertiesPagesX = 6
visPrintPropertiesPagesY = 7
visPrintPropertiesCenterX = 8
visPrintPropertiesCenterY = 9
visPrintPropertiesOnPage = 10
visPrintPropertiesPrintGrid = 11
visPrintPropertiesPageOrientation = 16
visPrintPropertiesPaperKind = 17
visPrintPropertiesPaperSource = 18
visLockFromGroupFormat = 17
visLockThemeColors = 18
visLockThemeEffects = 19
visLockThemeConnectors = 20
visLockThemeFonts = 21
visLockThemeIndex = 22
visLockReplace = 23
visLockVariation = 24
visEvtCellMultiDrop = 22
visLineGradientDir = 0
visLineGradientAngle = 1
visFillGradientDir = 2
visFillGradientAngle = 3
visLineGradientEnabled = 4
visFillGradientEnabled = 5
visRotateGradientWithShape = 6
visUseGroupGradient = 7
visQuickStyleLineColor = 0
visQuickStyleFillColor = 1
visQuickStyleShadowColor = 2
visQuickStyleFontColor = 3
visQuickStyleLineMatrix = 4
visQuickStyleFillMatrix = 5
visQuickStyleEffectsMatrix = 6
visQuickStyleFontMatrix = 7
visQuickStyleType = 8
visQuickStyleVariation = 9
visReflectionTrans = 0
visReflectionSize = 1
visReflectionDist = 2
visReflectionBlur = 3
visGlowColor = 4
visGlowColorTrans = 5
visGlowSize = 6
visSoftEdgesSize = 7
visSketchSeed = 8
visSketchEnabled = 9
visSketchAmount = 10
visSketchLineWeight = 11
visSketchLineChange = 12
visSketchFillChange = 13
visBevelTopType = 0
visBevelTopWidth = 1
visBevelTopHeight = 2
visBevelBottomType = 3
visBevelBottomWidth = 4
visBevelBottomHeight = 5
visBevelDepthColor = 6
visBevelDepthSize = 7
visBevelContourColor = 8
visBevelContourSize = 9
visBevelMaterialType = 10
visBevelLightingType = 11
visBevelLightingAngle = 12
visRotationXAngle = 0
visRotationYAngle = 1
visRotationZAngle = 2
visRotationType = 3
visPerspective = 4
visDistanceFromGround = 5
visKeepTextFlat = 6
visGradientStopColor = 0
visGradientStopColorTrans = 1
visGradientStopPosition = 2
visColorSchemeIndex = 0
visEffectSchemeIndex = 1
visConnectorSchemeIndex = 2
visFontSchemeIndex = 3
visThemeIndex = 4
visVariationColorIndex = 5
visVariationStyleIndex = 6
visEmbellishmentIndex = 7
visReplaceLockShapeData = 0
visReplaceLockText = 1
visReplaceLockFormat = 2
visReplaceCopyCells = 3
VisCellIndices = c_int # enum
tagVisCellIndices = VisCellIndices
LPVISIOCONNECTS = POINTER(IVConnects)
class IEnumVToolbarItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0243-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

IEnumVToolbarItem._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVToolbarItem)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVToolbarItem)), 'ppenm' )),
]
################################################################
## code template for IEnumVToolbarItem implementation
##class IEnumVToolbarItem_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

LPVISIOTOOLBAR = POINTER(IVToolbar)
LPVISIOCELL = POINTER(IVCell)
IVCurve._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeCurve (42).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Closed',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4)], HRESULT, 'Points',
              ( ['in'], c_double, 'Tolerance' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Start',
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'End',
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(0)], HRESULT, 'Point',
              ( ['in'], c_double, 't' ),
              ( ['out'], POINTER(c_double), 'x' ),
              ( ['out'], POINTER(c_double), 'y' )),
    COMMETHOD([dispid(8)], HRESULT, 'PointAndDerivatives',
              ( ['in'], c_double, 't' ),
              ( ['in'], c_short, 'n' ),
              ( ['out'], POINTER(c_double), 'x' ),
              ( ['out'], POINTER(c_double), 'y' ),
              ( ['out'], POINTER(c_double), 'dxdt' ),
              ( ['out'], POINTER(c_double), 'dydt' ),
              ( ['out'], POINTER(c_double), 'ddxdt' ),
              ( ['out'], POINTER(c_double), 'ddydt' )),
]
################################################################
## code template for IVCurve implementation
##class IVCurve_Impl(object):
##    @property
##    def End(self):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def PointAndDerivatives(self, t, n):
##        '-no docstring-'
##        #return x, y, dxdt, dydt, ddxdt, ddydt
##
##    @property
##    def Start(self):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def Point(self, t):
##        '-no docstring-'
##        #return x, y
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Points(self, Tolerance):
##        '-no docstring-'
##        #return xyArray
##
##    @property
##    def Closed(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeCurve (42).'
##        #return lpi2Ret
##


# values for enumeration 'VisMemberAddOptions'
visMemberAddUseResizeSetting = 0
visMemberAddExpandContainer = 1
visMemberAddDoNotExpand = 2
VisMemberAddOptions = c_int # enum
class EWindows(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Windows Event Interface'
    _iid_ = GUID('{000D0B01-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
EWindows._disp_methods_ = [
    DISPMETHOD([dispid(32769)], None, 'WindowOpened',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(701)], None, 'SelectionChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(16385)], None, 'BeforeWindowClosed',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(4224)], None, 'WindowActivated',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(702)], None, 'BeforeWindowSelDelete',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(703)], None, 'BeforeWindowPageTurn',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(704)], None, 'WindowTurnedToPage',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(8193), helpstring(u"Fires after a window's size or position changes")], None, 'WindowChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(705), helpstring(u'Fires after scroll or zoom in a drawing window')], None, 'ViewChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(706), helpstring(u'Cancel close of window? T:Yes F:No')], None, 'QueryCancelWindowClose',
               ( ['in'], POINTER(IVWindow), 'Window' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(707), helpstring(u'Window close operation was canceled.')], None, 'WindowCloseCanceled',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(708), helpstring(u'Called when keystroke message received for Addon window. True return indicates message was handled.')], None, 'OnKeystrokeMessageForAddon',
               ( ['in'], POINTER(IVMSGWrap), 'MSG' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(709), helpstring(u'Called when mousedown message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseDown',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(710), helpstring(u'Called when mousemove message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseMove',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(711), helpstring(u'Called when mouseup message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseUp',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(712), helpstring(u'Called when keydown message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyDown',
               ( ['in'], c_int, 'KeyCode' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(713), helpstring(u'Called when keypress message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyPress',
               ( ['in'], c_int, 'KeyAscii' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(714), helpstring(u'Called when keyup message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyUp',
               ( ['in'], c_int, 'KeyCode' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
]

# values for enumeration 'VisUIObjSets'
visUIObjSetNoDocument = 1
visUIObjSetDrawing = 2
visUIObjSetStencil = 3
visUIObjSetShapeSheet = 4
visUIObjSetIcon = 5
visUIObjSetInPlace = 6
visUIObjSetPrintPreview = 7
visUIObjSetText = 8
visUIObjSetCntx_DrawObjSel = 9
visUIObjSetCntx_DrawOleObjSel = 10
visUIObjSetCntx_DrawNoObjSel = 11
visUIObjSetCntx_InPlaceNoObj = 12
visUIObjSetCntx_TextEdit = 13
visUIObjSetCntx_StencilRO = 14
visUIObjSetCntx_ShapeSheet = 15
visUIObjSetCntx_Toolbar = 16
visUIObjSetCntx_FullScreen = 17
visUIObjSetBinderInPlace = 18
visUIObjSetActiveXDoc = 18
visUIObjSetCntx_Debug = 19
visUIObjSetCntx_StencilRW = 20
visUIObjSetCntx_StencilDocked = 21
visUIObjSetHostingInPlace = 22
visUIObjSetCntx_Hyperlink = 23
visUIObjSetPal_LineColors = 24
visUIObjSetPal_LineWeights = 25
visUIObjSetPal_LinePatterns = 26
visUIObjSetPal_FillColors = 27
visUIObjSetPal_FillPatterns = 28
visUIObjSetPal_TextColors = 29
visUIObjSetPal_AlignShapes = 30
visUIObjSetPal_DistributeShapes = 31
visUIObjSetPal_Shadow = 32
visUIObjSetPal_LineEnds = 33
visUIObjSetPal_CornerRounding = 34
visUIObjSetCntx_ToolbarInPlace = 35
visUIObjSetCntx_ToolbarHostingInPlace = 36
visUIObjSetPal_Rectangle_Tool = 37
visUIObjSetPopup_LineJumpCode = 38
visUIObjSetPopup_LineJumpStyle = 39
visUIObjSetPal_ConnectorTool = 40
visUIObjSetPal_TextTool = 41
visUIObjSetPal_LineTool = 42
visUIObjSetPal_RotationTool = 43
visUIObjSetCntx_ConnectPtType = 44
visUIObjSetPal_Undo = 45
visUIObjSetPal_Redo = 46
visUIObjSetCntx_PageTabs = 47
visUIObjSetPal_ShapeExt = 48
visUIObjSetCntx_DEDocument = 49
visUIObjSetCntx_DEPages = 50
visUIObjSetCntx_DEPage = 51
visUIObjSetCntx_DEShapes = 52
visUIObjSetCntx_DEShape = 53
visUIObjSetCntx_DELayers = 54
visUIObjSetCntx_DELayer = 55
visUIObjSetCntx_DEStyles = 56
visUIObjSetCntx_DEStyle = 57
visUIObjSetCntx_DEMasters = 58
visUIObjSetCntx_DEMaster = 59
visUIObjSetCntx_DEPatterns = 60
visUIObjSetCntx_AnchorBar_Base = 61
visUIObjSetCntx_AnchorBar_CustProp = 62
visUIObjSetCntx_AnchorBar_SizePos = 63
visUIObjSetCntx_Master = 14
visUIObjSetCntx_Stencil = 21
visUIObjSetCntx_AddCommands = 1000
visUIObjSetCntx_BuiltinMenus = 1010
visUIObjSetCntx_ShortcutMenus = 1011
visUIObjSetCntx_MEDocument = 66
visUIObjSetCntx_MEMasters = 67
visUIObjSetCntx_CommentMarker = 68
visUIObjSetCntx_AnchorBar_Shapes = 69
visUIObjSetCntx_DataExplorerTabs = 70
visUIObjSetCntx_DataExplorerList = 71
visUIObjSetCntx_PageTabNavigation = 74
visUIObjSetCntx_Page = 75
visUIObjSetCntx_Issues = 76
VisUIObjSets = c_int # enum
IVAddon._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeAddon (31).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5)], HRESULT, 'Run',
              ( ['in'], BSTR, 'ArgString' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
]
################################################################
## code template for IVAddon implementation
##class IVAddon_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Run(self, ArgString):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def Enabled(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def NameU(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeAddon (31).'
##        #return lpi2Ret
##

class IVContainerProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0736-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOCONTAINERPROPERTIES = POINTER(IVContainerProperties)

# values for enumeration 'VisUICtrlTypes'
visCtrlTypeBUTTON = 2
visCtrlTypeBUTTON_OWNERDRAW = 33
visCtrlTypeOWNERDRAW_BUTTON = 33
visCtrlTypeSPLITBUTTON = 17
visCtrlTypePALETTEBUTTONNOMRU = 17
visCtrlTypeSPLITBUTTON_MRU_COLOR = 16
visCtrlTypePALETTEBUTTON = 16
visCtrlTypeSPINBUTTON = 16
visCtrlTypeSPLITBUTTON_MRU_COMMAND = 18
visCtrlTypePALETTEBUTTONICON = 18
visCtrlTypeEDITBOX = 64
visCtrlTypeCOMBOBOX = 128
visCtrlTypeCOMBOBOX_SORTED = 129
visCtrlTypeDROPDOWN = 272
visCtrlTypeDROPDOWN_SORTED = 273
visCtrlTypeDROPDOWN_OWNERDRAW = 256
visCtrlTypeCOMBODRAW = 256
visCtrlTypeDROPDOWN_SORTED_OWNERDRAW = 257
visCtrlTypeLABEL = 2048
visCtrlTypeSWATCH = 32768
visCtrlTypeSWATCH_COLORS = 32769
visCtrlTypeEND = 0
visCtrlTypeSTATE = 1
visCtrlTypeSTATE_BUTTON = 3
visCtrlTypeHIERBUTTON = 4
visCtrlTypeSTATE_HIERBUTTON = 5
visCtrlTypeDROPBUTTON = 8
visCtrlTypeSTATE_DROPBUTTON = 9
visCtrlTypePUSHBUTTON = 32
visCtrlTypeLISTBOX = 512
visCtrlTypeLISTBOXDRAW = 513
visCtrlTypeCOLORBOX = 1024
visCtrlTypeMESSAGE = 4096
visCtrlTypeSPACER = 16384
VisUICtrlTypes = c_int # enum
tagVisUICtrlTypes = VisUICtrlTypes

# values for enumeration 'VisInsertObjArgs'
visInsertLink = 8
visInsertIcon = 16
visInsertDontShow = 4096
visInsertAsControl = 8192
visInsertAsEmbed = 16384
visInsertNoDesignModeTransition = 256
VisInsertObjArgs = c_int # enum
class Addons(CoClass):
    u'The add-ons available in a Visio Application. The first Addon in an Addons collection is item 1.'
    _reg_clsid_ = GUID('{000D0A14-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Addons._com_interfaces_ = [IVAddons]

class IVValidationRule(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D073E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOVALIDATIONRULE = POINTER(IVValidationRule)
class IVReplaceShapesEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0741-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVReplaceShapesEvent._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ReplacementMaster',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'SelectionSource',
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'ReplaceFlags',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
]
################################################################
## code template for IVReplaceShapesEvent implementation
##class IVReplaceShapesEvent_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ReplaceFlags(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##
##    @property
##    def SelectionSource(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ReplacementMaster(self):
##        '-no docstring-'
##        #return lpdispRet
##


# values for enumeration 'VisGetSetArgs'
visGetFloats = 0
visGetTruncatedInts = 1
visGetRoundedInts = 2
visGetStrings = 3
visGetFormulas = 4
visGetFormulasU = 5
visSetFormulas = 1
visSetBlastGuards = 2
visSetTestCircular = 4
visSetUniversalSyntax = 8
VisGetSetArgs = c_int # enum
tagVisGetSetArgs = VisGetSetArgs

# values for enumeration 'VisKeyButtonFlags'
visMouseLeft = 1
visMouseMiddle = 16
visMouseRight = 2
visKeyShift = 4
visKeyControl = 8
VisKeyButtonFlags = c_int # enum
class Event(CoClass):
    u"An item in a Visio object's EventList. An (Event,Action) pair indicating what causes it to fire and what it does when it does fire."
    _reg_clsid_ = GUID('{000D0A15-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Event._com_interfaces_ = [IVEvent]


# values for enumeration 'VisUIMenuAnimation'
visMenuAnimationNone = 0
visMenuAnimationRandom = 1
visMenuAnimationUnfold = 2
visMenuAnimationSlide = 3
VisUIMenuAnimation = c_int # enum
class EventList(CoClass):
    u'The Event objects a Visio object is set up to fire as things happen to it. The first Event in an EventList is item 1.'
    _reg_clsid_ = GUID('{000D0A16-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
EventList._com_interfaces_ = [IVEventList]


# values for enumeration 'VisGlueSettings'
visGlueToNone = 0
visGlueToGuides = 1
visGlueToHandles = 2
visGlueToVertices = 4
visGlueToConnectionPoints = 8
visGlueToGeometry = 32
visGlueToDisabled = 32768
VisGlueSettings = c_int # enum
class Characters(CoClass):
    u'Represents the text of a Shape in a Visio Document.'
    _reg_clsid_ = GUID('{000D0A17-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Characters._com_interfaces_ = [IVCharacters]
Characters._outgoing_interfaces_ = [ECharacters]

class IVValidationIssue(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0740-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVValidationIssue._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'IssueID' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'TargetPage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'TargetPage' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'TargetPageID',
              ( ['retval', 'out'], POINTER(c_int), 'TargetPageID' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'TargetShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'TargetShape' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Ignored',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'IsIgnored' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Ignored',
              ( ['in'], VARIANT_BOOL, 'IsIgnored' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Rule',
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRule)), 'ValidationRule' )),
    COMMETHOD([dispid(1610743819)], HRESULT, 'Delete'),
]
################################################################
## code template for IVValidationIssue implementation
##class IVValidationIssue_Impl(object):
##    @property
##    def TargetPageID(self):
##        '-no docstring-'
##        #return TargetPageID
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def TargetPage(self):
##        '-no docstring-'
##        #return TargetPage
##
##    def _get(self):
##        '-no docstring-'
##        #return IsIgnored
##    def _set(self, IsIgnored):
##        '-no docstring-'
##    Ignored = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Rule(self):
##        '-no docstring-'
##        #return ValidationRule
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def TargetShape(self):
##        '-no docstring-'
##        #return TargetShape
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return IssueID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##


# values for enumeration 'VisUICtrlIDs'
visCtrlIDNEW = 8383
visCtrlIDOPEN = 1
visCtrlIDOPENSTEN = 2
visCtrlIDSAVE = 3
visCtrlIDPRINT = 4
visCtrlIDPREVIEW = 5
visCtrlIDCUT = 6
visCtrlIDCOPY = 7
visCtrlIDPASTE = 8
visCtrlIDCLEAR = 9
visCtrlIDUNDO = 10
visCtrlIDREDO = 11
visCtrlIDREPEAT = 12
visCtrlIDPREVIOUSPAGE = 13
visCtrlIDNEXTPAGE = 14
visCtrlIDZOOMOUT = 15
visCtrlIDZOOMIN = 16
visCtrlIDZOOM100 = 17
visCtrlIDFLIPHORZ = 18
visCtrlIDFLIPVERT = 19
visCtrlIDPOINTERTOOL = 20
visCtrlIDPENCILTOOL = 21
visCtrlIDLINETOOL = 22
visCtrlIDQTRARCTOOL = 23
visCtrlIDRECTTOOL = 24
visCtrlIDOVALTOOL = 25
visCtrlIDSTAMPTOOL = 26
visCtrlIDTEXTTOOL = 27
visCtrlIDROTATETOOL = 28
visCtrlIDCROPTOOL = 29
visCtrlIDCONNECTIONPTTOOL = 30
visCtrlIDSNAP = 31
visCtrlIDGLUE = 32
visCtrlIDRULER = 33
visCtrlIDGRID = 34
visCtrlIDGUIDE = 35
visCtrlIDCONNECT = 36
visCtrlIDROTATECLOCKWISE = 37
visCtrlIDROTATECOUNTER = 38
visCtrlIDNEWWINDOW = 39
visCtrlIDCORNERSTYLE = 40
visCtrlIDLINEEND = 41
visCtrlIDSHADOWSTYLE = 42
visCtrlIDFILLCOLOR = 43
visCtrlIDLINECOLOR = 44
visCtrlIDLINEWEIGHT = 45
visCtrlIDLINEPATTERN = 46
visCtrlIDFILLPATTERN = 47
visCtrlIDPOINTSIZEDOWN = 48
visCtrlIDPOINTSIZEUP = 49
visCtrlIDBOLD = 50
visCtrlIDITALIC = 51
visCtrlIDULINE = 52
visCtrlIDSUPERSCRIPT = 53
visCtrlIDSUBSCRIPT = 54
visCtrlIDTEXTCOLOR = 55
visCtrlIDTEXTLEFT = 56
visCtrlIDTEXTCENTER = 57
visCtrlIDTEXTRIGHT = 58
visCtrlIDTEXTJUSTIFY = 59
visCtrlIDTEXTTOP = 60
visCtrlIDTEXTMIDDLE = 61
visCtrlIDTEXTBOTTOM = 62
visCtrlIDALIGN = 63
visCtrlIDALIGNLEFT = 64
visCtrlIDALIGNCENTER = 65
visCtrlIDALIGNRIGHT = 66
visCtrlIDALIGNTOP = 67
visCtrlIDALIGNMIDDLE = 68
visCtrlIDALIGNBOTTOM = 69
visCtrlIDDISTRIBUTE = 70
visCtrlIDDHORZ_EQSPACE = 71
visCtrlIDDHORZ_CENTER = 72
visCtrlIDDVERT_EQSPACE = 73
visCtrlIDDVERT_MIDDLE = 74
visCtrlIDCONNECTSHAPES = 75
visCtrlIDFIRSTPAGE = 76
visCtrlIDLASTPAGE = 77
visCtrlIDPAGEBREAKS = 78
visCtrlIDICONNAME = 80
visCtrlIDICONONLY = 81
visCtrlIDNAMEONLY = 82
visCtrlIDARRANGEICONS = 83
visCtrlIDCANCELFORMULA = 84
visCtrlIDACCEPTFORMULA = 85
visCtrlIDICONPENCIL = 86
visCtrlIDICONBUCKET = 87
visCtrlIDICONLASSO = 88
visCtrlIDICONSELNET = 89
visCtrlIDBRINGFRONT = 90
visCtrlIDSENDBACK = 91
visCtrlIDGROUP = 92
visCtrlIDUNGROUP = 93
visCtrlIDCASCADE = 94
visCtrlIDTILE = 95
visCtrlIDCONNECTORTOOL = 96
visCtrlIDTEXTBLOCKTOOL = 97
visCtrlIDWHOLEPAGE = 98
visCtrlIDSINGLETILE = 99
visCtrlIDFORMULA = 190
visCtrlIDSPACER = 191
visCtrlIDALLSTYLESCOMBO = 200
visCtrlIDTEXTSTYLECOMBO = 201
visCtrlIDLINESTYLECOMBO = 202
visCtrlIDFILLSTYLECOMBO = 203
visCtrlIDZOOMCOMBO = 204
visCtrlIDFONTCOMBO = 205
visCtrlIDPOINTSIZECOMBO = 206
visCtrlIDALLSTYLESLIST = 220
visCtrlIDTEXTSTYLELIST = 221
visCtrlIDLINESTYLELIST = 222
visCtrlIDFILLSTYLELIST = 223
visCtrlIDZOOMLIST = 224
visCtrlIDFONTLIST = 225
visCtrlIDPOINTSIZELIST = 226
visCtrlIDGOTOPAGELIST = 227
visCtrlIDCLOSE = 240
visCtrlIDLEFTCOLORBOX = 300
visCtrlIDRIGHTCOLORBOX = 301
visCtrlIDCOLOR1 = 302
visCtrlIDCOLOR2 = 303
visCtrlIDCOLOR3 = 304
visCtrlIDCOLOR4 = 305
visCtrlIDCOLOR5 = 306
visCtrlIDCOLOR6 = 307
visCtrlIDCOLOR7 = 308
visCtrlIDCOLOR8 = 309
visCtrlIDCOLOR9 = 310
visCtrlIDCOLOR10 = 311
visCtrlIDCOLOR11 = 312
visCtrlIDCOLOR12 = 313
visCtrlIDCOLOR13 = 314
visCtrlIDCOLOR14 = 315
visCtrlIDCOLOR15 = 316
visCtrlIDCOLOR16 = 317
visCtrlIDTRANSPARENT = 318
visCtrlIDALLSTYLESLABEL = 400
visCtrlIDTEXTSTYLELABEL = 401
visCtrlIDLINESTYLELABEL = 402
visCtrlIDFILLSTYLELABEL = 403
visCtrlIDZOOMLABEL = 404
visCtrlIDFONTLABEL = 405
visCtrlIDPOINTSIZELABEL = 406
visCtrlIDLEFTCOLORLABEL = 407
visCtrlIDRIGHTCOLORLABEL = 408
visCtrlIDSTATUSLABEL = 409
visCtrlIDPREVIEWLABEL = 410
visCtrlIDSTATUSREADOUT = 500
visCtrlIDSTATUSMSG_1 = 501
visCtrlIDSTATUSMSG_2 = 502
visCtrlIDSTATUSMSG_3 = 503
visCtrlIDSTATUSMSG_4 = 504
visCtrlIDSTATUSMSG_5 = 505
visCtrlIDSTATUSMSG_6 = 506
visCtrlIDSTATUSMSG_7 = 507
visCtrlIDSTATUSMSG_8 = 508
visCtrlIDSTATUSMSG_9 = 509
visCtrlIDSPLINETOOL = 79
visCtrlIDSPELLING = 100
visCtrlIDFORMATPAINTER = 101
visCtrlIDHELPMODE = 102
visCtrlIDLAYERPROPERTIES = 103
visCtrlIDLAYOUTSHAPES = 104
visCtrlIDINSERTHYPERLINK = 105
visCtrlIDSEARCHTHEWEB = 106
visCtrlIDGOBACK = 107
visCtrlIDGOFORWARD = 108
visCtrlIDWEBTOOLBAR = 109
visCtrlIDSHAPEEXPL = 110
visCtrlIDCUSTPROP = 111
visCtrlIDROTATETEXT = 112
visCtrlIDBULLETS = 113
visCtrlIDDECRINDENT = 114
visCtrlIDINCRINDENT = 115
visCtrlIDDECRPARA = 116
visCtrlIDINCRPARA = 117
visCtrlIDINSERTCONTROL = 118
visCtrlIDDESIGNMODE = 119
visCtrlIDSHAPESHEET = 120
visCtrlIDSHAPELAYER = 247
visCtrlIDGOTOPAGE = 207
visCtrlIDLINECOLORS = 241
visCtrlIDLINEWEIGHTS = 242
visCtrlIDLINEPATTERNS = 243
visCtrlIDFILLCOLORS = 244
visCtrlIDFILLPATTERNS = 245
visCtrlIDTEXTCOLORS = 246
visCtrlIDMACROS = 121
visCtrlIDVBEDITOR = 122
visCtrlIDSHAPELAYERCOMBO = 208
visCtrlIDSHAPELAYERLIST = 228
visCtrlIDALIGNSHAPES = 260
visCtrlIDDISTRIBUTESHAPES = 261
visCtrlIDMSG_PAGES = 510
VisUICtrlIDs = c_int # enum
tagVisUICtrlIDs = VisUICtrlIDs
class IVMenuItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0216-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVMenuItem._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'plIndex' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'MenuItems',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuItems)), 'lplpVMenuItems' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuItems)), 'lplpVMenuItems' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'CmdNum',
              ( ['in'], c_short, 'pwCmd' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'CmdNum',
              ( ['retval', 'out'], POINTER(c_short), 'pwCmd' )),
    COMMETHOD([dispid(1610743815), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpContextID',
              ( ['in'], c_short, 'pHelpContextID' )),
    COMMETHOD([dispid(1610743815), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpContextID',
              ( ['retval', 'out'], POINTER(c_short), 'pHelpContextID' )),
    COMMETHOD([dispid(1610743817), helpstring(u'IsSeparator is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'IsSeparator',
              ( ['retval', 'out'], POINTER(c_short), 'pIsSeparator' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'IsHierarchical',
              ( ['retval', 'out'], POINTER(c_short), 'pIsHierarchical' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'ActionText',
              ( ['in'], BSTR, 'pActionText' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'ActionText',
              ( ['retval', 'out'], POINTER(BSTR), 'pActionText' )),
    COMMETHOD([dispid(1610743823), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propput'], HRESULT, 'MiniHelp',
              ( ['in'], BSTR, 'pMiniHelp' )),
    COMMETHOD([dispid(1610743823), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propget'], HRESULT, 'MiniHelp',
              ( ['retval', 'out'], POINTER(BSTR), 'pMiniHelp' )),
    COMMETHOD([dispid(1610743825), 'propput'], HRESULT, 'AddOnName',
              ( ['in'], BSTR, 'pAddOnName' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'AddOnName',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnName' )),
    COMMETHOD([dispid(1610743827), 'propput'], HRESULT, 'AddOnArgs',
              ( ['in'], BSTR, 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'AddOnArgs',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743829), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpFile',
              ( ['in'], BSTR, 'pHelpFile' )),
    COMMETHOD([dispid(1610743829), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpFile',
              ( ['retval', 'out'], POINTER(BSTR), 'pHelpFile' )),
    COMMETHOD([dispid(1610743831), 'propput'], HRESULT, 'CntrlType',
              ( ['in'], c_short, 'pwCntrlType' )),
    COMMETHOD([dispid(1610743831), 'propget'], HRESULT, 'CntrlType',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlType' )),
    COMMETHOD([dispid(1610743833), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'CntrlID',
              ( ['in'], c_short, 'pwCntrlID' )),
    COMMETHOD([dispid(1610743833), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'CntrlID',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlID' )),
    COMMETHOD([dispid(1610743835), 'propput'], HRESULT, 'TypeSpecific1',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'TypeSpecific1',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743837), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Priority',
              ( ['in'], c_short, 'pwPriority' )),
    COMMETHOD([dispid(1610743837), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_short), 'pwPriority' )),
    COMMETHOD([dispid(1610743839), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_short, 'pwSpacing' )),
    COMMETHOD([dispid(1610743839), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Spacing',
              ( ['retval', 'out'], POINTER(c_short), 'pwSpacing' )),
    COMMETHOD([dispid(1610743841), 'propput'], HRESULT, 'TypeSpecific2',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'TypeSpecific2',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743843)], HRESULT, 'IconFileName',
              ( ['in'], BSTR, 'IconFileName' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbBuiltIn' )),
    COMMETHOD([dispid(1610743845), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pbEnabled' )),
    COMMETHOD([dispid(1610743845), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEnabled' )),
    COMMETHOD([dispid(1610743847), 'propput'], HRESULT, 'FaceID',
              ( ['in'], c_short, 'pwFaceID' )),
    COMMETHOD([dispid(1610743847), 'propget'], HRESULT, 'FaceID',
              ( ['retval', 'out'], POINTER(c_short), 'pwFaceID' )),
    COMMETHOD([dispid(1610743849), 'propput'], HRESULT, 'State',
              ( ['in'], c_short, 'pwState' )),
    COMMETHOD([dispid(1610743849), 'propget'], HRESULT, 'State',
              ( ['retval', 'out'], POINTER(c_short), 'pwState' )),
    COMMETHOD([dispid(1610743851), 'propput'], HRESULT, 'Style',
              ( ['in'], c_short, 'pwStyle' )),
    COMMETHOD([dispid(1610743851), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(c_short), 'pwStyle' )),
    COMMETHOD([dispid(1610743853), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(1610743853), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(1610743855), 'propput'], HRESULT, 'Width',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743855), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
    COMMETHOD([dispid(1610743857), 'propput'], HRESULT, 'PaletteWidth',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743857), 'propget'], HRESULT, 'PaletteWidth',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
    COMMETHOD([dispid(1610743859), 'propput'], HRESULT, 'BeginGroup',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743859), 'propget'], HRESULT, 'BeginGroup',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
]
################################################################
## code template for IVMenuItem implementation
##class IVMenuItem_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return plIndex
##
##    def _get(self):
##        '-no docstring-'
##        #return pwStyle
##    def _set(self, pwStyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnName
##    def _set(self, pAddOnName):
##        '-no docstring-'
##    AddOnName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pActionText
##    def _set(self, pActionText):
##        '-no docstring-'
##    ActionText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Minihelp is obsolete as of Visio 2002.'
##        #return pMiniHelp
##    def _set(self, pMiniHelp):
##        u'Minihelp is obsolete as of Visio 2002.'
##    MiniHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCmd
##    def _set(self, pwCmd):
##        '-no docstring-'
##    CmdNum = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Priority is obsolete as of Visio 2000.'
##        #return pwPriority
##    def _set(self, pwPriority):
##        u'Priority is obsolete as of Visio 2000.'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwState
##    def _set(self, pwState):
##        '-no docstring-'
##    State = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsHierarchical(self):
##        '-no docstring-'
##        #return pIsHierarchical
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVMenuItems
##
##    @property
##    def MenuItems(self):
##        '-no docstring-'
##        #return lplpVMenuItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    PaletteWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Spacing is obsolete as of Visio 2000.'
##        #return pwSpacing
##    def _set(self, pwSpacing):
##        u'Spacing is obsolete as of Visio 2000.'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'HelpContextID is obsolete as of Visio 2000.'
##        #return pHelpContextID
##    def _set(self, pHelpContextID):
##        u'HelpContextID is obsolete as of Visio 2000.'
##    HelpContextID = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    BeginGroup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pCaption
##
##    def _get(self):
##        '-no docstring-'
##        #return pbEnabled
##    def _set(self, pbEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCntrlType
##    def _set(self, pwCntrlType):
##        '-no docstring-'
##    CntrlType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnArgs
##    def _set(self, pAddOnArgs):
##        '-no docstring-'
##    AddOnArgs = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsSeparator(self):
##        u'IsSeparator is obsolete as of Visio 2000.'
##        #return pIsSeparator
##
##    def _get(self):
##        u'HelpFile is obsolete as of Visio 2000.'
##        #return pHelpFile
##    def _set(self, pHelpFile):
##        u'HelpFile is obsolete as of Visio 2000.'
##    HelpFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'CntrlID is obsolete as of Visio 2000.'
##        #return pwCntrlID
##    def _set(self, pwCntrlID):
##        u'CntrlID is obsolete as of Visio 2000.'
##    CntrlID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific2 = property(_get, _set, doc = _set.__doc__)
##
##    def IconFileName(self, IconFileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pbBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return pwFaceID
##    def _set(self, pwFaceID):
##        '-no docstring-'
##    FaceID = property(_get, _set, doc = _set.__doc__)
##

class Connect(CoClass):
    u'Represents a positional association from one Visio Shape to another.'
    _reg_clsid_ = GUID('{000D0A18-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Connect._com_interfaces_ = [IVConnect]

class IVFonts(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0715-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVFont(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0714-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVFonts._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Fonts collection is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVFont)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVFont)), 'lpdispRet' )),
    COMMETHOD([dispid(5), helpstring(u'Returns visObjTypeFonts (28).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVFonts implementation
##class IVFonts_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in a Fonts collection is item 1.'
##        #return lpdispRet
##
##    @property
##    def ItemFromID(self, ObjectID):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeFonts (28).'
##        #return lpi2Ret
##


# values for enumeration 'VisMouseMoveDragStates'
visMouseMoveDragStatesNone = 0
visMouseMoveDragStatesBegin = 1
visMouseMoveDragStatesEnter = 2
visMouseMoveDragStatesOver = 3
visMouseMoveDragStatesLeave = 4
visMouseMoveDragStatesDrop = 5
VisMouseMoveDragStates = c_int # enum
class Connects(CoClass):
    u'The Connect objects associated with a Visio Shape, Page or Master. The first Connect in a Connects collection is item 1.'
    _reg_clsid_ = GUID('{000D0A19-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Connects._com_interfaces_ = [IVConnects]

class Global(CoClass):
    u"Properties provided by a Visio Application that are members of no class. Use these properties from code in a Visio Document's VBA project."
    _reg_clsid_ = GUID('{000D0A1A-0000-0000-C000-000000000046}')
    _idlflags_ = ['appobject', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVGlobal(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D071C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Global._com_interfaces_ = [IVGlobal]


# values for enumeration 'VisLangFlags'
visLangLocal = 0
visLangUniversal = 1
VisLangFlags = c_int # enum

# values for enumeration 'VisPublishPages'
visPublishPageAll = 0
visPublishPageSelect = 1
VisPublishPages = c_int # enum

# values for enumeration 'VisPublishDataRecordsets'
visPublishDataRecordsetAll = 0
visPublishDataRecordsetNone = 1
visPublishDataRecordsetSelect = 2
VisPublishDataRecordsets = c_int # enum
IVServerPublishOptions._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'IsPublishedPage',
              ( ['in'], BSTR, 'PageName' ),
              ( ['in'], VisLangFlags, 'Flags' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'IsPublished' )),
    COMMETHOD([dispid(1610743813)], HRESULT, 'IncludePage',
              ( ['in'], BSTR, 'PageName' ),
              ( ['in'], VisLangFlags, 'Flags' )),
    COMMETHOD([dispid(1610743814)], HRESULT, 'ExcludePage',
              ( ['in'], BSTR, 'PageName' ),
              ( ['in'], VisLangFlags, 'Flags' )),
    COMMETHOD([dispid(1610743815)], HRESULT, 'SetPagesToPublish',
              ( ['in'], VisPublishPages, 'PublishPages' ),
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'NamesArray' ),
              ( ['in'], VisLangFlags, 'Flags' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'GetPagesToPublish',
              ( ['in'], VisLangFlags, 'Flags' ),
              ( ['out'], POINTER(VisPublishPages), 'PublishPages' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NamesArray' )),
    COMMETHOD([dispid(1610743817)], HRESULT, 'SetRecordsetsToPublish',
              ( ['in'], VisPublishDataRecordsets, 'PublishDataRecordsets' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'DataRecordsetIDs' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'GetRecordsetsToPublish',
              ( ['out'], POINTER(VisPublishDataRecordsets), 'PublishDataRecordsets' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'DataRecordsetIDs' )),
]
################################################################
## code template for IVServerPublishOptions implementation
##class IVServerPublishOptions_Impl(object):
##    def ExcludePage(self, PageName, Flags):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def SetPagesToPublish(self, PublishPages, NamesArray, Flags):
##        '-no docstring-'
##        #return 
##
##    def GetPagesToPublish(self, Flags):
##        '-no docstring-'
##        #return PublishPages, NamesArray
##
##    def SetRecordsetsToPublish(self, PublishDataRecordsets, DataRecordsetIDs):
##        '-no docstring-'
##        #return 
##
##    def IncludePage(self, PageName, Flags):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetRecordsetsToPublish(self):
##        '-no docstring-'
##        #return PublishDataRecordsets, DataRecordsetIDs
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def IsPublishedPage(self, PageName, Flags):
##        '-no docstring-'
##        #return IsPublished
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

class UIObject(CoClass):
    u'The menus, toolbars and accelerators associated with a Visio Application or Document.'
    _reg_clsid_ = GUID('{000D0201-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
UIObject._com_interfaces_ = [IVUIObject]

class OLEObjects(CoClass):
    u'The COM objects contained in or linked to a Visio Document, Page or Master. The first OLEObject in an OLEObjects collection is item 1.'
    _reg_clsid_ = GUID('{000D0A1C-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
OLEObjects._com_interfaces_ = [IVOLEObjects]

class MenuItem(CoClass):
    u'An item in a Visio Menu.'
    _reg_clsid_ = GUID('{000D0210-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
MenuItem._com_interfaces_ = [IVMenuItem]


# values for enumeration 'VisWindowScrollY'
visScrollNoneY = 9
visScrollUp = 0
visScrollUpPage = 2
visScrollDown = 1
visScrollDownPage = 3
visScrollToTop = 6
visScrollToBottom = 7
VisWindowScrollY = c_int # enum
tagVisWindowScrollY = VisWindowScrollY
class MenuItems(CoClass):
    u'The items of a Visio Menu or subitems of a MenuItem. The first MenuItem in a MenuItems collection is item 0.'
    _reg_clsid_ = GUID('{000D0215-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
MenuItems._com_interfaces_ = [IVMenuItems]

class IVDataRecordsetChangedEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0733-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVDataRecordsetChangedEvent._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'DataRecordset',
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'DataRowsAdded',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'IDsForNewRows' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'DataRowsDeleted',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'IDsForDeletedRows' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'DataColumnsAdded',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(BSTR)), 'NamesForNewColumns' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'DataColumnsDeleted',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(BSTR)), 'NamesForDeletedColumns' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'DataColumnsChanged',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(BSTR)), 'NamesForChangedColumns' )),
]
################################################################
## code template for IVDataRecordsetChangedEvent implementation
##class IVDataRecordsetChangedEvent_Impl(object):
##    @property
##    def DataColumnsChanged(self):
##        '-no docstring-'
##        #return NamesForChangedColumns
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def DataColumnsDeleted(self):
##        '-no docstring-'
##        #return NamesForDeletedColumns
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def DataRowsAdded(self):
##        '-no docstring-'
##        #return IDsForNewRows
##
##    @property
##    def DataRecordset(self):
##        '-no docstring-'
##        #return DataRecordset
##
##    @property
##    def DataRowsDeleted(self):
##        '-no docstring-'
##        #return IDsForDeletedRows
##
##    @property
##    def DataColumnsAdded(self):
##        '-no docstring-'
##        #return NamesForNewColumns
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##


# values for enumeration 'VisThemeEffects'
visThemeEffectsNone = 0
visThemeEffectsSubdued = 1
visThemeEffectsSimpleShadow = 2
visThemeEffectsButton = 3
visThemeEffectsSquare = 4
visThemeEffectsPillow = 5
visThemeEffectsBevelIllusion = 6
visThemeEffectsBevelHighlight = 7
visThemeEffectsOutline = 8
visThemeEffectsDecal = 9
visThemeEffectsRaisedSurface = 10
visThemeEffectsMesh = 11
visThemeEffectsPinstripe = 12
visThemeEffectsStripes = 13
visThemeEffectsOblique = 14
visThemeEffectsToy = 15
visThemeEffectsBasicShadow = 16
VisThemeEffects = c_int # enum
class Menu(CoClass):
    u'The MenuItems constituting a menu.'
    _reg_clsid_ = GUID('{000D0220-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVMenu(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0222-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Menu._com_interfaces_ = [IVMenu]

class IVMenuSets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0236-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVAccelTables(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D02A5-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVUIObject._methods_ = [
    COMMETHOD([dispid(1610743808), 'hidden'], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pName' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'pName' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pName' )),
    COMMETHOD([dispid(1610743812), helpstring(u'Visio versions 5.0 and later no longer support UIObject flavors.'), 'hidden', 'propput'], HRESULT, 'Flavor',
              ( ['in'], c_short, 'pFlavor' )),
    COMMETHOD([dispid(1610743812), helpstring(u'Visio versions 5.0 and later no longer support UIObject flavors.'), 'hidden', 'propget'], HRESULT, 'Flavor',
              ( ['retval', 'out'], POINTER(c_short), 'pFlavor' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'MenuSets',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuSets)), 'lplpVMenuSets' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'ToolbarSets',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarSets)), 'lplpVToolbarSets' )),
    COMMETHOD([dispid(1610743816), helpstring(u'StatusBars is obsolete as of Visio 2002.'), 'hidden', 'propget'], HRESULT, 'StatusBars',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBars)), 'lplpVStatusBars' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'AccelTables',
              ( ['retval', 'out'], POINTER(POINTER(IVAccelTables)), 'lplpVAccelTables' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'SaveToFile',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(1610743819)], HRESULT, 'LoadFromFile',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'UpdateUI'),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'DisplayKeysInTooltips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbShow' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'DisplayKeysInTooltips',
              ( ['in'], VARIANT_BOOL, 'pbShow' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'DisplayTooltips',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbShow' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'DisplayTooltips',
              ( ['in'], VARIANT_BOOL, 'pbShow' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'LargeButtons',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbLarge' )),
    COMMETHOD([dispid(1610743825), 'propput'], HRESULT, 'LargeButtons',
              ( ['in'], VARIANT_BOOL, 'pbLarge' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'MenuAnimationStyle',
              ( ['retval', 'out'], POINTER(c_short), 'pAnim' )),
    COMMETHOD([dispid(1610743827), 'propput'], HRESULT, 'MenuAnimationStyle',
              ( ['in'], c_short, 'pAnim' )),
    COMMETHOD([dispid(1610743829), 'propget'], HRESULT, 'Clone',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'ppUIObject' )),
]
################################################################
## code template for IVUIObject implementation
##class IVUIObject_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pbLarge
##    def _set(self, pbLarge):
##        '-no docstring-'
##    LargeButtons = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ToolbarSets(self):
##        '-no docstring-'
##        #return lplpVToolbarSets
##
##    def SaveToFile(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pName
##    def _set(self, pName):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MenuSets(self):
##        '-no docstring-'
##        #return lplpVMenuSets
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pName
##
##    def LoadFromFile(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def UpdateUI(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pAnim
##    def _set(self, pAnim):
##        '-no docstring-'
##    MenuAnimationStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AccelTables(self):
##        '-no docstring-'
##        #return lplpVAccelTables
##
##    def _get(self):
##        '-no docstring-'
##        #return pbShow
##    def _set(self, pbShow):
##        '-no docstring-'
##    DisplayTooltips = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Visio versions 5.0 and later no longer support UIObject flavors.'
##        #return pFlavor
##    def _set(self, pFlavor):
##        u'Visio versions 5.0 and later no longer support UIObject flavors.'
##    Flavor = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Clone(self):
##        '-no docstring-'
##        #return ppUIObject
##
##    @property
##    def StatusBars(self):
##        u'StatusBars is obsolete as of Visio 2002.'
##        #return lplpVStatusBars
##
##    def _get(self):
##        '-no docstring-'
##        #return pbShow
##    def _set(self, pbShow):
##        '-no docstring-'
##    DisplayKeysInTooltips = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

class IVInvisibleApp(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D072C-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
IVInvisibleApp._methods_ = [
    COMMETHOD(['propget'], HRESULT, 'ActiveDocument',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'ActivePage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'ActiveWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD(['propget', helpstring(u'Returns Visio Application instance hosting the object.')], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'Documents',
              ( ['retval', 'out'], POINTER(POINTER(IVDocuments)), 'lpdispRet' )),
    COMMETHOD(['propget', helpstring(u'Returns visObjTypeApp (3).')], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'OnDataChangeDelay',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD(['propput'], HRESULT, 'OnDataChangeDelay',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD(['propget'], HRESULT, 'ProcessID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([], HRESULT, 'Quit'),
    COMMETHOD([], HRESULT, 'Redo'),
    COMMETHOD(['propget'], HRESULT, 'ScreenUpdating',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'ScreenUpdating',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([], HRESULT, 'Undo'),
    COMMETHOD(['propget'], HRESULT, 'Version',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'WindowHandle',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'Windows',
              ( ['retval', 'out'], POINTER(POINTER(IVWindows)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'Language',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'IsVisio16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'IsVisio32',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'WindowHandle32',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'InstanceHandle',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'InstanceHandle32',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD(['propget'], HRESULT, 'BuiltInMenus',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'BuiltInToolbars',
              ( ['in'], c_short, 'fIgnored' ),
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'CustomMenus',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([], HRESULT, 'SetCustomMenus',
              ( ['in'], POINTER(IVUIObject), 'MenusObject' )),
    COMMETHOD(['propget'], HRESULT, 'CustomMenusFile',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'CustomMenusFile',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([], HRESULT, 'ClearCustomMenus'),
    COMMETHOD(['propget'], HRESULT, 'CustomToolbars',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([], HRESULT, 'SetCustomToolbars',
              ( ['in'], POINTER(IVUIObject), 'ToolbarsObject' )),
    COMMETHOD(['propget'], HRESULT, 'CustomToolbarsFile',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'CustomToolbarsFile',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([], HRESULT, 'ClearCustomToolbars'),
    COMMETHOD(['propget'], HRESULT, 'AddonPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'AddonPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'DrawingPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'DrawingPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'FilterPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'FilterPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'HelpPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'HelpPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'StartupPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'StartupPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'StencilPaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'StencilPaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'TemplatePaths',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'TemplatePaths',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'UserName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'UserName',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'PromptForSummary',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'PromptForSummary',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'Addons',
              ( ['retval', 'out'], POINTER(POINTER(IVAddons)), 'lpdispRet' )),
    COMMETHOD(['hidden'], HRESULT, 'SaveWorkspaceAs',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([], HRESULT, 'DoCmd',
              ( ['in'], c_short, 'CommandID' )),
    COMMETHOD(['hidden', helpstring(u'ProfileName is obsolete as of Visio 2000.'), 'propget'], HRESULT, 'ProfileName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'EventInfo',
              ( ['in'], c_int, 'eventSeqNum' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'Active',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'DeferRecalc',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'DeferRecalc',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'AlertResponse',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'AlertResponse',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'ShowProgress',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'ShowProgress',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget', helpstring(u'Interface returned is VBIDE.VBE.')], HRESULT, 'Vbe',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD(['hidden', helpstring(u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'), 'propget'], HRESULT, 'ShowMenus',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['hidden', helpstring(u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'), 'propput'], HRESULT, 'ShowMenus',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['hidden', helpstring(u'Superseded by App.ShowToolbar as of Visio 5.0.'), 'propget'], HRESULT, 'ToolbarStyle',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['hidden', helpstring(u'Superseded by App.ShowToolbar as of Visio 5.0.'), 'propput'], HRESULT, 'ToolbarStyle',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'ShowStatusBar',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'ShowStatusBar',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'EventsEnabled',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'EventsEnabled',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([], HRESULT, 'FormatResult',
              ( ['in'], VARIANT, 'StringOrNumber' ),
              ( ['in'], VARIANT, 'UnitsIn' ),
              ( ['in'], VARIANT, 'UnitsOut' ),
              ( ['in'], BSTR, 'Format' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([], HRESULT, 'ConvertResult',
              ( ['in'], VARIANT, 'StringOrNumber' ),
              ( ['in'], VARIANT, 'UnitsIn' ),
              ( ['in'], VARIANT, 'UnitsOut' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD(['propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([], HRESULT, 'EnumDirectories',
              ( ['in'], BSTR, 'PathsString' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
    COMMETHOD(['propget'], HRESULT, 'TraceFlags',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD(['propput'], HRESULT, 'TraceFlags',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([], HRESULT, 'PurgeUndo'),
    COMMETHOD([], HRESULT, 'QueueMarkerEvent',
              ( ['in'], BSTR, 'ContextString' ),
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD(['propget', helpstring(u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.')], HRESULT, 'ShowToolbar',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput', helpstring(u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.')], HRESULT, 'ShowToolbar',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'LiveDynamics',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD(['propput'], HRESULT, 'LiveDynamics',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD(['propget'], HRESULT, 'AutoLayout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD(['propput'], HRESULT, 'AutoLayout',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD(['propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD(['propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([], HRESULT, 'BeginUndoScope',
              ( ['in'], BSTR, 'bstrUndoScopeName' ),
              ( ['retval', 'out'], POINTER(c_int), 'pnScopeID' )),
    COMMETHOD([], HRESULT, 'EndUndoScope',
              ( ['in'], c_int, 'nScopeID' ),
              ( ['in'], VARIANT_BOOL, 'bCommit' )),
    COMMETHOD([], HRESULT, 'AddUndoUnit',
              ( ['in'], POINTER(IUnknown), 'pUndoUnit' )),
    COMMETHOD(['propget'], HRESULT, 'CommandLine',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCmdLine' )),
    COMMETHOD(['propget'], HRESULT, 'IsUndoingOrRedoing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbInUndoOrRedo' )),
    COMMETHOD(['propget'], HRESULT, 'CurrentScope',
              ( ['retval', 'out'], POINTER(c_int), 'pnCmdID' )),
    COMMETHOD(['propget'], HRESULT, 'IsInScope',
              ( ['in'], c_int, 'nCmdID' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbInScope' )),
    COMMETHOD(['hidden', helpstring(u'Collection of COM Addins that are registered.'), 'propget'], HRESULT, 'old_Addins',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD(['hidden', helpstring(u'ProductName is obsolete as of Visio 2000.'), 'propget'], HRESULT, 'ProductName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'UndoEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD(['propput'], HRESULT, 'UndoEnabled',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD(['propget'], HRESULT, 'ShowChanges',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD(['propput'], HRESULT, 'ShowChanges',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD(['propget'], HRESULT, 'TypelibMajorVersion',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'TypelibMinorVersion',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'AutoRecoverInterval',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'AutoRecoverInterval',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'InhibitSelectChange',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD(['propput'], HRESULT, 'InhibitSelectChange',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD(['propget'], HRESULT, 'ActivePrinter',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrPrinterName' )),
    COMMETHOD(['propput'], HRESULT, 'ActivePrinter',
              ( ['in'], BSTR, 'pbstrPrinterName' )),
    COMMETHOD(['propget', helpstring(u'Use the elements returned in this array with the ActivePrinter property.')], HRESULT, 'AvailablePrinters',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(BSTR)), 'NamesArray' )),
    COMMETHOD([helpstring(u'Renames the currently open top level undo scope such that bstrScopeName shows up in the do menu item. Raises an exception if not in an open scope.')], HRESULT, 'RenameCurrentScope',
              ( ['in'], BSTR, 'bstrScopeName' )),
    COMMETHOD([], HRESULT, 'InvokeHelp',
              ( ['in'], BSTR, 'bstrHelpFileName' ),
              ( ['in'], c_int, 'Command' ),
              ( ['in'], c_int, 'Data' )),
    COMMETHOD(['propget', helpstring(u'Interface returned is Office.CommandBars.')], HRESULT, 'CommandBars',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'Build',
              ( ['retval', 'out'], POINTER(c_int), 'pnBuild' )),
    COMMETHOD(['propget', helpstring(u'Interface returned is Office.COMAddIns.')], HRESULT, 'COMAddIns',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'DefaultPageUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD(['hidden', 'propput'], HRESULT, 'DefaultPageUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultTextUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultTextUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultAngleUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultAngleUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultDurationUnits',
              ( ['retval', 'out'], POINTER(VARIANT), 'pUnitsNameOrCode' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultDurationUnits',
              ( ['in'], VARIANT, 'pUnitsNameOrCode' )),
    COMMETHOD(['propget'], HRESULT, 'FullBuild',
              ( ['retval', 'out'], POINTER(c_int), 'pnFullBuild' )),
    COMMETHOD([], HRESULT, 'OnComponentEnterState',
              ( ['in'], VisOnComponentEnterCodes, 'uStateID' ),
              ( ['in'], VARIANT_BOOL, 'bEnter' )),
    COMMETHOD(['propget'], HRESULT, 'VBAEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultZoomBehavior',
              ( ['retval', 'out'], POINTER(VisZoomBehavior), 'pnZoomBehavior' )),
    COMMETHOD(['propput'], HRESULT, 'DefaultZoomBehavior',
              ( ['in'], VisZoomBehavior, 'pnZoomBehavior' )),
    COMMETHOD(['hidden'], HRESULT, 'GetUsageStatistic',
              ( ['in'], c_int, 'nWhichStatistic' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvStatistic' )),
    COMMETHOD(['propget', helpstring(u'Returns font Visio is using in its dialogs.')], HRESULT, 'DialogFont',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IFontDisp)), 'ppFontDisp' )),
    COMMETHOD(['propget'], HRESULT, 'LanguageHelp',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD(['propget'], HRESULT, 'Window',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrName' )),
    COMMETHOD(['propget'], HRESULT, 'ConnectorToolDataObject',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'Settings',
              ( ['retval', 'out'], POINTER(POINTER(IVApplicationSettings)), 'lpSettingRet' )),
    COMMETHOD([], HRESULT, 'FormatResultEx',
              ( ['in'], VARIANT, 'StringOrNumber' ),
              ( ['in'], VARIANT, 'UnitsIn' ),
              ( ['in'], VARIANT, 'UnitsOut' ),
              ( ['in'], BSTR, 'Format' ),
              ( ['in', 'optional'], c_int, 'LangID', 0 ),
              ( ['in', 'optional'], c_int, 'CalendarID', -1 ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'SaveAsWebObject',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD(['hidden', 'propget'], HRESULT, 'MsoDebugOptions',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'MyShapesPath',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propput'], HRESULT, 'MyShapesPath',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'DefaultRectangleDataObject',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lpunkRet' )),
    COMMETHOD(['propget'], HRESULT, 'DataFeaturesEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD(['propget', helpstring(u'Interface returned is Office.LanguageSettings.')], HRESULT, 'LanguageSettings',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD(['propget'], HRESULT, 'Assistance',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([], HRESULT, 'RegisterRibbonX',
              ( ['in'], POINTER(IUnknown), 'SourceAddOn' ),
              ( ['in'], POINTER(IVDocument), 'TargetDocument' ),
              ( ['in'], VisRibbonXModes, 'TargetModes' ),
              ( ['in'], BSTR, 'FriendlyName' )),
    COMMETHOD([], HRESULT, 'UnregisterRibbonX',
              ( ['in'], POINTER(IUnknown), 'SourceAddOn' ),
              ( ['in'], POINTER(IVDocument), 'TargetDocument' )),
    COMMETHOD([], HRESULT, 'GetPreviewEnabled',
              ( ['in'], BSTR, 'GalleryName' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([], HRESULT, 'SetPreviewEnabled',
              ( ['in'], BSTR, 'GalleryName' ),
              ( [], VARIANT_BOOL, 'OnOrOff' )),
    COMMETHOD([], HRESULT, 'GetBuiltInStencilFile',
              ( ['in'], VisBuiltInStencilTypes, 'StencilType' ),
              ( ['in'], VisMeasurementSystem, 'MeasurementSystem' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([], HRESULT, 'GetCustomStencilFile',
              ( ['in'], VisBuiltInStencilTypes, 'StencilType' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD(['propget'], HRESULT, 'DeferRelationshipRecalc',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpi2Ret' )),
    COMMETHOD(['propput'], HRESULT, 'DeferRelationshipRecalc',
              ( ['in'], VARIANT_BOOL, 'lpi2Ret' )),
    COMMETHOD(['propget'], HRESULT, 'CurrentEdition',
              ( ['retval', 'out'], POINTER(VisEdition), 'pbRet' )),
    COMMETHOD(['propget'], HRESULT, 'InstanceHandle64',
              ( ['retval', 'out'], POINTER(c_longlong), 'lpi8Ret' )),
]
################################################################
## code template for IVInvisibleApp implementation
##class IVInvisibleApp_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    LiveDynamics = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrPrinterName
##    def _set(self, pbstrPrinterName):
##        '-no docstring-'
##    ActivePrinter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InstanceHandle32(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def ClearCustomMenus(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def TypelibMajorVersion(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    AutoLayout = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    TraceFlags = property(_get, _set, doc = _set.__doc__)
##
##    def GetBuiltInStencilFile(self, StencilType, MeasurementSystem):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def Undo(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ActiveDocument(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def IsUndoingOrRedoing(self):
##        '-no docstring-'
##        #return pbInUndoOrRedo
##
##    def _get(self):
##        '-no docstring-'
##        #return pnZoomBehavior
##    def _set(self, pnZoomBehavior):
##        '-no docstring-'
##    DefaultZoomBehavior = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowProgress = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeApp (3).'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    AutoRecoverInterval = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CommandLine(self):
##        '-no docstring-'
##        #return pbstrCmdLine
##
##    def InvokeHelp(self, bstrHelpFileName, Command, Data):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsInScope(self, nCmdID):
##        '-no docstring-'
##        #return pbInScope
##
##    def BeginUndoScope(self, bstrUndoScopeName):
##        '-no docstring-'
##        #return pnScopeID
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    UndoEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    CustomToolbarsFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Superseded by App.ShowToolbar as of Visio 5.0.'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        u'Superseded by App.ShowToolbar as of Visio 5.0.'
##    ToolbarStyle = property(_get, _set, doc = _set.__doc__)
##
##    def SetCustomMenus(self, MenusObject):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ScreenUpdating = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        u'In Visio 2002 and later, ShowToolbar hides/shows all commandbars - menus and toolbars. S now does nothing.'
##    ShowToolbar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultAngleUnits = property(_get, _set, doc = _set.__doc__)
##
##    def Quit(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Documents(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    StencilPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ConnectorToolDataObject(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    HelpPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Version(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def CustomMenus(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Build(self):
##        '-no docstring-'
##        #return pnBuild
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    MyShapesPath = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WindowHandle32(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def DefaultRectangleDataObject(self):
##        '-no docstring-'
##        #return lpunkRet
##
##    def SaveWorkspaceAs(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def SetPreviewEnabled(self, GalleryName, OnOrOff):
##        '-no docstring-'
##        #return 
##
##    @property
##    def COMAddIns(self):
##        u'Interface returned is Office.COMAddIns.'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    DeferRelationshipRecalc = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Settings(self):
##        '-no docstring-'
##        #return lpSettingRet
##
##    @property
##    def CurrentEdition(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def LanguageHelp(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    DeferRecalc = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EventInfo(self, eventSeqNum):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def OnComponentEnterState(self, uStateID, bEnter):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BuiltInToolbars(self, fIgnored):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ProductName(self):
##        u'ProductName is obsolete as of Visio 2000.'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultTextUnits = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProfileName(self):
##        u'ProfileName is obsolete as of Visio 2000.'
##        #return lpbstrRet
##
##    @property
##    def Assistance(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def FormatResultEx(self, StringOrNumber, UnitsIn, UnitsOut, Format, LangID, CalendarID):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def GetCustomStencilFile(self, StencilType):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    UserName = property(_get, _set, doc = _set.__doc__)
##
##    def FormatResult(self, StringOrNumber, UnitsIn, UnitsOut, Format):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    DrawingPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsVisio32(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def MsoDebugOptions(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CustomToolbars(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetUsageStatistic(self, nWhichStatistic):
##        '-no docstring-'
##        #return pvStatistic
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    CustomMenusFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    AddonPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultDurationUnits = property(_get, _set, doc = _set.__doc__)
##
##    def UnregisterRibbonX(self, SourceAddOn, TargetDocument):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    StartupPaths = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Active(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def TypelibMinorVersion(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def LanguageSettings(self):
##        u'Interface returned is Office.LanguageSettings.'
##        #return lpdispRet
##
##    @property
##    def ActivePage(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def InstanceHandle64(self):
##        '-no docstring-'
##        #return lpi8Ret
##
##    @property
##    def Language(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    FilterPaths = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    OnDataChangeDelay = property(_get, _set, doc = _set.__doc__)
##
##    def PurgeUndo(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Addons(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def QueueMarkerEvent(self, ContextString):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowStatusBar = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    TemplatePaths = property(_get, _set, doc = _set.__doc__)
##
##    def SetCustomToolbars(self, ToolbarsObject):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Window(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Redo(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CommandBars(self):
##        u'Interface returned is Office.CommandBars.'
##        #return lpdispRet
##
##    @property
##    def SaveAsWebObject(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ProcessID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def IsVisio16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        u'In Visio 2002 and later, ShowMenus does nothing. ShowToolbar now hides/shows all command menus and toolbars.'
##    ShowMenus = property(_get, _set, doc = _set.__doc__)
##
##    def ClearCustomToolbars(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def WindowHandle(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def VBAEnabled(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def CurrentScope(self):
##        '-no docstring-'
##        #return pnCmdID
##
##    @property
##    def FullBuild(self):
##        '-no docstring-'
##        #return pnFullBuild
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    ShowChanges = property(_get, _set, doc = _set.__doc__)
##
##    def RegisterRibbonX(self, SourceAddOn, TargetDocument, TargetModes, FriendlyName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def BuiltInMenus(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def RenameCurrentScope(self, bstrScopeName):
##        u'Renames the currently open top level undo scope such that bstrScopeName shows up in the do menu item. Raises an exception if not in an open scope.'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pUnitsNameOrCode
##    def _set(self, pUnitsNameOrCode):
##        '-no docstring-'
##    DefaultPageUnits = property(_get, _set, doc = _set.__doc__)
##
##    def EnumDirectories(self, PathsString):
##        '-no docstring-'
##        #return NameArray
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    PromptForSummary = property(_get, _set, doc = _set.__doc__)
##
##    def ConvertResult(self, StringOrNumber, UnitsIn, UnitsOut):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    InhibitSelectChange = property(_get, _set, doc = _set.__doc__)
##
##    def EndUndoScope(self, nScopeID, bCommit):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return pbstrName
##
##    @property
##    def Vbe(self):
##        u'Interface returned is VBIDE.VBE.'
##        #return lpdispRet
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DoCmd(self, CommandID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DataFeaturesEnabled(self):
##        '-no docstring-'
##        #return pbRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    EventsEnabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DialogFont(self):
##        u'Returns font Visio is using in its dialogs.'
##        #return ppFontDisp
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    AlertResponse = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def old_Addins(self):
##        u'Collection of COM Addins that are registered.'
##        #return lpdispRet
##
##    @property
##    def InstanceHandle(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetPreviewEnabled(self, GalleryName):
##        '-no docstring-'
##        #return pbRet
##
##    def AddUndoUnit(self, pUndoUnit):
##        '-no docstring-'
##        #return 
##
##    @property
##    def AvailablePrinters(self):
##        u'Use the elements returned in this array with the ActivePrinter property.'
##        #return NamesArray
##

class StatusBarItems(CoClass):
    u'StatusBarItems is obsolete as of Visio 2002. The first StatusBarItem in a StatusBarItems collection is item 0.'
    _reg_clsid_ = GUID('{000D0274-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
StatusBarItems._com_interfaces_ = [IVStatusBarItems]

class MenuSet(CoClass):
    u'A set of Menus associated with an interactive state, such as drawing window active, etc.'
    _reg_clsid_ = GUID('{000D0230-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVMenuSet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0232-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
MenuSet._com_interfaces_ = [IVMenuSet]

class MenuSets(CoClass):
    u'The menu sets associated with a Visio UIObject. The first MenuSet in a MenuSets collection is item 0.'
    _reg_clsid_ = GUID('{000D0235-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
MenuSets._com_interfaces_ = [IVMenuSets]


# values for enumeration 'VisCutCopyPasteCodes'
visCopyPasteNormal = 0
visCopyPasteNoTranslate = 1
visCopyPasteCenter = 2
visCopyPasteNoHealConnectors = 4
visCopyPasteNoContainerMembers = 8
visCopyPasteNoAssociatedCallouts = 16
visCopyPasteDontAddToContainers = 32
visCopyPasteNoCascade = 64
VisCutCopyPasteCodes = c_int # enum
tagVisCutCopyPasteCodes = VisCutCopyPasteCodes
class ToolbarItem(CoClass):
    u'An item such as a button in a Visio Toolbar.'
    _reg_clsid_ = GUID('{000D0240-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ToolbarItem._com_interfaces_ = [IVToolbarItem]

class IVSection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0724-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVStyle._methods_ = [
    COMMETHOD([dispid(2), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1), helpstring(u'Returns visObjTypeStyle (19).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u"Style's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'localeSpecificCellName' )),
    COMMETHOD([dispid(0), helpstring(u"Style's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'localeSpecificCellName' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'Index16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(6), helpstring(u'Locale specific name of style applied to this shape.'), 'propget'], HRESULT, 'BasedOn',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(6), helpstring(u'Locale specific name of style applied to this shape.'), 'propput'], HRESULT, 'BasedOn',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(7), helpstring(u'Locale specific name of text style applied to this shape.'), 'propget'], HRESULT, 'TextBasedOn',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(7), helpstring(u'Locale specific name of text style applied to this shape.'), 'propput'], HRESULT, 'TextBasedOn',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(8), helpstring(u'Locale specific name of line style applied to this shape.'), 'propget'], HRESULT, 'LineBasedOn',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(8), helpstring(u'Locale specific name of line style applied to this shape.'), 'propput'], HRESULT, 'LineBasedOn',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(9), helpstring(u'Locale specific name of fill style applied to this shape.'), 'propget'], HRESULT, 'FillBasedOn',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(9), helpstring(u'Locale specific name of fill style applied to this shape.'), 'propput'], HRESULT, 'FillBasedOn',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'IncludesText',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'propput'], HRESULT, 'IncludesText',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'IncludesLine',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'IncludesLine',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'IncludesFill',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(12), 'propput'], HRESULT, 'IncludesFill',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(13), helpstring(u'Returns cell of this style with given locale specific name.'), 'propget'], HRESULT, 'Cells',
              ( ['in'], BSTR, 'localeSpecificCellName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(14)], HRESULT, 'Delete'),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(17), 'hidden', 'propget'], HRESULT, 'ID16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(18), helpstring(u'Returns cell formulas in locale specific syntax.')], HRESULT, 'GetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(19)], HRESULT, 'GetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' )),
    COMMETHOD([dispid(20)], HRESULT, 'SetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(21)], HRESULT, 'SetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'Section',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSection)), 'lpdispRet' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'Hidden',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(25), 'propput'], HRESULT, 'Hidden',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(26), helpstring(u"Style's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(26), helpstring(u"Style's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(27), helpstring(u'Returns cell of this style with given locale independent name.'), 'propget'], HRESULT, 'CellsU',
              ( ['in'], BSTR, 'localeIndependentCellName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(28), helpstring(u'Returns whether this style has cell with given locale specific name.'), 'propget'], HRESULT, 'CellExists',
              ( ['in'], BSTR, 'localeSpecificCellName' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(29), helpstring(u'Returns whether this shape has cell with given locale independent name.'), 'propget'], HRESULT, 'CellExistsU',
              ( ['in'], BSTR, 'localeIndependentCellName' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(30), helpstring(u'Returns cell formulas in locale independent syntax.')], HRESULT, 'GetFormulasU',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(1610743849), 'propget'], HRESULT, 'CellsSRC',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'Column' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'CellsSRCExists',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'Column' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
]
################################################################
## code template for IVStyle implementation
##class IVStyle_Impl(object):
##    def SetResults(self, SRCStream, UnitsNamesOrCodes, resultArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Section(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetFormulas(self, SRCStream):
##        u'Returns cell formulas in locale specific syntax.'
##        #return formulaArray
##
##    def _get(self):
##        u'Locale specific name of fill style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of fill style applied to this shape.'
##    FillBasedOn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IncludesLine = property(_get, _set, doc = _set.__doc__)
##
##    def GetFormulasU(self, SRCStream):
##        u'Returns cell formulas in locale independent syntax.'
##        #return formulaArray
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IncludesText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def CellsSRC(self, Section, Row, Column):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Cells(self, localeSpecificCellName):
##        u'Returns cell of this style with given locale specific name.'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeStyle (19).'
##        #return lpi2Ret
##
##    def SetFormulas(self, SRCStream, formulaArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        u"Style's locale specific name."
##        #return localeSpecificCellName
##    def _set(self, localeSpecificCellName):
##        u"Style's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u'Locale specific name of text style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of text style applied to this shape.'
##    TextBasedOn = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Locale specific name of style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of style applied to this shape.'
##    BasedOn = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CellExistsU(self, localeIndependentCellName, fExistsLocally):
##        u'Returns whether this shape has cell with given locale independent name.'
##        #return lpi2Ret
##
##    def _get(self):
##        u"Style's locale independent name."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"Style's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IncludesFill = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CellExists(self, localeSpecificCellName, fExistsLocally):
##        u'Returns whether this style has cell with given locale specific name.'
##        #return lpi2Ret
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u'Locale specific name of line style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of line style applied to this shape.'
##    LineBasedOn = property(_get, _set, doc = _set.__doc__)
##
##    def GetResults(self, SRCStream, Flags, UnitsNamesOrCodes):
##        '-no docstring-'
##        #return resultArray
##
##    @property
##    def ID16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def CellsSRCExists(self, Section, Row, Column, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def CellsU(self, localeIndependentCellName):
##        u'Returns cell of this style with given locale independent name.'
##        #return lpdispRet
##


# values for enumeration 'VisWinTypes'
visWinOther = 0
visDrawing = 1
visStencil = 2
visSheet = 3
visIcon = 4
visApplication = 5
visAnchorBarBuiltIn = 6
visDockedStencilBuiltIn = 7
visDrawingAddon = 8
visStencilAddon = 9
visAnchorBarAddon = 10
visDockedStencilAddon = 11
visPageWin = 128
visPageGroupWin = 160
visMasterWin = 64
visMasterGroupWin = 96
visInvalWinID = -1
visWinIDCustProp = 1658
visWinIDPanZoom = 1653
visWinIDSizePos = 1670
visWinIDDrawingExplorer = 1721
visWinIDFormulaTracing = 1781
visWinIDStencilExplorer = 1796
visWinIDMasterExplorer = 1916
visWinIDShapeSearch = 1669
visWinIDExternalData = 2044
visWinIDValidationIssues = 2263
VisWinTypes = c_int # enum
class ToolbarItems(CoClass):
    u'The items of a Visio Toolbar or subitems of a ToolbarItem. The first ToolbarItem in a ToolbarItems collection is item 0.'
    _reg_clsid_ = GUID('{000D0244-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVToolbarItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0245-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
ToolbarItems._com_interfaces_ = [IVToolbarItems]

IEnumVMenu._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVMenu)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVMenu)), 'ppenm' )),
]
################################################################
## code template for IEnumVMenu implementation
##class IEnumVMenu_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

class Toolbars(CoClass):
    u'The toolbars of a Visio ToolbarSet. The first Toolbar in a Toolbars collection is item 0.'
    _reg_clsid_ = GUID('{000D0254-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVToolbars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0255-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Toolbars._com_interfaces_ = [IVToolbars]


# values for enumeration 'VisHitTestResults'
visHitOutside = 0
visHitOnBoundary = 1
visHitInside = 2
VisHitTestResults = c_int # enum

# values for enumeration 'VisUIBarRow'
visBarRowFirst = 0
visBarRowLast = -1
VisUIBarRow = c_int # enum
tagVisUIBarRow = VisUIBarRow

# values for enumeration 'VisMasterProperties'
visLeft = 1
visCenter = 2
visRight = 3
visIconFormatVisio = 0
visIconFormatBMP = 2
visNormal = 1
visTall = 2
visWide = 3
visDouble = 4
visAutomatic = 1
visManual = 0
visMasIsLinePat = 1
visMasIsLineEnd = 2
visMasIsFillPat = 4
visMasLPTileDeform = 0
visMasLPTile = 16
visMasLPStretch = 32
visMasLPAnnotate = 48
visMasLPScale = 64
visMasLEDefault = 0
visMasLEUpright = 256
visMasLEScale = 1024
visMasFPTile = 0
visMasFPCenter = 4096
visMasFPStretch = 8192
visMasFPScale = 16384
VisMasterProperties = c_int # enum
tagVisMasterProperties = VisMasterProperties

# values for enumeration 'VisFromParts'
visConnectFromError = -1
visFromNone = 0
visLeftEdge = 1
visCenterEdge = 2
visRightEdge = 3
visBottomEdge = 4
visMiddleEdge = 5
visTopEdge = 6
visBeginX = 7
visBeginY = 8
visBegin = 9
visEndX = 10
visEndY = 11
visEnd = 12
visFromAngle = 13
visFromPin = 14
visControlPoint = 100
VisFromParts = c_int # enum

# values for enumeration 'VisSnapExtensions'
visSnapExtNone = 0
visSnapExtAlignmentBoxExtension = 1
visSnapExtCenterAxes = 2
visSnapExtCurveTangent = 4
visSnapExtEndpoint = 8
visSnapExtMidpoint = 16
visSnapExtLinearExtension = 32
visSnapExtCurveExtension = 64
visSnapExtEndpointPerpendicular = 128
visSnapExtMidpointPerpendicular = 256
visSnapExtEndpointHorizontal = 512
visSnapExtEndpointVertical = 1024
visSnapExtEllipseCenter = 2048
visSnapExtIsometricAngles = 4096
VisSnapExtensions = c_int # enum

# values for enumeration 'VisUICmds'
visCmdFirst = 0
visCmdLast = 65535
visCmdHierarchical = 0
visCmdFileNew = 1001
visCmdFileOpen = 1002
visCmdFileClose = 1003
visCmdFileSave = 1004
visCmdFileSaveAs = 1005
visCmdFileSaveWorkspace = 1006
visCmdFileImport = 1007
visCmdFileSummaryInfoDlg = 1009
visCmdFilePrint = 1010
visCmdFileLastFile1 = 1012
visCmdFileLastFile2 = 1013
visCmdFileLastFile3 = 1014
visCmdFileLastFile4 = 1015
visCmdFileExit = 1016
visCmdEditUndo = 1017
visCmdEditRedo = 1018
visCmdEditRepeat = 1019
visCmdUFEditCut = 1020
visCmdUFEditCopy = 1021
visCmdUFEditPaste = 1022
visCmdUFEditClear = 1023
visCmdUFEditDuplicate = 1024
visCmdUFEditSelectAll = 1025
visCmdEditSelectSpecial = 1026
visCmdEditPasteSpecial = 1027
visCmdEditPasteLink = 1028
visCmdEditOpenObject = 1029
visCmdEditLinks = 1030
visCmdEditInsertObject = 1031
visCmdEditInsertField = 1032
visCmdViewFitInWindow = 1033
visCmdView75 = 1034
visCmdView100 = 1035
visCmdView150 = 1036
visCmdView200 = 1037
visCmdViewCustom = 1038
visCmdViewRulers = 1039
visCmdViewGrid = 1040
visCmdViewGuides = 1041
visCmdViewConnections = 1042
visCmdEditFind = 1043
visCmdViewStatusBar = 1044
visCmdObjectBringForward = 1045
visCmdObjectBringToFront = 1046
visCmdObjectSendBackward = 1047
visCmdObjectSendToBack = 1048
visCmdObjectAlignObjects = 1049
visCmdObjectConnectObjects = 1050
visCmdObjectGroup = 1051
visCmdObjectUngroup = 1052
visCmdObjectAddToGroup = 1053
visCmdObjectRemoveFromGroup = 1054
visCmdObjectConvertToGroup = 1055
visCmdObjectRotate90 = 1056
visCmdObjectFlipVertical = 1057
visCmdObjectFlipHorizontal = 1058
visCmdObjectReverse = 1059
visCmdObjectUnion = 1060
visCmdObjectCombine = 1061
visCmdObjectFragment = 1062
visCmdFormatStyle = 1063
visCmdFormatDefineStyles = 1064
visCmdFormatLine = 1065
visCmdFormatFill = 1066
visCmdFormatText = 1067
visCmdFormatParagraph = 1068
visCmdFormatTabs = 1069
visCmdFormatBlock = 1070
visCmdFormatBehavior = 1071
visCmdFormatProtection = 1072
visCmdFormatSpecial = 1073
visCmdOptionsEditDrawing = 1074
visCmdOptionsEditBackground = 1075
visCmdOptionsPageSetup = 1076
visCmdOptionsGoToDrawing = 1077
visCmdOptionsNewPage = 1078
visCmdOptionsDeletePages = 1079
visCmdOptionsReorderPages = 1080
visCmdOptionsPreferences = 1081
visCmdOptionsColorPaletteDlg = 1082
visCmdOptionsProtectDocument = 1083
visCmdOptionsSnapGlueSetup = 1084
visCmdWindowNewWindow = 1085
visCmdWindowCascadeAll = 1086
visCmdWindowTileAll = 1087
visCmdWindowShowShapeSheet = 1088
visCmdWindowShowMasterObjects = 1089
visCmdRunAddOnMenu = 1090
visCmdWindowShowDrawPage = 1091
visCmdHelpContents = 1092
visCmdDecreaseIndent = 1093
visCmdIncreaseIndent = 1094
visCmdDecreaseParaSpacing = 1095
visCmdIncreaseParaSpacing = 1096
visCmdHelpStencil = 1097
visCmdTextRotate90 = 1098
visCmdHelpQuickTour = 1099
visCmdHelpAboutVisio = 1100
visCmdStenEditIcon = 1101
visCmdStenEditDrawing = 1102
visCmdStenNameMaster = 1103
visCmdStenNewMaster = 1104
visCmdStenImageMaster = 1105
visCmdStenCleanup = 1106
visCmdSWShowValues = 1107
visCmdSWShowFormulas = 1108
visCmdSWShowSectionsDlg = 1109
visCmdSWPasteNameDlg = 1110
visCmdSWPasteFunctionDlg = 1111
visCmdSWInsertRow = 1112
visCmdSWInsertRowAfter = 1113
visCmdSWChangeRowTypeDlg = 1114
visCmdSWDeleteRow = 1115
visCmdSWAddSectionDlg = 1116
visCmdSWDeleteSection = 1117
visCmdFormatDoubleClick = 1118
visCmdDrawTextStyle = 1121
visCmdDrawLineStyle = 1122
visCmdDrawFillStyle = 1123
visCmdDrawSnap = 1124
visCmdDrawGlue = 1125
visCmdDrawZoom = 1126
visCmdTextStyle = 1128
visCmdTextFont = 1129
visCmdTextSize = 1130
visCmdTextBold = 1131
visCmdTextItalic = 1132
visCmdTextSmallCaps = 1133
visCmdTextSuperscript = 1134
visCmdTextSubscript = 1135
visCmdTextUline = 1136
visCmdSWCancel = 1139
visCmdSWAccept = 1140
visCmdSWFormula = 1141
visCmdSWShowToggle = 1142
visCmdIconLeftColor = 1143
visCmdIconRightColor = 1144
visCmdIconPencilTool = 1145
visCmdRecalcObjectWH = 1146
visCmdTurnToPrevPage = 1147
visCmdTurnToNextPage = 1148
visCmdEditReplace = 1179
visCmdDrawAddGuide = 1180
visCmdAddTextShape = 1181
visCmdDrawRect = 1182
visCmdDrawOval = 1183
visCmdDragDuplicate = 1184
visCmdMoveObject = 1185
visCmdMove1D = 1186
visCmdMove2D = 1187
visCmdSize1D = 1188
visCmdSize2D = 1189
visCmdRotateObject = 1190
visCmdCropObject = 1192
visCmdPanObject = 1193
visCmdSizeTextBlock = 1194
visCmdAlignObjectLeft = 1196
visCmdAlignObjectCenter = 1197
visCmdAlignObjectRight = 1198
visCmdAlignObjectTop = 1199
visCmdAlignObjectMiddle = 1200
visCmdAlignObjectBottom = 1201
visCmdCenterDrawing = 1202
visCmdDeselectAll = 1213
visCmdTextEditState = 1214
visCmdZoomPt = 1215
visCmdZoomIn = 1216
visCmdZoomOut = 1217
visCmdZoomArea = 1218
visCmdDRPointerTool = 1219
visCmdDRPencilTool = 1220
visCmdDRLineTool = 1221
visCmdDRQtrArcTool = 1222
visCmdDRRectTool = 1223
visCmdDROvalTool = 1224
visCmdDRConnectorTool = 1225
visCmdDRConnectionTool = 1226
visCmdDRTextTool = 1227
visCmdDRRotateTool = 1228
visCmdObjectDistributeDlg = 1230
visCmdDistributeHSpace = 1231
visCmdDistributeLeft = 1232
visCmdDistributeCenter = 1233
visCmdDistributeRight = 1234
visCmdDistributeVSpace = 1235
visCmdDistributeTop = 1236
visCmdDistributeMiddle = 1237
visCmdDistributeBottom = 1238
visCmdUpdateContentCache = 1241
visCmdDropOnText = 1243
visCmdDropOnStencil = 1244
visCmdDropOnPage = 1246
visCmdSSWindowCollapse = 1250
visCmdSSWindowExpand = 1251
visCmdSSWindowSelect = 1252
visCmdSSWindowDeselect = 1253
visCmdAddConnectPt = 1263
visCmdModConnectPt = 1264
visCmdDelConnectPt = 1265
visCmdAddControlPt = 1266
visCmdModControlPt = 1267
visCmdDelControlPt = 1268
visCmdMovConnectPt = 1269
visCmdToolsSpelling = 1270
visCmdFormatPainter = 1271
visCmdPageMeasureUnitsDlg = 1274
visCmdView50 = 1279
visCmdView400 = 1280
visCmdInsertDataMap = 1282
visCmdSendAsMail = 1292
visCmdShapeActions = 1309
visCmdDRSplineTool = 1311
visCmdFormatCustPropEdit = 1312
visCmdRulerGridDlg = 1318
visCmdFormatShadow = 1333
visCmdFormatCorners = 1334
visCmdToolsInventory = 1335
visCmdMasterSetup = 1343
visCmdToolsArrayShapesAddOn = 1354
visCmdSetLineWeight = 1355
visCmdSetLinePattern = 1356
visCmdSetLineEnds = 1357
visCmdSetLineCornerStyle = 1358
visCmdSetLineColor = 1359
visCmdCloseWindow = 1361
visCmdSetFillShadow = 1379
visCmdSSWindowShowSection = 1380
visCmdSSWindowPasteName = 1381
visCmdSSWindowPasteFunction = 1382
visCmdSSWindowChangeRowType = 1383
visCmdSSWindowAddSection = 1384
visCmdSetFillColor = 1385
visCmdHelpMode = 1386
visCmdOffsetDlg = 1387
visCmdDesignMode = 1388
visCmdShapeExplorer = 1389
visCmdSetFillPattern = 1399
visCmdSetCharColor = 1404
visCmdSetCharSizeUp = 1405
visCmdSetCharSizeDown = 1406
visCmdTextHAlignLeft = 1407
visCmdTextHAlignCenter = 1408
visCmdTextHAlignRight = 1409
visCmdTextHAlignJustify = 1412
visCmdTextVAlignTop = 1413
visCmdTextVAlignMiddle = 1414
visCmdTextVAlignBottom = 1422
visCmdStampTool = 1424
visCmdObjectInfoDlg = 1425
visCmdObjectHelp = 1428
visCmdEditConvertObject = 1439
visCmdFileOpenStencil = 1442
visCmdPrintPage = 1443
visCmdSWShapeActionDlg = 1444
visCmdLayerDlg = 1446
visCmdLayerSetupDlg = 1448
visCmdCropTool = 1449
visCmdTextBlockTool = 1451
visCmdStenClose = 1452
visCmdIntersect = 1453
visCmdSubtract = 1454
visCmdStenActivate = 1458
visCmdStenIconAndName = 1480
visCmdStenIconOnly = 1481
visCmdStenNameOnly = 1482
visCmdStenAutoArrange = 1483
visCmdRunAddOnDlg = 1484
visCmdPrintPreview = 1490
visCmdOpenInVisio = 1491
visCmdFullScreenMode = 1492
visCmdLayoutDynamic = 1493
visCmdRotate90Clockwise = 1494
visCmdZoomLast = 1495
visCmdZoomPageWidth = 1496
visCmdInsertClipArt = 1497
visCmdInsertWordArt = 1498
visCmdInsertMicrosoftGraph = 1499
visCmdToolbarsDlg = 1500
visCmdInsertComment = 1501
visCmdMoveComment = 1502
visCmdOpenCommentForEdit = 1503
visCmdMSOInsertSymbol = 1504
visCmdMSOInsertSymbolDlg = 1505
visCmdINETAddToFavorites = 1506
visCmdViewPageBreaks = 1509
visCmdZoomSingleTile = 1512
visCmdPreviousTile = 1513
visCmdNextTile = 1514
visCmdFirstTile = 1515
visCmdLastTile = 1516
visCmdInsertAutoCADAddOn = 1521
visCmdInsertControlDlg = 1522
visCmdJoin = 1533
visCmdTrim = 1534
visCmdDlgCustomFit = 1536
visCmdFitCurve = 1538
visCmdIconBucketTool = 1543
visCmdIconLassoTool = 1544
visCmdIconSelectNet = 1545
visCmdFileLastFile5 = 1561
visCmdFileLastFile6 = 1569
visCmdFileLastFile7 = 1570
visCmdFileLastFile8 = 1571
visCmdFileLastFile9 = 1572
visCmdToolsLayoutShapesDlg = 1574
visCmdToolsRunVBE = 1576
visCmdToolsMacroDlg = 1577
visCmdFileNewBlankDrawing = 1579
visCmdFileNewStencilDlg = 1580
visCmdFileNewBlankStencil = 1582
visCmdFileChooseTemplates = 1583
visCmdProgRefHelp = 1584
visCmdInsertHyperLink = 1585
visCmdHelpTemplates = 1586
visCmdEmailRouting = 1588
visCmdSendToExchange = 1589
visCmdRemoveVBAFromActiveDoc = 1590
visCmdINETUserSearchPage = 1595
visCmdINETVisioHomePage = 1596
visCmdINETGoForward = 1598
visCmdINETGoBack = 1599
visCmdOpenActiveObject = 1601
visCmdCancelInPlaceEditing = 1602
visCmdINETVisioSolutionsLibrary = 1604
visCmdINETKnowledgeBase = 1605
visCmdINETDiagrammingResources = 1606
visCmdINETOpenHlink = 1607
visCmdINETOpenHlinkNewWnd = 1608
visCmdINETDeleteHlink = 1609
visCmdINETCopyHyperlink = 1610
visCmdHyperlinkHier = 1611
visCmdINETEditHyperlink = 1619
visCmdINETPasteAsHyperlink = 1620
visCmdBullets = 1633
visCmdShapeLayerToolbar = 1634
visCmdGoToPageToolbar = 1635
visCmdFormatAllTextProps = 1642
visCmdBrowseSampleDrawings = 1645
visCmdMSOInsertEquation = 1646
visCmdABarHide = 1650
visCmdABarToggleFloat = 1651
visCmdABarAutohide = 1652
visCmdPanZoom = 1653
visCmdPagesList = 1654
visCmdCustProp = 1658
visCmdInkTool = 1661
visCmdInkCustomizePen = 1664
visCmdShapesWindow = 1669
visCmdSizePos = 1670
visCmdFileNewBlankDrawingMetric = 1671
visCmdFileNewBlankDrawingUS = 1672
visCmdFileNewBlankStencilMetric = 1673
visCmdFileNewBlankStencilUS = 1674
visCmdCustomPropertySets = 1675
visCmdStenSave = 1676
visCmdStenSaveAs = 1677
visCmdStenProperties = 1678
visCmdStenEditToggle = 1679
visCmdStenEditOn = 1680
visCmdStenEditOff = 1681
visCmdEditUndoMultiple = 1682
visCmdEditRedoMultiple = 1683
visCmdABarAutoHeight = 1684
visCmdShapeCommentDlg = 1685
visCmdShapeComment = 1686
visCmdFormatCustPropDef = 1687
visCmdShapeCommentDelete = 1688
visCmdHideDocumentStencil = 1689
visCmdToggleDocumentStencil = 1690
visCmdCustPropDefine = 1695
visCmdSetDynConnRerouteFreely = 1696
visCmdSetDynConnRerouteAsNeeded = 1697
visCmdSetDynConnRerouteNever = 1698
visCmdSetPagePlow = 1699
visCmdSetDynConnRoutingStyle = 1700
visCmdSetPlaceableShapeBehavior = 1702
visCmdSetPageLineJumpCode_Disp = 1703
visCmdSetPageLineJumpCode_None = 1704
visCmdSetPageLineJumpCode_Horz = 1705
visCmdSetPageLineJumpCode_Vert = 1706
visCmdSetPageLineJumpCode_Last = 1707
visCmdSetDynConnLineJumpStyle_Page = 1708
visCmdSetDynConnLineJumpStyle_Arc = 1709
visCmdSetDynConnLineJumpStyle_Gap = 1710
visCmdSetDynConnLineJumpStyle_Square = 1711
visCmdSetDynConnLineJumpStyle_Triangle = 1712
visCmdSetDynConnLineJumpStyle_2pt = 1713
visCmdSetDynConnLineJumpStyle_3pt = 1714
visCmdSetDynConnLineJumpStyle_4pt = 1715
visCmdSetDynConnLineJumpStyle_5pt = 1716
visCmdSetDynConnLineJumpStyle_6pt = 1717
visCmdSWExpandRow = 1718
visCmdHyperlinkList = 1719
visCmdHeaderFooter = 1720
visCmdDrawingExplorer = 1721
visCmdHideAllToolbars = 1726
visCmdTextStrikethrough = 1741
visCmdDrawRegion = 1742
visCmdSetAddMarkup = 1744
visCmdDynamicGrid = 1765
visCmdRulSub = 1766
visCmdGrid = 1767
visCmdAlignBox = 1768
visCmdShapeGeo = 1769
visCmdGuides = 1771
visCmdShapeHand = 1772
visCmdShapeVert = 1773
visCmdConnPoints = 1774
visCmdRecordNewMacro = 1775
visCmdStartRecordingMacro = 1776
visCmdStopRecordingMacro = 1777
visCmdPauseRecordingMacro = 1778
visCmdResumeRecordingMacro = 1779
visCmdSSWindowShowTraceWindow = 1781
visCmdFileSaveAsWebPage = 1785
visCmdFileCheckIn = 1787
visCmdFileCheckOut = 1788
visCmdPasteShortcut = 1790
visCmdCreateShortcut = 1791
visCmdReOrderPage = 1795
visCmdStenDrawingExplorer = 1796
visCmdINETOfficeOnTheWeb = 1802
visCmdToolSnapLines = 1807
visCmdHelpSearch = 1809
visCmdTextEditRuler = 1810
visCmdCreateNewDrawing = 1812
visCmdHelpShapeBasics = 1822
visCmdDynConnReroute = 1829
visCmdShapeIntersect = 1830
visCmdINETVisioOnTheWeb = 1831
visCmdReviewerVisibilityAll = 1836
visCmdSetDynConnRerouteOnCrossover = 1837
visCmdSaveForAutoRecover = 1857
visCmdSetHeaderFooter = 1858
visCmdMsoClipboard = 1859
visCmdMsoSearch = 1860
visCmdTextAllCaps = 1862
visCmdTextDoubleUline = 1863
visCmdAppMaximize = 1864
visCmdAppMinimize = 1865
visCmdMsoAutoCorrectDlg = 1866
visCmdShapeGalleryAddOn = 1867
visCmdAcquireImages = 1868
visCmdDropManyOnPage = 1869
visCmdObjectSwapEnds = 1870
visCmdSetIndexInStencil = 1871
visCmdMsoAutoCorrect = 1872
visCmdMsoAutoFormat = 1873
visCmdShapeTransparencyDlg = 1874
visCmdShapeTransparency = 1875
visCmdToolsShowAddins = 1876
visCmdLicenseVerification = 1877
visCmdRightDragMove = 1878
visCmdRightDragCopy = 1879
visCmdRightDragLink = 1880
visCmdRightDragCancel = 1881
visCmdNMMeetNow = 1882
visCmdImagePropertiesDlg = 1883
visCmdToolsSecurity = 1884
visCmdMsoMediaGallery = 1885
visCmdNextWindow = 1886
visCmdImageProperties = 1887
visCmdSetLanguageDlg = 1888
visCmdSpellingChange = 1889
visCmdDetectAndRepair = 1890
visCmdExportDatabaseAddOn = 1891
visCmdStenIconAndDetail = 1892
visCmdSetDynConnAppearanceDefault = 1893
visCmdSetDynConnAppearanceStraight = 1894
visCmdSetDynConnAppearanceCurved = 1895
visCmdTaskPaneToggle = 1896
visCmdNewFromExisting = 1897
visCmdMsoCustomItem = 1898
visCmdCreateEditMaster = 1899
visCmdBreakOLELink = 1900
visCmdMDIMaximize = 1901
visCmdMDIMinimize = 1902
visCmdMDIRestore = 1903
visCmdAppRestore = 1904
visCmdDeleteBackWord = 1905
visCmdNewDefDocBlankDrawing = 1906
visCmdSelectionModeRect = 1907
visCmdSelectionModeLasso = 1908
visCmdSelectionModeExtend = 1909
visCmdNextMarkup = 1914
visCmdPreviousMarkup = 1915
visCmdMasterExplorer = 1916
visCmdZoomInIgnoreSel = 1917
visCmdZoomOutIgnoreSel = 1918
visCmdReviewerVisibilityNone = 1919
visCmdDeleteComment = 1920
visCmdSizeObjects = 1925
visCmdReviewerPaneToggle = 1939
visCmdConnectorEffectRightAngle = 1943
visCmdConnectorEffectStraight = 1944
visCmdConnectorEffectCurved = 1945
visCmdDrawingTools = 1946
visCmdTextDoubleStrikethrough = 1951
visCmdTextHAlignDistribute = 1952
visCmdFormatInkDlg = 1955
visCmdCheckForUpdates = 1962
visCmdPrivacySettings = 1963
visCmdContactUs = 1964
visCmdResearchLookUp = 1967
visCmdResearchTranslate = 1968
visCmdResearchPaneToggle = 1969
visCmdInkEraser = 1970
visCmdInkReviewPen = 1971
visCmdSharedWorkspacePaneToggle = 1972
visCmdInkStockPen0 = 1973
visCmdInkStockPen1 = 1974
visCmdInkStockPen2 = 1975
visCmdInkStockPen3 = 1976
visCmdInkStockPen4 = 1977
visCmdDiagramGallery = 1982
visCmdShapeStudioAddon = 1985
visCmdLinkRowToShape = 1997
visCmdAddDataRecordset = 1998
visCmdDeleteDataRecordset = 1999
visCmdStenNamesUnderIcons = 2005
visCmdInsertTextBox = 2006
visCmdInsertVertTextBox = 2007
visCmdRHI = 2009
visCmdRHIDlg = 2010
visCmdDataSelectorDlg = 2011
visCmdViewDirectionToggle = 2012
visCmdViewLeftToRight = 2013
visCmdViewRightToLeft = 2014
visCmdApplyDataGraphic = 2017
visCmdDataRefreshDlg = 2019
visCmdDataRefresh = 2021
visCmdDataRefreshConfigDlg = 2022
visCmdTaskPaneDataGraphic = 2024
visCmdDataRecordsetSetCommand = 2037
visCmdDataRecordsetSetPrimaryKey = 2038
visCmdSpellingOptionsDlg = 2042
visCmdDataColumnSettingsDlg = 2043
visCmdDataExplorerWindow = 2044
visCmdDataAutoLinkWiz = 2045
visCmdDataAutoLink = 2046
visCmdApplyThemeToPage = 2047
visCmdApplyThemeToDoc = 2048
visCmdEditTheme = 2049
visCmdDuplicateTheme = 2050
visCmdReplaceShape = 2051
visCmdDeleteTheme = 2052
visCmdTaskTogglePreviewSize = 2053
visCmdTaskPaneThemeColors = 2054
visCmdTaskPaneThemeEffects = 2055
visCmdAllowThemes = 2056
visCmdDataUnlinkShape = 2057
visCmdDataUnlinkRow = 2058
visCmdUpdateColumnsInLinkedShapes = 2061
visCmdNewThemeEffects = 2064
visCmdNewThemeColors = 2065
visCmdDeleteDataGraphic = 2067
visCmdRelayoutShapes = 2068
visCmdDataRecordsetProperties = 2072
visCmdAutoConnectToggle = 2091
visCmdApplyDataGraphicAfterLink = 2092
visCmdDataRefreshAddConflict = 2094
visCmdDataRefreshDeleteConflict = 2095
visCmdDataAutoConnect = 2098
visCmdDataRefreshResolveConflict = 2103
visCmdTrustCenterDlg = 2104
visCmdAutoGenerateDataGraphics = 2105
visCmdDuplicateDataGraphic = 2106
visCmdRemoveDataGraphicFromSel = 2107
visCmdDropManyLinked = 2108
visCmdFileUndoCheckout = 2109
visCmdDeleteForwardWord = 2114
visCmdSaveAsFixedFormatDlg = 2117
visCmdRemoveThemeFromSel = 2119
visCmdTaskPane = 1896
visCmdTaskPaneReviewer = 1939
visCmdTaskPaneResearch = 1969
visCmdTaskPaneDocumentManagement = 1972
visCmdOfficeDiagnostics = 1890
visCmdFileLastFile10 = 2127
visCmdFileLastFile11 = 2128
visCmdFileLastFile12 = 2129
visCmdFileLastFile13 = 2130
visCmdFileLastFile14 = 2131
visCmdFileLastFile15 = 2132
visCmdFileLastFile16 = 2133
visCmdFileLastFile17 = 2134
visCmdFileLastFile18 = 2135
visCmdFileLastFile19 = 2136
visCmdFileLastFile20 = 2137
visCmdOfficeCenterOptions = 2141
visCmdInsertLabelControl = 2144
visCmdInserTextBoxControl = 2145
visCmdInsertSpinControl = 2146
visCmdInsertPushButtonControl = 2147
visCmdInsertImageControl = 2148
visCmdInsertScrollBarControl = 2149
visCmdInsertCheckBoxControl = 2150
visCmdInsertRadioButtonControl = 2151
visCmdInsertComboBoxControl = 2152
visCmdInsertListBoxControl = 2153
visCmdInsertToggleButtonControl = 2154
visCmdInsertNewBackgroundPage = 2165
visCmdShowShapeSheetShape = 2167
visCmdShowShapeSheetPage = 2168
visCmdShowShapeSheetDocument = 2169
visCmdSetPageOrientation = 2170
visCmdSetPageSize = 2171
visCmdDropAndContain = 2172
visCmdAddMemberToContainer = 2173
visCmdInsertMemberIntoList = 2174
visCmdRemoveMemberFromContainer = 2175
visCmdPageSizeDlg = 2176
visCmdResearchThesaurus = 2178
visCmdPreviousCommentMarkup = 2179
visCmdNextCommentMarkup = 2180
visCmdSetContainerProperties = 2181
visCmdCheckCompatibility = 2182
visCmdApplyThemeColors = 2188
visCmdApplyThemeEffects = 2189
visCmdEditThemeColors = 2190
visCmdEditThemeEffects = 2191
visCmdFitContainerToContents = 2195
visCmdDropAndInsertIntoList = 2196
visCmdReorderList = 2197
visCmdDeleteConnectors = 2199
visCmdMultipleFileImport = 2201
visCmdInsertPageTab = 2202
visCmdDisbandContainer = 2204
visCmdFormatPictureAutobalance = 2205
visCmdFormatPictureCompressionDlg = 2212
visCmdCloseInkToolsRibbonTab = 2213
visCmdSelectContainerMembers = 2219
visCmdLockContainer = 2220
visCmdPasteToLocation = 2221
visCmdAutoAlignAndSpace = 2222
visCmdAutoAlign = 2223
visCmdAutoSpace = 2224
visCmdMoveOffPageBreaks = 2225
visCmdDiagramRotateRight = 2226
visCmdDiagramRotateLeft = 2227
visCmdDiagramFlipVertical = 2228
visCmdDiagramFlipHorizontal = 2229
visCmdShowLineJumpsToggle = 2231
visCmdMinimizeRibbonToggle = 2232
visCmdLayoutSpacingDlg = 2233
visCmdCOMAddinsDlg = 2238
visCmdNewSubProcess = 2245
visCmdCreateSubProcessFromSel = 2249
visCmdAddToAllContainers = 2251
visCmdRemoveFromAllContainers = 2252
visCmdValidateDiagram = 2253
visCmdIgnoreValidationIssue = 2254
visCmdReinstateValidationIssue = 2255
visCmdIgnoreValidationRule = 2256
visCmdStopIgnoringValidationRule = 2257
visCmdShowIgnoredIssuesToggle = 2258
visCmdValidationIssuesWindowToggle = 2263
visCmdSetDiagramServices = 2265
visCmdSetAutoSize = 2266
visCmdAutoSizeDrawing = 2267
visCmdAddToNewContainer = 2268
visCmdCollapseShapesWindow = 2269
visCmdListInsertBefore = 2270
visCmdListInsertAfter = 2271
visCmdValidationIssuesArrangeByRule = 2278
visCmdValidationIssuesArrangeByCategory = 2279
visCmdValidationIssuesArrangeByPage = 2280
visCmdValidationIssuesArrangeByIgnored = 2281
visCmdValidationIssuesArrangeOriginalOrder = 2282
visCmdApplyMainTheme = 2285
visCmdDropCallout = 2286
visCmdAssociateCallout = 2287
visCmdApplyMainThemeToPage = 2289
visCmdActivateQuickShapesWnd = 2290
visCmdHideMoreShapes = 2291
visCmdPublishToVisioServices = 2293
visCmdPublishToProcessRepository = 2294
visCmdEditRedoOrRepeat = 2295
visCmdApplyMainThemeToDocument = 2296
visCmdApplyThemeToNewShapesToggle = 2297
visCmdFileSaveAsDrawingPreviousFileFormat = 2298
visCmdFileSaveAsTemplate = 2299
visCmdFileSaveAsPNG = 2300
visCmdFileSaveAsJPG = 2301
visCmdFileSaveAsEMF = 2302
visCmdFileSaveAsSVG = 2303
visCmdFileSaveAsVDX = 2304
visCmdFileSaveAsDWG = 2305
visCmdFileSaveAsDrawing = 2306
visCmdFileSaveAsMacroDrawing = 2311
visCmdValidationIssueNavigateToShape = 2326
visCmdInsertLegendHorizontal = 2331
visCmdPageSizeToFitDrawing = 2332
visCmdPageAutoSizeToggle = 2333
visCmdInsertLegendVertical1 = 2335
visCmdPostDrag = 2337
visCmdSpaceShapesAvoidPageBreaksToggle = 2340
visCmdShapeSearchWindowToggle = 2344
visCmdInsertClipArtDlg = 2345
visCmdRemoveMemberFromList = 2346
visCmdTranslateOptions = 2352
visCmdContainerAutoResizeOff = 2347
visCmdContainerAutoResizeExpandOnly = 2348
visCmdContainerAutoResizeExpandContract = 2349
visCmdNewForegroundPage = 2361
visCmdLanguagePreferencesDlg = 2363
visCmdSetThemeBehavior = 2382
visCmdDuplicatePage = 2383
visCmdUpgradeThemeModel = 2384
visCmdCoauthMerging = 2385
VisUICmds = c_int # enum
tagVisUISpacingTypes = VisUISpacingTypes

# values for enumeration 'VisRuleSetFlags'
visRuleSetDefault = 0
visRuleSetHidden = 1
VisRuleSetFlags = c_int # enum
IVComment._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'AssociatedObject',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppDispatch' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'CreateDate',
              ( ['retval', 'out'], POINTER(c_double), 'pDate' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'EditDate',
              ( ['retval', 'out'], POINTER(c_double), 'pDate' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Collapsed',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pCollapsed' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'AuthorName',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'AuthorSipAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'AuthorSMTPAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'AuthorInitials',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(1610743815), 'propput'], HRESULT, 'Collapsed',
              ( ['in'], VARIANT_BOOL, 'pCollapsed' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(1610743823)], HRESULT, 'Delete'),
]
################################################################
## code template for IVComment implementation
##class IVComment_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def EditDate(self):
##        '-no docstring-'
##        #return pDate
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CreateDate(self):
##        '-no docstring-'
##        #return pDate
##
##    @property
##    def AssociatedObject(self):
##        '-no docstring-'
##        #return ppDispatch
##
##    @property
##    def AuthorInitials(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def AuthorSMTPAddress(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def AuthorName(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def AuthorSipAddress(self):
##        '-no docstring-'
##        #return pbstr
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    def _get(self):
##        '-no docstring-'
##        #return pCollapsed
##    def _set(self, pCollapsed):
##        '-no docstring-'
##    Collapsed = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##


# values for enumeration 'VisProtection'
visProtectNone = 0
visProtectStyles = 1
visProtectShapes = 2
visProtectMasters = 4
visProtectBackgrounds = 8
visProtectPreviews = 16
VisProtection = c_int # enum
tagVisWindowScrollX = VisWindowScrollX

# values for enumeration 'VisContainerFormatType'
visContainerFormatLockMembership = 0
visContainerFormatContainerAutoResize = 1
visContainerFormatFitToContents = 2
VisContainerFormatType = c_int # enum
class Documents(CoClass):
    u'The documents open in a Visio Application. The first Document in a Documents collection is item 1.'
    _reg_clsid_ = GUID('{000D0A00-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EDocuments(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Documents Event Interface'
    _iid_ = GUID('{000D0B03-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Documents._com_interfaces_ = [IVDocuments]
Documents._outgoing_interfaces_ = [EDocuments]

IVPages._methods_ = [
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypePages (15).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Pages collection is item 1. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(9), helpstring(u'Returns locale specific names of pages.')], HRESULT, 'GetNames',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeSpecificNameArray' )),
    COMMETHOD([dispid(10), helpstring(u'Like Item() but names treated locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(11), helpstring(u'Returns locale independent names of pages.')], HRESULT, 'GetNamesU',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeIndependentNameArray' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'nID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'ppPage' )),
]
################################################################
## code template for IVPages implementation
##class IVPages_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetNamesU(self):
##        u'Returns locale independent names of pages.'
##        #return localeIndependentNameArray
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in a Pages collection is item 1. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ItemU(self, NameOrIndex):
##        u'Like Item() but names treated locale independent.'
##        #return lpdispRet
##
##    @property
##    def ItemFromID(self, nID):
##        '-no docstring-'
##        #return ppPage
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetNames(self):
##        u'Returns locale specific names of pages.'
##        #return localeSpecificNameArray
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypePages (15).'
##        #return lpi2Ret
##

class Document(CoClass):
    u'A document open in a Visio Application.'
    _reg_clsid_ = GUID('{00021A21-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EDocument(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Document Event Interface'
    _iid_ = GUID('{000D0750-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Document._com_interfaces_ = [IVDocument]
Document._outgoing_interfaces_ = [EDocument]


# values for enumeration 'VisFieldCategories'
visFCatCustom = 0
visFCatDateTime = 1
visFCatDocument = 2
visFCatGeometry = 3
visFCatObject = 4
visFCatPage = 5
visFCatNotes = 6
VisFieldCategories = c_int # enum

# values for enumeration 'VisToParts'
visConnectToError = -1
visToNone = 0
visGuideX = 1
visGuideY = 2
visWholeShape = 3
visGuideIntersect = 4
visToAngle = 7
visConnectionPoint = 100
visConnectError = -1
visNone = 0
VisToParts = c_int # enum
class IVAccelItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0292-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVAccelItems(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0295-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVAccelItem._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(c_short), 'pwCmd' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'CmdNum',
              ( ['in'], c_short, 'pwCmd' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'CmdNum',
              ( ['retval', 'out'], POINTER(c_short), 'pwCmd' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'Key',
              ( ['in'], c_short, 'pKey' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Key',
              ( ['retval', 'out'], POINTER(c_short), 'pKey' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'Alt',
              ( ['in'], c_short, 'pAlt' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Alt',
              ( ['retval', 'out'], POINTER(c_short), 'pAlt' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Shift',
              ( ['in'], c_short, 'pShift' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Shift',
              ( ['retval', 'out'], POINTER(c_short), 'pShift' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Control',
              ( ['in'], c_short, 'pControl' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Control',
              ( ['retval', 'out'], POINTER(c_short), 'pControl' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVAccelItems)), 'lplpVAccelItems' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'AddOnName',
              ( ['in'], BSTR, 'pAddOnName' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'AddOnName',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnName' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'AddOnArgs',
              ( ['in'], BSTR, 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'AddOnArgs',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnArgs' )),
]
################################################################
## code template for IVAccelItem implementation
##class IVAccelItem_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pControl
##    def _set(self, pControl):
##        '-no docstring-'
##    Control = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnName
##    def _set(self, pAddOnName):
##        '-no docstring-'
##    AddOnName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVAccelItems
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pwCmd
##
##    def _get(self):
##        '-no docstring-'
##        #return pShift
##    def _set(self, pShift):
##        '-no docstring-'
##    Shift = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCmd
##    def _set(self, pwCmd):
##        '-no docstring-'
##    CmdNum = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnArgs
##    def _set(self, pAddOnArgs):
##        '-no docstring-'
##    AddOnArgs = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pKey
##    def _set(self, pKey):
##        '-no docstring-'
##    Key = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAlt
##    def _set(self, pAlt):
##        '-no docstring-'
##    Alt = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

tagVisSelectMode = VisSelectMode
tagVisUICmds = VisUICmds

# values for enumeration 'VisFixedFormatTypes'
visFixedFormatPDF = 1
visFixedFormatXPS = 2
VisFixedFormatTypes = c_int # enum
IVConnect._methods_ = [
    COMMETHOD([dispid(6), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'FromSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ToSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'FromCell',
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ToCell',
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'FromPart',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ToPart',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(8), helpstring(u'Returns visObjTypeConnect (8).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'hidden', 'propget'], HRESULT, 'Index16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'ContainingMasterID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
]
################################################################
## code template for IVConnect implementation
##class IVConnect_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ToSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Index16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ToPart(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def FromSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ToCell(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def ContainingMasterID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeConnect (8).'
##        #return lpi2Ret
##
##    @property
##    def FromCell(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def FromPart(self):
##        '-no docstring-'
##        #return lpi2Ret
##

class IVValidationRules(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D073D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVValidationRules._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameUOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRule)), 'ValidationRule' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'RuleID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRule)), 'ValidationRule' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'Enum' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'Add',
              ( ['in'], BSTR, 'NameU' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRule)), 'ValidationRule' )),
]
################################################################
## code template for IVValidationRules implementation
##class IVValidationRules_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return Enum
##
##    @property
##    def Item(self, NameUOrIndex):
##        '-no docstring-'
##        #return ValidationRule
##
##    @property
##    def ItemFromID(self, RuleID):
##        '-no docstring-'
##        #return ValidationRule
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Add(self, NameU):
##        '-no docstring-'
##        #return ValidationRule
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

class IVColors(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0717-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVColors._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(999), 'hidden', 'propget'], HRESULT, 'Item16',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVColor)), 'lpdispRet' )),
    COMMETHOD([dispid(4), helpstring(u'Returns visObjTypeColors (30).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Colors collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVColor)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVColors implementation
##class IVColors_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, Index):
##        u'The first item in a Colors collection is item 0.'
##        #return lpdispRet
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Item16(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeColors (30).'
##        #return lpi2Ret
##

class ERow(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Row Event Interface'
    _iid_ = GUID('{000D0B0F-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
ERow._disp_methods_ = [
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
]
class EMaster(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Master Event Interface'
    _iid_ = GUID('{000D0B08-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
EMaster._disp_methods_ = [
    DISPMETHOD([dispid(8200)], None, 'MasterChanged',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(16392)], None, 'BeforeMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(8256)], None, 'ShapeChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(902)], None, 'SelectionAdded',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(16448)], None, 'BeforeShapeDelete',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(33024)], None, 'ConnectionsAdded',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(16640)], None, 'ConnectionsDeleted',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(400), helpstring(u'Cancel delete of master? T:Yes F:No')], None, 'QueryCancelMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(401), helpstring(u'Delete master operation was canceled.')], None, 'MasterDeleteCanceled',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
]
class IVAccelTable(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D02A2-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
LPVISIOACCELTABLE = POINTER(IVAccelTable)
IVToolbarItem._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809)], HRESULT, 'IconFileName',
              ( ['in'], BSTR, 'IconFileName' )),
    COMMETHOD([dispid(1610743810), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pActionText' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'plIndex' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarItems)), 'lplpVToolbarItems' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'CmdNum',
              ( ['in'], c_short, 'pwCmd' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'CmdNum',
              ( ['retval', 'out'], POINTER(c_short), 'pwCmd' )),
    COMMETHOD([dispid(1610743815), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpContextID',
              ( ['in'], c_short, 'pHelpContextID' )),
    COMMETHOD([dispid(1610743815), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpContextID',
              ( ['retval', 'out'], POINTER(c_short), 'pHelpContextID' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'ActionText',
              ( ['in'], BSTR, 'pActionText' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ActionText',
              ( ['retval', 'out'], POINTER(BSTR), 'pActionText' )),
    COMMETHOD([dispid(1610743819), 'propput'], HRESULT, 'AddOnName',
              ( ['in'], BSTR, 'pAddOnName' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'AddOnName',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnName' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'AddOnArgs',
              ( ['in'], BSTR, 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'AddOnArgs',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743823), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpFile',
              ( ['in'], BSTR, 'pHelpFile' )),
    COMMETHOD([dispid(1610743823), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpFile',
              ( ['retval', 'out'], POINTER(BSTR), 'pHelpFile' )),
    COMMETHOD([dispid(1610743825), 'propput'], HRESULT, 'CntrlType',
              ( ['in'], c_short, 'pwCntrlType' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'CntrlType',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlType' )),
    COMMETHOD([dispid(1610743827), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'CntrlID',
              ( ['in'], c_short, 'pwCntrlID' )),
    COMMETHOD([dispid(1610743827), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'CntrlID',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlID' )),
    COMMETHOD([dispid(1610743829), 'propput'], HRESULT, 'TypeSpecific1',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743829), 'propget'], HRESULT, 'TypeSpecific1',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743831), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Priority',
              ( ['in'], c_short, 'pwPriority' )),
    COMMETHOD([dispid(1610743831), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_short), 'pwPriority' )),
    COMMETHOD([dispid(1610743833), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_short, 'pwSpacing' )),
    COMMETHOD([dispid(1610743833), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Spacing',
              ( ['retval', 'out'], POINTER(c_short), 'pwSpacing' )),
    COMMETHOD([dispid(1610743835), 'propput'], HRESULT, 'TypeSpecific2',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'TypeSpecific2',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743837), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(1610743837), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743839), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propput'], HRESULT, 'MiniHelp',
              ( ['in'], BSTR, 'pMiniHelp' )),
    COMMETHOD([dispid(1610743839), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propget'], HRESULT, 'MiniHelp',
              ( ['retval', 'out'], POINTER(BSTR), 'pMiniHelp' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbBuiltIn' )),
    COMMETHOD([dispid(1610743842), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pbEnabled' )),
    COMMETHOD([dispid(1610743842), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEnabled' )),
    COMMETHOD([dispid(1610743844), 'propput'], HRESULT, 'FaceID',
              ( ['in'], c_short, 'pwFaceID' )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'FaceID',
              ( ['retval', 'out'], POINTER(c_short), 'pwFaceID' )),
    COMMETHOD([dispid(1610743846), 'propput'], HRESULT, 'State',
              ( ['in'], c_short, 'pwState' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'State',
              ( ['retval', 'out'], POINTER(c_short), 'pwState' )),
    COMMETHOD([dispid(1610743848), 'propput'], HRESULT, 'Style',
              ( ['in'], c_short, 'pwStyle' )),
    COMMETHOD([dispid(1610743848), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(c_short), 'pwStyle' )),
    COMMETHOD([dispid(1610743850), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(1610743850), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(1610743852), 'propput'], HRESULT, 'Width',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743852), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
    COMMETHOD([dispid(1610743854), 'propput'], HRESULT, 'PaletteWidth',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743854), 'propget'], HRESULT, 'PaletteWidth',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
    COMMETHOD([dispid(1610743856), 'propget'], HRESULT, 'ToolbarItems',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarItems)), 'lplpVToolbarItems' )),
    COMMETHOD([dispid(1610743857), helpstring(u'IsSeparator is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'IsSeparator',
              ( ['retval', 'out'], POINTER(c_short), 'pIsSeparator' )),
    COMMETHOD([dispid(1610743858), 'propget'], HRESULT, 'IsHierarchical',
              ( ['retval', 'out'], POINTER(c_short), 'pIsHierarchical' )),
    COMMETHOD([dispid(1610743859), 'propput'], HRESULT, 'BeginGroup',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743859), 'propget'], HRESULT, 'BeginGroup',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
]
################################################################
## code template for IVToolbarItem implementation
##class IVToolbarItem_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return plIndex
##
##    def _get(self):
##        '-no docstring-'
##        #return pwStyle
##    def _set(self, pwStyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ToolbarItems(self):
##        '-no docstring-'
##        #return lplpVToolbarItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnName
##    def _set(self, pAddOnName):
##        '-no docstring-'
##    AddOnName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pActionText
##    def _set(self, pActionText):
##        '-no docstring-'
##    ActionText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Spacing is obsolete as of Visio 2000.'
##        #return pwSpacing
##    def _set(self, pwSpacing):
##        u'Spacing is obsolete as of Visio 2000.'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCmd
##    def _set(self, pwCmd):
##        '-no docstring-'
##    CmdNum = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Priority is obsolete as of Visio 2000.'
##        #return pwPriority
##    def _set(self, pwPriority):
##        u'Priority is obsolete as of Visio 2000.'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwState
##    def _set(self, pwState):
##        '-no docstring-'
##    State = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsHierarchical(self):
##        '-no docstring-'
##        #return pIsHierarchical
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVToolbarItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    PaletteWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Minihelp is obsolete as of Visio 2002.'
##        #return pMiniHelp
##    def _set(self, pMiniHelp):
##        u'Minihelp is obsolete as of Visio 2002.'
##    MiniHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'HelpContextID is obsolete as of Visio 2000.'
##        #return pHelpContextID
##    def _set(self, pHelpContextID):
##        u'HelpContextID is obsolete as of Visio 2000.'
##    HelpContextID = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    BeginGroup = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pActionText
##
##    def _get(self):
##        '-no docstring-'
##        #return pbEnabled
##    def _set(self, pbEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCntrlType
##    def _set(self, pwCntrlType):
##        '-no docstring-'
##    CntrlType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnArgs
##    def _set(self, pAddOnArgs):
##        '-no docstring-'
##    AddOnArgs = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsSeparator(self):
##        u'IsSeparator is obsolete as of Visio 2000.'
##        #return pIsSeparator
##
##    def _get(self):
##        u'HelpFile is obsolete as of Visio 2000.'
##        #return pHelpFile
##    def _set(self, pHelpFile):
##        u'HelpFile is obsolete as of Visio 2000.'
##    HelpFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'CntrlID is obsolete as of Visio 2000.'
##        #return pwCntrlID
##    def _set(self, pwCntrlID):
##        u'CntrlID is obsolete as of Visio 2000.'
##    CntrlID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific2 = property(_get, _set, doc = _set.__doc__)
##
##    def IconFileName(self, IconFileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pbBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return pwFaceID
##    def _set(self, pwFaceID):
##        '-no docstring-'
##    FaceID = property(_get, _set, doc = _set.__doc__)
##

class Master(CoClass):
    u'A master in a Visio Document. A Master is a factory for Shape objects (its instances).'
    _reg_clsid_ = GUID('{000D0A04-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Master._com_interfaces_ = [IVMaster]
Master._outgoing_interfaces_ = [EMaster]

class IVValidationRuleSets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D073B-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
class IVValidationRuleSet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D073C-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVValidationRuleSets._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameUOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRuleSet)), 'RuleSet' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'RuleID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRuleSet)), 'RuleSet' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'Enum' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'Add',
              ( ['in'], BSTR, 'NameU' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRuleSet)), 'RuleSet' )),
    COMMETHOD([dispid(1610743817)], HRESULT, 'AddCopy',
              ( ['in'], POINTER(IVValidationRuleSet), 'RuleSet' ),
              ( ['in', 'optional'], BSTR, 'NameU', u'' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRuleSet)), 'RuleSetCopy' )),
]
################################################################
## code template for IVValidationRuleSets implementation
##class IVValidationRuleSets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return Enum
##
##    @property
##    def Item(self, NameUOrIndex):
##        '-no docstring-'
##        #return RuleSet
##
##    @property
##    def ItemFromID(self, RuleID):
##        '-no docstring-'
##        #return RuleSet
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Add(self, NameU):
##        '-no docstring-'
##        #return RuleSet
##
##    def AddCopy(self, RuleSet, NameU):
##        '-no docstring-'
##        #return RuleSetCopy
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

class IVMenus(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0225-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVMenu._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'plIndex' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'MDIWindowMenu',
              ( ['in'], c_short, 'pMDIWindowMenu' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'MDIWindowMenu',
              ( ['retval', 'out'], POINTER(c_short), 'pMDIWindowMenu' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'MenuItems',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuItems)), 'lplpVMenuItems' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVMenus)), 'lplpVMenus' )),
    COMMETHOD([dispid(1610743817), 'propput'], HRESULT, 'CmdNum',
              ( ['in'], c_short, 'pwCmd' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'CmdNum',
              ( ['retval', 'out'], POINTER(c_short), 'pwCmd' )),
    COMMETHOD([dispid(1610743819), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpContextID',
              ( ['in'], c_short, 'pHelpContextID' )),
    COMMETHOD([dispid(1610743819), helpstring(u'HelpContextID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpContextID',
              ( ['retval', 'out'], POINTER(c_short), 'pHelpContextID' )),
    COMMETHOD([dispid(1610743821), helpstring(u'IsSeparator is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'IsSeparator',
              ( ['retval', 'out'], POINTER(c_short), 'pIsSeparator' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'IsHierarchical',
              ( ['retval', 'out'], POINTER(c_short), 'pIsHierarchical' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'CntrlType',
              ( ['in'], c_short, 'pwCntrlType' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'CntrlType',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlType' )),
    COMMETHOD([dispid(1610743825), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'CntrlID',
              ( ['in'], c_short, 'pwCntrlID' )),
    COMMETHOD([dispid(1610743825), helpstring(u'CntrlID is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'CntrlID',
              ( ['retval', 'out'], POINTER(c_short), 'pwCntrlID' )),
    COMMETHOD([dispid(1610743827), 'propput'], HRESULT, 'TypeSpecific1',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'TypeSpecific1',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743829), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Priority',
              ( ['in'], c_short, 'pwPriority' )),
    COMMETHOD([dispid(1610743829), helpstring(u'Priority is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Priority',
              ( ['retval', 'out'], POINTER(c_short), 'pwPriority' )),
    COMMETHOD([dispid(1610743831), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'Spacing',
              ( ['in'], c_short, 'pwSpacing' )),
    COMMETHOD([dispid(1610743831), helpstring(u'Spacing is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'Spacing',
              ( ['retval', 'out'], POINTER(c_short), 'pwSpacing' )),
    COMMETHOD([dispid(1610743833), 'propput'], HRESULT, 'TypeSpecific2',
              ( ['in'], c_short, 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743833), 'propget'], HRESULT, 'TypeSpecific2',
              ( ['retval', 'out'], POINTER(c_short), 'pwTypeSpecific' )),
    COMMETHOD([dispid(1610743835), 'propput'], HRESULT, 'ActionText',
              ( ['in'], BSTR, 'pActionText' )),
    COMMETHOD([dispid(1610743835), 'propget'], HRESULT, 'ActionText',
              ( ['retval', 'out'], POINTER(BSTR), 'pActionText' )),
    COMMETHOD([dispid(1610743837), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propput'], HRESULT, 'MiniHelp',
              ( ['in'], BSTR, 'pMiniHelp' )),
    COMMETHOD([dispid(1610743837), helpstring(u'Minihelp is obsolete as of Visio 2002.'), 'hidden', 'propget'], HRESULT, 'MiniHelp',
              ( ['retval', 'out'], POINTER(BSTR), 'pMiniHelp' )),
    COMMETHOD([dispid(1610743839), 'propput'], HRESULT, 'AddOnName',
              ( ['in'], BSTR, 'pAddOnName' )),
    COMMETHOD([dispid(1610743839), 'propget'], HRESULT, 'AddOnName',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnName' )),
    COMMETHOD([dispid(1610743841), 'propput'], HRESULT, 'AddOnArgs',
              ( ['in'], BSTR, 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'AddOnArgs',
              ( ['retval', 'out'], POINTER(BSTR), 'pAddOnArgs' )),
    COMMETHOD([dispid(1610743843), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propput'], HRESULT, 'HelpFile',
              ( ['in'], BSTR, 'pHelpFile' )),
    COMMETHOD([dispid(1610743843), helpstring(u'HelpFile is obsolete as of Visio 2000.'), 'hidden', 'propget'], HRESULT, 'HelpFile',
              ( ['retval', 'out'], POINTER(BSTR), 'pHelpFile' )),
    COMMETHOD([dispid(1610743845)], HRESULT, 'IconFileName',
              ( ['in'], BSTR, 'IconFileName' )),
    COMMETHOD([dispid(1610743846), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbBuiltIn' )),
    COMMETHOD([dispid(1610743847), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pbEnabled' )),
    COMMETHOD([dispid(1610743847), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEnabled' )),
    COMMETHOD([dispid(1610743849), 'propput'], HRESULT, 'FaceID',
              ( ['in'], c_short, 'pwFaceID' )),
    COMMETHOD([dispid(1610743849), 'propget'], HRESULT, 'FaceID',
              ( ['retval', 'out'], POINTER(c_short), 'pwFaceID' )),
    COMMETHOD([dispid(1610743851), 'propput'], HRESULT, 'State',
              ( ['in'], c_short, 'pwState' )),
    COMMETHOD([dispid(1610743851), 'propget'], HRESULT, 'State',
              ( ['retval', 'out'], POINTER(c_short), 'pwState' )),
    COMMETHOD([dispid(1610743853), 'propput'], HRESULT, 'Style',
              ( ['in'], c_short, 'pwStyle' )),
    COMMETHOD([dispid(1610743853), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(c_short), 'pwStyle' )),
    COMMETHOD([dispid(1610743855), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(1610743855), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(1610743857), 'propput'], HRESULT, 'Width',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743857), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
    COMMETHOD([dispid(1610743859), 'propput'], HRESULT, 'PaletteWidth',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743859), 'propget'], HRESULT, 'PaletteWidth',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
]
################################################################
## code template for IVMenu implementation
##class IVMenu_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return plIndex
##
##    def _get(self):
##        '-no docstring-'
##        #return pwStyle
##    def _set(self, pwStyle):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnName
##    def _set(self, pAddOnName):
##        '-no docstring-'
##    AddOnName = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pActionText
##    def _set(self, pActionText):
##        '-no docstring-'
##    ActionText = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Minihelp is obsolete as of Visio 2002.'
##        #return pMiniHelp
##    def _set(self, pMiniHelp):
##        u'Minihelp is obsolete as of Visio 2002.'
##    MiniHelp = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCmd
##    def _set(self, pwCmd):
##        '-no docstring-'
##    CmdNum = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Priority is obsolete as of Visio 2000.'
##        #return pwPriority
##    def _set(self, pwPriority):
##        u'Priority is obsolete as of Visio 2000.'
##    Priority = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwState
##    def _set(self, pwState):
##        '-no docstring-'
##    State = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsHierarchical(self):
##        '-no docstring-'
##        #return pIsHierarchical
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVMenus
##
##    @property
##    def MenuItems(self):
##        '-no docstring-'
##        #return lplpVMenuItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    PaletteWidth = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Spacing is obsolete as of Visio 2000.'
##        #return pwSpacing
##    def _set(self, pwSpacing):
##        u'Spacing is obsolete as of Visio 2000.'
##    Spacing = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'HelpContextID is obsolete as of Visio 2000.'
##        #return pHelpContextID
##    def _set(self, pHelpContextID):
##        u'HelpContextID is obsolete as of Visio 2000.'
##    HelpContextID = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pCaption
##
##    def _get(self):
##        '-no docstring-'
##        #return pbEnabled
##    def _set(self, pbEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwCntrlType
##    def _set(self, pwCntrlType):
##        '-no docstring-'
##    CntrlType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pAddOnArgs
##    def _set(self, pAddOnArgs):
##        '-no docstring-'
##    AddOnArgs = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def IsSeparator(self):
##        u'IsSeparator is obsolete as of Visio 2000.'
##        #return pIsSeparator
##
##    def _get(self):
##        u'HelpFile is obsolete as of Visio 2000.'
##        #return pHelpFile
##    def _set(self, pHelpFile):
##        u'HelpFile is obsolete as of Visio 2000.'
##    HelpFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'CntrlID is obsolete as of Visio 2000.'
##        #return pwCntrlID
##    def _set(self, pwCntrlID):
##        u'CntrlID is obsolete as of Visio 2000.'
##    CntrlID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwTypeSpecific
##    def _set(self, pwTypeSpecific):
##        '-no docstring-'
##    TypeSpecific2 = property(_get, _set, doc = _set.__doc__)
##
##    def IconFileName(self, IconFileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pbBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return pwFaceID
##    def _set(self, pwFaceID):
##        '-no docstring-'
##    FaceID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pMDIWindowMenu
##    def _set(self, pMDIWindowMenu):
##        '-no docstring-'
##    MDIWindowMenu = property(_get, _set, doc = _set.__doc__)
##

class InvisibleApp(CoClass):
    u'The object to create to make an invisible Visio instance. ProgId: "Visio.InvisibleApp".'
    _reg_clsid_ = GUID('{000D0A26-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EApplication(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Application Event Interface'
    _iid_ = GUID('{000D0B00-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
InvisibleApp._com_interfaces_ = [IVInvisibleApp]
InvisibleApp._outgoing_interfaces_ = [EApplication]

class Styles(CoClass):
    u'The styles in a Visio Document. The first Style in a Styles collection is item 1.'
    _reg_clsid_ = GUID('{000D0A01-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVStyles(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D070F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Styles._com_interfaces_ = [IVStyles]
Styles._outgoing_interfaces_ = [EStyles]


# values for enumeration 'VisLayoutDirection'
visLayoutDirRotateRight = 0
visLayoutDirRotateLeft = 1
visLayoutDirFlipVert = 2
visLayoutDirFlipHorz = 3
VisLayoutDirection = c_int # enum

# values for enumeration 'VisGraphicItemTypes'
visTypeIconSet = 2
visTypeTextCallout = 3
visTypeDataBar = 4
visTypeColorByValue = 5
visTypeHeading = 6
VisGraphicItemTypes = c_int # enum

# values for enumeration 'VisGraphicPositionHorizontal'
visGraphicFarLeft = 0
visGraphicLeftEdge = 1
visGraphicLeft = 2
visGraphicCenter = 3
visGraphicRight = 4
visGraphicRightEdge = 5
visGraphicFarRight = 6
VisGraphicPositionHorizontal = c_int # enum

# values for enumeration 'VisGraphicPositionVertical'
visGraphicBelow = 0
visGraphicBottomEdge = 1
visGraphicBottom = 2
visGraphicMiddle = 3
visGraphicTop = 4
visGraphicTopEdge = 5
visGraphicAbove = 6
VisGraphicPositionVertical = c_int # enum
IVGraphicItem._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(VisObjectTypes), 'ObjectType' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'Index' )),
    COMMETHOD([dispid(1610743812), 'propput'], HRESULT, 'Index',
              ( ['in'], c_int, 'Index' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'ID' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'Description' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VisGraphicItemTypes), 'Type' )),
    COMMETHOD([dispid(1610743817)], HRESULT, 'GetExpression',
              ( ['out'], POINTER(VisGraphicField), 'Field' ),
              ( ['out'], POINTER(BSTR), 'Expression' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'SetExpression',
              ( ['in'], VisGraphicField, 'Field' ),
              ( ['in'], BSTR, 'Expression' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'DataGraphic',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'DataGraphic' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'Tag',
              ( ['retval', 'out'], POINTER(BSTR), 'Tag' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'Tag',
              ( ['in'], BSTR, 'Tag' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'HorizontalPosition',
              ( ['retval', 'out'], POINTER(VisGraphicPositionHorizontal), 'Position' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'HorizontalPosition',
              ( ['in'], VisGraphicPositionHorizontal, 'Position' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'VerticalPosition',
              ( ['retval', 'out'], POINTER(VisGraphicPositionVertical), 'Position' )),
    COMMETHOD([dispid(1610743825), 'propput'], HRESULT, 'VerticalPosition',
              ( ['in'], VisGraphicPositionVertical, 'Position' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'UseDataGraphicPosition',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'UseDataGraphicPosition' )),
    COMMETHOD([dispid(1610743827), 'propput'], HRESULT, 'UseDataGraphicPosition',
              ( ['in'], VARIANT_BOOL, 'UseDataGraphicPosition' )),
]
################################################################
## code template for IVGraphicItem implementation
##class IVGraphicItem_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Index
##    def _set(self, Index):
##        '-no docstring-'
##    Index = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def SetExpression(self, Field, Expression):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Description(self):
##        '-no docstring-'
##        #return Description
##
##    def GetExpression(self):
##        '-no docstring-'
##        #return Field, Expression
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##
##    @property
##    def DataGraphic(self):
##        '-no docstring-'
##        #return DataGraphic
##
##    def _get(self):
##        '-no docstring-'
##        #return UseDataGraphicPosition
##    def _set(self, UseDataGraphicPosition):
##        '-no docstring-'
##    UseDataGraphicPosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    VerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Tag
##    def _set(self, Tag):
##        '-no docstring-'
##    Tag = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    HorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return ID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'VisCenterViewFlags'
visCenterViewDefault = 0
visCenterViewIfOffScreen = 1
visCenterViewSelectShape = 2
VisCenterViewFlags = c_int # enum
class Page(CoClass):
    u'A page in a Visio Document. A page is a collection of Shape objects drawn and printed as a unit.'
    _reg_clsid_ = GUID('{000D0A06-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EPage(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Page Event Interface'
    _iid_ = GUID('{000D0B0A-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Page._com_interfaces_ = [IVPage]
Page._outgoing_interfaces_ = [EPage]


# values for enumeration 'VisContainerNested'
visContainerIncludeNested = 0
visContainerExcludeNested = 1
VisContainerNested = c_int # enum
tagVisFieldCategories = VisFieldCategories
class IVShapes(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D070D-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVShapes._methods_ = [
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeShapes (18).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Shapes collection is item 1. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameUIDOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'ContainingPage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ContainingMaster',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ContainingShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(8)], HRESULT, 'CenterDrawing'),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(12), 'hidden', 'propget'], HRESULT, 'ItemFromID16',
              ( ['in'], c_short, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(15), helpstring(u'Like Item() but names treated locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( ['in'], VARIANT, 'NameUIDOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'ItemFromUniqueID',
              ( ['in'], BSTR, 'UniqueID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'Shape' )),
]
################################################################
## code template for IVShapes implementation
##class IVShapes_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ItemFromID(self, ObjectID):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    def CenterDrawing(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Item(self, NameUIDOrIndex):
##        u'The first item in a Shapes collection is item 1. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ItemFromUniqueID(self, UniqueID):
##        '-no docstring-'
##        #return Shape
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ContainingPage(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingShape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def ItemFromID16(self, ObjectID):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingMaster(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ItemU(self, NameUIDOrIndex):
##        u'Like Item() but names treated locale independent.'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeShapes (18).'
##        #return lpi2Ret
##

class Layers(CoClass):
    u'The layers of a Visio Page or Master. The first Layer in a Layers collection is item 1.'
    _reg_clsid_ = GUID('{000D0A07-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVLayers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0713-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
Layers._com_interfaces_ = [IVLayers]

tagVisSnapExtensions = VisSnapExtensions

# values for enumeration 'VisUICtrlAtts'
visCtrlAlignmentLEFT = 1
visCtrlAlignmentCENTER = 2
visCtrlAlignmentRIGHT = 4
visCtrlAlignmentBOX = 128
visCtrlAlignmentLEFTBOX = 129
visCtrlAlignmentCENTERBOX = 130
visCtrlAlignmentRIGHTBOX = 132
VisUICtrlAtts = c_int # enum
tagVisUICtrlAtts = VisUICtrlAtts
class Shapes(CoClass):
    u'The shapes of a Visio Page or Master, or the sub-shapes of a Shape. The first Shape in a Shapes collection is item 1.'
    _reg_clsid_ = GUID('{000D0A09-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Shapes._com_interfaces_ = [IVShapes]


# values for enumeration 'VisRuleTargets'
visRuleTargetShape = 0
visRuleTargetPage = 1
visRuleTargetDocument = 2
VisRuleTargets = c_int # enum
IVValidationRule._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'RuleID' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'NameU' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'NameU' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'Category',
              ( ['retval', 'out'], POINTER(BSTR), 'Category' )),
    COMMETHOD([dispid(1610743815), 'propput'], HRESULT, 'Category',
              ( ['in'], BSTR, 'Category' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'Description' )),
    COMMETHOD([dispid(1610743817), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'Description' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'Ignored',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'IsIgnored' )),
    COMMETHOD([dispid(1610743819), 'propput'], HRESULT, 'Ignored',
              ( ['in'], VARIANT_BOOL, 'IsIgnored' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'FilterExpression',
              ( ['retval', 'out'], POINTER(BSTR), 'FilterExpression' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'FilterExpression',
              ( ['in'], BSTR, 'FilterExpression' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'TargetType',
              ( ['retval', 'out'], POINTER(VisRuleTargets), 'TargetType' )),
    COMMETHOD([dispid(1610743823), 'propput'], HRESULT, 'TargetType',
              ( ['in'], VisRuleTargets, 'TargetType' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'TestExpression',
              ( ['retval', 'out'], POINTER(BSTR), 'TestExpression' )),
    COMMETHOD([dispid(1610743825), 'propput'], HRESULT, 'TestExpression',
              ( ['in'], BSTR, 'TestExpression' )),
    COMMETHOD([dispid(1610743827), 'propget'], HRESULT, 'RuleSet',
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRuleSet)), 'RuleSet' )),
    COMMETHOD([dispid(1610743828)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743829)], HRESULT, 'AddIssue',
              ( ['in', 'optional'], POINTER(IVPage), 'TargetPage' ),
              ( ['in', 'optional'], POINTER(IVShape), 'TargetShape' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationIssue)), 'ValidationIssue' )),
]
################################################################
## code template for IVValidationRule implementation
##class IVValidationRule_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return Category
##    def _set(self, Category):
##        '-no docstring-'
##    Category = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return IsIgnored
##    def _set(self, IsIgnored):
##        '-no docstring-'
##    Ignored = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return Description
##    def _set(self, Description):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def AddIssue(self, TargetPage, TargetShape):
##        '-no docstring-'
##        #return ValidationIssue
##
##    def _get(self):
##        '-no docstring-'
##        #return TargetType
##    def _set(self, TargetType):
##        '-no docstring-'
##    TargetType = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return TestExpression
##    def _set(self, TestExpression):
##        '-no docstring-'
##    TestExpression = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return FilterExpression
##    def _set(self, FilterExpression):
##        '-no docstring-'
##    FilterExpression = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return NameU
##    def _set(self, NameU):
##        '-no docstring-'
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RuleSet(self):
##        '-no docstring-'
##        #return RuleSet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return RuleID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##


# values for enumeration 'VisContainerFlags'
visContainerFlagsDefault = 0
visContainerFlagsExcludeContainers = 1
visContainerFlagsExcludeConnectors = 2
visContainerFlagsExcludeCallouts = 4
visContainerFlagsExcludeElements = 8
visContainerFlagsExcludeNested = 16
visContainerFlagsExcludeListMembers = 32
VisContainerFlags = c_int # enum
tagVisGlueSettings = VisGlueSettings
class Shape(CoClass):
    u'An object of a Visio Page or Master, a sub-shape of another Shape, the PageSheet of a Page or Master, or the DocumentSheet of a Document.'
    _reg_clsid_ = GUID('{000D0A0A-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Shape._com_interfaces_ = [IVShape]
Shape._outgoing_interfaces_ = [EShape]


# values for enumeration 'VisQuickStyleMatrixIndices'
visQuickStyleMatrixNone = 0
visQuickStyleMatrixTheme1 = 1
visQuickStyleMatrixTheme2 = 2
visQuickStyleMatrixTheme3 = 3
visQuickStyleMatrixTheme4 = 4
visQuickStyleMatrixTheme5 = 5
visQuickStyleMatrixTheme6 = 6
visQuickStyleMatrixVariant1 = 100
visQuickStyleMatrixVariant2 = 101
visQuickStyleMatrixVariant3 = 102
visQuickStyleMatrixVariant4 = 103
VisQuickStyleMatrixIndices = c_int # enum
class IEnumVAccelItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0293-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

IEnumVAccelItem._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVAccelItem)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVAccelItem)), 'ppenm' )),
]
################################################################
## code template for IEnumVAccelItem implementation
##class IEnumVAccelItem_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

class ServerPublishOptions(CoClass):
    u'ServerPublishOptions object'
    _reg_clsid_ = GUID('{000D0A36-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ServerPublishOptions._com_interfaces_ = [IVServerPublishOptions]

IVEventList._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeEventList (34).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in an EventList is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVEvent)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in'], c_short, 'EventCode' ),
              ( ['in'], c_short, 'Action' ),
              ( ['in'], BSTR, 'Target' ),
              ( ['in'], BSTR, 'TargetArgs' ),
              ( ['retval', 'out'], POINTER(POINTER(IVEvent)), 'lpdispRet' )),
    COMMETHOD([dispid(5)], HRESULT, 'AddAdvise',
              ( ['in'], c_short, 'EventCode' ),
              ( ['in'], VARIANT, 'SinkIUnkOrIDisp' ),
              ( ['in'], BSTR, 'IIDSink' ),
              ( ['in'], BSTR, 'TargetArgs' ),
              ( ['retval', 'out'], POINTER(POINTER(IVEvent)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVEvent)), 'lpdispRet' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVEventList implementation
##class IVEventList_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, Index):
##        u'The first item in an EventList is item 1.'
##        #return lpdispRet
##
##    @property
##    def ItemFromID(self, ObjectID):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self, EventCode, Action, Target, TargetArgs):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddAdvise(self, EventCode, SinkIUnkOrIDisp, IIDSink, TargetArgs):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeEventList (34).'
##        #return lpi2Ret
##


# values for enumeration 'VisFieldCodes'
visFCodeCreateDate = 0
visFCodeCreateTime = 1
visFCodeCurrentDate = 2
visFCodeCurrentTime = 3
visFCodeEditDate = 4
visFCodeEditTime = 5
visFCodePrintDate = 6
visFCodePrintTime = 7
visFCodeCreator = 0
visFCodeDescription = 1
visFCodeDirectory = 2
visFCodeFileName = 3
visFCodeKeyWords = 4
visFCodeSubject = 5
visFCodeTitle = 6
visFCodeManager = 7
visFCodeCompany = 8
visFCodeCategory = 9
visFCodeHyperlinkBase = 10
visFCodeWidth = 0
visFCodeHeight = 1
visFCodeAngle = 2
visFCodeData1 = 0
visFCodeData2 = 1
visFCodeData3 = 2
visFCodeObjectID = 3
visFCodeMasterName = 4
visFCodeObjectName = 5
visFCodeObjectType = 6
visFCodeBackgroundName = 0
visFCodePageName = 1
visFCodeNumberOfPages = 2
visFCodePageNumber = 3
VisFieldCodes = c_int # enum

# values for enumeration 'VisResizeDirection'
visResizeDirE = 0
visResizeDirNE = 1
visResizeDirN = 2
visResizeDirNW = 3
visResizeDirW = 4
visResizeDirSW = 5
visResizeDirS = 6
visResizeDirSE = 7
VisResizeDirection = c_int # enum
class Style(CoClass):
    u'A style in a Visio Document. A Style is a bundle of attributes that can be applied to Shape objects.'
    _reg_clsid_ = GUID('{000D0A02-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EStyle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Style Event Interface'
    _iid_ = GUID('{000D0B06-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Style._com_interfaces_ = [IVStyle]
Style._outgoing_interfaces_ = [EStyle]

IVMSGWrap._methods_ = [
    COMMETHOD([dispid(1610743808), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743809), helpstring(u'Returns visObjTypeMSGWrap (48).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), helpstring(u'Get/Sets the hwnd field of the MSG structure being wrapped.'), 'propget'], HRESULT, 'hwnd',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743810), helpstring(u'Get/Sets the hwnd field of the MSG structure being wrapped.'), 'propput'], HRESULT, 'hwnd',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743812), helpstring(u'Get/Sets the message field of the MSG structure being wrapped.'), 'propget'], HRESULT, 'message',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743812), helpstring(u'Get/Sets the message field of the MSG structure being wrapped.'), 'propput'], HRESULT, 'message',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743814), helpstring(u'Get/Sets the wParam field of the MSG structure being wrapped.'), 'propget'], HRESULT, 'wParam',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743814), helpstring(u'Get/Sets the wParam field of the MSG structure being wrapped.'), 'propput'], HRESULT, 'wParam',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743816), helpstring(u'Get/Sets the lParam field of the MSG structure being wrapped.'), 'propget'], HRESULT, 'lParam',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743816), helpstring(u'Get/Sets the lParam field of the MSG structure being wrapped.'), 'propput'], HRESULT, 'lParam',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743818), helpstring(u'Get/Sets the time field of the MSG structure being wrapped.'), 'propget'], HRESULT, 'posttime',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743818), helpstring(u'Get/Sets the time field of the MSG structure being wrapped.'), 'propput'], HRESULT, 'posttime',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743820), helpstring(u'Get/Sets the pt.x field of the MSG structure being wrapped.'), 'propget'], HRESULT, 'ptx',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743820), helpstring(u'Get/Sets the pt.x field of the MSG structure being wrapped.'), 'propput'], HRESULT, 'ptx',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743822), helpstring(u'Get/Sets the pt.y field of the MSG structure being wrapped.'), 'propget'], HRESULT, 'pty',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743822), helpstring(u'Get/Sets the pt.y field of the MSG structure being wrapped.'), 'propput'], HRESULT, 'pty',
              ( ['in'], c_int, 'lpi4Ret' )),
]
################################################################
## code template for IVMSGWrap implementation
##class IVMSGWrap_Impl(object):
##    def _get(self):
##        u'Get/Sets the wParam field of the MSG structure being wrapped.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Get/Sets the wParam field of the MSG structure being wrapped.'
##    wParam = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Get/Sets the lParam field of the MSG structure being wrapped.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Get/Sets the lParam field of the MSG structure being wrapped.'
##    lParam = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Get/Sets the time field of the MSG structure being wrapped.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Get/Sets the time field of the MSG structure being wrapped.'
##    posttime = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Get/Sets the hwnd field of the MSG structure being wrapped.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Get/Sets the hwnd field of the MSG structure being wrapped.'
##    hwnd = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def _get(self):
##        u'Get/Sets the pt.y field of the MSG structure being wrapped.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Get/Sets the pt.y field of the MSG structure being wrapped.'
##    pty = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Get/Sets the pt.x field of the MSG structure being wrapped.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Get/Sets the pt.x field of the MSG structure being wrapped.'
##    ptx = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Get/Sets the message field of the MSG structure being wrapped.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Get/Sets the message field of the MSG structure being wrapped.'
##    message = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeMSGWrap (48).'
##        #return lpi2Ret
##

class Comments(CoClass):
    u'Comments object'
    _reg_clsid_ = GUID('{000D0A40-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Comments._com_interfaces_ = [IVComments]

tagVisFromParts = VisFromParts
class Row(CoClass):
    u"A group of related Cells in a Section that describe some of a Shape's attributes."
    _reg_clsid_ = GUID('{000D0A23-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Row._com_interfaces_ = [IVRow]
Row._outgoing_interfaces_ = [ERow]

class Window(CoClass):
    u'A window open in a Visio Application.'
    _reg_clsid_ = GUID('{000D0A0C-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Window._com_interfaces_ = [IVWindow]
Window._outgoing_interfaces_ = [EWindow]

class MasterShortcut(CoClass):
    u'A reference to a Visio Master that behaves like the master when operated on.'
    _reg_clsid_ = GUID('{000D0A25-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
MasterShortcut._com_interfaces_ = [IVMasterShortcut]

class IVMasters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0708-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVMasters._methods_ = [
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeMasters (13).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Masters collection is item 1. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameUIDOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(8)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(9), helpstring(u'Returns locale specific names of masters.')], HRESULT, 'GetNames',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeSpecificNameArray' )),
    COMMETHOD([dispid(10)], HRESULT, 'Drop',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], c_short, 'xPos' ),
              ( ['in'], c_short, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(11), helpstring(u'Like Item() but names treated locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( ['in'], VARIANT, 'NameUIDOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(12), helpstring(u'Returns locale independent names of masters.')], HRESULT, 'GetNamesU',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeIndependentNameArray' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'nID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'ppMaster' )),
    COMMETHOD([dispid(1610743823)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743824)], HRESULT, 'AddEx',
              ( ['in'], VisMasterTypes, 'Type' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'Master' )),
]
################################################################
## code template for IVMasters implementation
##class IVMasters_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetNamesU(self):
##        u'Returns locale independent names of masters.'
##        #return localeIndependentNameArray
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Paste(self, Flags):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, NameUIDOrIndex):
##        u'The first item in a Masters collection is item 1. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Drop(self, ObjectToDrop, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ItemU(self, NameUIDOrIndex):
##        u'Like Item() but names treated locale independent.'
##        #return lpdispRet
##
##    @property
##    def ItemFromID(self, nID):
##        '-no docstring-'
##        #return ppMaster
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddEx(self, Type):
##        '-no docstring-'
##        #return Master
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetNames(self):
##        u'Returns locale specific names of masters.'
##        #return localeSpecificNameArray
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeMasters (13).'
##        #return lpi2Ret
##

class MasterShortcuts(CoClass):
    u'The master shortcuts in a Visio Document. The first MasterShortcut in a MasterShortcuts collection is item 1.'
    _reg_clsid_ = GUID('{000D0A24-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
MasterShortcuts._com_interfaces_ = [IVMasterShortcuts]


# values for enumeration 'VisRowTags'
visTagDefault = 0
visTagBase = 130
visTagRowVoid = 180
visTagInvalid = -1
visTagComponent = 137
visTagMoveTo = 138
visTagLineTo = 139
visTagArcTo = 140
visTagInfiniteLine = 141
visTagEllipse = 143
visTagEllipticalArcTo = 144
visTagSplineBeg = 165
visTagSplineSpan = 166
visTagPolylineTo = 193
visTagNURBSTo = 195
visTagTab0 = 136
visTagTab2 = 150
visTagTab10 = 151
visTagTab60 = 181
visTagCnnctPt = 153
visTagCnnctNamed = 185
visTagCnnctPtABCD = 186
visTagCnnctNamedABCD = 187
visTagCtlPt = 162
visTagCtlPtTip = 170
visTagRelMoveTo = 238
visTagRelLineTo = 239
visTagRelEllipticalArcTo = 240
visTagRelCubBezTo = 236
visTagRelQuadBezTo = 237
VisRowTags = c_int # enum
tagVisRowTags = VisRowTags
class Cell(CoClass):
    u'A formula that evaluates to a value. Represents a property of a Shape or Style.'
    _reg_clsid_ = GUID('{000D0A0D-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class ECell(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Cell Event Interface'
    _iid_ = GUID('{000D0B0D-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Cell._com_interfaces_ = [IVCell]
Cell._outgoing_interfaces_ = [ECell]

class MouseEvent(CoClass):
    u'Object passed as subject of MouseDown, MouseMove and MouseUp events.'
    _reg_clsid_ = GUID('{000D0A28-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class IVMouseEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Interface to enable passing relevant info about mouse messages through Visio automation events.'
    _iid_ = GUID('{000D072A-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation']
MouseEvent._com_interfaces_ = [IVMouseEvent]

class MSGWrap(CoClass):
    u'Wraps the MSG structure used by Windows to pass messages to applications.'
    _reg_clsid_ = GUID('{000D0A27-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
MSGWrap._com_interfaces_ = [IVMSGWrap]

class Selection(CoClass):
    u'References to a subset of the shapes of a Page or Master. The first Shape in a Selection is item 1.'
    _reg_clsid_ = GUID('{000D0A0E-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Selection._com_interfaces_ = [IVSelection]

LPVISIOENUMVTOOLBARITEM = POINTER(IEnumVToolbarItem)
IEnumVAccelTable._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVAccelTable)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVAccelTable)), 'ppenm' )),
]
################################################################
## code template for IEnumVAccelTable implementation
##class IEnumVAccelTable_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##


# values for enumeration 'VisStatCodes'
visStatNormal = 0
visStatAppHasShutdown = 1
visStatDeleted = 2
visStatTouched = 4
visStatClosed = 8
visStatSuspended = 16
VisStatCodes = c_int # enum
class Font(CoClass):
    u'Identifies a typeface available for use by Shapes or Styles in a Visio Document.'
    _reg_clsid_ = GUID('{000D0A0F-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Font._com_interfaces_ = [IVFont]

class Fonts(CoClass):
    u'The fonts in a Visio Document. The first Font in a Fonts collection is item 1.'
    _reg_clsid_ = GUID('{000D0A10-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Fonts._com_interfaces_ = [IVFonts]


# values for enumeration 'VisDiagramServices'
visServiceAll = -1
visServiceVersion140 = 7
visServiceNone = 0
visServiceAutoSizePage = 1
visServiceStructureBasic = 2
visServiceStructureFull = 4
visServiceVersion150 = 8
visServiceAnimations = 8
VisDiagramServices = c_int # enum
LPVISIOMSGWRAP = POINTER(IVMSGWrap)
LPVISIOVALIDATIONISSUE = POINTER(IVValidationIssue)
EStyle._disp_methods_ = [
    DISPMETHOD([dispid(8196)], None, 'StyleChanged',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(16388)], None, 'BeforeStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(300), helpstring(u'Cancel delete of style? T:Yes F:No')], None, 'QueryCancelStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(301), helpstring(u'Delete style operation was canceled.')], None, 'StyleDeleteCanceled',
               ( ['in'], POINTER(IVStyle), 'Style' )),
]

# values for enumeration 'VisAutoLinkBehaviors'
visAutoLinkSelectedShapesOnly = 1
visAutoLinkGenericProgressBar = 2
visAutoLinkNoApplyDataGraphic = 4
visAutoLinkReplaceExistingLinks = 8
visAutoLinkDontReplaceExistingLinks = 16
visAutoLinkNullMatchesNoFormula = 32
visAutoLinkIncludeHiddenProps = 64
VisAutoLinkBehaviors = c_int # enum
class Masters(CoClass):
    u'The masters in a Visio Document. The first Master in a Masters collection is item 1.'
    _reg_clsid_ = GUID('{000D0A03-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EMasters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Masters Event Interface'
    _iid_ = GUID('{000D0B07-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Masters._com_interfaces_ = [IVMasters]
Masters._outgoing_interfaces_ = [EMasters]

IVToolbarSet._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'SetID',
              ( ['retval', 'out'], POINTER(c_int), 'plSetID' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Toolbars',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbars)), 'lplpVToolbars' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarSets)), 'lplpVToolbarSets' )),
]
################################################################
## code template for IVToolbarSet implementation
##class IVToolbarSet_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVToolbarSets
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pCaption
##
##    @property
##    def Toolbars(self):
##        '-no docstring-'
##        #return lplpVToolbars
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SetID(self):
##        '-no docstring-'
##        #return plSetID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'VisOpenSaveArgs'
visOpenCopy = 1
visOpenRO = 2
visOpenDocked = 4
visOpenDontList = 8
visOpenMinimized = 16
visOpenRW = 32
visOpenHidden = 64
visOpenMacrosDisabled = 128
visOpenNoWorkspace = 256
visOpenDeclineAutoRefresh = 1024
visOpenCopyOfNaming = 2048
visAddDocked = 4
visAddMinimized = 16
visAddHidden = 64
visAddMacrosDisabled = 128
visAddNoWorkspace = 256
visAddStencil = 512
visAddDeclineAutoRefresh = 1024
visSaveAsRO = 1
visSaveAsWS = 2
visSaveAsListInMRU = 4
visSaveAsCheckCompatibility = 8
visSavePrevNone = 0
visSavePrevDraft1st = 1
visSavePrevDetailed1st = 2
visSavePrevDraftAll = 4
visSavePrevDetailedAll = 8
VisOpenSaveArgs = c_int # enum

# values for enumeration 'VisUIBarProtection'
visBarNoProtection = 0
visBarNoCustomize = 1
visBarNoResize = 2
visBarNoMove = 4
visBarNoChangeDock = 16
visBarNoVerticalDock = 32
visBarNoHorizontalDock = 64
VisUIBarProtection = c_int # enum

# values for enumeration 'VisThemeColors'
visThemeColorsNone = 0
visThemeColorsMonochrome = 1
visThemeColorsOffice = 2
visThemeColorsMedian = 3
visThemeColorsConcourse = 4
visThemeColorsSolstice = 5
visThemeColorsTechnic = 6
visThemeColorsPaper = 7
visThemeColorsFoundry = 8
visThemeColorsApex = 9
visThemeColorsTrek = 10
visThemeColorsModule = 11
visThemeColorsOriel = 12
visThemeColorsAspect = 13
visThemeColorsEquity = 14
visThemeColorsCivic = 15
visThemeColorsOpulent = 16
visThemeColorsVerve = 17
visThemeColorsOrigin = 18
visThemeColorsUrban = 19
visThemeColorsFlow = 20
visThemeColorsMetro = 21
visThemeColorsOfficeLight = 22
visThemeColorsOfficeDark = 23
visThemeColorsMedianLight = 24
visThemeColorsMedianDark = 25
visThemeColorsConcourseLight = 26
visThemeColorsConcourseDark = 27
visThemeColorsPaperLight = 28
visThemeColorsPaperDark = 29
visThemeColorsFoundryLight = 30
visThemeColorsFoundryDark = 31
visThemeColorsEquityLight = 32
visThemeColorsEquityDark = 33
visThemeColorsVerveLight = 34
visThemeColorsVerveDark = 35
visThemeColorsBasic = 36
visThemeColorsAdjacency = 37
visThemeColorsAngles = 38
visThemeColorsApothecary = 39
visThemeColorsAustin = 40
visThemeColorsEssential = 41
visThemeColorsBlackTie = 42
visThemeColorsComposite = 43
visThemeColorsClarity = 44
visThemeColorsElemental = 45
visThemeColorsExecutive = 46
visThemeColorsGrid = 47
visThemeColorsHardcover = 48
visThemeColorsHorizon = 49
visThemeColorsNewsprint = 50
visThemeColorsCouture = 51
visThemeColorsPerspective = 52
visThemeColorsPushpin = 53
visThemeColorsSlipstream = 54
visThemeColorsThatch = 55
visThemeColorsWaveform = 56
VisThemeColors = c_int # enum
IVColor._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'hidden', 'propget'], HRESULT, 'Index16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Red',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Red',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Green',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Green',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Blue',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Blue',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Flags',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Flags',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'PaletteEntry',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'PaletteEntry',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(8), helpstring(u'Returns visObjTypeColor (29).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
]
################################################################
## code template for IVColor implementation
##class IVColor_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Blue = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Index16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    PaletteEntry = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Green = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Flags = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Red = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeColor (29).'
##        #return lpi2Ret
##

class AccelItem(CoClass):
    u'A map from a keystroke combination to an action such as invoking a Visio command.'
    _reg_clsid_ = GUID('{000D0290-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
AccelItem._com_interfaces_ = [IVAccelItem]

LPVISIOMENUSET = POINTER(IVMenuSet)
IVAccelTable._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pTableName' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'TableName',
              ( ['in'], BSTR, 'pTableName' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'TableName',
              ( ['retval', 'out'], POINTER(BSTR), 'pTableName' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'SetID',
              ( ['retval', 'out'], POINTER(c_int), 'plSetID' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'AccelItems',
              ( ['retval', 'out'], POINTER(POINTER(IVAccelItems)), 'lplpVAccelItems' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVAccelTables)), 'lplpVAccelTables' )),
]
################################################################
## code template for IVAccelTable implementation
##class IVAccelTable_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVAccelTables
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pTableName
##
##    def _get(self):
##        '-no docstring-'
##        #return pTableName
##    def _set(self, pTableName):
##        '-no docstring-'
##    TableName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def AccelItems(self):
##        '-no docstring-'
##        #return lplpVAccelItems
##
##    @property
##    def SetID(self):
##        '-no docstring-'
##        #return plSetID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'VisRemoveHiddenInfoItems'
visRHINone = 0
visRHIPersonalInfo = 1
visRHIPreview = 2
visRHIMasters = 4
visRHIStyles = 8
visRHIDataRecordsets = 16
visRHIValidationRules = 32
VisRemoveHiddenInfoItems = c_int # enum

# values for enumeration 'VisDocExIntent'
visDocExIntentScreen = 0
visDocExIntentPrint = 1
VisDocExIntent = c_int # enum
class IVDataRecordsets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D072E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVDataRecordsets._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'ID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'Enum' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743817)], HRESULT, 'Add',
              ( ['in'], VARIANT, 'ConnectionIDOrString' ),
              ( ['in'], BSTR, 'CommandString' ),
              ( ['in'], c_int, 'AddOptions' ),
              ( ['in', 'optional'], BSTR, 'Name', u'' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(1610743818)], HRESULT, 'AddFromXML',
              ( ['in'], BSTR, 'XMLString' ),
              ( ['in'], c_int, 'AddOptions' ),
              ( ['in', 'optional'], BSTR, 'Name', u'' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(1610743819)], HRESULT, 'AddFromConnectionFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_int, 'AddOptions' ),
              ( ['in', 'optional'], BSTR, 'Name', u'' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'GetLastDataError',
              ( ['out'], POINTER(c_int), 'DataErrorCode' ),
              ( ['out'], POINTER(BSTR), 'DataErrorDescription' ),
              ( ['out'], POINTER(c_int), 'RecordsetID' )),
]
################################################################
## code template for IVDataRecordsets implementation
##class IVDataRecordsets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return Enum
##
##    def AddFromConnectionFile(self, FileName, AddOptions, Name):
##        '-no docstring-'
##        #return DataRecordset
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return DataRecordset
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddFromXML(self, XMLString, AddOptions, Name):
##        '-no docstring-'
##        #return DataRecordset
##
##    @property
##    def ItemFromID(self, ID):
##        '-no docstring-'
##        #return DataRecordset
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def Add(self, ConnectionIDOrString, CommandString, AddOptions, Name):
##        '-no docstring-'
##        #return DataRecordset
##
##    def GetLastDataError(self):
##        '-no docstring-'
##        #return DataErrorCode, DataErrorDescription, RecordsetID
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

LPVISIODATARECORDSETCHANGEDEVENT = POINTER(IVDataRecordsetChangedEvent)

# values for enumeration 'VisDefaultColors'
visTransparent = 0
visBlack = 0
visWhite = 1
visRed = 2
visGreen = 3
visBlue = 4
visYellow = 5
visMagenta = 6
visCyan = 7
visDarkRed = 8
visDarkGreen = 9
visDarkBlue = 10
visDarkYellow = 11
visPurple = 12
visDarkCyan = 13
visGray = 14
visGray10 = 15
visGray20 = 16
visGray30 = 17
visGray40 = 18
visDarkGray = 19
visGray50 = 19
visGray60 = 20
visGray70 = 21
visGray80 = 22
visGray90 = 23
VisDefaultColors = c_int # enum

# values for enumeration 'VisUIIconIDs'
visIconIXNEW = 0
visIconIXOPEN = 1
visIconIXOPENSTENCIL = 2
visIconIXSAVE = 3
visIconIXPRINT = 4
visIconIXPRINTPREVIEW = 5
visIconIXCUT = 6
visIconIXCOPY = 7
visIconIXPASTE = 8
visIconIXCLEAR = 9
visIconIXUNDO = 10
visIconIXREDO = 11
visIconIXREPEAT = 12
visIconIXPREVIOUSPAGE = 13
visIconIXNEXTPAGE = 14
visIconIXZOOMOUT = 15
visIconIXZOOMIN = 16
visIconIXZOOM100 = 17
visIconIXFLIPHORIZONTAL = 18
visIconIXFLIPVERTICAL = 19
visIconIXPOINTERTOOL = 20
visIconIXPENCILTOOL = 21
visIconIXLINETOOL = 22
visIconIXQTRARCTOOL = 23
visIconIXRECTANGLETOOL = 24
visIconIXOVALTOOL = 25
visIconIXSTAMPTOOL = 26
visIconIXTEXTOOL = 27
visIconIXROTATETOOL = 28
visIconIXCROP = 29
visIconIXCONNECTIONPTTOOL = 30
visIconIXSNAP = 31
visIconIXGLUE = 32
visIconIXRULER = 33
visIconIXGRID = 34
visIconIXGUIDE = 35
visIconIXCONNECTIONPOINTS = 36
visIconIXROTATECLOCKWISE = 37
visIconIXROTATECOUNTERCLOCKWISE = 38
visIconIXNEWWINDOW = 39
visIconIXCORNERSTYLE = 40
visIconIXLINEEND = 41
visIconIXSHADOWSTYLE = 42
visIconIXFILLCOLOR = 43
visIconIXLINECOLOR = 44
visIconIXLINEWEIGHT = 45
visIconIXLINEPATTERN = 46
visIconIXFILLPATTERN = 47
visIconIXPOINTSIZEDOWN = 48
visIconIXPOINTSIZEUP = 49
visIconIXBOLD = 50
visIconIXITALIC = 51
visIconIXUNDERLINE = 52
visIconIXSUPERSCRIPT = 53
visIconIXSUBSCRIPT = 54
visIconIXTEXTCOLOR = 55
visIconIXTEXTALIGNLEFT = 56
visIconIXTEXTALIGNCENTER = 57
visIconIXTEXTALIGNRIGHT = 58
visIconIXTEXTALIGNJUSTIFY = 59
visIconIXTEXTALIGNTOP = 60
visIconIXTEXTALIGNMIDDLE = 61
visIconIXTEXTALIGNBOTTOM = 62
visIconIXALIGN = 63
visIconIXALIGNLEFT = 64
visIconIXALIGNCENTER = 65
visIconIXALIGNRIGHT = 66
visIconIXALIGNTOP = 67
visIconIXALIGNMIDDLE = 68
visIconIXALIGNBOTTOM = 69
visIconIXDISTRIBUTE = 70
visIconIXDHORZ_EQSPACE = 71
visIconIXDHORZ_CENTER = 72
visIconIXDVERT_EQSPACE = 73
visIconIXDVERT_MIDDLE = 74
visIconIXCONNECTSHAPES = 75
visIconIXFIRSTPAGE = 76
visIconIXLASTPAGE = 77
visIconIXPAGEBREAKS = 78
visIconIXSPLINETOOL = 79
visIconIXICONNAME = 80
visIconIXICONONLY = 81
visIconIXNAMEONLY = 82
visIconIXARRANGE = 83
visIconIXCANCEL = 84
visIconIXACCEPT = 85
visIconIXICONPENCIL = 86
visIconIXICONBUCKET = 87
visIconIXICONLASSO = 88
visIconIXICONSELNET = 89
visIconIXBRINGFRONT = 90
visIconIXSENDBACK = 91
visIconIXGROUP = 92
visIconIXUNGROUP = 93
visIconIXCASCADE = 94
visIconIXTILE = 95
visIconIXCONNECTORTOOL = 96
visIconIXTEXTBLOCKTOOL = 97
visIconIXWHOLEPAGE = 98
visIconIXSINGLETILE = 99
visIconIXSPELLING = 100
visIconIXFORMATPAINTER = 101
visIconIXHELPMODE = 102
visIconIXLAYERPROPERTIES = 103
visIconIXLAYOUTSHAPES = 104
visIconIXINSERTHYPERLINK = 105
visIconIXSEARCHTHEWEB = 106
visIconIXGOBACK = 107
visIconIXGOFORWARD = 108
visIconIXWEBTOOLBAR = 109
visIconIXSHAPEEXPL = 110
visIconIXCUSTPROP = 111
visIconIXROTATETEXT = 112
visIconIXBULLETS = 113
visIconIXDECRINDENT = 114
visIconIXINCRINDENT = 115
visIconIXDECRPARA = 116
visIconIXINCRPARA = 117
visIconIXINSERTCONTROL = 118
visIconIXDESIGNMODE = 119
visIconIXSHAPESHEET = 120
visIconIXMACROS = 121
visIconIXVBEDITOR = 122
visIconIXVERTICALTEXT = 123
visIconIXFULLSCREEN = 124
visIconIXHELPBOOK = 125
visIconIXSHAPEEXPLORER = 126
visIconIXWEBPAGE = 127
visIconIXCHECKMARK = 128
visIconIXCANTFIND = 129
visIconIXCLIPART = 130
visIconIXIMAGE = 131
visIconIXWORDART = 132
visIconIXHELPASSISTANT = 133
visIconIXCHART = 134
visIconIXMAILRECPT = 135
visIconIXROUTINGRECPT = 136
visIconIXEXCHANGEFOLDER = 137
visIconIXFIND = 138
visIconIXPANZOOM = 139
visIconIXRESTORE = 140
visIconIXMINIMIZE = 141
visIconIXMAXIMIZE = 142
visIconIXCLOSE = 143
visIconIXFOLDER = 144
visIconIXVSD = 145
visIconIXVSS = 146
visIconIXVST = 147
visIconIXVBAMACRO = 148
visIconIXADDIN = 149
visIconIXSIZEPOS = 150
visIconIXCUSTOM_SMILE = 151
visIconIXCUSTOM_FROWN = 152
visIconIXCUSTOM_BANK = 153
visIconIXCUSTOM_PASTE = 154
visIconIXCUSTOM_LOAD = 155
visIconIXCUSTOM_SAVE = 156
visIconIXCUSTOM_MIC = 157
visIconIXCUSTOM_SPEAKER = 158
visIconIXCUSTOM_BELL = 159
visIconIXCUSTOM_NOTE = 160
visIconIXCUSTOM_PHONE = 161
visIconIXCUSTOM_BALLOON = 162
visIconIXCUSTOM_CAMCORD = 163
visIconIXCUSTOM_CALC = 164
visIconIXCUSTOM_HEART = 165
visIconIXCUSTOM_DIAMOND = 166
visIconIXCUSTOM_SPADE = 167
visIconIXCUSTOM_CLUB = 168
visIconIXCUSTOM_CARDS = 169
visIconIXCUSTOM_MUG = 170
visIconIXCUSTOM_TRASH = 171
visIconIXCUSTOM_PENCIL = 172
visIconIXCUSTOM_BOX = 173
visIconIXCUSTOM_FEET = 174
visIconIXCUSTOM_LEFT = 175
visIconIXCUSTOM_RIGHT = 176
visIconIXCUSTOM_UP = 177
visIconIXCUSTOM_DOWN = 178
visIconIXCUSTOM_TACK = 179
visIconIXCUSTOM_KEYBOARD = 180
visIconIXCUSTOM_PAGES = 181
visIconIXCUSTOM_FISH = 182
visIconIXCUSTOM_KEY = 183
visIconIXCUSTOM_GEARS = 184
visIconIXCUSTOM_SCALES = 185
visIconIXCUSTOM_HOURGLASS = 186
visIconIXCUSTOM_MAN = 187
visIconIXCUSTOM_WOMAN = 188
visIconIXCUSTOM_RUN = 189
visIconIXCUSTOM_EYE = 190
visIconIXCUSTOM_EIGHTBALL = 191
visIconIXCUSTOM_QUESTION = 192
visIconIXINSERTCOMMENT = 193
visIconIXEDITCOMMENT = 194
visIconIXDELETECOMMENT = 195
visIconIXDELETE = 196
visIconIXEDITSTEN = 197
visIconIXNEWSTEN = 198
visIconIXSHOWDOCSTEN = 199
visIconIXPAGELINEJUMPCODE_NONE = 200
visIconIXPAGELINEJUMPCODE_HORZ = 201
visIconIXPAGELINEJUMPCODE_VERT = 202
visIconIXPAGELINEJUMPCODE_LASTROUTED = 203
visIconIXLINEJUMPSTYLE_ARC = 204
visIconIXLINEJUMPSTYLE_GAP = 205
visIconIXLINEJUMPSTYLE_SQUARE = 206
visIconIXLINEJUMPSTYLE_TRIANGLE = 207
visIconIXLINEJUMPSTYLE_2PT = 208
visIconIXLINEJUMPSTYLE_3PT = 209
visIconIXLINEJUMPSTYLE_4PT = 210
visIconIXLINEJUMPSTYLE_5PT = 211
visIconIXLINEJUMPSTYLE_6PT = 212
visIconIXDCREROUTE_FREELY = 213
visIconIXDCREROUTE_ASNEEDED = 214
visIconIXCUSTOMPROP_WINDOW = 215
visIconIXPAGEPLOW = 216
visIconIXPAGELINEJUMPCODE_DISP = 217
visIconIXLINEJUMPSTYLE_PAGE = 218
visIconIXDRAWINGEXPLORER = 219
visIconIXSHAPE_INTERSECT = 220
visIconIXDYNGRID = 221
visIconIXRULSUB = 222
visIconIXSNAPTOGRID = 223
visIconIXALIGNBOX = 224
visIconIXSHAPEGEO = 225
visIconIXGUIDES = 226
visIconIXSHAPEHAND = 227
visIconIXSHAPEVERT = 228
visIconIXCONNPOINTS = 229
visIconIXSHAPEEXT = 230
visIconIXPAGELINEJUMPCODE_RDISP = 231
visIconIXSNAP_LINES = 232
visIconIXSTRIKETHROUGH = 233
visIconIXSMALLCAPS = 234
visIconIXDCREROUTE_NEVER = 235
visIconIXDCREROUTE = 236
visIconIXBRING_FORWARD = 245
visIconIXSEND_BACKWARD = 246
visIconIXSMALL_PADLOCK = 247
visIconIXINSERT_OBJECT = 248
visIconIXLARGE_PADLOCK = 249
visIconIXINSERT_EQUATION = 250
visIconIXSTYLE = 251
visIconIXREPLACE = 252
visIconIXDOUBLE_UNDERLINE = 253
VisUIIconIDs = c_int # enum

# values for enumeration 'VisDocVersions'
visVersionUnsaved = 0
visVersion10 = 65571
visVersion20 = 131072
visVersion30 = 196611
visVersion40 = 262144
visVersion50 = 327680
visVersion60 = 393216
visVersion100 = 393216
visVersion110 = 720896
visVersion120 = 720896
visVersion140 = 720896
visVersion150 = 983040
VisDocVersions = c_int # enum

# values for enumeration 'VisSavePreviewMode'
visSavePreviewNone = 0
visSavePreviewDraft1st = 1
visSavePreviewDetailed1st = 2
visSavePreviewDraftAll = 4
visSavePreviewDetailedAll = 8
VisSavePreviewMode = c_int # enum
tagVisUIObjSets = VisUIObjSets

# values for enumeration 'VisPasteSpecialCodes'
visPasteText = 1
visPasteBitmap = 2
visPasteMetafile = 3
visPasteOEMText = 7
visPasteDIB = 8
visPasteEMF = 14
visPasteOLEObject = 65536
visPasteRichText = 65537
visPasteHyperlink = 65538
visPasteURL = 65539
visPasteVisioShapes = 65540
visPasteVisioMasters = 65541
visPasteVisioText = 65542
visPasteVisioIcon = 65543
visPasteInk = 65544
visPasteVisioShapesXML = 65545
visPasteVisioMastersXML = 65546
visPasteVisioShapesWithoutDataLinks = 65548
VisPasteSpecialCodes = c_int # enum

# values for enumeration 'VisFontAttributes'
visFontRaster = 16
visFontDevice = 32
visFontScalable = 64
visFont0Alias = 128
VisFontAttributes = c_int # enum
class IVRelatedShapePairEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0737-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
EPages._disp_methods_ = [
    DISPMETHOD([dispid(32784)], None, 'PageAdded',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(8208)], None, 'PageChanged',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(16400)], None, 'BeforePageDelete',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(8256)], None, 'ShapeChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(902)], None, 'SelectionAdded',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(16448)], None, 'BeforeShapeDelete',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(33024)], None, 'ConnectionsAdded',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(16640)], None, 'ConnectionsDeleted',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(500), helpstring(u'Cancel delete of page? T:Yes F:No')], None, 'QueryCancelPageDelete',
               ( ['in'], POINTER(IVPage), 'Page' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(501), helpstring(u'Delete page operation was canceled.')], None, 'PageDeleteCanceled',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(805)], None, 'ShapeLinkAdded',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(806)], None, 'ShapeLinkDeleted',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(502)], None, 'ContainerRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(503)], None, 'ContainerRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(504)], None, 'CalloutRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(505)], None, 'CalloutRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(911)], None, 'QueryCancelReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(912)], None, 'ReplaceShapesCanceled',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(913)], None, 'BeforeReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(914)], None, 'AfterReplaceShapes',
               ( ['in'], POINTER(IVSelection), 'sel' )),
]
class ToolbarSet(CoClass):
    u'A set of Toolbars associated with an interactive state, such as drawing window active, etc.'
    _reg_clsid_ = GUID('{000D0260-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ToolbarSet._com_interfaces_ = [IVToolbarSet]

tagVisDefaultColors = VisDefaultColors
LPVISIOTOOLBARSET = POINTER(IVToolbarSet)

# values for enumeration 'VisAutoConnectDir'
visAutoConnectDirNone = 0
visAutoConnectDirUp = 1
visAutoConnectDirDown = 2
visAutoConnectDirLeft = 3
visAutoConnectDirRight = 4
VisAutoConnectDir = c_int # enum

# values for enumeration 'VisConnectedShapesFlags'
visConnectedShapesAllNodes = 0
visConnectedShapesIncomingNodes = 1
visConnectedShapesOutgoingNodes = 2
VisConnectedShapesFlags = c_int # enum

# values for enumeration 'VisGluedShapesFlags'
visGluedShapesAll1D = 0
visGluedShapesIncoming1D = 1
visGluedShapesOutgoing1D = 2
visGluedShapesAll2D = 3
visGluedShapesIncoming2D = 4
visGluedShapesOutgoing2D = 5
VisGluedShapesFlags = c_int # enum

# values for enumeration 'VisUnitCodes'
visNumber = 32
visPercent = 33
visAcre = 36
visHectare = 37
visDate = 40
visDurationUnits = 42
visElapsedWeek = 43
visElapsedDay = 44
visElapsedHour = 45
visElapsedMin = 46
visElapsedSec = 47
visTypeUnits = 48
visPicasAndPoints = 49
visPoints = 50
visPicas = 51
visCicerosAndDidots = 52
visDidots = 53
visCiceros = 54
visPageUnits = 63
visDrawingUnits = 64
visInches = 65
visFeet = 66
visFeetAndInches = 67
visMiles = 68
visCentimeters = 69
visMillimeters = 70
visMeters = 71
visKilometers = 72
visInchFrac = 73
visMileFrac = 74
visYards = 75
visNautMiles = 76
visAngleUnits = 80
visDegrees = 81
visDegreeMinSec = 82
visRadians = 83
visMin = 84
visSec = 85
visUnitsGUID = 95
visCurrency = 111
visUnitsNURBS = 138
visUnitsPolyline = 139
visUnitsPoint = 225
visUnitsString = 231
visUnitsColor = 251
visNoCast = 252
visUnitsInval = 255
VisUnitCodes = c_int # enum

# values for enumeration 'VisQuickStyleColors'
visQuickStyleColorDark = 0
visQuickStyleColorLight = 1
visQuickStyleColorAccent1 = 2
visQuickStyleColorAccent2 = 3
visQuickStyleColorAccent3 = 4
visQuickStyleColorAccent4 = 5
visQuickStyleColorAccent5 = 6
visQuickStyleColorAccent6 = 7
visQuickStyleColorBackground = 8
visQuickStyleColorVariant1 = 100
visQuickStyleColorVariant2 = 101
visQuickStyleColorVariant3 = 102
visQuickStyleColorVariant4 = 103
visQuickStyleColorVariant5 = 104
visQuickStyleColorVariant6 = 105
visQuickStyleColorVariant7 = 106
VisQuickStyleColors = c_int # enum
IVShape._methods_ = [
    COMMETHOD([dispid(45), 'hidden'], HRESULT, 'VoidGroup'),
    COMMETHOD([dispid(46)], HRESULT, 'BringForward'),
    COMMETHOD([dispid(47)], HRESULT, 'BringToFront'),
    COMMETHOD([dispid(48)], HRESULT, 'ConvertToGroup'),
    COMMETHOD([dispid(49)], HRESULT, 'FlipHorizontal'),
    COMMETHOD([dispid(50)], HRESULT, 'FlipVertical'),
    COMMETHOD([dispid(51)], HRESULT, 'ReverseEnds'),
    COMMETHOD([dispid(52)], HRESULT, 'SendBackward'),
    COMMETHOD([dispid(53)], HRESULT, 'SendToBack'),
    COMMETHOD([dispid(54)], HRESULT, 'Rotate90'),
    COMMETHOD([dispid(55)], HRESULT, 'Ungroup'),
    COMMETHOD([dispid(44), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'Master',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeShape (17).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13), helpstring(u'Returns cell of this shape with given locale specific name.'), 'propget'], HRESULT, 'Cells',
              ( ['in'], BSTR, 'localeSpecificCellName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'CellsSRC',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'Column' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(IVShapes)), 'lpdispRet' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Data1',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Data1',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Data2',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'Data2',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Data3',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'Data3',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Help',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'Help',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(4), helpstring(u'Returns synthetic name of shape (sheet.ID). Locale independent.'), 'propget'], HRESULT, 'NameID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(0), helpstring(u"Shape's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(0), helpstring(u"Shape's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Text',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'CharCount',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Characters',
              ( ['retval', 'out'], POINTER(POINTER(IVCharacters)), 'lpdispRet' )),
    COMMETHOD([dispid(9), 'hidden'], HRESULT, 'old_Copy'),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'old_Cut'),
    COMMETHOD([dispid(11)], HRESULT, 'Delete'),
    COMMETHOD([dispid(12), 'hidden'], HRESULT, 'VoidDuplicate'),
    COMMETHOD([dispid(19)], HRESULT, 'Drop',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(22), 'propget'], HRESULT, 'OneD',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'OneD',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'GeometryCount',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'RowCount',
              ( ['in'], c_short, 'Section' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(25)], HRESULT, 'AddSection',
              ( ['in'], c_short, 'Section' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(26)], HRESULT, 'DeleteSection',
              ( ['in'], c_short, 'Section' )),
    COMMETHOD([dispid(27)], HRESULT, 'AddRow',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'RowTag' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(28)], HRESULT, 'DeleteRow',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'RowsCellCount',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'RowType',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'RowType',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(31)], HRESULT, 'SetCenter',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' )),
    COMMETHOD([dispid(32)], HRESULT, 'SetBegin',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' )),
    COMMETHOD([dispid(33)], HRESULT, 'SetEnd',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'Connects',
              ( ['retval', 'out'], POINTER(POINTER(IVConnects)), 'lpdispRet' )),
    COMMETHOD([dispid(35), 'hidden', 'propget'], HRESULT, 'Index16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(36), helpstring(u'Locale specific name of style applied to this shape.'), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(36), helpstring(u'Locale specific name of style applied to this shape.'), 'propput'], HRESULT, 'Style',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(40), helpstring(u'Locale specific name of style to apply to this shape while keeping local overrides.'), 'propput'], HRESULT, 'StyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(37), helpstring(u'Locale specific name of line style applied to this shape.'), 'propget'], HRESULT, 'LineStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(37), helpstring(u'Locale specific name of line style applied to this shape.'), 'propput'], HRESULT, 'LineStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(41), helpstring(u'Locale specific name of line style to apply to this shape while keeping local overrides.'), 'propput'], HRESULT, 'LineStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(38), helpstring(u'Locale specific name of fill style applied to this shape.'), 'propget'], HRESULT, 'FillStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(38), helpstring(u'Locale specific name of fill style applied to this shape.'), 'propput'], HRESULT, 'FillStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(42), helpstring(u'Locale specific name of fill style to apply to this shape while keeping local overrides.'), 'propput'], HRESULT, 'FillStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(39), helpstring(u'Locale specific name of text style applied to this shape.'), 'propget'], HRESULT, 'TextStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(39), helpstring(u'Locale specific name of text style applied to this shape.'), 'propput'], HRESULT, 'TextStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(43), helpstring(u'Locale specific name of text style to apply to this shape while keeping local overrides.'), 'propput'], HRESULT, 'TextStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(57)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(58), 'hidden', 'propget'], HRESULT, 'old_AreaIU',
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(59), 'hidden', 'propget'], HRESULT, 'old_LengthIU',
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(60), 'hidden', 'propget'], HRESULT, 'GeomExIf',
              ( ['in'], c_short, 'fFill' ),
              ( ['in'], c_double, 'LineRes' ),
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lpunkRet' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'UniqueID',
              ( ['in'], c_short, 'fUniqueID' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(62), 'propget'], HRESULT, 'ContainingPage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(63), 'propget'], HRESULT, 'ContainingMaster',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(64), 'propget'], HRESULT, 'ContainingShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'SectionExists',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(66), 'propget'], HRESULT, 'RowExists',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(67), helpstring(u'Returns whether this shape has cell with given locale specific name.'), 'propget'], HRESULT, 'CellExists',
              ( ['in'], BSTR, 'localeSpecificCellName' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'CellsSRCExists',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'Column' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(69), 'propget'], HRESULT, 'LayerCount',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(70), 'propget'], HRESULT, 'Layer',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVLayer)), 'lpdispRet' )),
    COMMETHOD([dispid(71)], HRESULT, 'AddNamedRow',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], BSTR, 'RowName' ),
              ( ['in'], c_short, 'RowTag' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(72)], HRESULT, 'AddRows',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'RowTag' ),
              ( ['in'], c_short, 'RowCount' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(75)], HRESULT, 'DrawLine',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(76)], HRESULT, 'DrawRectangle',
              ( ['in'], c_double, 'x1' ),
              ( ['in'], c_double, 'y1' ),
              ( ['in'], c_double, 'x2' ),
              ( ['in'], c_double, 'y2' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(77)], HRESULT, 'DrawOval',
              ( ['in'], c_double, 'x1' ),
              ( ['in'], c_double, 'y1' ),
              ( ['in'], c_double, 'x2' ),
              ( ['in'], c_double, 'y2' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(78)], HRESULT, 'DrawSpline',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(79)], HRESULT, 'DrawBezier',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_short, 'degree' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(80)], HRESULT, 'DrawPolyline',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(81)], HRESULT, 'FitCurve',
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' )),
    COMMETHOD([dispid(82)], HRESULT, 'Import',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(83)], HRESULT, 'CenterDrawing'),
    COMMETHOD([dispid(84)], HRESULT, 'InsertFromFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(85)], HRESULT, 'InsertObject',
              ( ['in'], BSTR, 'ClassOrProgID' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(86), 'propget'], HRESULT, 'ClassID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(87), 'propget'], HRESULT, 'ForeignType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(88), 'propget'], HRESULT, 'Object',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(89)], HRESULT, 'OpenDrawWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(90)], HRESULT, 'OpenSheetWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(91), 'hidden', 'propget'], HRESULT, 'ID16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(92), helpstring(u'Creates many shapes in this shape (if it is group). Names, if supplied, are considered locale specific.')], HRESULT, 'DropMany',
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ObjectsToInstance' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_short)), 'IDArray' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(93), helpstring(u'Returns cell formulas in locale specific syntax.')], HRESULT, 'GetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(94)], HRESULT, 'GetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' )),
    COMMETHOD([dispid(95)], HRESULT, 'SetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(96)], HRESULT, 'SetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(97), 'propget'], HRESULT, 'FromConnects',
              ( ['retval', 'out'], POINTER(POINTER(IVConnects)), 'lpdispRet' )),
    COMMETHOD([dispid(98)], HRESULT, 'Layout'),
    COMMETHOD([dispid(99)], HRESULT, 'BoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
    COMMETHOD([dispid(100)], HRESULT, 'HitTest',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(101), 'hidden', 'propget'], HRESULT, 'Hyperlink',
              ( ['retval', 'out'], POINTER(POINTER(IVHyperlink)), 'lpdispRet' )),
    COMMETHOD([dispid(102), 'propget'], HRESULT, 'ProgID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(103), 'propget'], HRESULT, 'ObjectIsInherited',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(104), 'propget'], HRESULT, 'Paths',
              ( ['retval', 'out'], POINTER(POINTER(IVPaths)), 'lpdispRet' )),
    COMMETHOD([dispid(105), 'propget'], HRESULT, 'PathsLocal',
              ( ['retval', 'out'], POINTER(POINTER(IVPaths)), 'lpdispRet' )),
    COMMETHOD([dispid(106)], HRESULT, 'AddHyperlink',
              ( ['retval', 'out'], POINTER(POINTER(IVHyperlink)), 'lpdispRet' )),
    COMMETHOD([dispid(107), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(108), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(109), 'propget'], HRESULT, 'Section',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSection)), 'lpdispRet' )),
    COMMETHOD([dispid(110), 'propget'], HRESULT, 'Hyperlinks',
              ( ['retval', 'out'], POINTER(POINTER(IVHyperlinks)), 'lpdispRet' )),
    COMMETHOD([dispid(111), 'propget'], HRESULT, 'SpatialRelation',
              ( ['in'], POINTER(IVShape), 'OtherShape' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(112), 'propget'], HRESULT, 'DistanceFrom',
              ( ['in'], POINTER(IVShape), 'OtherShape' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(113), 'propget'], HRESULT, 'DistanceFromPoint',
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['out', 'optional'], POINTER(VARIANT), 'pvPathIndex' ),
              ( ['out', 'optional'], POINTER(VARIANT), 'pvCurveIndex' ),
              ( ['out', 'optional'], POINTER(VARIANT), 'pvt' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(114), 'propget'], HRESULT, 'SpatialNeighbors',
              ( ['in'], c_short, 'Relation' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in', 'optional'], VARIANT, 'ResultRoot' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(115), 'propget'], HRESULT, 'SpatialSearch',
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['in'], c_short, 'Relation' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(116)], HRESULT, 'TransformXYTo',
              ( ['in'], POINTER(IVShape), 'OtherShape' ),
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['out'], POINTER(c_double), 'xprime' ),
              ( ['out'], POINTER(c_double), 'yprime' )),
    COMMETHOD([dispid(117)], HRESULT, 'TransformXYFrom',
              ( ['in'], POINTER(IVShape), 'OtherShape' ),
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['out'], POINTER(c_double), 'xprime' ),
              ( ['out'], POINTER(c_double), 'yprime' )),
    COMMETHOD([dispid(118)], HRESULT, 'XYToPage',
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['out'], POINTER(c_double), 'xprime' ),
              ( ['out'], POINTER(c_double), 'yprime' )),
    COMMETHOD([dispid(119)], HRESULT, 'XYFromPage',
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['out'], POINTER(c_double), 'xprime' ),
              ( ['out'], POINTER(c_double), 'yprime' )),
    COMMETHOD([dispid(120)], HRESULT, 'UpdateAlignmentBox'),
    COMMETHOD([dispid(121), helpstring(u'Returns cell of this shape with given locale independent name.'), 'propget'], HRESULT, 'CellsU',
              ( ['in'], BSTR, 'localeIndependentCellName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(122), helpstring(u"Shape's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(122), helpstring(u"Shape's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(123), helpstring(u'Returns whether this shape has cell with given locale independent name.'), 'propget'], HRESULT, 'CellExistsU',
              ( ['in'], BSTR, 'localeIndependentCellName' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(124), helpstring(u'Creates many shapes in this shape (if it is group). Names, if supplied, are considered locale independent.')], HRESULT, 'DropManyU',
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ObjectsToInstance' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_short)), 'IDArray' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(125), helpstring(u'Returns cell formulas in locale independent syntax.')], HRESULT, 'GetFormulasU',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(126)], HRESULT, 'DrawNURBS',
              ( ['in'], c_short, 'degree' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'knots' ),
              ( ['in', 'optional'], VARIANT, 'weights' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(127), helpstring(u'Returns index of row of cell with given locale specific name.'), 'propget'], HRESULT, 'CellsRowIndex',
              ( ['in'], BSTR, 'localeSpecificCellName' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(128), helpstring(u'Returns index of row of cell with given locale independent name.'), 'propget'], HRESULT, 'CellsRowIndexU',
              ( ['in'], BSTR, 'localeIndependentCellName' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(129), 'propget'], HRESULT, 'IsOpenForTextEdit',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbOpenForTextEdit' )),
    COMMETHOD([dispid(1610743951), helpstring(u'If shape is part of a master instance, returns the top level shape of the instance. Otherwise, returns Nothing.'), 'propget'], HRESULT, 'RootShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppRootShape' )),
    COMMETHOD([dispid(1610743952), helpstring(u'If shape is part of a master instance, returns the shape in the master from which this one inherits. Otherwise, returns Nothing.'), 'propget'], HRESULT, 'MasterShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppMasterShape' )),
    COMMETHOD([dispid(1610743953), 'propget'], HRESULT, 'Picture',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743954), helpstring(u'Returns the created group shape')], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppShape' )),
    COMMETHOD([dispid(1610743955), helpstring(u'Returns the duplicated shape')], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppShape' )),
    COMMETHOD([dispid(1610743956), helpstring(u'Performs end point and glue swapping on 1D shapes')], HRESULT, 'SwapEnds'),
    COMMETHOD([dispid(56), 'propput'], HRESULT, 'Parent',
              ( ['in'], POINTER(IDispatch), 'lpdispRet' )),
    COMMETHOD([dispid(1610743958), helpstring(u'If Type = visTypeForeignObject, then this data will be the metafile, bitmap, or OLE data for the shape.'), 'propget'], HRESULT, 'ForeignData',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_ubyte)), 'pData' )),
    COMMETHOD([dispid(1610743959)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743960)], HRESULT, 'Cut',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743961)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743962)], HRESULT, 'PasteSpecial',
              ( ['in'], c_int, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' )),
    COMMETHOD([dispid(1610743963)], HRESULT, 'CreateSelection',
              ( ['in'], VisSelectionTypes, 'SelType' ),
              ( ['in', 'optional'], VisSelectMode, 'IterationMode', 256 ),
              ( ['in', 'optional'], VARIANT, 'Data' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'ppSelection' )),
    COMMETHOD([dispid(1610743964), 'propget'], HRESULT, 'Language',
              ( ['retval', 'out'], POINTER(c_int), 'lpLangID' )),
    COMMETHOD([dispid(1610743964), 'propput'], HRESULT, 'Language',
              ( ['in'], c_int, 'lpLangID' )),
    COMMETHOD([dispid(1610743966)], HRESULT, 'Offset',
              ( ['in'], c_double, 'Distance' )),
    COMMETHOD([dispid(1610743967)], HRESULT, 'AddGuide',
              ( ['in'], c_short, 'Type' ),
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743968), 'propget'], HRESULT, 'AreaIU',
              ( ['in', 'optional'], VARIANT_BOOL, 'fIncludeSubShapes', False ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(1610743969), 'propget'], HRESULT, 'LengthIU',
              ( ['in', 'optional'], VARIANT_BOOL, 'fIncludeSubShapes', False ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(1610743970)], HRESULT, 'DrawArcByThreePoints',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['in'], c_double, 'xControl' ),
              ( ['in'], c_double, 'yControl' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743971)], HRESULT, 'DrawQuarterArc',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['in'], VisArcSweepFlags, 'SweepFlag' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743972)], HRESULT, 'DrawCircularArc',
              ( ['in'], c_double, 'xCenter' ),
              ( ['in'], c_double, 'yCenter' ),
              ( ['in'], c_double, 'Radius' ),
              ( ['in', 'optional'], c_double, 'StartAngle', 0.0 ),
              ( ['in', 'optional'], c_double, 'EndAngle', 3.1415927410125732 ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743973), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743974), 'propget'], HRESULT, 'ContainingMasterID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743975)], HRESULT, 'LinkToData',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], c_int, 'RowID' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ApplyDataGraphicAfterLink', True )),
    COMMETHOD([dispid(1610743976)], HRESULT, 'BreakLinkToData',
              ( ['in'], c_int, 'DataRecordsetID' )),
    COMMETHOD([dispid(1610743977)], HRESULT, 'GetLinkedDataRow',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['retval', 'out'], POINTER(c_int), 'DataRowID' )),
    COMMETHOD([dispid(1610743978)], HRESULT, 'GetLinkedDataRecordsetIDs',
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'DataRecordsetIDs' )),
    COMMETHOD([dispid(1610743979)], HRESULT, 'GetCustomPropertiesLinkedToData',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'CustomPropertyIndices' )),
    COMMETHOD([dispid(1610743980)], HRESULT, 'IsCustomPropertyLinked',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], c_int, 'CustomPropertyIndex' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Status' )),
    COMMETHOD([dispid(1610743981)], HRESULT, 'GetCustomPropertyLinkedColumn',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], c_int, 'CustomPropertyIndex' ),
              ( ['retval', 'out'], POINTER(BSTR), 'ColumnName' )),
    COMMETHOD([dispid(1610743982)], HRESULT, 'AutoConnect',
              ( ['in'], POINTER(IVShape), 'ToShape' ),
              ( ['in'], VisAutoConnectDir, 'PlacementDir' ),
              ( ['in', 'optional'], POINTER(IUnknown), 'Connector' )),
    COMMETHOD([dispid(1610743983), 'propget'], HRESULT, 'DataGraphic',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'DataGraphic' )),
    COMMETHOD([dispid(1610743983), 'propput'], HRESULT, 'DataGraphic',
              ( ['in'], POINTER(IVMaster), 'DataGraphic' )),
    COMMETHOD([dispid(1610743985), 'propget'], HRESULT, 'IsDataGraphicCallout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbDataGraphicCallout' )),
    COMMETHOD([dispid(1610743986), 'propget'], HRESULT, 'ContainerProperties',
              ( ['retval', 'out'], POINTER(POINTER(IVContainerProperties)), 'pContainerProps' )),
    COMMETHOD([dispid(1610743987)], HRESULT, 'HasCategory',
              ( ['in'], BSTR, 'Category' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbHasCategory' )),
    COMMETHOD([dispid(1610743988), 'propget'], HRESULT, 'MemberOfContainers',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pContainedByList' )),
    COMMETHOD([dispid(1610743989)], HRESULT, 'ConnectedShapes',
              ( ['in'], VisConnectedShapesFlags, 'Flags' ),
              ( ['in'], BSTR, 'CategoryFilter' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pConnectedList' )),
    COMMETHOD([dispid(1610743990)], HRESULT, 'GluedShapes',
              ( ['in'], VisGluedShapesFlags, 'Flags' ),
              ( ['in'], BSTR, 'CategoryFilter' ),
              ( ['in', 'optional'], POINTER(IVShape), 'pOtherConnectedShape' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pConnectorList' )),
    COMMETHOD([dispid(1610743991)], HRESULT, 'Disconnect',
              ( ['in'], VisConnectorEnds, 'ConnectorEnd' ),
              ( ['in'], c_double, 'OffsetX' ),
              ( ['in'], c_double, 'OffsetY' ),
              ( ['in'], VisUnitCodes, 'Units' )),
    COMMETHOD([dispid(1610743992), 'propget'], HRESULT, 'IsCallout',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743993), 'propget'], HRESULT, 'CalloutTarget',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'pCalloutShape' )),
    COMMETHOD([dispid(1610743993), 'propput'], HRESULT, 'CalloutTarget',
              ( ['in'], POINTER(IVShape), 'pCalloutShape' )),
    COMMETHOD([dispid(1610743995), 'propget'], HRESULT, 'CalloutsAssociated',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pAssociatedCallouts' )),
    COMMETHOD([dispid(1610743996)], HRESULT, 'Resize',
              ( ['in'], VisResizeDirection, 'Direction' ),
              ( ['in'], c_double, 'Distance' ),
              ( ['in'], VisUnitCodes, 'UnitCode' )),
    COMMETHOD([dispid(1610743997)], HRESULT, 'AddToContainers'),
    COMMETHOD([dispid(1610743998)], HRESULT, 'RemoveFromContainers'),
    COMMETHOD([dispid(1610743999)], HRESULT, 'CreateSubProcess',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'Page' )),
    COMMETHOD([dispid(1610744000)], HRESULT, 'MoveToSubprocess',
              ( ['in'], POINTER(IVPage), 'Page' ),
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['out', 'optional'], POINTER(POINTER(IVShape)), 'NewShape', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'NewSelection' )),
    COMMETHOD([dispid(1610744001)], HRESULT, 'DeleteEx',
              ( ['in'], c_int, 'DelFlags' )),
    COMMETHOD([dispid(1610744002)], HRESULT, 'ReplaceShape',
              ( ['in'], POINTER(IUnknown), 'MasterOrMasterShortcutToDrop' ),
              ( ['in', 'optional'], c_int, 'ReplaceFlags', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'NewShape' )),
    COMMETHOD([dispid(1610744003)], HRESULT, 'SetQuickStyle',
              ( ['in'], VisQuickStyleMatrixIndices, 'lineMatrix' ),
              ( ['in'], VisQuickStyleMatrixIndices, 'fillMatrix' ),
              ( ['in'], VisQuickStyleMatrixIndices, 'effectsMatrix' ),
              ( ['in'], VisQuickStyleMatrixIndices, 'fontMatrix' ),
              ( ['in'], VisQuickStyleColors, 'lineColor' ),
              ( ['in'], VisQuickStyleColors, 'fillColor' ),
              ( ['in'], VisQuickStyleColors, 'shadowColor' ),
              ( ['in'], VisQuickStyleColors, 'fontColor' )),
    COMMETHOD([dispid(1610744004)], HRESULT, 'ChangePicture',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], c_int, 'ChangePictureFlags', 0 ),
              ( ['retval', 'out'], POINTER(c_double), 'lprAspectRatio' )),
    COMMETHOD([dispid(1610744005), 'propget'], HRESULT, 'Comments',
              ( ['retval', 'out'], POINTER(POINTER(IVComments)), 'ppComments' )),
    COMMETHOD([dispid(1610744006)], HRESULT, 'VisualBoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
]
################################################################
## code template for IVShape implementation
##class IVShape_Impl(object):
##    @property
##    def LengthIU(self, fIncludeSubShapes):
##        '-no docstring-'
##        #return lpr8Ret
##
##    @property
##    def SpatialRelation(self, OtherShape, Tolerance, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _set(self, rhs):
##        u'Locale specific name of text style to apply to this shape while keeping local overrides.'
##    TextStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    def DeleteSection(self, Section):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GeometryCount(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def AddHyperlink(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return ppComments
##
##    def GetLinkedDataRow(self, DataRecordsetID):
##        '-no docstring-'
##        #return DataRowID
##
##    def GetCustomPropertyLinkedColumn(self, DataRecordsetID, CustomPropertyIndex):
##        '-no docstring-'
##        #return ColumnName
##
##    def Cut(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def CreateSubProcess(self):
##        '-no docstring-'
##        #return Page
##
##    def old_Cut(self):
##        '-no docstring-'
##        #return 
##
##    def AddToContainers(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SetEnd(self, xPos, yPos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def DistanceFromPoint(self, x, y, Flags):
##        '-no docstring-'
##        #return pvPathIndex, pvCurveIndex, pvt, lpr8Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpdispRet
##    def _set(self, lpdispRet):
##        '-no docstring-'
##    Parent = property(_get, _set, doc = _set.__doc__)
##
##    def IsCustomPropertyLinked(self, DataRecordsetID, CustomPropertyIndex):
##        '-no docstring-'
##        #return Status
##
##    def RemoveFromContainers(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def MasterShape(self):
##        u'If shape is part of a master instance, returns the shape in the master from which this one inherits. Otherwise, returns Nothing.'
##        #return ppMasterShape
##
##    def DrawSpline(self, xyArray, Tolerance, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddRow(self, Section, Row, RowTag):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def DrawArcByThreePoints(self, xBegin, yBegin, xEnd, yEnd, xControl, yControl):
##        '-no docstring-'
##        #return lpdispRet
##
##    def XYToPage(self, x, y):
##        '-no docstring-'
##        #return xprime, yprime
##
##    def InsertObject(self, ClassOrProgID, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CellsSRC(self, Section, Row, Column):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CellsRowIndex(self, localeSpecificCellName):
##        u'Returns index of row of cell with given locale specific name.'
##        #return lpi2Ret
##
##    def BringForward(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeShape (17).'
##        #return lpi2Ret
##
##    def VoidDuplicate(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Cells(self, localeSpecificCellName):
##        u'Returns cell of this shape with given locale specific name.'
##        #return lpdispRet
##
##    def ReverseEnds(self):
##        '-no docstring-'
##        #return 
##
##    def DrawQuarterArc(self, xBegin, yBegin, xEnd, yEnd, SweepFlag):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingPage(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DeleteRow(self, Section, Row):
##        '-no docstring-'
##        #return 
##
##    def _get(self, Section, Row):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, Section, Row, lpi2Ret):
##        '-no docstring-'
##    RowType = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ForeignType(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def IsCallout(self):
##        '-no docstring-'
##        #return pbRet
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Layer(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Help = property(_get, _set, doc = _set.__doc__)
##
##    def AddSection(self, Section):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def SetCenter(self, xPos, yPos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContainingMaster(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SwapEnds(self):
##        u'Performs end point and glue swapping on 1D shapes'
##        #return 
##
##    def DrawRectangle(self, x1, y1, x2, y2):
##        '-no docstring-'
##        #return lpdispRet
##
##    def InsertFromFile(self, FileName, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u'Locale specific name of text style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of text style applied to this shape.'
##    TextStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    OneD = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def RowExists(self, Section, Row, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetCustomPropertiesLinkedToData(self, DataRecordsetID):
##        '-no docstring-'
##        #return CustomPropertyIndices
##
##    @property
##    def Section(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddRows(self, Section, Row, RowTag, RowCount):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def HitTest(self, xPos, yPos, Tolerance):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Hyperlinks(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Master(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def SpatialSearch(self, x, y, Relation, Tolerance, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Picture(self):
##        '-no docstring-'
##        #return ppPictureDisp
##
##    def AutoConnect(self, ToShape, PlacementDir, Connector):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsDataGraphicCallout(self):
##        '-no docstring-'
##        #return pbDataGraphicCallout
##
##    def SendBackward(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RootShape(self):
##        u'If shape is part of a master instance, returns the top level shape of the instance. Otherwise, returns Nothing.'
##        #return ppRootShape
##
##    def DrawLine(self, xBegin, yBegin, xEnd, yEnd):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return DataGraphic
##    def _set(self, DataGraphic):
##        '-no docstring-'
##    DataGraphic = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Connects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u'Locale specific name of fill style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of fill style applied to this shape.'
##    FillStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContainingShape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def LinkToData(self, DataRecordsetID, RowID, ApplyDataGraphicAfterLink):
##        '-no docstring-'
##        #return 
##
##    def SetFormulas(self, SRCStream, formulaArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ID16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SetBegin(self, xPos, yPos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpLangID
##    def _set(self, lpLangID):
##        '-no docstring-'
##    Language = property(_get, _set, doc = _set.__doc__)
##
##    def SetQuickStyle(self, lineMatrix, fillMatrix, effectsMatrix, fontMatrix, lineColor, fillColor, shadowColor, fontColor):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GeomExIf(self, fFill, LineRes):
##        '-no docstring-'
##        #return lpunkRet
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CharCount(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def FlipHorizontal(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def RowsCellCount(self, Section, Row):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def FitCurve(self, Tolerance, Flags):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        u'Locale specific name of line style to apply to this shape while keeping local overrides.'
##    LineStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def CellsSRCExists(self, Section, Row, Column, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def TransformXYFrom(self, OtherShape, x, y):
##        '-no docstring-'
##        #return xprime, yprime
##
##    def SetResults(self, SRCStream, UnitsNamesOrCodes, resultArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        u'Locale specific name of style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of style applied to this shape.'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Group(self):
##        u'Returns the created group shape'
##        #return ppShape
##
##    def CenterDrawing(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def Duplicate(self):
##        u'Returns the duplicated shape'
##        #return ppShape
##
##    @property
##    def CalloutsAssociated(self):
##        '-no docstring-'
##        #return pAssociatedCallouts
##
##    def Import(self, FileName):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddGuide(self, Type, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Disconnect(self, ConnectorEnd, OffsetX, OffsetY, Units):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ClassID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def DropManyU(self, ObjectsToInstance, xyArray):
##        u'Creates many shapes in this shape (if it is group). Names, if supplied, are considered locale independent.'
##        #return IDArray, lpi2Ret
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def VoidGroup(self):
##        '-no docstring-'
##        #return 
##
##    def Offset(self, Distance):
##        '-no docstring-'
##        #return 
##
##    @property
##    def MemberOfContainers(self):
##        '-no docstring-'
##        #return pContainedByList
##
##    def ConnectedShapes(self, Flags, CategoryFilter):
##        '-no docstring-'
##        #return pConnectedList
##
##    def _set(self, rhs):
##        u'Locale specific name of fill style to apply to this shape while keeping local overrides.'
##    FillStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    def MoveToSubprocess(self, Page, ObjectToDrop):
##        '-no docstring-'
##        #return NewShape, NewSelection
##
##    def _get(self):
##        '-no docstring-'
##        #return pCalloutShape
##    def _set(self, pCalloutShape):
##        '-no docstring-'
##    CalloutTarget = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Characters(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Index16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ObjectIsInherited(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def AddNamedRow(self, Section, RowName, RowTag):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _set(self, rhs):
##        u'Locale specific name of style to apply to this shape while keeping local overrides.'
##    StyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    def ReplaceShape(self, MasterOrMasterShortcutToDrop, ReplaceFlags):
##        '-no docstring-'
##        #return NewShape
##
##    def GetFormulas(self, SRCStream):
##        u'Returns cell formulas in locale specific syntax.'
##        #return formulaArray
##
##    def DeleteEx(self, DelFlags):
##        '-no docstring-'
##        #return 
##
##    def DrawBezier(self, xyArray, degree, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def AreaIU(self, fIncludeSubShapes):
##        '-no docstring-'
##        #return lpr8Ret
##
##    @property
##    def PathsLocal(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    def GetResults(self, SRCStream, Flags, UnitsNamesOrCodes):
##        '-no docstring-'
##        #return resultArray
##
##    def DrawPolyline(self, xyArray, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def RowCount(self, Section):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def ChangePicture(self, FileName, ChangePictureFlags):
##        '-no docstring-'
##        #return lprAspectRatio
##
##    @property
##    def UniqueID(self, fUniqueID):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def old_Copy(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Paths(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DrawOval(self, x1, y1, x2, y2):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Layout(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SpatialNeighbors(self, Relation, Tolerance, Flags, ResultRoot):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CellExists(self, localeSpecificCellName, fExistsLocally):
##        u'Returns whether this shape has cell with given locale specific name.'
##        #return lpi2Ret
##
##    def DrawNURBS(self, degree, Flags, xyArray, knots, weights):
##        '-no docstring-'
##        #return lpdispRet
##
##    def FlipVertical(self):
##        '-no docstring-'
##        #return 
##
##    def BreakLinkToData(self, DataRecordsetID):
##        '-no docstring-'
##        #return 
##
##    def GetFormulasU(self, SRCStream):
##        u'Returns cell formulas in locale independent syntax.'
##        #return formulaArray
##
##    @property
##    def old_AreaIU(self):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def Rotate90(self):
##        '-no docstring-'
##        #return 
##
##    def UpdateAlignmentBox(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def NameID(self):
##        u'Returns synthetic name of shape (sheet.ID). Locale independent.'
##        #return lpLocaleIndependentName
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Data3 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Data2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def old_LengthIU(self):
##        '-no docstring-'
##        #return lpr8Ret
##
##    @property
##    def DistanceFrom(self, OtherShape, Flags):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def XYFromPage(self, x, y):
##        '-no docstring-'
##        #return xprime, yprime
##
##    def CreateSelection(self, SelType, IterationMode, Data):
##        '-no docstring-'
##        #return ppSelection
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Data1 = property(_get, _set, doc = _set.__doc__)
##
##    def PasteSpecial(self, Format, Link, DisplayAsIcon):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ForeignData(self):
##        u'If Type = visTypeForeignObject, then this data will be the metafile, bitmap, or OLE data for the shape.'
##        #return pData
##
##    @property
##    def ContainingMasterID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def LayerCount(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Copy(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def Paste(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def Resize(self, Direction, Distance, UnitCode):
##        '-no docstring-'
##        #return 
##
##    def ConvertToGroup(self):
##        '-no docstring-'
##        #return 
##
##    def HasCategory(self, Category):
##        '-no docstring-'
##        #return pbHasCategory
##
##    def _get(self):
##        u"Shape's locale specific name."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Shape's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Hyperlink(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DrawCircularArc(self, xCenter, yCenter, Radius, StartAngle, EndAngle):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Drop(self, ObjectToDrop, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GluedShapes(self, Flags, CategoryFilter, pOtherConnectedShape):
##        '-no docstring-'
##        #return pConnectorList
##
##    @property
##    def CellExistsU(self, localeIndependentCellName, fExistsLocally):
##        u'Returns whether this shape has cell with given locale independent name.'
##        #return lpi2Ret
##
##    def _get(self):
##        u"Shape's locale independent name."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"Shape's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProgID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def VisualBoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    @property
##    def ContainerProperties(self):
##        '-no docstring-'
##        #return pContainerProps
##
##    def OpenDrawWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def IsOpenForTextEdit(self):
##        '-no docstring-'
##        #return pbOpenForTextEdit
##
##    @property
##    def SectionExists(self, Section, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def CellsRowIndexU(self, localeIndependentCellName):
##        u'Returns index of row of cell with given locale independent name.'
##        #return lpi2Ret
##
##    def GetLinkedDataRecordsetIDs(self):
##        '-no docstring-'
##        #return DataRecordsetIDs
##
##    def TransformXYTo(self, OtherShape, x, y):
##        '-no docstring-'
##        #return xprime, yprime
##
##    def Export(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def CellsU(self, localeIndependentCellName):
##        u'Returns cell of this shape with given locale independent name.'
##        #return lpdispRet
##
##    def DropMany(self, ObjectsToInstance, xyArray):
##        u'Creates many shapes in this shape (if it is group). Names, if supplied, are considered locale specific.'
##        #return IDArray, lpi2Ret
##
##    @property
##    def FromConnects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def BoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    def _get(self):
##        u'Locale specific name of line style applied to this shape.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of line style applied to this shape.'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def OpenSheetWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##


# values for enumeration 'VisRefreshSettings'
visRefreshOverwriteAll = 1
visRefreshNoReconcilationUI = 2
VisRefreshSettings = c_int # enum
LPVISIOMASTERSHORTCUT = POINTER(IVMasterShortcut)
EMasters._disp_methods_ = [
    DISPMETHOD([dispid(32776)], None, 'MasterAdded',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(8200)], None, 'MasterChanged',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(16392)], None, 'BeforeMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(8256)], None, 'ShapeChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(902)], None, 'SelectionAdded',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(16448)], None, 'BeforeShapeDelete',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(33024)], None, 'ConnectionsAdded',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(16640)], None, 'ConnectionsDeleted',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(400), helpstring(u'Cancel delete of master? T:Yes F:No')], None, 'QueryCancelMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(401), helpstring(u'Delete master operation was canceled.')], None, 'MasterDeleteCanceled',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
]
class Validation(CoClass):
    u'Validation object'
    _reg_clsid_ = GUID('{000D0A37-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Validation._com_interfaces_ = [IVValidation]

IVValidationRuleSet._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'RuleSetID' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'NameU' )),
    COMMETHOD([dispid(1610743815), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'NameU' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'Description' )),
    COMMETHOD([dispid(1610743817), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'Description' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'IsEnabled' )),
    COMMETHOD([dispid(1610743819), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'IsEnabled' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'RuleSetFlags',
              ( ['retval', 'out'], POINTER(VisRuleSetFlags), 'RuleSetFlags' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'RuleSetFlags',
              ( ['in'], VisRuleSetFlags, 'RuleSetFlags' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'Rules',
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRules)), 'Rules' )),
    COMMETHOD([dispid(1610743824)], HRESULT, 'Delete'),
]
################################################################
## code template for IVValidationRuleSet implementation
##class IVValidationRuleSet_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Rules(self):
##        '-no docstring-'
##        #return Rules
##
##    def _get(self):
##        '-no docstring-'
##        #return IsEnabled
##    def _set(self, IsEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def _get(self):
##        '-no docstring-'
##        #return NameU
##    def _set(self, NameU):
##        '-no docstring-'
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return RuleSetFlags
##    def _set(self, RuleSetFlags):
##        '-no docstring-'
##    RuleSetFlags = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Description
##    def _set(self, Description):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return RuleSetID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

tagVisToolbarFlavors = VisToolbarFlavors
LPVISIOSTATUSBARITEMS = POINTER(IVStatusBarItems)
IVHyperlinks._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeHyperlinks (43).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Hyperlinks collection is item 0. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVHyperlink)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVHyperlink)), 'lpdispRet' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(1610743816), helpstring(u'The first item in a Hyperlinks collection is item 0. Name treated as locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVHyperlink)), 'lpdispRet' )),
]
################################################################
## code template for IVHyperlinks implementation
##class IVHyperlinks_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ItemU(self, NameOrIndex):
##        u'The first item in a Hyperlinks collection is item 0. Name treated as locale independent.'
##        #return lpdispRet
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in a Hyperlinks collection is item 0. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeHyperlinks (43).'
##        #return lpi2Ret
##

IVMenus._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVMenu' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Menus collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMenu)), 'lplpMenu' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVMenu)), 'lplpMenu' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'AddAt',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMenu)), 'lplpMenu' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuSet)), 'lplpVMenuSet' )),
]
################################################################
## code template for IVMenus implementation
##class IVMenus_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVMenu
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVMenuSet
##
##    def AddAt(self, lIndex):
##        '-no docstring-'
##        #return lplpMenu
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a Menus collection is item 0.'
##        #return lplpMenu
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpMenu
##


# values for enumeration 'VisFieldFormats'
visFmtNumGenNoUnits = 0
visFmtNumGenDefUnits = 1
visFmt0PlNoUnits = 2
visFmt0PlDefUnits = 3
visFmt1PlNoUnits = 4
visFmt1PlDefUnits = 5
visFmt2PlNoUnits = 6
visFmt2PlDefUnits = 7
visFmt3PlNoUnits = 8
visFmt3PlDefUnits = 9
visFmtFeetAndInches = 10
visFmtRadians = 11
visFmtDegrees = 12
visFmtFeetAndInches1Pl = 13
visFmtFeetAndInches2Pl = 14
visFmtFraction1PlNoUnits = 15
visFmtFraction1PlDefUnits = 16
visFmtFraction2PlNoUnits = 17
visFmtFraction2PlDefUnits = 18
visFmtDateShort = 20
visFmtDateLong = 21
visFmtDateMDYY = 22
visFmtDateMMDDYY = 23
visFmtDateMmmDYYYY = 24
visFmtDateMmmmDYYYY = 25
visFmtDateDMYY = 26
visFmtDateDDMMYY = 27
visFmtDateDMMMYYYY = 28
visFmtDateDMMMMYYYY = 29
visFmtTimeGen = 30
visFmtTimeHMM = 31
visFmtTimeHHMM = 32
visFmtTimeHMM24 = 33
visFmtTimeHHMM24 = 34
visFmtTimeHMMAMPM = 35
visFmtTimeHHMMAMPM = 36
visFmtStrNormal = 37
visFmtStrLower = 38
visFmtStrUpper = 39
visFmtJDategggeXmXdXww = 40
visFmtJDateyyyyXmXdXww = 41
visFmtJDategggeXmXdX = 42
visFmtJDateyyyyXmXdX = 43
visFmtJDateyyyymd = 44
visFmtJDateyymmdd = 45
visFmtJDatehmmaxpx = 46
visFmtJDateaxpxhmm = 47
visFmtJDateaxpxhXmmX = 48
visFmtJDatehXmmX = 49
visFmtCDateiiieXmmmmXdddd = 50
visFmtCDateiieXmmmmXdddd = 51
visFmtCDateieXmmmmXddddXww = 52
visFmtCDateieXmmmmXdddd = 53
visFmtDateyyyymd = 44
visFmtDateyymmdd = 45
visFmtTimeAMPMhmm_J = 46
visFmtDateTWNfYYYYMMDDD_C = 50
visFmtDateTWNsYYYYMMDDD_C = 51
visFmtDateTWNfyyyymmddww_C = 52
visFmtDateTWNfyyyymmdd_C = 53
visFmtDategggemdww_J = 54
visFmtDateyyyymdww_J = 55
visFmtDategggemd_J = 56
visFmtDateyyyymd_J = 57
visFmtDateYYYYMMMDDDWWW_C = 58
visFmtDateYYYYMMMDDD_C = 59
visFmtDategeMMMMddddww_K = 60
visFmtDateyyyymdww_K = 61
visFmtDategeMMMMddd_K = 62
visFmtDateyyyymd_K = 63
visFmtDateyyyy_m_d = 64
visFmtDateyy_mm_dd = 65
visFmtTimeAMPMhmm_C = 66
visFmtTimeAMPMhmm_K = 67
visFmtTimeAMPM_hmm_J = 68
visFmtTimehmm_J = 69
visFmtTimeAMPM_hmm_C = 70
visFmtTimehmm_C = 71
visFmtTimeAMPM_hmm_K = 72
visFmtTimehmm_K = 73
visFmtTimeHMMAMPM_E = 74
visFmtTimeHHMMAMPM_E = 75
visFmtDateyyyymd_S = 76
visFmtDateyyyymmdd_S = 77
visFmtDatewwyyyymmdd_S = 78
visFmtDatewwyyyymd_S = 79
visFmtTimeAMPMhmm_S = 80
visFmtTimeAMPMhhmm_S = 81
visFmtMsoDateShort = 200
visFmtMsoDateLongDay = 201
visFmtMsoDateLong = 202
visFmtMsoDateShortAlt = 203
visFmtMsoDateISO = 204
visFmtMsoDateShortMon = 205
visFmtMsoDateShortSlash = 206
visFmtMsoDateShortAbb = 207
visFmtMsoDateEnglish = 208
visFmtMsoDateMonthYr = 209
visFmtMsoDateMon_Yr = 210
visFmtMsoTimeDatePM = 211
visFmtMsoTimeDateSecPM = 212
visFmtMsoTimePM = 213
visFmtMsoTimeSecPM = 214
visFmtMsoTime24 = 215
visFmtMsoTimeSec24 = 216
visFmtMsoFEExtra1 = 217
visFmtMsoFEExtra2 = 218
visFmtMsoFEExtra3 = 219
visFmtMsoFEExtra4 = 220
visFmtMsoFEExtra5 = 221
VisFieldFormats = c_int # enum
tagVisFieldFormats = VisFieldFormats

# values for enumeration 'VisLayoutHorzAlignType'
visLayoutHorzAlignNone = 0
visLayoutHorzAlignDefault = 1
visLayoutHorzAlignLeft = 2
visLayoutHorzAlignCenter = 3
visLayoutHorzAlignRight = 4
VisLayoutHorzAlignType = c_int # enum
class Comment(CoClass):
    u'CoauthMergeEvent object'
    _reg_clsid_ = GUID('{000D0A41-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Comment._com_interfaces_ = [IVComment]

LPVISIOSTYLE = POINTER(IVStyle)

# values for enumeration 'VisLayoutVertAlignType'
visLayoutVertAlignNone = 0
visLayoutVertAlignDefault = 1
visLayoutVertAlignTop = 2
visLayoutVertAlignMiddle = 3
visLayoutVertAlignBottom = 4
VisLayoutVertAlignType = c_int # enum
IVSelection._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeSelection (16).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(999), 'hidden', 'propget'], HRESULT, 'Item16',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'ContainingPage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ContainingMaster',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ContainingShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(10)], HRESULT, 'BringForward'),
    COMMETHOD([dispid(11)], HRESULT, 'BringToFront'),
    COMMETHOD([dispid(12)], HRESULT, 'SendBackward'),
    COMMETHOD([dispid(13)], HRESULT, 'SendToBack'),
    COMMETHOD([dispid(14), helpstring(u'Locale specific name of style applied to this selection.'), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(14), helpstring(u'Locale specific name of style applied to this selection.'), 'propput'], HRESULT, 'Style',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(15), helpstring(u'Locale specific name of style to apply to this selection while keeping local overrides.'), 'propput'], HRESULT, 'StyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(16), helpstring(u'Locale specific name of line style applied to this selection.'), 'propget'], HRESULT, 'LineStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(16), helpstring(u'Locale specific name of line style applied to this selection.'), 'propput'], HRESULT, 'LineStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(17), helpstring(u'Locale specific name of line style to apply to this selection while keeping local overrides.'), 'propput'], HRESULT, 'LineStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(18), helpstring(u'Locale specific name of fill style applied to this selection.'), 'propget'], HRESULT, 'FillStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(18), helpstring(u'Locale specific name of fill style applied to this selection.'), 'propput'], HRESULT, 'FillStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(19), helpstring(u'Locale specific name of fill style to apply to this selection while keeping local overrides.'), 'propput'], HRESULT, 'FillStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(20), helpstring(u'Locale specific name of text style applied to this selection.'), 'propget'], HRESULT, 'TextStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(20), helpstring(u'Locale specific name of text style applied to this selection.'), 'propput'], HRESULT, 'TextStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificStyleName' )),
    COMMETHOD([dispid(21), helpstring(u'Locale specific name of text style to apply to this selection while keeping local overrides.'), 'propput'], HRESULT, 'TextStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(22)], HRESULT, 'Combine'),
    COMMETHOD([dispid(23)], HRESULT, 'Fragment'),
    COMMETHOD([dispid(24)], HRESULT, 'Intersect'),
    COMMETHOD([dispid(25)], HRESULT, 'Subtract'),
    COMMETHOD([dispid(26)], HRESULT, 'Union'),
    COMMETHOD([dispid(27)], HRESULT, 'FlipHorizontal'),
    COMMETHOD([dispid(28)], HRESULT, 'FlipVertical'),
    COMMETHOD([dispid(29)], HRESULT, 'ReverseEnds'),
    COMMETHOD([dispid(30)], HRESULT, 'Rotate90'),
    COMMETHOD([dispid(31), 'hidden'], HRESULT, 'old_Copy'),
    COMMETHOD([dispid(32), 'hidden'], HRESULT, 'old_Cut'),
    COMMETHOD([dispid(33)], HRESULT, 'Delete'),
    COMMETHOD([dispid(34), 'hidden'], HRESULT, 'VoidDuplicate'),
    COMMETHOD([dispid(35), 'hidden'], HRESULT, 'VoidGroup'),
    COMMETHOD([dispid(36)], HRESULT, 'ConvertToGroup'),
    COMMETHOD([dispid(37)], HRESULT, 'Ungroup'),
    COMMETHOD([dispid(38)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(39)], HRESULT, 'DeselectAll'),
    COMMETHOD([dispid(40)], HRESULT, 'Select',
              ( ['in'], POINTER(IVShape), 'SheetObject' ),
              ( ['in'], c_short, 'SelectAction' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(42), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(43)], HRESULT, 'Trim'),
    COMMETHOD([dispid(44)], HRESULT, 'Join'),
    COMMETHOD([dispid(45)], HRESULT, 'FitCurve',
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' )),
    COMMETHOD([dispid(46)], HRESULT, 'Layout'),
    COMMETHOD([dispid(47)], HRESULT, 'BoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Selection is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(49)], HRESULT, 'DrawRegion',
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in', 'optional'], VARIANT, 'x' ),
              ( ['in', 'optional'], VARIANT, 'y' ),
              ( ['in', 'optional'], VARIANT, 'ResultsMaster' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(50), helpstring(u'Include/Exclude items that are sub/super selected.'), 'propget'], HRESULT, 'IterationMode',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(50), helpstring(u'Include/Exclude items that are sub/super selected.'), 'propput'], HRESULT, 'IterationMode',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(51), helpstring(u'Is Item(i) sub-selection, super-selection, etc.'), 'propget'], HRESULT, 'ItemStatus',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(52), helpstring(u'Returns primary selected shape or nothing.'), 'propget'], HRESULT, 'PrimaryItem',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743868), 'propget'], HRESULT, 'Picture',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743869), helpstring(u'Returns the created group shape')], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppShape' )),
    COMMETHOD([dispid(1610743870), helpstring(u'Performs end point and glue swapping on 1D shapes')], HRESULT, 'SwapEnds'),
    COMMETHOD([dispid(1610743871)], HRESULT, 'AddToGroup'),
    COMMETHOD([dispid(1610743872)], HRESULT, 'RemoveFromGroup'),
    COMMETHOD([dispid(1610743873), helpstring(u'Returns a Selection containing all the duplicated shapes.')], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'ppSelection' )),
    COMMETHOD([dispid(1610743874)], HRESULT, 'Copy',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743875)], HRESULT, 'Cut',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743876), helpstring(u'Move selection by dx in the X-direction and dy in the Y-direction.')], HRESULT, 'Move',
              ( ['in'], c_double, 'dx' ),
              ( ['in'], c_double, 'dy' ),
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' )),
    COMMETHOD([dispid(1610743877)], HRESULT, 'Rotate',
              ( ['in'], c_double, 'Angle' ),
              ( ['in', 'optional'], VARIANT, 'AngleUnitsNameOrCode' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BlastGuards', False ),
              ( ['in', 'optional'], VisRotationTypes, 'RotationType', 0 ),
              ( ['in', 'optional'], c_double, 'PinX', 0.0 ),
              ( ['in', 'optional'], c_double, 'PinY', 0.0 ),
              ( ['in', 'optional'], VARIANT, 'PinUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743878)], HRESULT, 'Align',
              ( ['in'], VisHorizontalAlignTypes, 'AlignHorizontal' ),
              ( ['in'], VisVerticalAlignTypes, 'AlignVertical' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'GlueToGuide', False )),
    COMMETHOD([dispid(1610743879)], HRESULT, 'Distribute',
              ( ['in'], VisDistributeTypes, 'Distribute' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'GlueToGuide', False )),
    COMMETHOD([dispid(1610743880)], HRESULT, 'UpdateAlignmentBox'),
    COMMETHOD([dispid(1610743881)], HRESULT, 'Offset',
              ( ['in'], c_double, 'Distance' )),
    COMMETHOD([dispid(1610743882)], HRESULT, 'ConnectShapes'),
    COMMETHOD([dispid(1610743883)], HRESULT, 'Flip',
              ( ['in'], VisFlipDirection, 'FlipDirection' ),
              ( ['in', 'optional'], VisFlipTypes, 'FlipType', 0 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'BlastGuards', False ),
              ( ['in', 'optional'], c_double, 'PinX', 0.0 ),
              ( ['in', 'optional'], c_double, 'PinY', 0.0 ),
              ( ['in', 'optional'], VARIANT, 'PinUnitsNameOrCode' )),
    COMMETHOD([dispid(1610743884), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743885), 'propget'], HRESULT, 'ContainingMasterID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743886)], HRESULT, 'LinkToData',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], c_int, 'DataRowID' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ApplyDataGraphicAfterLink', True )),
    COMMETHOD([dispid(1610743887)], HRESULT, 'BreakLinkToData',
              ( ['in'], c_int, 'DataRecordsetID' )),
    COMMETHOD([dispid(1610743888)], HRESULT, 'GetIDs',
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' )),
    COMMETHOD([dispid(1610743889)], HRESULT, 'AutomaticLink',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'ColumnNames' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'AutoLinkFieldTypes' ),
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'FieldNames' ),
              ( ['in'], c_int, 'AutoLinkBehavior' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' ),
              ( ['retval', 'out'], POINTER(c_int), 'pSheetCount' )),
    COMMETHOD([dispid(1610743890), 'propget'], HRESULT, 'DataGraphic',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'DataGraphic' )),
    COMMETHOD([dispid(1610743890), 'propput'], HRESULT, 'DataGraphic',
              ( ['in'], POINTER(IVMaster), 'DataGraphic' )),
    COMMETHOD([dispid(1610743892)], HRESULT, 'LayoutIncremental',
              ( ['in'], VisLayoutIncrementalType, 'AlignOrSpace' ),
              ( ['in'], VisLayoutHorzAlignType, 'AlignHorizontal' ),
              ( ['in'], VisLayoutVertAlignType, 'AlignVertical' ),
              ( ['in'], c_double, 'SpaceHorizontal' ),
              ( ['in'], c_double, 'SpaceVertical' ),
              ( ['in'], VisUnitCodes, 'UnitCode' )),
    COMMETHOD([dispid(1610743893)], HRESULT, 'LayoutChangeDirection',
              ( ['in'], VisLayoutDirection, 'Direction' )),
    COMMETHOD([dispid(1610743894)], HRESULT, 'AvoidPageBreaks'),
    COMMETHOD([dispid(1610743895)], HRESULT, 'Resize',
              ( ['in'], VisResizeDirection, 'Direction' ),
              ( ['in'], c_double, 'Distance' ),
              ( ['in'], VisUnitCodes, 'UnitCode' )),
    COMMETHOD([dispid(1610743896)], HRESULT, 'AddToContainers'),
    COMMETHOD([dispid(1610743897)], HRESULT, 'RemoveFromContainers'),
    COMMETHOD([dispid(1610743898)], HRESULT, 'MoveToSubprocess',
              ( ['in'], POINTER(IVPage), 'Page' ),
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['out', 'optional'], POINTER(POINTER(IVShape)), 'NewShape', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'NewSelection' )),
    COMMETHOD([dispid(1610743899), 'propget'], HRESULT, 'SelectionForDragCopy',
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'pSel' )),
    COMMETHOD([dispid(1610743900)], HRESULT, 'DeleteEx',
              ( ['in'], c_int, 'DelFlags' )),
    COMMETHOD([dispid(1610743901)], HRESULT, 'GetContainers',
              ( ['in'], VisContainerNested, 'NestedOptions' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pContainersList' )),
    COMMETHOD([dispid(1610743902)], HRESULT, 'GetCallouts',
              ( ['in'], VisContainerNested, 'NestedOptions' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pCalloutsList' )),
    COMMETHOD([dispid(1610743903)], HRESULT, 'MemberOfContainersUnion',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pContainersList' )),
    COMMETHOD([dispid(1610743904)], HRESULT, 'MemberOfContainersIntersection',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pContainersList' )),
    COMMETHOD([dispid(1610743905)], HRESULT, 'SetContainerFormat',
              ( ['in'], VisContainerFormatType, 'FormatType' ),
              ( ['in', 'optional'], VARIANT, 'FormatValue', 0 ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pModifiedContainersList' )),
    COMMETHOD([dispid(1610743906)], HRESULT, 'ReplaceShape',
              ( ['in'], POINTER(IUnknown), 'MasterOrMasterShortcutToDrop' ),
              ( ['in', 'optional'], c_int, 'ReplaceFlags', 0 ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(POINTER(IVShape))), 'pNewShapes' )),
    COMMETHOD([dispid(1610743907)], HRESULT, 'SetQuickStyle',
              ( ['in'], VisQuickStyleMatrixIndices, 'lineMatrix' ),
              ( ['in'], VisQuickStyleMatrixIndices, 'fillMatrix' ),
              ( ['in'], VisQuickStyleMatrixIndices, 'effectsMatrix' ),
              ( ['in'], VisQuickStyleMatrixIndices, 'fontMatrix' ),
              ( ['in'], VisQuickStyleColors, 'lineColor' ),
              ( ['in'], VisQuickStyleColors, 'fillColor' ),
              ( ['in'], VisQuickStyleColors, 'shadowColor' ),
              ( ['in'], VisQuickStyleColors, 'fontColor' )),
    COMMETHOD([dispid(1610743908)], HRESULT, 'VisualBoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
]
################################################################
## code template for IVSelection implementation
##class IVSelection_Impl(object):
##    def _set(self, rhs):
##        u'Locale specific name of text style to apply to this selection while keeping local overrides.'
##    TextStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    def Union(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def old_Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Ungroup(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def RemoveFromGroup(self):
##        '-no docstring-'
##        #return 
##
##    def RemoveFromContainers(self):
##        '-no docstring-'
##        #return 
##
##    def GetCallouts(self, NestedOptions):
##        '-no docstring-'
##        #return pCalloutsList
##
##    def BringForward(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeSelection (16).'
##        #return lpi2Ret
##
##    def VoidDuplicate(self):
##        '-no docstring-'
##        #return 
##
##    def ReverseEnds(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContainingPage(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return 
##
##    def Distribute(self, Distribute, GlueToGuide):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ItemStatus(self, Index):
##        u'Is Item(i) sub-selection, super-selection, etc.'
##        #return lpi2Ret
##
##    @property
##    def ContainingMaster(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SwapEnds(self):
##        u'Performs end point and glue swapping on 1D shapes'
##        #return 
##
##    def ConnectShapes(self):
##        '-no docstring-'
##        #return 
##
##    def Select(self, SheetObject, SelectAction):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u'Locale specific name of text style applied to this selection.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of text style applied to this selection.'
##    TextStyle = property(_get, _set, doc = _set.__doc__)
##
##    def Move(self, dx, dy, UnitsNameOrCode):
##        u'Move selection by dx in the X-direction and dy in the Y-direction.'
##        #return 
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Intersect(self):
##        '-no docstring-'
##        #return 
##
##    def Join(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Picture(self):
##        '-no docstring-'
##        #return ppPictureDisp
##
##    def SendBackward(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u'Locale specific name of fill style applied to this selection.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of fill style applied to this selection.'
##    FillStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContainingShape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def LinkToData(self, DataRecordsetID, DataRowID, ApplyDataGraphicAfterLink):
##        '-no docstring-'
##        #return 
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return 
##
##    def LayoutChangeDirection(self, Direction):
##        '-no docstring-'
##        #return 
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Flip(self, FlipDirection, FlipType, BlastGuards, PinX, PinY, PinUnitsNameOrCode):
##        '-no docstring-'
##        #return 
##
##    def SetQuickStyle(self, lineMatrix, fillMatrix, effectsMatrix, fontMatrix, lineColor, fillColor, shadowColor, fontColor):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def MemberOfContainersIntersection(self):
##        '-no docstring-'
##        #return pContainersList
##
##    def AddToGroup(self):
##        '-no docstring-'
##        #return 
##
##    def UpdateAlignmentBox(self):
##        '-no docstring-'
##        #return 
##
##    def FitCurve(self, Tolerance, Flags):
##        '-no docstring-'
##        #return 
##
##    def GetIDs(self):
##        '-no docstring-'
##        #return ShapeIDs
##
##    def _set(self, rhs):
##        u'Locale specific name of line style to apply to this selection while keeping local overrides.'
##    LineStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    def GetContainers(self, NestedOptions):
##        '-no docstring-'
##        #return pContainersList
##
##    def DeselectAll(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u'Locale specific name of style applied to this selection.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of style applied to this selection.'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    def Cut(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def Group(self):
##        u'Returns the created group shape'
##        #return ppShape
##
##    def AddToContainers(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Duplicate(self):
##        u'Returns a Selection containing all the duplicated shapes.'
##        #return ppSelection
##
##    def Combine(self):
##        '-no docstring-'
##        #return 
##
##    def Layout(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Item16(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def _get(self):
##        u'Include/Exclude items that are sub/super selected.'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        u'Include/Exclude items that are sub/super selected.'
##    IterationMode = property(_get, _set, doc = _set.__doc__)
##
##    def VoidGroup(self):
##        '-no docstring-'
##        #return 
##
##    def Offset(self, Distance):
##        '-no docstring-'
##        #return 
##
##    def Subtract(self):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        u'Locale specific name of fill style to apply to this selection while keeping local overrides.'
##    FillStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def MoveToSubprocess(self, Page, ObjectToDrop):
##        '-no docstring-'
##        #return NewShape, NewSelection
##
##    def SetContainerFormat(self, FormatType, FormatValue):
##        '-no docstring-'
##        #return pModifiedContainersList
##
##    def Align(self, AlignHorizontal, AlignVertical, GlueToGuide):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        u'Locale specific name of style to apply to this selection while keeping local overrides.'
##    StyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    def ReplaceShape(self, MasterOrMasterShortcutToDrop, ReplaceFlags):
##        '-no docstring-'
##        #return pNewShapes
##
##    def DeleteEx(self, DelFlags):
##        '-no docstring-'
##        #return 
##
##    def AutomaticLink(self, DataRecordsetID, ColumnNames, AutoLinkFieldTypes, FieldNames, AutoLinkBehavior):
##        '-no docstring-'
##        #return ShapeIDs, pSheetCount
##
##    def old_Copy(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    def FlipVertical(self):
##        '-no docstring-'
##        #return 
##
##    def BreakLinkToData(self, DataRecordsetID):
##        '-no docstring-'
##        #return 
##
##    def Rotate90(self):
##        '-no docstring-'
##        #return 
##
##    def FlipHorizontal(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u'Locale specific name of line style applied to this selection.'
##        #return lpLocaleSpecificStyleName
##    def _set(self, lpLocaleSpecificStyleName):
##        u'Locale specific name of line style applied to this selection.'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def LayoutIncremental(self, AlignOrSpace, AlignHorizontal, AlignVertical, SpaceHorizontal, SpaceVertical, UnitCode):
##        '-no docstring-'
##        #return 
##
##    def Fragment(self):
##        '-no docstring-'
##        #return 
##
##    def DrawRegion(self, Tolerance, Flags, x, y, ResultsMaster):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Copy(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def MemberOfContainersUnion(self):
##        '-no docstring-'
##        #return pContainersList
##
##    def Resize(self, Direction, Distance, UnitCode):
##        '-no docstring-'
##        #return 
##
##    def ConvertToGroup(self):
##        '-no docstring-'
##        #return 
##
##    def Rotate(self, Angle, AngleUnitsNameOrCode, BlastGuards, RotationType, PinX, PinY, PinUnitsNameOrCode):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return DataGraphic
##    def _set(self, DataGraphic):
##        '-no docstring-'
##    DataGraphic = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Item(self, Index):
##        u'The first item in a Selection is item 1.'
##        #return lpdispRet
##
##    def VisualBoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    def Trim(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PrimaryItem(self):
##        u'Returns primary selected shape or nothing.'
##        #return lpdispRet
##
##    def AvoidPageBreaks(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContainingMasterID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def Export(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def BoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    @property
##    def SelectionForDragCopy(self):
##        '-no docstring-'
##        #return pSel
##

LPVISIOSECTION = POINTER(IVSection)
IVToolbars._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVToolbar' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Toolbars collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVToolbar)), 'lplpToolbar' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbar)), 'lplpToolbar' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'AddAt',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVToolbar)), 'lplpToolbar' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarSet)), 'lplpVToolbarSet' )),
]
################################################################
## code template for IVToolbars implementation
##class IVToolbars_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVToolbar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVToolbarSet
##
##    def AddAt(self, lIndex):
##        '-no docstring-'
##        #return lplpToolbar
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a Toolbars collection is item 0.'
##        #return lplpToolbar
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpToolbar
##

tagVisFieldCodes = VisFieldCodes
IVMenuItems._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVMenuItem' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a MenuItems collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMenuItem)), 'lplpMenuItem' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuItem)), 'lplpMenuItem' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'AddAt',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMenuItem)), 'lplpMenuItem' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVMenu)), 'lplpVMenu' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ParentItem',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuItem)), 'lplpVMenuItem' )),
]
################################################################
## code template for IVMenuItems implementation
##class IVMenuItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVMenuItem
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVMenu
##
##    def AddAt(self, lIndex):
##        '-no docstring-'
##        #return lplpMenuItem
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a MenuItems collection is item 0.'
##        #return lplpMenuItem
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpMenuItem
##
##    @property
##    def ParentItem(self):
##        '-no docstring-'
##        #return lplpVMenuItem
##


# values for enumeration 'VisDataRecordsetAddOptions'
visDataRecordsetNoExternalDataUI = 1
visDataRecordsetNoRefreshUI = 2
visDataRecordsetNoAdvConfig = 4
visDataRecordsetDelayQuery = 8
visDataRecordsetDontCopyLinks = 16
VisDataRecordsetAddOptions = c_int # enum
LPVISIOPAGE = POINTER(IVPage)

# values for enumeration 'VisReplaceFlags'
visReplaceShapeDefault = 0
visReplaceShapeKeepBasic = 1
visReplaceShapeLockText = 2
visReplaceShapeLockShapeData = 4
visReplaceShapeLockFormat = 8
VisReplaceFlags = c_int # enum
LPVISIOPATHS = POINTER(IVPaths)
IVSection._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), helpstring(u'Returns visObjTypeSection (44).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Row',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVRow)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'ContainingMasterID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
]
################################################################
## code template for IVSection implementation
##class IVSection_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Style(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingMasterID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Row(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeSection (44).'
##        #return lpi2Ret
##

IVHyperlink._methods_ = [
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeHyperlink (37).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Address',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(5), 'propput'], HRESULT, 'Address',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'SubAddress',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'SubAddress',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'NewWindow',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'NewWindow',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'ExtraInfo',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'ExtraInfo',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Frame',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'Frame',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(10)], HRESULT, 'AddToFavorites',
              ( ['in', 'optional'], VARIANT, 'FavoritesTitle' )),
    COMMETHOD([dispid(11)], HRESULT, 'Follow'),
    COMMETHOD([dispid(12)], HRESULT, 'Delete'),
    COMMETHOD([dispid(13)], HRESULT, 'Copy'),
    COMMETHOD([dispid(14)], HRESULT, 'CreateURL',
              ( ['in'], c_short, 'CanonicalForm' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Row',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'IsDefaultLink',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'IsDefaultLink',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(18), helpstring(u"Hyperlinks's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(18), helpstring(u"Hyperlinks's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(1610743834), helpstring(u"Hyperlinks's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndepenentName' )),
    COMMETHOD([dispid(1610743834), helpstring(u"Hyperlinks's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndepenentName' )),
]
################################################################
## code template for IVHyperlink implementation
##class IVHyperlink_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    SubAddress = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def CreateURL(self, CanonicalForm):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Frame = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    ExtraInfo = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IsDefaultLink = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    NewWindow = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u"Hyperlinks's locale independent name."
##        #return lpLocaleIndepenentName
##    def _set(self, lpLocaleIndepenentName):
##        u"Hyperlinks's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Row(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Address = property(_get, _set, doc = _set.__doc__)
##
##    def Follow(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u"Hyperlinks's locale specific name."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Hyperlinks's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def AddToFavorites(self, FavoritesTitle):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeHyperlink (37).'
##        #return lpi2Ret
##

IVAccelItems._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVAccelItem' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in an AccelItems collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVAccelItem)), 'lplpAccelItem' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVAccelItem)), 'lplpAccelItem' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVAccelTable)), 'lplpVAccelTable' )),
]
################################################################
## code template for IVAccelItems implementation
##class IVAccelItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in an AccelItems collection is item 0.'
##        #return lplpAccelItem
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpAccelItem
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVAccelItem
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVAccelTable
##

tagVisWindowFit = VisWindowFit

# values for enumeration 'VisEventCodes'
visEvtIDInval = -1
visScopeIDInval = -1
visEvtCodeInval = 0
visEvtCodeDocCreate = 1
visEvtCodeDocOpen = 2
visEvtCodeDocSave = 3
visEvtCodeDocSaveAs = 4
visEvtCodeDocRunning = 5
visEvtCodeDocDesign = 6
visEvtCodeBefDocSave = 7
visEvtCodeBefDocSaveAs = 8
visEvtCodeQueryCancelDocClose = 9
visEvtCodeCancelDocClose = 10
visEvtCodeBefForcedFlush = 200
visEvtCodeAfterForcedFlush = 201
visEvtCodeEnterScope = 202
visEvtCodeExitScope = 203
visEvtCodeQueryCancelQuit = 204
visEvtCodeCancelQuit = 205
visEvtCodeQueryCancelSuspend = 206
visEvtCodeCancelSuspend = 207
visEvtCodeBeforeSuspend = 208
visEvtCodeAfterResume = 209
visEvtCodeQueryCancelStyleDel = 300
visEvtCodeCancelStyleDel = 301
visEvtCodeQueryCancelMasterDel = 400
visEvtCodeCancelMasterDel = 401
visEvtCodeQueryCancelPageDel = 500
visEvtCodeCancelPageDel = 501
visEvtCodeWinSelChange = 701
visEvtCodeBefWinSelDel = 702
visEvtCodeBefWinPageTurn = 703
visEvtCodeWinPageTurn = 704
visEvtCodeViewChanged = 705
visEvtCodeQueryCancelWinClose = 706
visEvtCodeCancelWinClose = 707
visEvtCodeWinOnAddonKeyMSG = 708
visEvtCodeShapeDelete = 801
visEvtCodeShapeParentChange = 802
visEvtCodeShapeBeforeTextEdit = 803
visEvtCodeShapeExitTextEdit = 804
visEvtCodeBefSelDel = 901
visEvtCodeSelAdded = 902
visEvtCodeQueryCancelSelDel = 903
visEvtCodeCancelSelDel = 904
visEvtCodeQueryCancelUngroup = 905
visEvtCodeCancelUngroup = 906
visEvtCodeQueryCancelConvertToGroup = 907
visEvtCodeCancelConvertToGroup = 908
visEvtAdd = 32768
visEvtDel = 16384
visEvtMod = 8192
visEvtWindow = 1
visEvtDoc = 2
visEvtStyle = 4
visEvtMaster = 8
visEvtPage = 16
visEvtLayer = 32
visEvtShape = 64
visEvtText = 128
visEvtConnect = 256
visEvtSection = 512
visEvtRow = 1024
visEvtCell = 2048
visEvtFormula = 4096
visEvtApp = 4096
visEvtAppActivate = 1
visEvtAppDeactivate = 2
visEvtObjActivate = 4
visEvtObjDeactivate = 8
visEvtBeforeQuit = 16
visEvtBeforeModal = 32
visEvtAfterModal = 64
visEvtWinActivate = 128
visEvtMarker = 256
visEvtNonePending = 512
visEvtIdle = 1024
visEvtCode1stUser = 28672
visEvtCodeLastUser = 32767
visEvtCodeCreate = 1
visEvtCodeOpen = 2
visActCodeRunAddon = 1
visActCodeAdvise = 2
visEvtIdMostRecent = 0
visEvtCodeMouseDown = 709
visEvtCodeMouseMove = 710
visEvtCodeMouseUp = 711
visEvtCodeKeyDown = 712
visEvtCodeKeyPress = 713
visEvtCodeKeyUp = 714
visEvtDataRecordset = 32
visEvtShapeLinkAdded = 805
visEvtShapeLinkDeleted = 806
visEvtShapeDataGraphicChanged = 807
visEvtCodeQueryCancelSelGroup = 909
visEvtCodeCancelSelGroup = 910
visEvtRemoveHiddenInformation = 11
visEvtCodeQueryCancelSuspendEvents = 210
visEvtCodeCancelSuspendEvents = 211
visEvtCodeBeforeSuspendEvents = 212
visEvtCodeAfterResumeEvents = 213
visEvtCodeContainerRelationshipAdded = 502
visEvtCodeContainerRelationshipDeleted = 503
visEvtCodeCalloutRelationshipAdded = 504
visEvtCodeCalloutRelationshipDeleted = 505
visEvtCodeSelectionMovedToSubprocess = 12
visEvtCodeRuleSetValidated = 13
visEvtCodeQueryCancelReplaceShapes = 911
visEvtCodeCancelReplaceShapes = 912
visEvtCodeBeforeReplaceShapes = 913
visEvtCodeShapesReplaced = 914
visEvtCodeAfterCoauthMerge = 14
VisEventCodes = c_int # enum
tagVisEventCodes = VisEventCodes
LPVISIOPATH = POINTER(IVPath)
LPVISIOTOOLBARSETS = POINTER(IVToolbarSets)
class IVDataColumns(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0731-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVDataRecordset._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'DataRecordsetID' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'Name' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'Name' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'LinkReplaceBehavior',
              ( ['retval', 'out'], POINTER(VisLinkReplaceBehavior), 'Property' )),
    COMMETHOD([dispid(1610743815), 'propput'], HRESULT, 'LinkReplaceBehavior',
              ( ['in'], VisLinkReplaceBehavior, 'Property' )),
    COMMETHOD([dispid(1610743817), 'propget'], HRESULT, 'DataConnection',
              ( ['retval', 'out'], POINTER(POINTER(IVDataConnection)), 'DataConnection' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'DataColumns',
              ( ['retval', 'out'], POINTER(POINTER(IVDataColumns)), 'DataColumns' )),
    COMMETHOD([dispid(1610743819)], HRESULT, 'GetPrimaryKey',
              ( ['out'], POINTER(VisPrimaryKeySettings), 'PrimaryKeySettings' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'PrimaryKey' )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'SetPrimaryKey',
              ( ['in'], VisPrimaryKeySettings, 'PrimaryKeySettings' ),
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'PrimaryKey' )),
    COMMETHOD([dispid(1610743821), 'propget'], HRESULT, 'CommandString',
              ( ['retval', 'out'], POINTER(BSTR), 'CommandString' )),
    COMMETHOD([dispid(1610743821), 'propput'], HRESULT, 'CommandString',
              ( ['in'], BSTR, 'CommandString' )),
    COMMETHOD([dispid(1610743823), 'propget'], HRESULT, 'DataAsXML',
              ( ['retval', 'out'], POINTER(BSTR), 'Data' )),
    COMMETHOD([dispid(1610743824)], HRESULT, 'GetDataRowIDs',
              ( ['in'], BSTR, 'CriteriaString' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'DataRowIDs' )),
    COMMETHOD([dispid(1610743825)], HRESULT, 'GetRowData',
              ( ['in'], c_int, 'DataRowID' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(VARIANT)), 'DataRowValues' )),
    COMMETHOD([dispid(1610743826)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743827)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(1610743828)], HRESULT, 'RefreshUsingXML',
              ( ['in'], BSTR, 'NewDataAsXML' )),
    COMMETHOD([dispid(1610743829), 'propget'], HRESULT, 'TimeRefreshed',
              ( ['retval', 'out'], POINTER(c_double), 'TimeRefreshed' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'RefreshInterval',
              ( ['retval', 'out'], POINTER(c_int), 'RefreshInterval' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'RefreshInterval',
              ( ['in'], c_int, 'RefreshInterval' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'RefreshSettings',
              ( ['retval', 'out'], POINTER(c_int), 'Settings' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'RefreshSettings',
              ( ['in'], c_int, 'Settings' )),
    COMMETHOD([dispid(1610743834), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743835)], HRESULT, 'GetAllRefreshConflicts',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(POINTER(IVShape))), 'ShapesInConflict' )),
    COMMETHOD([dispid(1610743836)], HRESULT, 'RemoveRefreshConflict',
              ( ['in'], POINTER(IVShape), 'ShapeInConflict' )),
    COMMETHOD([dispid(1610743837)], HRESULT, 'GetMatchingRowsForRefreshConflict',
              ( ['in'], POINTER(IVShape), 'ShapeInConflict' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'DataRowIDs' )),
]
################################################################
## code template for IVDataRecordset implementation
##class IVDataRecordset_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return CommandString
##    def _set(self, CommandString):
##        '-no docstring-'
##    CommandString = property(_get, _set, doc = _set.__doc__)
##
##    def GetPrimaryKey(self):
##        '-no docstring-'
##        #return PrimaryKeySettings, PrimaryKey
##
##    def _get(self):
##        '-no docstring-'
##        #return RefreshInterval
##    def _set(self, RefreshInterval):
##        '-no docstring-'
##    RefreshInterval = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def DataConnection(self):
##        '-no docstring-'
##        #return DataConnection
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetDataRowIDs(self, CriteriaString):
##        '-no docstring-'
##        #return DataRowIDs
##
##    @property
##    def DataColumns(self):
##        '-no docstring-'
##        #return DataColumns
##
##    def GetAllRefreshConflicts(self):
##        '-no docstring-'
##        #return ShapesInConflict
##
##    def _get(self):
##        '-no docstring-'
##        #return Property
##    def _set(self, Property):
##        '-no docstring-'
##    LinkReplaceBehavior = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##
##    def _get(self):
##        '-no docstring-'
##        #return Name
##    def _set(self, Name):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def DataAsXML(self):
##        '-no docstring-'
##        #return Data
##
##    def Refresh(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Settings
##    def _set(self, Settings):
##        '-no docstring-'
##    RefreshSettings = property(_get, _set, doc = _set.__doc__)
##
##    def GetMatchingRowsForRefreshConflict(self, ShapeInConflict):
##        '-no docstring-'
##        #return DataRowIDs
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return DataRecordsetID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def RefreshUsingXML(self, NewDataAsXML):
##        '-no docstring-'
##        #return 
##
##    def RemoveRefreshConflict(self, ShapeInConflict):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def TimeRefreshed(self):
##        '-no docstring-'
##        #return TimeRefreshed
##
##    def SetPrimaryKey(self, PrimaryKeySettings, PrimaryKey):
##        '-no docstring-'
##        #return 
##
##    def GetRowData(self, DataRowID):
##        '-no docstring-'
##        #return DataRowValues
##

tagVisWinTypes = VisWinTypes
class IVisEventProc(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'VB-Implements-Capable Visio event sink interface definition. Use an object that implements this interface as the sink argument in AddAdvise calls.'
    _iid_ = GUID('{000D0728-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation']
IVisEventProc._methods_ = [
    COMMETHOD([dispid(1610743808), helpstring(u'If nEventCode identifies a query event then return True from VisEventProc to cancel the operation.')], HRESULT, 'VisEventProc',
              ( ['in'], c_short, 'nEventCode' ),
              ( ['in'], POINTER(IDispatch), 'pSourceObj' ),
              ( ['in'], c_int, 'nEventID' ),
              ( ['in'], c_int, 'nEventSeqNum' ),
              ( ['in'], POINTER(IDispatch), 'pSubjectObj' ),
              ( ['in'], VARIANT, 'vMoreInfo' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pvResult' )),
]
################################################################
## code template for IVisEventProc implementation
##class IVisEventProc_Impl(object):
##    def VisEventProc(self, nEventCode, pSourceObj, nEventID, nEventSeqNum, pSubjectObj, vMoreInfo):
##        u'If nEventCode identifies a query event then return True from VisEventProc to cancel the operation.'
##        #return pvResult
##


# values for enumeration 'VisUIButtonStyle'
visButtonAutomatic = 0
visButtonIcon = 1
visButtonCaption = 2
visButtonIconandCaption = 3
VisUIButtonStyle = c_int # enum

# values for enumeration 'VisShapeIDs'
visInvalShapeID = -1
visPageSheetID = 0
VisShapeIDs = c_int # enum
tagVisShapeIDs = VisShapeIDs
tagVisOpenSaveArgs = VisOpenSaveArgs
LPVISIOSTATUSBARS = POINTER(IVStatusBars)
tagVisHitTestResults = VisHitTestResults
class IVAmbients(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Ambient properties a Visio control site provides to a control contained in a Visio Document.'
    _iid_ = GUID('{000D0D10-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVAmbients._methods_ = [
    COMMETHOD([dispid(-701), 'hidden', 'propget'], HRESULT, 'BackColor',
              ( ['retval', 'out'], POINTER(c_int), 'lpColorRet' )),
    COMMETHOD([dispid(-702), 'hidden', 'propget'], HRESULT, 'DisplayName',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(-703), 'hidden', 'propget'], HRESULT, 'Font',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'ppDisp' )),
    COMMETHOD([dispid(-704), 'hidden', 'propget'], HRESULT, 'ForeColor',
              ( ['retval', 'out'], POINTER(c_int), 'lpColorRet' )),
    COMMETHOD([dispid(-705), 'hidden', 'propget'], HRESULT, 'LocaleID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-706), 'hidden', 'propget'], HRESULT, 'MessageReflect',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-707), 'hidden', 'propget'], HRESULT, 'ScaleUnits',
              ( ['retval', 'out'], POINTER(BSTR), 'bstr' )),
    COMMETHOD([dispid(-708), 'hidden', 'propget'], HRESULT, 'TextAlign',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-709), 'hidden', 'propget'], HRESULT, 'UserMode',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-710), 'hidden', 'propget'], HRESULT, 'UIDead',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-711), 'hidden', 'propget'], HRESULT, 'ShowGrabHandles',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-712), 'hidden', 'propget'], HRESULT, 'ShowHatching',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-713), 'hidden', 'propget'], HRESULT, 'DisplayAsDefault',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-714), 'hidden', 'propget'], HRESULT, 'SupportsMnemonics',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-715), 'hidden', 'propget'], HRESULT, 'AutoClip',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(-716), 'hidden', 'propget'], HRESULT, 'Appearance',
              ( ['retval', 'out'], POINTER(c_int), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743824), helpstring(u'The Visio Shape associated with an OLE embedded object.'), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppShape' )),
    COMMETHOD([dispid(1610743825), helpstring(u'Visio requests that the current operation be canceled.'), 'propget'], HRESULT, 'CancelOperation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
]
################################################################
## code template for IVAmbients implementation
##class IVAmbients_Impl(object):
##    @property
##    def ShowGrabHandles(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def AutoClip(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def DisplayName(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def LocaleID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def DisplayAsDefault(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def CancelOperation(self):
##        u'Visio requests that the current operation be canceled.'
##        #return pbRet
##
##    @property
##    def Appearance(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ForeColor(self):
##        '-no docstring-'
##        #return lpColorRet
##
##    @property
##    def UIDead(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def ScaleUnits(self):
##        '-no docstring-'
##        #return bstr
##
##    @property
##    def MessageReflect(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def ShowHatching(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def SupportsMnemonics(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def BackColor(self):
##        '-no docstring-'
##        #return lpColorRet
##
##    @property
##    def Shape(self):
##        u'The Visio Shape associated with an OLE embedded object.'
##        #return ppShape
##
##    @property
##    def Font(self):
##        '-no docstring-'
##        #return ppDisp
##
##    @property
##    def UserMode(self):
##        '-no docstring-'
##        #return pbRet
##
##    @property
##    def TextAlign(self):
##        '-no docstring-'
##        #return lpi2Ret
##

tagVisRowIndices = VisRowIndices
LPVISIOCOLORS = POINTER(IVColors)
ECell._disp_methods_ = [
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
]
LPVISIOSELECTION = POINTER(IVSelection)
IVDocuments._methods_ = [
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(5)], HRESULT, 'Open',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeDocs (11).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Documents collection is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6)], HRESULT, 'OpenEx',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(9)], HRESULT, 'GetNames',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'CanCheckOut',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743821)], HRESULT, 'CheckOut',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(1610743822)], HRESULT, 'AddEx',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in', 'optional'], VisMeasurementSystem, 'MeasurementSystem', 0 ),
              ( ['in', 'optional'], c_int, 'Flags', 0 ),
              ( ['in', 'optional'], c_int, 'LangID', 0 ),
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
]
################################################################
## code template for IVDocuments implementation
##class IVDocuments_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def AddEx(self, FileName, MeasurementSystem, Flags, LangID):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetNames(self):
##        '-no docstring-'
##        #return NameArray
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ItemFromID(self, ObjectID):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in a Documents collection is item 1.'
##        #return lpdispRet
##
##    def Add(self, FileName):
##        '-no docstring-'
##        #return lpdispRet
##
##    def CanCheckOut(self, FileName):
##        '-no docstring-'
##        #return pbRet
##
##    def OpenEx(self, FileName, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def CheckOut(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def Open(self, FileName):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeDocs (11).'
##        #return lpi2Ret
##

LPVISIOMASTERS = POINTER(IVMasters)
IVMaster._methods_ = [
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Prompt',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(6), 'propput'], HRESULT, 'Prompt',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'AlignName',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'AlignName',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'IconSize',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(8), 'propput'], HRESULT, 'IconSize',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'IconUpdate',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'IconUpdate',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), helpstring(u'Returns visObjTypeMaster (12).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u"Master's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(0), helpstring(u"Master's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(IVShapes)), 'lpdispRet' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'OneD',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(12)], HRESULT, 'Delete'),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'UniqueID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'Layers',
              ( ['retval', 'out'], POINTER(POINTER(IVLayers)), 'lpdispRet' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'PageSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(16)], HRESULT, 'Drop',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(17)], HRESULT, 'CenterDrawing'),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(20)], HRESULT, 'DrawLine',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(21)], HRESULT, 'DrawRectangle',
              ( ['in'], c_double, 'x1' ),
              ( ['in'], c_double, 'y1' ),
              ( ['in'], c_double, 'x2' ),
              ( ['in'], c_double, 'y2' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(22)], HRESULT, 'DrawOval',
              ( ['in'], c_double, 'x1' ),
              ( ['in'], c_double, 'y1' ),
              ( ['in'], c_double, 'x2' ),
              ( ['in'], c_double, 'y2' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(23)], HRESULT, 'DrawSpline',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(24)], HRESULT, 'DrawBezier',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_short, 'degree' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(25)], HRESULT, 'DrawPolyline',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(26)], HRESULT, 'Import',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(27)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(28)], HRESULT, 'InsertFromFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(29)], HRESULT, 'InsertObject',
              ( ['in'], BSTR, 'ClassOrProgID' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(30)], HRESULT, 'OpenDrawWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(31)], HRESULT, 'OpenIconWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(32)], HRESULT, 'Open',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(33)], HRESULT, 'Close'),
    COMMETHOD([dispid(34), helpstring(u'Creates many shapes in this master. Names, if supplied, are considered locale specific.')], HRESULT, 'DropMany',
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ObjectsToInstance' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_short)), 'IDArray' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(35), helpstring(u'Returns cell formulas in locale specific syntax.')], HRESULT, 'GetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(36)], HRESULT, 'GetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' )),
    COMMETHOD([dispid(37)], HRESULT, 'SetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(38)], HRESULT, 'SetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(39), 'propget'], HRESULT, 'Connects',
              ( ['retval', 'out'], POINTER(POINTER(IVConnects)), 'lpdispRet' )),
    COMMETHOD([dispid(40)], HRESULT, 'ImportIcon',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(41), 'hidden'], HRESULT, 'ExportIconTransparentAsBlack',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'Flags' )),
    COMMETHOD([dispid(42)], HRESULT, 'Layout'),
    COMMETHOD([dispid(43)], HRESULT, 'BoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
    COMMETHOD([dispid(44), 'hidden', 'propget'], HRESULT, 'ID16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(45), 'propget'], HRESULT, 'OLEObjects',
              ( ['retval', 'out'], POINTER(POINTER(IVOLEObjects)), 'lpdispRet' )),
    COMMETHOD([dispid(46), 'propget'], HRESULT, 'PatternFlags',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(46), 'propput'], HRESULT, 'PatternFlags',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'MatchByName',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(47), 'propput'], HRESULT, 'MatchByName',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(48), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(49), 'propget'], HRESULT, 'Hidden',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(49), 'propput'], HRESULT, 'Hidden',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'BaseID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(51), 'propget'], HRESULT, 'NewBaseID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'SpatialSearch',
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['in'], c_short, 'Relation' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(53)], HRESULT, 'CreateShortcut',
              ( ['retval', 'out'], POINTER(POINTER(IVMasterShortcut)), 'lpdispRet' )),
    COMMETHOD([dispid(54), helpstring(u"Master's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(54), helpstring(u"Master's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(55), helpstring(u'Creates many shapes in this master. Names, if supplied, are considered locale independent.')], HRESULT, 'DropManyU',
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ObjectsToInstance' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_short)), 'IDArray' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(56), helpstring(u'Returns cell formulas in locale independent syntax.')], HRESULT, 'GetFormulasU',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(57)], HRESULT, 'DrawNURBS',
              ( ['in'], c_short, 'degree' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'knots' ),
              ( ['in', 'optional'], VARIANT, 'weights' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(58)], HRESULT, 'ExportIcon',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in', 'optional'], VARIANT, 'TransparentRGB' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'IndexInStencil',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743877), 'propget'], HRESULT, 'Picture',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743878), 'propget'], HRESULT, 'Icon',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743878), 'propputref'], HRESULT, 'Icon',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743880), helpstring(u'Returns the open for edit Master that was originally copied from this Master. If there is no open for edit Master associated with this Master, returns Nothing.'), 'propget'], HRESULT, 'EditCopy',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'ppOpenMaster' )),
    COMMETHOD([dispid(1610743881), helpstring(u'Returns the original Master that produced this open Master. If this Master is not an open EditCopy of another Master, returns Nothing.'), 'propget'], HRESULT, 'Original',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'ppOriginalMaster' )),
    COMMETHOD([dispid(1610743882), helpstring(u'If Original is not Nothing, this returns whether any changes have been made to this Master since it was opened. Always False when Original is Nothing.'), 'propget'], HRESULT, 'IsChanged',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbChanged' )),
    COMMETHOD([dispid(59), 'propput'], HRESULT, 'IndexInStencil',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(1610743884)], HRESULT, 'ResizeToFitContents'),
    COMMETHOD([dispid(1610743885)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743886)], HRESULT, 'PasteSpecial',
              ( ['in'], c_int, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' )),
    COMMETHOD([dispid(1610743887)], HRESULT, 'CreateSelection',
              ( ['in'], VisSelectionTypes, 'SelType' ),
              ( ['in', 'optional'], VisSelectMode, 'IterationMode', 256 ),
              ( ['in', 'optional'], VARIANT, 'Data' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'ppSelection' )),
    COMMETHOD([dispid(1610743888)], HRESULT, 'AddGuide',
              ( ['in'], c_short, 'Type' ),
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743889)], HRESULT, 'DrawArcByThreePoints',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['in'], c_double, 'xControl' ),
              ( ['in'], c_double, 'yControl' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743890)], HRESULT, 'DrawQuarterArc',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['in'], VisArcSweepFlags, 'SweepFlag' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743891)], HRESULT, 'DrawCircularArc',
              ( ['in'], c_double, 'xCenter' ),
              ( ['in'], c_double, 'yCenter' ),
              ( ['in'], c_double, 'Radius' ),
              ( ['in', 'optional'], c_double, 'StartAngle', 0.0 ),
              ( ['in', 'optional'], c_double, 'EndAngle', 3.1415927410125732 ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743892), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VisMasterTypes), 'Type' )),
    COMMETHOD([dispid(1610743893), 'propget'], HRESULT, 'DataGraphicHidden',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Hidden' )),
    COMMETHOD([dispid(1610743893), 'propput'], HRESULT, 'DataGraphicHidden',
              ( ['in'], VARIANT_BOOL, 'Hidden' )),
    COMMETHOD([dispid(1610743895), 'propget'], HRESULT, 'DataGraphicHidesText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'HideText' )),
    COMMETHOD([dispid(1610743895), 'propput'], HRESULT, 'DataGraphicHidesText',
              ( ['in'], VARIANT_BOOL, 'HideText' )),
    COMMETHOD([dispid(1610743897), 'propget'], HRESULT, 'DataGraphicShowBorder',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'ShowBorder' )),
    COMMETHOD([dispid(1610743897), 'propput'], HRESULT, 'DataGraphicShowBorder',
              ( ['in'], VARIANT_BOOL, 'ShowBorder' )),
    COMMETHOD([dispid(1610743899), 'propget'], HRESULT, 'DataGraphicHorizontalPosition',
              ( ['retval', 'out'], POINTER(VisGraphicPositionHorizontal), 'Position' )),
    COMMETHOD([dispid(1610743899), 'propput'], HRESULT, 'DataGraphicHorizontalPosition',
              ( ['in'], VisGraphicPositionHorizontal, 'Position' )),
    COMMETHOD([dispid(1610743901), 'propget'], HRESULT, 'DataGraphicVerticalPosition',
              ( ['retval', 'out'], POINTER(VisGraphicPositionVertical), 'Position' )),
    COMMETHOD([dispid(1610743901), 'propput'], HRESULT, 'DataGraphicVerticalPosition',
              ( ['in'], VisGraphicPositionVertical, 'Position' )),
    COMMETHOD([dispid(1610743903), 'propget'], HRESULT, 'GraphicItems',
              ( ['retval', 'out'], POINTER(POINTER(IVGraphicItems)), 'GraphicItems' )),
    COMMETHOD([dispid(1610743904)], HRESULT, 'DataGraphicDelete'),
    COMMETHOD([dispid(1610743905)], HRESULT, 'PasteToLocation',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['in'], c_int, 'Flags' )),
    COMMETHOD([dispid(1610743906)], HRESULT, 'VisualBoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
]
################################################################
## code template for IVMaster implementation
##class IVMaster_Impl(object):
##    @property
##    def Layers(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def DrawOval(self, x1, y1, x2, y2):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def PageSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def OneD(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def CenterDrawing(self):
##        '-no docstring-'
##        #return 
##
##    def ExportIcon(self, FileName, Flags, TransparentRGB):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    MatchByName = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EditCopy(self):
##        u'Returns the open for edit Master that was originally copied from this Master. If there is no open for edit Master associated with this Master, returns Nothing.'
##        #return ppOpenMaster
##
##    @property
##    def IsChanged(self):
##        u'If Original is not Nothing, this returns whether any changes have been made to this Master since it was opened. Always False when Original is Nothing.'
##        #return pbChanged
##
##    def GetFormulas(self, SID_SRCStream):
##        u'Returns cell formulas in locale specific syntax.'
##        #return formulaArray
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def DrawArcByThreePoints(self, xBegin, yBegin, xEnd, yEnd, xControl, yControl):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetFormulasU(self, SID_SRCStream):
##        u'Returns cell formulas in locale independent syntax.'
##        #return formulaArray
##
##    @property
##    def SpatialSearch(self, x, y, Relation, Tolerance, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Import(self, FileName):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IconUpdate = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return Type
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Hidden = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OLEObjects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Picture(self):
##        '-no docstring-'
##        #return ppPictureDisp
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def ImportIcon(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def DropManyU(self, ObjectsToInstance, xyArray):
##        u'Creates many shapes in this master. Names, if supplied, are considered locale independent.'
##        #return IDArray, lpi2Ret
##
##    def DrawLine(self, xBegin, yBegin, xEnd, yEnd):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DrawNURBS(self, degree, Flags, xyArray, knots, weights):
##        '-no docstring-'
##        #return lpdispRet
##
##    def ExportIconTransparentAsBlack(self, FileName, Flags):
##        '-no docstring-'
##        #return 
##
##    def DrawSpline(self, xyArray, Tolerance, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def GraphicItems(self):
##        '-no docstring-'
##        #return GraphicItems
##
##    @property
##    def Connects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def OpenIconWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DrawQuarterArc(self, xBegin, yBegin, xEnd, yEnd, SweepFlag):
##        '-no docstring-'
##        #return lpdispRet
##
##    def InsertObject(self, ClassOrProgID, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    DataGraphicHorizontalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    PatternFlags = property(_get, _set, doc = _set.__doc__)
##
##    def CreateShortcut(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SetResults(self, SID_SRCStream, UnitsNamesOrCodes, resultArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeMaster (12).'
##        #return lpi2Ret
##
##    def DrawCircularArc(self, xCenter, yCenter, Radius, StartAngle, EndAngle):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SetFormulas(self, SID_SRCStream, formulaArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def DataGraphicDelete(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u"Master's locale specific name."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Master's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BaseID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def DropMany(self, ObjectsToInstance, xyArray):
##        u'Creates many shapes in this master. Names, if supplied, are considered locale specific.'
##        #return IDArray, lpi2Ret
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Drop(self, ObjectToDrop, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddGuide(self, Type, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return HideText
##    def _set(self, HideText):
##        '-no docstring-'
##    DataGraphicHidesText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return Position
##    def _set(self, Position):
##        '-no docstring-'
##    DataGraphicVerticalPosition = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u"Master's locale independent name."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"Master's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    def ResizeToFitContents(self):
##        '-no docstring-'
##        #return 
##
##    def VisualBoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    def _get(self):
##        '-no docstring-'
##        #return Hidden
##    def _set(self, Hidden):
##        '-no docstring-'
##    DataGraphicHidden = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def OpenDrawWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DrawBezier(self, xyArray, degree, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def NewBaseID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Prompt = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Original(self):
##        u'Returns the original Master that produced this open Master. If this Master is not an open EditCopy of another Master, returns Nothing.'
##        #return ppOriginalMaster
##
##    def Paste(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IconSize = property(_get, _set, doc = _set.__doc__)
##
##    def Open(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetResults(self, SID_SRCStream, Flags, UnitsNamesOrCodes):
##        '-no docstring-'
##        #return resultArray
##
##    def DrawPolyline(self, xyArray, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def PasteToLocation(self, xPos, yPos, Flags):
##        '-no docstring-'
##        #return 
##
##    def CreateSelection(self, SelType, IterationMode, Data):
##        '-no docstring-'
##        #return ppSelection
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    AlignName = property(_get, _set, doc = _set.__doc__)
##
##    def Export(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    IndexInStencil = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def UniqueID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def BoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def Layout(self):
##        '-no docstring-'
##        #return 
##
##    def Icon(self, ppPictureDisp):
##        '-no docstring-'
##        #return 
##
##    def DrawRectangle(self, x1, y1, x2, y2):
##        '-no docstring-'
##        #return lpdispRet
##
##    def PasteSpecial(self, Format, Link, DisplayAsIcon):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return ShowBorder
##    def _set(self, ShowBorder):
##        '-no docstring-'
##    DataGraphicShowBorder = property(_get, _set, doc = _set.__doc__)
##
##    def InsertFromFile(self, FileName, Flags):
##        '-no docstring-'
##        #return lpdispRet
##

class ApplicationSettings(CoClass):
    u'Setting Properties for the Application Object'
    _reg_clsid_ = GUID('{000D0A2A-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ApplicationSettings._com_interfaces_ = [IVApplicationSettings]


# values for enumeration 'VisSnapSettings'
visSnapToNone = 0
visSnapToRulerSubdivisions = 1
visSnapToGrid = 2
visSnapToGuides = 4
visSnapToHandles = 8
visSnapToVertices = 16
visSnapToConnectionPoints = 32
visSnapToGeometry = 256
visSnapToAlignmentBox = 512
visSnapToExtensions = 1024
visSnapToDisabled = 32768
visSnapToIntersections = 65536
VisSnapSettings = c_int # enum
class IVisLibOcxSupport(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    u'Interface to enable VisOcx.DrawingControl interactions with VisLib.'
    _iid_ = GUID('{000D0D21-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation', 'hidden']
IVisLibOcxSupport._methods_ = [
    COMMETHOD(['propget', helpstring(u"A string set by the Drawing Control's host application to qualify registry entry lookup. Recommendation: use a GUID.")], HRESULT, 'HostID',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD(['propput', helpstring(u"A string set by the Drawing Control's host application to qualify registry entry lookup. Recommendation: use a GUID.")], HRESULT, 'HostID',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD(['propget', helpstring(u'The Visio.Window of the inplace active control.')], HRESULT, 'Window',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'ppWin' )),
    COMMETHOD(['propget', helpstring(u'The Visio.Document of the control.')], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'ppDoc' )),
    COMMETHOD(['propget', helpstring(u'Name of a file to load into the control.')], HRESULT, 'Src',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD(['propput', helpstring(u'Name of a file to load into the control.')], HRESULT, 'Src',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD(['propget', helpstring(u'True if menu negotiation with the container is required.')], HRESULT, 'NegotiateMenus',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVal' )),
    COMMETHOD(['propput', helpstring(u'True if menu negotiation with the container is required.')], HRESULT, 'NegotiateMenus',
              ( ['in'], VARIANT_BOOL, 'pbVal' )),
    COMMETHOD(['propget', helpstring(u'True if toolbar negotiation with the container is required.')], HRESULT, 'NegotiateToolbars',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVal' )),
    COMMETHOD(['propput', helpstring(u'True if toolbar negotiation with the container is required.')], HRESULT, 'NegotiateToolbars',
              ( ['in'], VARIANT_BOOL, 'pbVal' )),
    COMMETHOD([helpstring(u'Custom method to display an About dialog with information about this installation of the Microsoft Visio 11.0 Drawing Control.')], HRESULT, 'About'),
    COMMETHOD(['propget', helpstring(u'Determines how Visio pages react when control resizes or loads a new file via Src.')], HRESULT, 'PageSizingBehavior',
              ( ['retval', 'out'], POINTER(VisPageSizingBehaviors), 'peVal' )),
    COMMETHOD(['propput', helpstring(u'Determines how Visio pages react when control resizes or loads a new file via Src.')], HRESULT, 'PageSizingBehavior',
              ( ['in'], VisPageSizingBehaviors, 'peVal' )),
    COMMETHOD(['propget', helpstring(u'Detemines how the control unloads the Visio application when released.')], HRESULT, 'ShutdownBehavior',
              ( ['retval', 'out'], POINTER(c_short), 'lpVal' )),
    COMMETHOD(['propput', helpstring(u'Detemines how the control unloads the Visio application when released.')], HRESULT, 'ShutdownBehavior',
              ( ['in'], c_short, 'lpVal' )),
]
################################################################
## code template for IVisLibOcxSupport implementation
##class IVisLibOcxSupport_Impl(object):
##    def _get(self):
##        u'Name of a file to load into the control.'
##        #return pbstr
##    def _set(self, pbstr):
##        u'Name of a file to load into the control.'
##    Src = property(_get, _set, doc = _set.__doc__)
##
##    def About(self):
##        u'Custom method to display an About dialog with information about this installation of the Microsoft Visio 11.0 Drawing Control.'
##        #return 
##
##    def _get(self):
##        u"A string set by the Drawing Control's host application to qualify registry entry lookup. Recommendation: use a GUID."
##        #return pbstr
##    def _set(self, pbstr):
##        u"A string set by the Drawing Control's host application to qualify registry entry lookup. Recommendation: use a GUID."
##    HostID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Determines how Visio pages react when control resizes or loads a new file via Src.'
##        #return peVal
##    def _set(self, peVal):
##        u'Determines how Visio pages react when control resizes or loads a new file via Src.'
##    PageSizingBehavior = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Window(self):
##        u'The Visio.Window of the inplace active control.'
##        #return ppWin
##
##    def _get(self):
##        u'Detemines how the control unloads the Visio application when released.'
##        #return lpVal
##    def _set(self, lpVal):
##        u'Detemines how the control unloads the Visio application when released.'
##    ShutdownBehavior = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Document(self):
##        u'The Visio.Document of the control.'
##        #return ppDoc
##
##    def _get(self):
##        u'True if toolbar negotiation with the container is required.'
##        #return pbVal
##    def _set(self, pbVal):
##        u'True if toolbar negotiation with the container is required.'
##    NegotiateToolbars = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'True if menu negotiation with the container is required.'
##        #return pbVal
##    def _set(self, pbVal):
##        u'True if menu negotiation with the container is required.'
##    NegotiateMenus = property(_get, _set, doc = _set.__doc__)
##

class DataColumns(CoClass):
    u'Data Columns collection in a Data Recordset'
    _reg_clsid_ = GUID('{000D0A2E-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
DataColumns._com_interfaces_ = [IVDataColumns]

class Layer(CoClass):
    u"A layer of a Visio Page or Master. Identifies a subset of the Page's or Master's shapes that are logically related."
    _reg_clsid_ = GUID('{000D0A08-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Layer._com_interfaces_ = [IVLayer]


# values for enumeration 'VisDocumentTypes'
visDocTypeInval = 0
visTypeDrawing = 1
visTypeStencil = 2
visTypeTemplate = 3
VisDocumentTypes = c_int # enum

# values for enumeration 'VisThemeTypes'
visThemeTypeIndex = 0
visThemeTypeColor = 1
visThemeTypeEffect = 2
visThemeTypeConnector = 3
visThemeTypeFont = 4
VisThemeTypes = c_int # enum
IVDocument._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeDoc (10).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'InPlace',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Masters',
              ( ['retval', 'out'], POINTER(POINTER(IVMasters)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Pages',
              ( ['retval', 'out'], POINTER(POINTER(IVPages)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Styles',
              ( ['retval', 'out'], POINTER(POINTER(IVStyles)), 'lpdispRet' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'Path',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(21), 'propget'], HRESULT, 'FullName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(9)], HRESULT, 'Drop',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], c_short, 'xPos' ),
              ( ['in'], c_short, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'hidden', 'propget'], HRESULT, 'old_Saved',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'hidden', 'propput'], HRESULT, 'old_Saved',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'ReadOnly',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(12)], HRESULT, 'Save',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13)], HRESULT, 'SaveAs',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(14), 'hidden', 'propget'], HRESULT, 'old_Version',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(14), 'hidden', 'propput'], HRESULT, 'old_Version',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(15), 'propget'], HRESULT, 'Title',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(15), 'propput'], HRESULT, 'Title',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'Subject',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(16), 'propput'], HRESULT, 'Subject',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'Creator',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(17), 'propput'], HRESULT, 'Creator',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'Keywords',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(18), 'propput'], HRESULT, 'Keywords',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Description',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(19), 'propput'], HRESULT, 'Description',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(22)], HRESULT, 'Print'),
    COMMETHOD([dispid(23)], HRESULT, 'Close'),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'CustomMenus',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([dispid(25)], HRESULT, 'SetCustomMenus',
              ( ['in'], POINTER(IVUIObject), 'MenusObject' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'CustomMenusFile',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(26), 'propput'], HRESULT, 'CustomMenusFile',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(27)], HRESULT, 'ClearCustomMenus'),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'CustomToolbars',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lpdispRet' )),
    COMMETHOD([dispid(29)], HRESULT, 'SetCustomToolbars',
              ( ['in'], POINTER(IVUIObject), 'ToolbarsObject' )),
    COMMETHOD([dispid(30), 'propget'], HRESULT, 'CustomToolbarsFile',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(30), 'propput'], HRESULT, 'CustomToolbarsFile',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(31)], HRESULT, 'ClearCustomToolbars'),
    COMMETHOD([dispid(32), 'propget'], HRESULT, 'Fonts',
              ( ['retval', 'out'], POINTER(POINTER(IVFonts)), 'lpdispRet' )),
    COMMETHOD([dispid(33), 'propget'], HRESULT, 'Colors',
              ( ['retval', 'out'], POINTER(POINTER(IVColors)), 'lpdispRet' )),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'Template',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(36)], HRESULT, 'SaveAsEx',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'SaveFlags' )),
    COMMETHOD([dispid(37), 'hidden', 'propget'], HRESULT, 'old_SavePreviewMode',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(37), 'hidden', 'propput'], HRESULT, 'old_SavePreviewMode',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(38), 'hidden'], HRESULT, 'GetIcon',
              ( ['in'], c_short, 'ID' ),
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(39), 'hidden'], HRESULT, 'SetIcon',
              ( ['in'], c_short, 'ID' ),
              ( ['in'], c_short, 'Index' ),
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(40), 'propget'], HRESULT, 'LeftMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(40), 'propput'], HRESULT, 'LeftMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'RightMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(41), 'propput'], HRESULT, 'RightMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(42), 'propget'], HRESULT, 'TopMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(42), 'propput'], HRESULT, 'TopMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(43), 'propget'], HRESULT, 'BottomMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(43), 'propput'], HRESULT, 'BottomMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(44), 'hidden', 'propget'], HRESULT, 'old_PrintLandscape',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(44), 'hidden', 'propput'], HRESULT, 'old_PrintLandscape',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(45), 'hidden', 'propget'], HRESULT, 'old_PrintCenteredH',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(45), 'hidden', 'propput'], HRESULT, 'old_PrintCenteredH',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(46), 'hidden', 'propget'], HRESULT, 'old_PrintCenteredV',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(46), 'hidden', 'propput'], HRESULT, 'old_PrintCenteredV',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(47), 'propget'], HRESULT, 'PrintScale',
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(47), 'propput'], HRESULT, 'PrintScale',
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(48), 'hidden', 'propget'], HRESULT, 'old_PrintFitOnPages',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(48), 'hidden', 'propput'], HRESULT, 'old_PrintFitOnPages',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(49), 'propget'], HRESULT, 'PrintPagesAcross',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(49), 'propput'], HRESULT, 'PrintPagesAcross',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(50), 'propget'], HRESULT, 'PrintPagesDown',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(50), 'propput'], HRESULT, 'PrintPagesDown',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(51), helpstring(u"Locale specific name of document's default style."), 'propget'], HRESULT, 'DefaultStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(51), helpstring(u"Locale specific name of document's default style."), 'propput'], HRESULT, 'DefaultStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(52), helpstring(u"Locale specific name of document's default line style."), 'propget'], HRESULT, 'DefaultLineStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(52), helpstring(u"Locale specific name of document's default line style."), 'propput'], HRESULT, 'DefaultLineStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(53), helpstring(u"Locale specific name of document's default fill style."), 'propget'], HRESULT, 'DefaultFillStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(53), helpstring(u"Locale specific name of document's default fill style."), 'propput'], HRESULT, 'DefaultFillStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(54), helpstring(u"Locale specific name of document's default text style."), 'propget'], HRESULT, 'DefaultTextStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(54), helpstring(u"Locale specific name of document's default text style."), 'propput'], HRESULT, 'DefaultTextStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(56)], HRESULT, 'OpenStencilWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(57)], HRESULT, 'ParseLine',
              ( ['in'], BSTR, 'Line' )),
    COMMETHOD([dispid(58)], HRESULT, 'ExecuteLine',
              ( ['in'], BSTR, 'Line' )),
    COMMETHOD([dispid(59), helpstring(u'Interface returned is VBIDE.VBProject.'), 'propget'], HRESULT, 'VBProject',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(60), 'propget'], HRESULT, 'PaperWidth',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(61), 'propget'], HRESULT, 'PaperHeight',
              ( ['in'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(62), 'hidden', 'propget'], HRESULT, 'old_PaperSize',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(62), 'hidden', 'propput'], HRESULT, 'old_PaperSize',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(63), 'hidden'], HRESULT, 'FollowHyperlink45',
              ( ['in'], BSTR, 'Target' ),
              ( ['in'], BSTR, 'Location' )),
    COMMETHOD([dispid(-2147418112), 'hidden', 'propget'], HRESULT, 'CodeName',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(64), 'hidden', 'propget'], HRESULT, 'old_Mode',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(64), 'hidden', 'propput'], HRESULT, 'old_Mode',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(65), 'propget'], HRESULT, 'OLEObjects',
              ( ['retval', 'out'], POINTER(POINTER(IVOLEObjects)), 'lpdispRet' )),
    COMMETHOD([dispid(66)], HRESULT, 'FollowHyperlink',
              ( ['in'], BSTR, 'Address' ),
              ( ['in'], BSTR, 'SubAddress' ),
              ( ['in', 'optional'], VARIANT, 'ExtraInfo' ),
              ( ['in', 'optional'], VARIANT, 'Frame' ),
              ( ['in', 'optional'], VARIANT, 'NewWindow' ),
              ( ['in', 'optional'], VARIANT, 'res1' ),
              ( ['in', 'optional'], VARIANT, 'res2' ),
              ( ['in', 'optional'], VARIANT, 'res3' )),
    COMMETHOD([dispid(67), 'propget'], HRESULT, 'Manager',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(67), 'propput'], HRESULT, 'Manager',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(68), 'propget'], HRESULT, 'Company',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(68), 'propput'], HRESULT, 'Company',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(69), 'propget'], HRESULT, 'Category',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(69), 'propput'], HRESULT, 'Category',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(70), 'propget'], HRESULT, 'HyperlinkBase',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(70), 'propput'], HRESULT, 'HyperlinkBase',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(71), 'propget'], HRESULT, 'DocumentSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(72), 'propget'], HRESULT, 'Container',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(73), 'propget'], HRESULT, 'ClassID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(74), 'propget'], HRESULT, 'ProgID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(75), 'propget'], HRESULT, 'MasterShortcuts',
              ( ['retval', 'out'], POINTER(POINTER(IVMasterShortcuts)), 'lpdispRet' )),
    COMMETHOD([dispid(76), 'propget'], HRESULT, 'AlternateNames',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(76), 'propput'], HRESULT, 'AlternateNames',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(77), 'propget'], HRESULT, 'GestureFormatSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(78)], HRESULT, 'ClearGestureFormatSheet'),
    COMMETHOD([dispid(79), 'propget'], HRESULT, 'AutoRecover',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(79), 'propput'], HRESULT, 'AutoRecover',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743922), 'propget'], HRESULT, 'Saved',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743922), 'propput'], HRESULT, 'Saved',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743924), 'propget'], HRESULT, 'Version',
              ( ['retval', 'out'], POINTER(VisDocVersions), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743924), 'propput'], HRESULT, 'Version',
              ( ['in'], VisDocVersions, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743926), 'propget'], HRESULT, 'SavePreviewMode',
              ( ['retval', 'out'], POINTER(VisSavePreviewMode), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743926), 'propput'], HRESULT, 'SavePreviewMode',
              ( ['in'], VisSavePreviewMode, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743928), 'propget'], HRESULT, 'PrintLandscape',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743928), 'propput'], HRESULT, 'PrintLandscape',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743930), 'propget'], HRESULT, 'PrintCenteredH',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743930), 'propput'], HRESULT, 'PrintCenteredH',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743932), 'propget'], HRESULT, 'PrintCenteredV',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743932), 'propput'], HRESULT, 'PrintCenteredV',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743934), 'propget'], HRESULT, 'PrintFitOnPages',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743934), 'propput'], HRESULT, 'PrintFitOnPages',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743936), 'propget'], HRESULT, 'PaperSize',
              ( ['retval', 'out'], POINTER(VisPaperSizes), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743936), 'propput'], HRESULT, 'PaperSize',
              ( ['in'], VisPaperSizes, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743938), 'propget'], HRESULT, 'Mode',
              ( ['retval', 'out'], POINTER(VisDocModeArgs), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743938), 'propput'], HRESULT, 'Mode',
              ( ['in'], VisDocModeArgs, 'lpi4Ret' )),
    COMMETHOD([dispid(1610743940), 'propget'], HRESULT, 'SnapEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743940), 'propput'], HRESULT, 'SnapEnabled',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743942), 'propget'], HRESULT, 'SnapSettings',
              ( ['retval', 'out'], POINTER(VisSnapSettings), 'pnRet' )),
    COMMETHOD([dispid(1610743942), 'propput'], HRESULT, 'SnapSettings',
              ( ['in'], VisSnapSettings, 'pnRet' )),
    COMMETHOD([dispid(1610743944), 'propget'], HRESULT, 'SnapExtensions',
              ( ['retval', 'out'], POINTER(VisSnapExtensions), 'pnRet' )),
    COMMETHOD([dispid(1610743944), 'propput'], HRESULT, 'SnapExtensions',
              ( ['in'], VisSnapExtensions, 'pnRet' )),
    COMMETHOD([dispid(1610743946), 'propget'], HRESULT, 'SnapAngles',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_double)), 'dAngles' )),
    COMMETHOD([dispid(1610743946), 'propput'], HRESULT, 'SnapAngles',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'dAngles' )),
    COMMETHOD([dispid(1610743948), 'propget'], HRESULT, 'GlueEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743948), 'propput'], HRESULT, 'GlueEnabled',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743950), 'propget'], HRESULT, 'GlueSettings',
              ( ['retval', 'out'], POINTER(VisGlueSettings), 'pnRet' )),
    COMMETHOD([dispid(1610743950), 'propput'], HRESULT, 'GlueSettings',
              ( ['in'], VisGlueSettings, 'pnRet' )),
    COMMETHOD([dispid(1610743952), 'propget'], HRESULT, 'DynamicGridEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743952), 'propput'], HRESULT, 'DynamicGridEnabled',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743954), 'propget'], HRESULT, 'DefaultGuideStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(1610743954), 'propput'], HRESULT, 'DefaultGuideStyle',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(1610743956), 'propget'], HRESULT, 'Protection',
              ( ['in', 'optional'], VARIANT, 'bstrPassword' ),
              ( ['retval', 'out'], POINTER(VisProtection), 'pnRet' )),
    COMMETHOD([dispid(1610743956), 'propput'], HRESULT, 'Protection',
              ( ['in', 'optional'], VARIANT, 'bstrPassword' ),
              ( ['in'], VisProtection, 'pnRet' )),
    COMMETHOD([dispid(1610743958), 'propget'], HRESULT, 'Printer',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743958), 'propput'], HRESULT, 'Printer',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743960), 'hidden', 'propget'], HRESULT, 'PrintCopies',
              ( ['retval', 'out'], POINTER(c_int), 'pnRet' )),
    COMMETHOD([dispid(1610743960), 'hidden', 'propput'], HRESULT, 'PrintCopies',
              ( ['in'], c_int, 'pnRet' )),
    COMMETHOD([dispid(1610743962), 'propget'], HRESULT, 'HeaderLeft',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743962), 'propput'], HRESULT, 'HeaderLeft',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743964), 'propget'], HRESULT, 'HeaderCenter',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743964), 'propput'], HRESULT, 'HeaderCenter',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743966), 'propget'], HRESULT, 'HeaderRight',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743966), 'propput'], HRESULT, 'HeaderRight',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743968), 'propget'], HRESULT, 'HeaderMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'pdRet' )),
    COMMETHOD([dispid(1610743968), 'propput'], HRESULT, 'HeaderMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'pdRet' )),
    COMMETHOD([dispid(1610743970), 'propget'], HRESULT, 'FooterLeft',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743970), 'propput'], HRESULT, 'FooterLeft',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743972), 'propget'], HRESULT, 'FooterCenter',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743972), 'propput'], HRESULT, 'FooterCenter',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743974), 'propget'], HRESULT, 'FooterRight',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743974), 'propput'], HRESULT, 'FooterRight',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743976), 'propget'], HRESULT, 'FooterMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['retval', 'out'], POINTER(c_double), 'pdRet' )),
    COMMETHOD([dispid(1610743976), 'propput'], HRESULT, 'FooterMargin',
              ( ['in', 'optional'], VARIANT, 'UnitsNameOrCode' ),
              ( ['in'], c_double, 'pdRet' )),
    COMMETHOD([dispid(1610743978), 'propget'], HRESULT, 'HeaderFooterFont',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IFontDisp)), 'ppFontDisp' )),
    COMMETHOD([dispid(1610743978), 'propputref'], HRESULT, 'HeaderFooterFont',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IFontDisp), 'ppFontDisp' )),
    COMMETHOD([dispid(1610743980), 'propget'], HRESULT, 'HeaderFooterColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743980), 'propput'], HRESULT, 'HeaderFooterColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743982), helpstring(u'Obsolete as of Visio 2003.'), 'hidden', 'propput'], HRESULT, 'Password',
              ( ['in', 'optional'], VARIANT, 'bstrExistingPassword' ),
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(1610743983), 'propget'], HRESULT, 'PreviewPicture',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743983), 'propputref'], HRESULT, 'PreviewPicture',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743985), helpstring(u'Detects and repairs various indicated conditions in a document.')], HRESULT, 'Clean',
              ( ['in', 'optional'], VARIANT, 'nTargets' ),
              ( ['in', 'optional'], VARIANT, 'nActions' ),
              ( ['in', 'optional'], VARIANT, 'nAlerts' ),
              ( ['in', 'optional'], VARIANT, 'nFixes' ),
              ( ['in', 'optional'], VARIANT, 'bStopOnError' ),
              ( ['in', 'optional'], VARIANT, 'bLogFileName' ),
              ( ['in', 'optional'], VARIANT, 'nReserved' )),
    COMMETHOD([dispid(1610743986), 'propget'], HRESULT, 'BuildNumberCreated',
              ( ['retval', 'out'], POINTER(c_int), 'pnBuildNumCreated' )),
    COMMETHOD([dispid(1610743987), 'propget'], HRESULT, 'BuildNumberEdited',
              ( ['retval', 'out'], POINTER(c_int), 'pnBuildNumEdited' )),
    COMMETHOD([dispid(1610743988), 'propget'], HRESULT, 'TimeCreated',
              ( ['retval', 'out'], POINTER(c_double), 'pdTimeCreated' )),
    COMMETHOD([dispid(1610743989), 'propget'], HRESULT, 'Time',
              ( ['retval', 'out'], POINTER(c_double), 'pdTimeCurrent' )),
    COMMETHOD([dispid(1610743990), 'propget'], HRESULT, 'TimeEdited',
              ( ['retval', 'out'], POINTER(c_double), 'pdTimeEdited' )),
    COMMETHOD([dispid(1610743991), 'propget'], HRESULT, 'TimePrinted',
              ( ['retval', 'out'], POINTER(c_double), 'pdTimePrinted' )),
    COMMETHOD([dispid(1610743992), 'propget'], HRESULT, 'TimeSaved',
              ( ['retval', 'out'], POINTER(c_double), 'pdTimeSaved' )),
    COMMETHOD([dispid(1610743993), helpstring(u'Copies the preview picture from pSourceDoc into this one.')], HRESULT, 'CopyPreviewPicture',
              ( ['in'], POINTER(IVDocument), 'pSourceDoc' )),
    COMMETHOD([dispid(1610743994), helpstring(u'True if this document was saved as a workspace. False otherwise.'), 'hidden', 'propget'], HRESULT, 'ContainsWorkspace',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743995), 'propget'], HRESULT, 'EmailRoutingData',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(VARIANT)), 'pData' )),
    COMMETHOD([dispid(1610743996), 'propget'], HRESULT, 'VBProjectData',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_ubyte)), 'pData' )),
    COMMETHOD([dispid(1610743997), helpstring(u'Returns number of Solution XML elements in document. The first element has index 1.'), 'propget'], HRESULT, 'SolutionXMLElementCount',
              ( ['retval', 'out'], POINTER(c_int), 'pElementCount' )),
    COMMETHOD([dispid(1610743998), helpstring(u"Returns the name of the i'th (1-based) Solution XML element."), 'propget'], HRESULT, 'SolutionXMLElementName',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pElementName' )),
    COMMETHOD([dispid(1610743999), helpstring(u'Returns true if there is a Solution XML element with the given name.'), 'propget'], HRESULT, 'SolutionXMLElementExists',
              ( ['in'], BSTR, 'ElementName' ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610744000), helpstring(u'Data of the Solution XML element with the given name. Putting data to non-existent element creates element.'), 'propget'], HRESULT, 'SolutionXMLElement',
              ( ['in'], BSTR, 'ElementName' ),
              ( ['retval', 'out'], POINTER(BSTR), 'pWellFormedXML' )),
    COMMETHOD([dispid(1610744000), helpstring(u'Data of the Solution XML element with the given name. Putting data to non-existent element creates element.'), 'propput'], HRESULT, 'SolutionXMLElement',
              ( ['in'], BSTR, 'ElementName' ),
              ( ['in'], BSTR, 'pWellFormedXML' )),
    COMMETHOD([dispid(1610744002), helpstring(u'Deletes the Solution XML element with the given name.')], HRESULT, 'DeleteSolutionXMLElement',
              ( ['in'], BSTR, 'ElementName' )),
    COMMETHOD([dispid(1610744003), 'propget'], HRESULT, 'FullBuildNumberCreated',
              ( ['retval', 'out'], POINTER(c_int), 'pnFullBuildNumCreated' )),
    COMMETHOD([dispid(1610744004), 'propget'], HRESULT, 'FullBuildNumberEdited',
              ( ['retval', 'out'], POINTER(c_int), 'pnFullBuildNumEdited' )),
    COMMETHOD([dispid(1610744005), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610744006), 'propget'], HRESULT, 'MacrosEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610744007), 'propget'], HRESULT, 'ZoomBehavior',
              ( ['retval', 'out'], POINTER(VisZoomBehavior), 'pnZoomBehavior' )),
    COMMETHOD([dispid(1610744007), 'propput'], HRESULT, 'ZoomBehavior',
              ( ['in'], VisZoomBehavior, 'pnZoomBehavior' )),
    COMMETHOD([dispid(1610744009)], HRESULT, 'CanCheckIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610744010)], HRESULT, 'CheckIn',
              ( ['in', 'optional'], VARIANT_BOOL, 'SaveChanges', True ),
              ( ['in', 'optional'], POINTER(VARIANT), 'Comments' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'MakePublic', False )),
    COMMETHOD([dispid(1610744011), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VisDocumentTypes), 'pnDocType' )),
    COMMETHOD([dispid(1610744012), 'propget'], HRESULT, 'Language',
              ( ['retval', 'out'], POINTER(c_int), 'lpLangID' )),
    COMMETHOD([dispid(1610744012), 'hidden', 'propput'], HRESULT, 'Language',
              ( ['in'], c_int, 'lpLangID' )),
    COMMETHOD([dispid(1610744014), 'propget'], HRESULT, 'RemovePersonalInformation',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610744014), 'propput'], HRESULT, 'RemovePersonalInformation',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610744016)], HRESULT, 'PrintOut',
              ( ['in'], VisPrintOutRange, 'PrintRange' ),
              ( ['in', 'optional'], c_int, 'FromPage', 1 ),
              ( ['in', 'optional'], c_int, 'ToPage', -1 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ScaleCurrentViewToPaper', False ),
              ( ['in', 'optional'], BSTR, 'PrinterName', u'' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'PrintToFile', False ),
              ( ['in', 'optional'], BSTR, 'OutputFileName', u'' ),
              ( ['in', 'optional'], c_int, 'Copies', 1 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'Collate', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ColorAsBlack', False )),
    COMMETHOD([dispid(1610744017)], HRESULT, 'BeginUndoScope',
              ( ['in'], BSTR, 'bstrUndoScopeName' ),
              ( ['retval', 'out'], POINTER(c_int), 'pnScopeID' )),
    COMMETHOD([dispid(1610744018)], HRESULT, 'EndUndoScope',
              ( ['in'], c_int, 'nScopeID' ),
              ( ['in'], VARIANT_BOOL, 'bCommit' )),
    COMMETHOD([dispid(1610744019)], HRESULT, 'AddUndoUnit',
              ( ['in'], POINTER(IUnknown), 'pUndoUnit' )),
    COMMETHOD([dispid(1610744020)], HRESULT, 'PurgeUndo'),
    COMMETHOD([dispid(1610744021), 'propget'], HRESULT, 'UndoEnabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610744021), 'propput'], HRESULT, 'UndoEnabled',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610744023), helpstring(u'Renames the currently open top level undo scope such that bstrScopeName shows up in the Undo menu item. Raises an exception if not in an open scope.')], HRESULT, 'RenameCurrentScope',
              ( ['in'], BSTR, 'bstrScopeName' )),
    COMMETHOD([dispid(1610744024), 'propget'], HRESULT, 'SharedWorkspace',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610744025), 'propget'], HRESULT, 'Sync',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(1610744026)], HRESULT, 'RemoveHiddenInformation',
              ( ['in'], c_int, 'RemoveHiddenInfoItems' )),
    COMMETHOD([dispid(1610744027), 'propget'], HRESULT, 'DataRecordsets',
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordsets)), 'DataRecordsets' )),
    COMMETHOD([dispid(1610744028)], HRESULT, 'GetThemeNames',
              ( ['in'], VisThemeTypes, 'eType' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
    COMMETHOD([dispid(1610744029)], HRESULT, 'GetThemeNamesU',
              ( ['in'], VisThemeTypes, 'eType' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
    COMMETHOD([dispid(1610744030)], HRESULT, 'CanUndoCheckOut',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610744031)], HRESULT, 'UndoCheckOut'),
    COMMETHOD([dispid(1610744032), 'propget'], HRESULT, 'ContainsWorkspaceEx',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'TrueOrFalse' )),
    COMMETHOD([dispid(1610744032), 'propput'], HRESULT, 'ContainsWorkspaceEx',
              ( ['in'], VARIANT_BOOL, 'TrueOrFalse' )),
    COMMETHOD([dispid(1610744034)], HRESULT, 'ExportAsFixedFormat',
              ( ['in'], VisFixedFormatTypes, 'FixedFormat' ),
              ( ['in'], BSTR, 'OutputFileName' ),
              ( ['in'], VisDocExIntent, 'Intent' ),
              ( ['in'], VisPrintOutRange, 'PrintRange' ),
              ( ['in', 'optional'], c_int, 'FromPage', 1 ),
              ( ['in', 'optional'], c_int, 'ToPage', -1 ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ColorAsBlack', False ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeBackground', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeDocumentProperties', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'IncludeStructureTags', True ),
              ( ['in', 'optional'], VARIANT_BOOL, 'UseISO19005_1', False ),
              ( ['in', 'optional'], VARIANT, 'FixedFormatExtClass' )),
    COMMETHOD([dispid(1610744035), 'propget'], HRESULT, 'DefaultSavePath',
              ( ['retval', 'out'], POINTER(BSTR), 'SaveLocation' )),
    COMMETHOD([dispid(1610744035), 'propput'], HRESULT, 'DefaultSavePath',
              ( ['in'], BSTR, 'SaveLocation' )),
    COMMETHOD([dispid(1610744037), 'propget'], HRESULT, 'CustomUI',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610744037), 'propput'], HRESULT, 'CustomUI',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(1610744039), 'propget'], HRESULT, 'UserCustomUI',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(1610744039), 'propput'], HRESULT, 'UserCustomUI',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(1610744041), 'propget'], HRESULT, 'ServerPublishOptions',
              ( ['retval', 'out'], POINTER(POINTER(IVServerPublishOptions)), 'ServerPublishOptions' )),
    COMMETHOD([dispid(1610744042), 'propget'], HRESULT, 'Validation',
              ( ['retval', 'out'], POINTER(POINTER(IVValidation)), 'pValidation' )),
    COMMETHOD([dispid(1610744043), 'propget'], HRESULT, 'DiagramServicesEnabled',
              ( ['retval', 'out'], POINTER(c_int), 'pDiagramServices' )),
    COMMETHOD([dispid(1610744043), 'propput'], HRESULT, 'DiagramServicesEnabled',
              ( ['in'], c_int, 'pDiagramServices' )),
    COMMETHOD([dispid(1610744045), 'propget'], HRESULT, 'CompatibilityMode',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610744046), 'propget'], HRESULT, 'Comments',
              ( ['retval', 'out'], POINTER(POINTER(IVComments)), 'ppComments' )),
    COMMETHOD([dispid(1610744047), 'propget'], HRESULT, 'EditorCount',
              ( ['retval', 'out'], POINTER(c_int), 'pEditors' )),
]
################################################################
## code template for IVDocument implementation
##class IVDocument_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    HyperlinkBase = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    FooterRight = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Title = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DocumentSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def ClearCustomMenus(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, lpr8Ret):
##        '-no docstring-'
##    PrintScale = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return ppComments
##
##    @property
##    def PaperWidth(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def HeaderFooterFont(self, ppFontDisp):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Template(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    RemovePersonalInformation = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    UserCustomUI = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    DynamicGridEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Company = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u"Locale specific name of document's default fill style."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Locale specific name of document's default fill style."
##    DefaultFillStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PaperHeight(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpr8Ret
##
##    def ParseLine(self, Line):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Path(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeDoc (10).'
##        #return lpi2Ret
##
##    @property
##    def Masters(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    FooterLeft = property(_get, _set, doc = _set.__doc__)
##
##    def DeleteSolutionXMLElement(self, ElementName):
##        u'Deletes the Solution XML element with the given name.'
##        #return 
##
##    def BeginUndoScope(self, bstrUndoScopeName):
##        '-no docstring-'
##        #return pnScopeID
##
##    def GetThemeNamesU(self, eType):
##        '-no docstring-'
##        #return NameArray
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_PrintCenteredV = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_PrintCenteredH = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    AutoRecover = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    AlternateNames = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EmailRoutingData(self):
##        '-no docstring-'
##        #return pData
##
##    @property
##    def Validation(self):
##        '-no docstring-'
##        #return pValidation
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_Mode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    PrintFitOnPages = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    UndoEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _set(self, bstrExistingPassword, rhs):
##        u'Obsolete as of Visio 2003.'
##    Password = property(fset = _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    CustomToolbarsFile = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_PrintLandscape = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InPlace(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def SetCustomMenus(self, MenusObject):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ReadOnly(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def SolutionXMLElementName(self, Index):
##        u"Returns the name of the i'th (1-based) Solution XML element."
##        #return pElementName
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    FooterCenter = property(_get, _set, doc = _set.__doc__)
##
##    def FollowHyperlink(self, Address, SubAddress, ExtraInfo, Frame, NewWindow, res1, res2, res3):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Subject = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def ExecuteLine(self, Line):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    HeaderFooterColor = property(_get, _set, doc = _set.__doc__)
##
##    def GetIcon(self, ID, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    Version = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def CustomMenus(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def MacrosEnabled(self):
##        '-no docstring-'
##        #return pbRet
##
##    def Print(self):
##        '-no docstring-'
##        #return 
##
##    def Save(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return pnDocType
##
##    def _get(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return pdRet
##    def _set(self, UnitsNameOrCode, pdRet):
##        '-no docstring-'
##    HeaderMargin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Styles(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    Printer = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pnRet
##    def _set(self, pnRet):
##        '-no docstring-'
##    SnapExtensions = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TimeEdited(self):
##        '-no docstring-'
##        #return pdTimeEdited
##
##    def OpenStencilWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def FullBuildNumberEdited(self):
##        '-no docstring-'
##        #return pnFullBuildNumEdited
##
##    def _get(self):
##        '-no docstring-'
##        #return pnZoomBehavior
##    def _set(self, pnZoomBehavior):
##        '-no docstring-'
##    ZoomBehavior = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_Saved = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, UnitsNameOrCode, lpr8Ret):
##        '-no docstring-'
##    LeftMargin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def OLEObjects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, UnitsNameOrCode, lpr8Ret):
##        '-no docstring-'
##    TopMargin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def PrintOut(self, PrintRange, FromPage, ToPage, ScaleCurrentViewToPaper, PrinterName, PrintToFile, OutputFileName, Copies, Collate, ColorAsBlack):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_SavePreviewMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    HeaderCenter = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ServerPublishOptions(self):
##        '-no docstring-'
##        #return ServerPublishOptions
##
##    @property
##    def EditorCount(self):
##        '-no docstring-'
##        #return pEditors
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    HeaderRight = property(_get, _set, doc = _set.__doc__)
##
##    def SaveAsEx(self, FileName, SaveFlags):
##        '-no docstring-'
##        #return 
##
##    def SaveAs(self, FileName):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return TrueOrFalse
##    def _set(self, TrueOrFalse):
##        '-no docstring-'
##    ContainsWorkspaceEx = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TimeCreated(self):
##        '-no docstring-'
##        #return pdTimeCreated
##
##    @property
##    def Sync(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CompatibilityMode(self):
##        '-no docstring-'
##        #return pbRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    PrintPagesAcross = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    Mode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Category = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return dAngles
##    def _set(self, dAngles):
##        '-no docstring-'
##    SnapAngles = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def TimeSaved(self):
##        '-no docstring-'
##        #return pdTimeSaved
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    PrintLandscape = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u"Locale specific name of document's default line style."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Locale specific name of document's default line style."
##    DefaultLineStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SolutionXMLElementCount(self):
##        u'Returns number of Solution XML elements in document. The first element has index 1.'
##        #return pElementCount
##
##    @property
##    def CustomToolbars(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u"Locale specific name of document's default text style."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Locale specific name of document's default text style."
##    DefaultTextStyle = property(_get, _set, doc = _set.__doc__)
##
##    def PreviewPicture(self, ppPictureDisp):
##        '-no docstring-'
##        #return 
##
##    @property
##    def VBProject(self):
##        u'Interface returned is VBIDE.VBProject.'
##        #return lpdispRet
##
##    @property
##    def ClassID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    PrintCenteredV = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    CustomMenusFile = property(_get, _set, doc = _set.__doc__)
##
##    def UndoCheckOut(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def _get(self, bstrPassword):
##        '-no docstring-'
##        #return pnRet
##    def _set(self, bstrPassword, pnRet):
##        '-no docstring-'
##    Protection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def DataRecordsets(self):
##        '-no docstring-'
##        #return DataRecordsets
##
##    @property
##    def TimePrinted(self):
##        '-no docstring-'
##        #return pdTimePrinted
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    PrintCenteredH = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpLangID
##    def _set(self, lpLangID):
##        '-no docstring-'
##    Language = property(_get, _set, doc = _set.__doc__)
##
##    def CopyPreviewPicture(self, pSourceDoc):
##        u'Copies the preview picture from pSourceDoc into this one.'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    HeaderLeft = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Fonts(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    SnapEnabled = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SolutionXMLElementExists(self, ElementName):
##        u'Returns true if there is a Solution XML element with the given name.'
##        #return pbRet
##
##    def _get(self):
##        u"Locale specific name of document's default style."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Locale specific name of document's default style."
##    DefaultStyle = property(_get, _set, doc = _set.__doc__)
##
##    def FollowHyperlink45(self, Target, Location):
##        '-no docstring-'
##        #return 
##
##    def PurgeUndo(self):
##        '-no docstring-'
##        #return 
##
##    def SetIcon(self, ID, Index, FileName):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        '-no docstring-'
##    DefaultGuideStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContainsWorkspace(self):
##        u'True if this document was saved as a workspace. False otherwise.'
##        #return pbRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pnRet
##    def _set(self, pnRet):
##        '-no docstring-'
##    PrintCopies = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_PaperSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Creator = property(_get, _set, doc = _set.__doc__)
##
##    def SetCustomToolbars(self, ToolbarsObject):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    CustomUI = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Colors(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def CanCheckIn(self):
##        '-no docstring-'
##        #return pbRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    SavePreviewMode = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Keywords = property(_get, _set, doc = _set.__doc__)
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def FullName(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, UnitsNameOrCode, lpr8Ret):
##        '-no docstring-'
##    BottomMargin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def MasterShortcuts(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def ClearGestureFormatSheet(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Time(self):
##        '-no docstring-'
##        #return pdTimeCurrent
##
##    @property
##    def Container(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def ClearCustomToolbars(self):
##        '-no docstring-'
##        #return 
##
##    def RemoveHiddenInformation(self, RemoveHiddenInfoItems):
##        '-no docstring-'
##        #return 
##
##    @property
##    def FullBuildNumberCreated(self):
##        '-no docstring-'
##        #return pnFullBuildNumCreated
##
##    @property
##    def VBProjectData(self):
##        '-no docstring-'
##        #return pData
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Description = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pDiagramServices
##    def _set(self, pDiagramServices):
##        '-no docstring-'
##    DiagramServicesEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self, ElementName):
##        u'Data of the Solution XML element with the given name. Putting data to non-existent element creates element.'
##        #return pWellFormedXML
##    def _set(self, ElementName, pWellFormedXML):
##        u'Data of the Solution XML element with the given name. Putting data to non-existent element creates element.'
##    SolutionXMLElement = property(_get, _set, doc = _set.__doc__)
##
##    def RenameCurrentScope(self, bstrScopeName):
##        u'Renames the currently open top level undo scope such that bstrScopeName shows up in the Undo menu item. Raises an exception if not in an open scope.'
##        #return 
##
##    @property
##    def BuildNumberEdited(self):
##        '-no docstring-'
##        #return pnBuildNumEdited
##
##    @property
##    def CodeName(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def _get(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return pdRet
##    def _set(self, UnitsNameOrCode, pdRet):
##        '-no docstring-'
##    FooterMargin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Pages(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    PaperSize = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    PrintPagesDown = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return SaveLocation
##    def _set(self, SaveLocation):
##        '-no docstring-'
##    DefaultSavePath = property(_get, _set, doc = _set.__doc__)
##
##    def EndUndoScope(self, nScopeID, bCommit):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def CheckIn(self, SaveChanges, Comments, MakePublic):
##        '-no docstring-'
##        #return 
##
##    def Drop(self, ObjectToDrop, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    old_Version = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ProgID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def Clean(self, nTargets, nActions, nAlerts, nFixes, bStopOnError, bLogFileName, nReserved):
##        u'Detects and repairs various indicated conditions in a document.'
##        #return 
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    old_PrintFitOnPages = property(_get, _set, doc = _set.__doc__)
##
##    def CanUndoCheckOut(self):
##        '-no docstring-'
##        #return pbRet
##
##    def ExportAsFixedFormat(self, FixedFormat, OutputFileName, Intent, PrintRange, FromPage, ToPage, ColorAsBlack, IncludeBackground, IncludeDocumentProperties, IncludeStructureTags, UseISO19005_1, FixedFormatExtClass):
##        '-no docstring-'
##        #return 
##
##    def _get(self, UnitsNameOrCode):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, UnitsNameOrCode, lpr8Ret):
##        '-no docstring-'
##    RightMargin = property(_get, _set, doc = _set.__doc__)
##
##    def GetThemeNames(self, eType):
##        '-no docstring-'
##        #return NameArray
##
##    def _get(self):
##        '-no docstring-'
##        #return pnRet
##    def _set(self, pnRet):
##        '-no docstring-'
##    GlueSettings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Manager = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SharedWorkspace(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def BuildNumberCreated(self):
##        '-no docstring-'
##        #return pnBuildNumCreated
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    GlueEnabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pnRet
##    def _set(self, pnRet):
##        '-no docstring-'
##    SnapSettings = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    Saved = property(_get, _set, doc = _set.__doc__)
##
##    def AddUndoUnit(self, pUndoUnit):
##        '-no docstring-'
##        #return 
##
##    @property
##    def GestureFormatSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##

class IVClientSite(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    u'Interface provided to OLE embedded objects through the Visio IOleClientSite object.'
    _iid_ = GUID('{000D0D11-0000-0000-C000-000000000046}')
    _idlflags_ = ['oleautomation', 'hidden']
IVClientSite._methods_ = [
    COMMETHOD(['propget', helpstring(u'The Visio Shape associated with an OLE embedded object.')], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppShape' )),
]
################################################################
## code template for IVClientSite implementation
##class IVClientSite_Impl(object):
##    @property
##    def Shape(self):
##        u'The Visio Shape associated with an OLE embedded object.'
##        #return ppShape
##

class DataRecordsets(CoClass):
    u'Data Recordsets collection in a Document'
    _reg_clsid_ = GUID('{000D0A2B-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EDataRecordsets(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio DataRecordsets Event Interface'
    _iid_ = GUID('{000D0B10-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
DataRecordsets._com_interfaces_ = [IVDataRecordsets]
DataRecordsets._outgoing_interfaces_ = [EDataRecordsets]

class DataConnection(CoClass):
    u'Data Connection oject'
    _reg_clsid_ = GUID('{000D0A2D-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
DataConnection._com_interfaces_ = [IVDataConnection]

class Section(CoClass):
    u"A subset of a Visio Shape's Cells that are logically related."
    _reg_clsid_ = GUID('{000D0A22-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class ESection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio Section Event Interface'
    _iid_ = GUID('{000D0B0E-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
Section._com_interfaces_ = [IVSection]
Section._outgoing_interfaces_ = [ESection]

class DataRecordset(CoClass):
    u'Data Recordset oject'
    _reg_clsid_ = GUID('{000D0A2C-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
class EDataRecordset(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    'Visio DataRecordset Event Interface'
    _iid_ = GUID('{000D0B11-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden']
    _methods_ = []
DataRecordset._com_interfaces_ = [IVDataRecordset]
DataRecordset._outgoing_interfaces_ = [EDataRecordset]

IVCharacters._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Adds custom field. Formula parsed against locale specific syntax.')], HRESULT, 'AddCustomField',
              ( ['in'], BSTR, 'Formula' ),
              ( ['in'], c_short, 'Format' )),
    COMMETHOD([dispid(2)], HRESULT, 'AddField',
              ( ['in'], c_short, 'Category' ),
              ( ['in'], c_short, 'Code' ),
              ( ['in'], c_short, 'Format' )),
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Begin',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Begin',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'CharCount',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(21), 'propput'], HRESULT, 'CharProps',
              ( ['in'], c_short, 'CellIndex' ),
              ( ['in'], c_short, 'rhs' )),
    COMMETHOD([dispid(16), 'propget'], HRESULT, 'CharPropsRow',
              ( ['in'], c_short, 'BiasLorR' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6)], HRESULT, 'Copy'),
    COMMETHOD([dispid(7)], HRESULT, 'Cut'),
    COMMETHOD([dispid(8), helpstring(u'Returns visObjTypeChars (5).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'End',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(9), 'propput'], HRESULT, 'End',
              ( ['in'], c_int, 'lpi4Ret' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'FieldCategory',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'FieldCode',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'FieldFormat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(13), helpstring(u"Returns field's formula in in locale specific syntax."), 'propget'], HRESULT, 'FieldFormula',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(14), 'propget'], HRESULT, 'IsField',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(22), 'propput'], HRESULT, 'ParaProps',
              ( ['in'], c_short, 'CellIndex' ),
              ( ['in'], c_short, 'rhs' )),
    COMMETHOD([dispid(17), 'propget'], HRESULT, 'ParaPropsRow',
              ( ['in'], c_short, 'BiasLorR' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(15)], HRESULT, 'Paste'),
    COMMETHOD([dispid(18), 'propget'], HRESULT, 'TabPropsRow',
              ( ['in'], c_short, 'BiasLorR' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'RunBegin',
              ( ['in'], c_short, 'RunType' ),
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'RunEnd',
              ( ['in'], c_short, 'RunType' ),
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(999), helpstring(u'Superseded by variant=Characters.Text.'), 'hidden', 'propget'], HRESULT, 'TextAsString',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Text',
              ( ['in'], VARIANT, 'lpvarRet' )),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(26), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(27), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Text',
              ( ['retval', 'out'], POINTER(VARIANT), 'lpvarRet' )),
    COMMETHOD([dispid(28), helpstring(u'Adds custom field. Formula parsed against locale independent syntax.')], HRESULT, 'AddCustomFieldU',
              ( ['in'], BSTR, 'Formula' ),
              ( ['in'], c_short, 'Format' )),
    COMMETHOD([dispid(29), helpstring(u"Returns field's formula in in locale independent syntax."), 'propget'], HRESULT, 'FieldFormulaU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(30)], HRESULT, 'Delete'),
    COMMETHOD([dispid(31)], HRESULT, 'AddFieldEx',
              ( ['in'], VisFieldCategories, 'Category' ),
              ( ['in'], VisFieldCodes, 'Code' ),
              ( ['in'], VisFieldFormats, 'Format' ),
              ( ['in', 'optional'], c_int, 'LangID', 0 ),
              ( ['in', 'optional'], c_int, 'CalendarID', -1 )),
    COMMETHOD([dispid(1610743844), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743845), 'propget'], HRESULT, 'ContainingMasterID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
]
################################################################
## code template for IVCharacters implementation
##class IVCharacters_Impl(object):
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    End = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def TextAsString(self):
##        u'Superseded by variant=Characters.Text.'
##        #return lpbstrRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def AddCustomField(self, Formula, Format):
##        u'Adds custom field. Formula parsed against locale specific syntax.'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi4Ret
##    def _set(self, lpi4Ret):
##        '-no docstring-'
##    Begin = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def FieldFormat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeChars (5).'
##        #return lpi2Ret
##
##    def AddField(self, Category, Code, Format):
##        '-no docstring-'
##        #return 
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddFieldEx(self, Category, Code, Format, LangID, CalendarID):
##        '-no docstring-'
##        #return 
##
##    @property
##    def IsField(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def RunEnd(self, RunType):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def FieldCode(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _set(self, CellIndex, rhs):
##        '-no docstring-'
##    CharProps = property(fset = _set, doc = _set.__doc__)
##
##    def AddCustomFieldU(self, Formula, Format):
##        u'Adds custom field. Formula parsed against locale independent syntax.'
##        #return 
##
##    @property
##    def CharPropsRow(self, BiasLorR):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def FieldCategory(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def CharCount(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpvarRet
##    def _set(self, lpvarRet):
##        '-no docstring-'
##    Text = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def FieldFormula(self):
##        u"Returns field's formula in in locale specific syntax."
##        #return lpbstrRet
##
##    @property
##    def TabPropsRow(self, BiasLorR):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def RunBegin(self, RunType):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ContainingMasterID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ParaPropsRow(self, BiasLorR):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _set(self, CellIndex, rhs):
##        '-no docstring-'
##    ParaProps = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def FieldFormulaU(self):
##        u"Returns field's formula in in locale independent syntax."
##        #return lpbstrRet
##

class IVValidationIssues(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D073F-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVValidationIssues._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationIssue)), 'ValidationIssue' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'IssueID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVValidationIssue)), 'ValidationIssue' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'Enum' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'Clear'),
]
################################################################
## code template for IVValidationIssues implementation
##class IVValidationIssues_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return Enum
##
##    @property
##    def Item(self, Index):
##        '-no docstring-'
##        #return ValidationIssue
##
##    def Clear(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ItemFromID(self, IssueID):
##        '-no docstring-'
##        #return ValidationIssue
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

LPVISIOAPPSETTINGS = POINTER(IVApplicationSettings)

# values for enumeration 'VisLegendFlags'
visLegendPopulate = 0
visLegendNoContents = 1
VisLegendFlags = c_int # enum
class GraphicItem(CoClass):
    u'Graphic Item object'
    _reg_clsid_ = GUID('{000D0A32-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
GraphicItem._com_interfaces_ = [IVGraphicItem]


# values for enumeration 'VisDeleteFlags'
visDeleteNormal = 0
visDeleteHealConnectors = 1
visDeleteNoHealConnectors = 2
visDeleteNoContainerMembers = 4
visDeleteNoAssociatedCallouts = 8
VisDeleteFlags = c_int # enum
class DataRecordsetChangedEvent(CoClass):
    u'Data Recordset changed object'
    _reg_clsid_ = GUID('{000D0A30-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
DataRecordsetChangedEvent._com_interfaces_ = [IVDataRecordsetChangedEvent]

tagVisSavePreviewMode = VisSavePreviewMode
IVDataColumns._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'DataRecordset',
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'Count' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'IndexOrName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVDataColumn)), 'DataColumn' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'Enum' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'SetColumnProperties',
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'ColumnNames' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'Properties' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'Values' )),
]
################################################################
## code template for IVDataColumns implementation
##class IVDataColumns_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return Count
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return Enum
##
##    @property
##    def Item(self, IndexOrName):
##        '-no docstring-'
##        #return DataColumn
##
##    def SetColumnProperties(self, ColumnNames, Properties, Values):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def DataRecordset(self):
##        '-no docstring-'
##        #return DataRecordset
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

class IEnumVToolbar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0253-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

IEnumVToolbar._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVToolbar)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVToolbar)), 'ppenm' )),
]
################################################################
## code template for IEnumVToolbar implementation
##class IEnumVToolbar_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

class Extender(CoClass):
    u'Object that provides the extensions Visio gives to a control contained in a Visio Document.'
    _reg_clsid_ = GUID('{000D0D06-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Extender._com_interfaces_ = [IVDispExtender]
Extender._outgoing_interfaces_ = [EShape]

class GraphicItems(CoClass):
    u'Grahic Items collection'
    _reg_clsid_ = GUID('{000D0A31-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
GraphicItems._com_interfaces_ = [IVGraphicItems]

LPVISIODATACOLUMN = POINTER(IVDataColumn)
LPVISIOOBJECTS = POINTER(IVOLEObjects)
tagVisDocVersions = VisDocVersions
LPVISIODATACOLUMNS = POINTER(IVDataColumns)
tagVisZoomBehavior = VisZoomBehavior

# values for enumeration 'VisGuideTypes'
visPoint = 1
visHorz = 2
visVert = 3
VisGuideTypes = c_int # enum
class Application(CoClass):
    u'A running instance of Visio. ProgId: "Visio.Application"'
    _reg_clsid_ = GUID('{00021A20-0000-0000-C000-000000000046}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Application._com_interfaces_ = [IVApplication]
Application._outgoing_interfaces_ = [EApplication]

class IEnumVMenuSet(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0233-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

IEnumVMenuSet._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVMenuSet)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVMenuSet)), 'ppenm' )),
]
################################################################
## code template for IEnumVMenuSet implementation
##class IEnumVMenuSet_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

class IVCoauthMergeEvent(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0742-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'oleautomation', 'hidden']
IVCoauthMergeEvent._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'BaseDocument',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'DownloadDocument',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'WorkingDocument',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
]
################################################################
## code template for IVCoauthMergeEvent implementation
##class IVCoauthMergeEvent_Impl(object):
##    @property
##    def BaseDocument(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def WorkingDocument(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def DownloadDocument(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

LPVISIOSTYLES = POINTER(IVStyles)
LPVISIORELATEDSHAPEPAIREVENT = POINTER(IVRelatedShapePairEvent)
class IEnumVMenuItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0213-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

IEnumVMenuItem._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVMenuItem)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVMenuItem)), 'ppenm' )),
]
################################################################
## code template for IEnumVMenuItem implementation
##class IEnumVMenuItem_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

class Hyperlinks(CoClass):
    u'The hyperlinks of a Visio Shape. The first Hyperlink in a Hyperlinks collection is item 0.'
    _reg_clsid_ = GUID('{000D0A21-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Hyperlinks._com_interfaces_ = [IVHyperlinks]


# values for enumeration 'VisSectionIndices'
visSectionInval = 255
visSectionFirst = 0
visSectionLast = 252
visSectionNone = 255
visSectionObject = 1
visSectionMember = 2
visSectionCharacter = 3
visSectionParagraph = 4
visSectionTab = 5
visSectionScratch = 6
visSectionConnectionPts = 7
visSectionExport = 7
visSectionTextField = 8
visSectionControls = 9
visSectionFirstComponent = 10
visSectionLastComponent = 239
visSectionAction = 240
visSectionLayer = 241
visSectionUser = 242
visSectionProp = 243
visSectionHyperlink = 244
visSectionReviewer = 245
visSectionAnnotation = 246
visSectionSmartTag = 247
visSectionLastReal = 247
visSectionLineGradientStops = 248
visSectionFillGradientStops = 249
VisSectionIndices = c_int # enum
tagVisSectionIndices = VisSectionIndices
LPVISIODATARECORDSET = POINTER(IVDataRecordset)
LPVISIOVALIDATIONRULES = POINTER(IVValidationRules)
LPVISIOMASTER = POINTER(IVMaster)
IVRow._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'ContainingSection',
              ( ['retval', 'out'], POINTER(POINTER(IVSection)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), helpstring(u'Returns visObjTypeRow (45).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), helpstring(u"Row's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(10), helpstring(u"Row's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first cell in a row is item 0. Name treated as locale specific.'), 'propget'], HRESULT, 'Cell',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(12), helpstring(u"Row's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(12), helpstring(u"Row's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(13), helpstring(u'The first cell in a row is item 0. Name treated as locale independent.'), 'propget'], HRESULT, 'CellU',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(14)], HRESULT, 'GetPolylineData',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' )),
    COMMETHOD([dispid(1610743825), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'ContainingMasterID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
]
################################################################
## code template for IVRow implementation
##class IVRow_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Style(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingSection(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u"Row's locale specific name."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Row's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def CellU(self, NameOrIndex):
##        u'The first cell in a row is item 0. Name treated as locale independent.'
##        #return lpdispRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ContainingMasterID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def Cell(self, NameOrIndex):
##        u'The first cell in a row is item 0. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u"Row's locale independent name."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"Row's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    def GetPolylineData(self, Flags):
##        '-no docstring-'
##        #return xyArray
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeRow (45).'
##        #return lpi2Ret
##

tagVisProtection = VisProtection
tagVisUIIconIDs = VisUIIconIDs
IVPage._methods_ = [
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Background',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'Background',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'hidden'], HRESULT, 'old_Paste'),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'old_PasteSpecial',
              ( ['in'], c_short, 'Format' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypePage (14).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6)], HRESULT, 'DrawLine',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(7)], HRESULT, 'DrawRectangle',
              ( ['in'], c_double, 'x1' ),
              ( ['in'], c_double, 'y1' ),
              ( ['in'], c_double, 'x2' ),
              ( ['in'], c_double, 'y2' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(8)], HRESULT, 'DrawOval',
              ( ['in'], c_double, 'x1' ),
              ( ['in'], c_double, 'y1' ),
              ( ['in'], c_double, 'x2' ),
              ( ['in'], c_double, 'y2' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u"Page's locale specific name."), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(0), helpstring(u"Page's locale specific name."), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'lpLocaleSpecificName' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Shapes',
              ( ['retval', 'out'], POINTER(POINTER(IVShapes)), 'lpdispRet' )),
    COMMETHOD([dispid(9)], HRESULT, 'Drop',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(12)], HRESULT, 'AddGuide',
              ( ['in'], c_short, 'Type' ),
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(14), helpstring(u'Superseded by variant=Page.BackPage.'), 'hidden', 'propget'], HRESULT, 'BackPageAsObj',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(1499), helpstring(u'Takes locale specific page name. Superseded by Page.BackPage=variant.'), 'hidden', 'propput'], HRESULT, 'BackPageFromName',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(15)], HRESULT, 'Print'),
    COMMETHOD([dispid(17)], HRESULT, 'Import',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(18)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(19), 'propget'], HRESULT, 'Layers',
              ( ['retval', 'out'], POINTER(POINTER(IVLayers)), 'lpdispRet' )),
    COMMETHOD([dispid(20), 'propget'], HRESULT, 'PageSheet',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(21)], HRESULT, 'Delete',
              ( ['in'], c_short, 'fRenumberPages' )),
    COMMETHOD([dispid(22)], HRESULT, 'CenterDrawing'),
    COMMETHOD([dispid(23), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(24), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(25)], HRESULT, 'DrawSpline',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(26)], HRESULT, 'DrawBezier',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_short, 'degree' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(27)], HRESULT, 'DrawPolyline',
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(28)], HRESULT, 'InsertFromFile',
              ( ['in'], BSTR, 'FileName' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(29)], HRESULT, 'InsertObject',
              ( ['in'], BSTR, 'ClassOrProgID' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(30)], HRESULT, 'OpenDrawWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(31), helpstring(u'Creates many shapes on this page. Names, if supplied, are considered locale specific.')], HRESULT, 'DropMany',
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ObjectsToInstance' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_short)), 'IDArray' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(32), helpstring(u'Returns cell formulas in locale specific syntax.')], HRESULT, 'GetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(33)], HRESULT, 'GetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' )),
    COMMETHOD([dispid(34)], HRESULT, 'SetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(35)], HRESULT, 'SetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'Connects',
              ( ['retval', 'out'], POINTER(POINTER(IVConnects)), 'lpdispRet' )),
    COMMETHOD([dispid(37), helpstring(u'Takes locale independent page name, locale specific page name or page object. Returns page object.'), 'propget'], HRESULT, 'BackPage',
              ( ['retval', 'out'], POINTER(VARIANT), 'lpobjRet' )),
    COMMETHOD([dispid(37), helpstring(u'Takes locale independent page name, locale specific page name or page object. Returns page object.'), 'propput'], HRESULT, 'BackPage',
              ( ['in'], VARIANT, 'lpobjRet' )),
    COMMETHOD([dispid(38)], HRESULT, 'Layout'),
    COMMETHOD([dispid(39)], HRESULT, 'BoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
    COMMETHOD([dispid(40), 'hidden', 'propget'], HRESULT, 'ID16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'OLEObjects',
              ( ['retval', 'out'], POINTER(POINTER(IVOLEObjects)), 'lpdispRet' )),
    COMMETHOD([dispid(42), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(43), 'propget'], HRESULT, 'SpatialSearch',
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['in'], c_short, 'Relation' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(44), helpstring(u"Page's locale independent name."), 'propget'], HRESULT, 'NameU',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(44), helpstring(u"Page's locale independent name."), 'propput'], HRESULT, 'NameU',
              ( ['in'], BSTR, 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(45), helpstring(u'Creates many shapes on this page. Names, if supplied, are considered locale independent.')], HRESULT, 'DropManyU',
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ObjectsToInstance' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_short)), 'IDArray' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(46), helpstring(u'Returns cell formulas in locale independent syntax.')], HRESULT, 'GetFormulasU',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SID_SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(47)], HRESULT, 'DrawNURBS',
              ( ['in'], c_short, 'degree' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'xyArray' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'knots' ),
              ( ['in', 'optional'], VARIANT, 'weights' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743861), 'propget'], HRESULT, 'Picture',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(4), 'propput'], HRESULT, 'Index',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(1610743863), 'propget'], HRESULT, 'PrintTileCount',
              ( ['retval', 'out'], POINTER(c_int), 'pnCount' )),
    COMMETHOD([dispid(1610743864)], HRESULT, 'PrintTile',
              ( ['in'], c_int, 'nTile' )),
    COMMETHOD([dispid(1610743865)], HRESULT, 'ResizeToFitContents'),
    COMMETHOD([dispid(1610743866)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
    COMMETHOD([dispid(1610743867)], HRESULT, 'PasteSpecial',
              ( ['in'], c_int, 'Format' ),
              ( ['in', 'optional'], VARIANT, 'Link' ),
              ( ['in', 'optional'], VARIANT, 'DisplayAsIcon' )),
    COMMETHOD([dispid(1610743868)], HRESULT, 'CreateSelection',
              ( ['in'], VisSelectionTypes, 'SelType' ),
              ( ['in', 'optional'], VisSelectMode, 'IterationMode', 256 ),
              ( ['in', 'optional'], VARIANT, 'Data' ),
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'ppSelection' )),
    COMMETHOD([dispid(1610743869), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(VisPageTypes), 'pnPageType' )),
    COMMETHOD([dispid(1610743870)], HRESULT, 'DrawArcByThreePoints',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['in'], c_double, 'xControl' ),
              ( ['in'], c_double, 'yControl' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743871)], HRESULT, 'DrawQuarterArc',
              ( ['in'], c_double, 'xBegin' ),
              ( ['in'], c_double, 'yBegin' ),
              ( ['in'], c_double, 'xEnd' ),
              ( ['in'], c_double, 'yEnd' ),
              ( ['in'], VisArcSweepFlags, 'SweepFlag' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743872)], HRESULT, 'DrawCircularArc',
              ( ['in'], c_double, 'xCenter' ),
              ( ['in'], c_double, 'yCenter' ),
              ( ['in'], c_double, 'Radius' ),
              ( ['in', 'optional'], c_double, 'StartAngle', 0.0 ),
              ( ['in', 'optional'], c_double, 'EndAngle', 3.1415927410125732 ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743873), 'propget'], HRESULT, 'ReviewerID',
              ( ['retval', 'out'], POINTER(c_int), 'ReviewerID' )),
    COMMETHOD([dispid(1610743874), 'propget'], HRESULT, 'OriginalPage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'ppPage' )),
    COMMETHOD([dispid(1610743875)], HRESULT, 'GetShapesLinkedToData',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' )),
    COMMETHOD([dispid(1610743876)], HRESULT, 'GetShapesLinkedToDataRow',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], c_int, 'DataRowID' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' )),
    COMMETHOD([dispid(1610743877)], HRESULT, 'LinkShapesToDataRows',
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'DataRowIDs' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' ),
              ( ['in', 'optional'], VARIANT_BOOL, 'ApplyDataGraphicAfterLink', True )),
    COMMETHOD([dispid(1610743878)], HRESULT, 'ShapeIDsToUniqueIDs',
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' ),
              ( ['in'], VisUniqueIDArgs, 'UniqueIDArgs' ),
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'GUIDs' )),
    COMMETHOD([dispid(1610743879)], HRESULT, 'UniqueIDsToShapeIDs',
              ( ['in'], POINTER(_midlSAFEARRAY(BSTR)), 'GUIDs' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' )),
    COMMETHOD([dispid(1610743880)], HRESULT, 'DropLinked',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' ),
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], c_int, 'DataRowID' ),
              ( ['in'], VARIANT_BOOL, 'ApplyDataGraphicAfterLink' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'Shape' )),
    COMMETHOD([dispid(1610743881), helpstring(u'Creates many linked shapes on this page. Names, if supplied, are considered locale independent.')], HRESULT, 'DropManyLinkedU',
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ObjectsToInstance' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_double)), 'XYs' ),
              ( ['in'], c_int, 'DataRecordsetID' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'DataRowIDs' ),
              ( ['in'], VARIANT_BOOL, 'ApplyDataGraphicAfterLink' ),
              ( ['out'], POINTER(_midlSAFEARRAY(c_int)), 'ShapeIDs' ),
              ( ['retval', 'out'], POINTER(c_int), 'Ret' )),
    COMMETHOD([dispid(1610743882), 'propget'], HRESULT, 'ThemeColors',
              ( ['retval', 'out'], POINTER(VARIANT), 'pVar' )),
    COMMETHOD([dispid(1610743882), 'propput'], HRESULT, 'ThemeColors',
              ( ['in'], VARIANT, 'pVar' )),
    COMMETHOD([dispid(1610743884), 'propget'], HRESULT, 'ThemeEffects',
              ( ['retval', 'out'], POINTER(VARIANT), 'pVar' )),
    COMMETHOD([dispid(1610743884), 'propput'], HRESULT, 'ThemeEffects',
              ( ['in'], VARIANT, 'pVar' )),
    COMMETHOD([dispid(1610743886)], HRESULT, 'DropConnected',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], POINTER(IVShape), 'TargetShape' ),
              ( ['in'], VisAutoConnectDir, 'PlacementDir' ),
              ( ['in', 'optional'], POINTER(IUnknown), 'Connector' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'DroppedShape' )),
    COMMETHOD([dispid(1610743887)], HRESULT, 'AutoConnectMany',
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'FromShapeIDs' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'ToShapeIDs' ),
              ( ['in'], POINTER(_midlSAFEARRAY(c_int)), 'PlacementDirs' ),
              ( ['in', 'optional'], POINTER(IUnknown), 'Connector' ),
              ( ['retval', 'out'], POINTER(c_int), 'ConnectCount' )),
    COMMETHOD([dispid(1610743888)], HRESULT, 'DropContainer',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], POINTER(IUnknown), 'TargetShapes' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'DroppedShape' )),
    COMMETHOD([dispid(1610743889)], HRESULT, 'LayoutIncremental',
              ( ['in'], VisLayoutIncrementalType, 'AlignOrSpace' ),
              ( ['in'], VisLayoutHorzAlignType, 'AlignHorizontal' ),
              ( ['in'], VisLayoutVertAlignType, 'AlignVertical' ),
              ( ['in'], c_double, 'SpaceHorizontal' ),
              ( ['in'], c_double, 'SpaceVertical' ),
              ( ['in'], VisUnitCodes, 'UnitsNameOrCode' )),
    COMMETHOD([dispid(1610743890)], HRESULT, 'LayoutChangeDirection',
              ( ['in'], VisLayoutDirection, 'Direction' )),
    COMMETHOD([dispid(1610743891)], HRESULT, 'AvoidPageBreaks'),
    COMMETHOD([dispid(1610743892)], HRESULT, 'SplitConnector',
              ( ['in'], POINTER(IVShape), 'ConnectorToSplit' ),
              ( ['in'], POINTER(IVShape), 'Shape' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'NewConnector' )),
    COMMETHOD([dispid(1610743893)], HRESULT, 'DropCallout',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], POINTER(IVShape), 'TargetShape' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'DroppedShape' )),
    COMMETHOD([dispid(1610743894)], HRESULT, 'PasteToLocation',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['in'], c_int, 'Flags' )),
    COMMETHOD([dispid(1610743895)], HRESULT, 'GetContainers',
              ( ['in'], VisContainerNested, 'NestedOptions' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pContainersList' )),
    COMMETHOD([dispid(1610743896)], HRESULT, 'GetCallouts',
              ( ['in'], VisContainerNested, 'NestedOptions' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pCalloutsList' )),
    COMMETHOD([dispid(1610743897), 'propget'], HRESULT, 'LayoutRoutePassive',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743897), 'propput'], HRESULT, 'LayoutRoutePassive',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743899)], HRESULT, 'DropLegend',
              ( ['in'], POINTER(IUnknown), 'OuterList' ),
              ( ['in'], POINTER(IUnknown), 'InnerContainer' ),
              ( ['in'], VisLegendFlags, 'populateFlags' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppRet' )),
    COMMETHOD([dispid(1610743900)], HRESULT, 'DropIntoList',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], POINTER(IVShape), 'TargetList' ),
              ( ['in'], c_int, 'lPosition' ),
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppRet' )),
    COMMETHOD([dispid(1610743901), 'propget'], HRESULT, 'AutoSize',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbRet' )),
    COMMETHOD([dispid(1610743901), 'propput'], HRESULT, 'AutoSize',
              ( ['in'], VARIANT_BOOL, 'pbRet' )),
    COMMETHOD([dispid(1610743903)], HRESULT, 'AutoSizeDrawing'),
    COMMETHOD([dispid(1610743904), helpstring(u'Returns a new page duplicated from this page.')], HRESULT, 'Duplicate',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'ppPage' )),
    COMMETHOD([dispid(1610743905)], HRESULT, 'GetTheme',
              ( ['in'], VisThemeTypes, 'eThemeType' ),
              ( ['retval', 'out'], POINTER(VARIANT), 'pVar' )),
    COMMETHOD([dispid(1610743906)], HRESULT, 'SetTheme',
              ( ['in'], VARIANT, 'varThemeIndex' ),
              ( ['in', 'optional'], VARIANT, 'varColorScheme' ),
              ( ['in', 'optional'], VARIANT, 'varEffectScheme' ),
              ( ['in', 'optional'], VARIANT, 'varConnectorScheme' ),
              ( ['in', 'optional'], VARIANT, 'varFontScheme' )),
    COMMETHOD([dispid(1610743907), 'propget'], HRESULT, 'Comments',
              ( ['retval', 'out'], POINTER(POINTER(IVComments)), 'ppComments' )),
    COMMETHOD([dispid(1610743908), 'propget'], HRESULT, 'ShapeComments',
              ( ['retval', 'out'], POINTER(POINTER(IVComments)), 'ppComments' )),
    COMMETHOD([dispid(1610743909)], HRESULT, 'GetThemeVariant',
              ( ['out'], POINTER(c_short), 'pVariantColor' ),
              ( ['out'], POINTER(c_short), 'pVariantStyle' ),
              ( ['out', 'optional'], POINTER(c_short), 'pEmbellishment', 0 )),
    COMMETHOD([dispid(1610743910)], HRESULT, 'SetThemeVariant',
              ( ['in'], c_short, 'variantColor' ),
              ( ['in'], c_short, 'variantStyle' ),
              ( ['in', 'optional'], c_short, 'embellishment', -1 )),
    COMMETHOD([dispid(1610743911)], HRESULT, 'VisualBoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
]
################################################################
## code template for IVPage implementation
##class IVPage_Impl(object):
##    def GetCallouts(self, NestedOptions):
##        '-no docstring-'
##        #return pCalloutsList
##
##    @property
##    def BackPageAsObj(self):
##        u'Superseded by variant=Page.BackPage.'
##        #return lpdispRet
##
##    @property
##    def Comments(self):
##        '-no docstring-'
##        #return ppComments
##
##    @property
##    def SpatialSearch(self, x, y, Relation, Tolerance, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DrawSpline(self, xyArray, Tolerance, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DrawArcByThreePoints(self, xBegin, yBegin, xEnd, yEnd, xControl, yControl):
##        '-no docstring-'
##        #return lpdispRet
##
##    def InsertObject(self, ClassOrProgID, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        u'Takes locale independent page name, locale specific page name or page object. Returns page object.'
##        #return lpobjRet
##    def _set(self, lpobjRet):
##        u'Takes locale independent page name, locale specific page name or page object. Returns page object.'
##    BackPage = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypePage (14).'
##        #return lpi2Ret
##
##    def DropCallout(self, ObjectToDrop, TargetShape):
##        '-no docstring-'
##        #return DroppedShape
##
##    def AutoConnectMany(self, FromShapeIDs, ToShapeIDs, PlacementDirs, Connector):
##        '-no docstring-'
##        #return ConnectCount
##
##    def DrawCircularArc(self, xCenter, yCenter, Radius, StartAngle, EndAngle):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pVar
##    def _set(self, pVar):
##        '-no docstring-'
##    ThemeEffects = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    AutoSize = property(_get, _set, doc = _set.__doc__)
##
##    def DrawRectangle(self, x1, y1, x2, y2):
##        '-no docstring-'
##        #return lpdispRet
##
##    def InsertFromFile(self, FileName, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Layers(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Index = property(_get, _set, doc = _set.__doc__)
##
##    def SetThemeVariant(self, variantColor, variantStyle, embellishment):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def DropManyLinkedU(self, ObjectsToInstance, XYs, DataRecordsetID, DataRowIDs, ApplyDataGraphicAfterLink):
##        u'Creates many linked shapes on this page. Names, if supplied, are considered locale independent.'
##        #return ShapeIDs, Ret
##
##    def Print(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return pnPageType
##
##    @property
##    def Picture(self):
##        '-no docstring-'
##        #return ppPictureDisp
##
##    def DrawLine(self, xBegin, yBegin, xEnd, yEnd):
##        '-no docstring-'
##        #return lpdispRet
##
##    def old_Paste(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Connects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def PasteToLocation(self, xPos, yPos, Flags):
##        '-no docstring-'
##        #return 
##
##    def SetFormulas(self, SID_SRCStream, formulaArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def LayoutChangeDirection(self, Direction):
##        '-no docstring-'
##        #return 
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Shapes(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DropLinked(self, ObjectToDrop, x, y, DataRecordsetID, DataRowID, ApplyDataGraphicAfterLink):
##        '-no docstring-'
##        #return Shape
##
##    def ResizeToFitContents(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self, fRenumberPages):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PrintTileCount(self):
##        '-no docstring-'
##        #return pnCount
##
##    def CreateSelection(self, SelType, IterationMode, Data):
##        '-no docstring-'
##        #return ppSelection
##
##    def GetContainers(self, NestedOptions):
##        '-no docstring-'
##        #return pContainersList
##
##    def UniqueIDsToShapeIDs(self, GUIDs):
##        '-no docstring-'
##        #return ShapeIDs
##
##    def SetResults(self, SID_SRCStream, UnitsNamesOrCodes, resultArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def PageSheet(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def CenterDrawing(self):
##        '-no docstring-'
##        #return 
##
##    def _set(self, rhs):
##        u'Takes locale specific page name. Superseded by Page.BackPage=variant.'
##    BackPageFromName = property(fset = _set, doc = _set.__doc__)
##
##    def PrintTile(self, nTile):
##        '-no docstring-'
##        #return 
##
##    def LinkShapesToDataRows(self, DataRecordsetID, DataRowIDs, ShapeIDs, ApplyDataGraphicAfterLink):
##        '-no docstring-'
##        #return 
##
##    def Duplicate(self):
##        u'Returns a new page duplicated from this page.'
##        #return ppPage
##
##    def Import(self, FileName):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddGuide(self, Type, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def OLEObjects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def DropManyU(self, ObjectsToInstance, xyArray):
##        u'Creates many shapes on this page. Names, if supplied, are considered locale independent.'
##        #return IDArray, lpi2Ret
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ReviewerID(self):
##        '-no docstring-'
##        #return ReviewerID
##
##    def ShapeIDsToUniqueIDs(self, ShapeIDs, UniqueIDArgs):
##        '-no docstring-'
##        #return GUIDs
##
##    def SplitConnector(self, ConnectorToSplit, Shape):
##        '-no docstring-'
##        #return NewConnector
##
##    def DropIntoList(self, ObjectToDrop, TargetList, lPosition):
##        '-no docstring-'
##        #return ppRet
##
##    def GetThemeVariant(self):
##        '-no docstring-'
##        #return pVariantColor, pVariantStyle, pEmbellishment
##
##    def DrawBezier(self, xyArray, degree, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pVar
##    def _set(self, pVar):
##        '-no docstring-'
##    ThemeColors = property(_get, _set, doc = _set.__doc__)
##
##    def GetShapesLinkedToDataRow(self, DataRecordsetID, DataRowID):
##        '-no docstring-'
##        #return ShapeIDs
##
##    def GetResults(self, SID_SRCStream, Flags, UnitsNamesOrCodes):
##        '-no docstring-'
##        #return resultArray
##
##    def DrawPolyline(self, xyArray, Flags):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ID16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def SetTheme(self, varThemeIndex, varColorScheme, varEffectScheme, varConnectorScheme, varFontScheme):
##        '-no docstring-'
##        #return 
##
##    def AutoSizeDrawing(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def OriginalPage(self):
##        '-no docstring-'
##        #return ppPage
##
##    def DrawOval(self, x1, y1, x2, y2):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Layout(self):
##        '-no docstring-'
##        #return 
##
##    def GetFormulas(self, SID_SRCStream):
##        u'Returns cell formulas in locale specific syntax.'
##        #return formulaArray
##
##    def DropConnected(self, ObjectToDrop, TargetShape, PlacementDir, Connector):
##        '-no docstring-'
##        #return DroppedShape
##
##    def GetFormulasU(self, SID_SRCStream):
##        u'Returns cell formulas in locale independent syntax.'
##        #return formulaArray
##
##    def LayoutIncremental(self, AlignOrSpace, AlignHorizontal, AlignVertical, SpaceHorizontal, SpaceVertical, UnitsNameOrCode):
##        '-no docstring-'
##        #return 
##
##    def DrawNURBS(self, degree, Flags, xyArray, knots, weights):
##        '-no docstring-'
##        #return lpdispRet
##
##    def PasteSpecial(self, Format, Link, DisplayAsIcon):
##        '-no docstring-'
##        #return 
##
##    def GetTheme(self, eThemeType):
##        '-no docstring-'
##        #return pVar
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    Background = property(_get, _set, doc = _set.__doc__)
##
##    def Paste(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u"Page's locale specific name."
##        #return lpLocaleSpecificName
##    def _set(self, lpLocaleSpecificName):
##        u"Page's locale specific name."
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    def DrawQuarterArc(self, xBegin, yBegin, xEnd, yEnd, SweepFlag):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Drop(self, ObjectToDrop, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DropContainer(self, ObjectToDrop, TargetShapes):
##        '-no docstring-'
##        #return DroppedShape
##
##    def _get(self):
##        '-no docstring-'
##        #return pbRet
##    def _set(self, pbRet):
##        '-no docstring-'
##    LayoutRoutePassive = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u"Page's locale independent name."
##        #return lpLocaleIndependentName
##    def _set(self, lpLocaleIndependentName):
##        u"Page's locale independent name."
##    NameU = property(_get, _set, doc = _set.__doc__)
##
##    def old_PasteSpecial(self, Format):
##        '-no docstring-'
##        #return 
##
##    def VisualBoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    def OpenDrawWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ShapeComments(self):
##        '-no docstring-'
##        #return ppComments
##
##    def AvoidPageBreaks(self):
##        '-no docstring-'
##        #return 
##
##    def GetShapesLinkedToData(self, DataRecordsetID):
##        '-no docstring-'
##        #return ShapeIDs
##
##    def DropLegend(self, OuterList, InnerContainer, populateFlags):
##        '-no docstring-'
##        #return ppRet
##
##    def Export(self, FileName):
##        '-no docstring-'
##        #return 
##
##    def DropMany(self, ObjectsToInstance, xyArray):
##        u'Creates many shapes on this page. Names, if supplied, are considered locale specific.'
##        #return IDArray, lpi2Ret
##
##    def BoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##

LPVISIODOCUMENTS = POINTER(IVDocuments)
LPVISIODOCUMENT = POINTER(IVDocument)
class DataColumn(CoClass):
    u'Data Column of a Data Recordset'
    _reg_clsid_ = GUID('{000D0A2F-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
DataColumn._com_interfaces_ = [IVDataColumn]

LPVISIOSTATUSBARITEM = POINTER(IVStatusBarItem)
LPVISIOSTATUSBAR = POINTER(IVStatusBar)
LPVISIOPAGES = POINTER(IVPages)
LPVISIOENUMVMENUITEM = POINTER(IEnumVMenuItem)
LPVISIODATARECORDSETS = POINTER(IVDataRecordsets)

# values for enumeration 'VisCellVals'
visXFormResizeDontCare = 0
visXFormResizeSpread = 1
visXFormResizeScale = 2
visArrowSizeVerySmall = 0
visArrowSizeSmall = 1
visArrowSizeMedium = 2
visArrowSizeLarge = 3
visArrowSizeVeryLarge = 4
visArrowSizeJumbo = 5
visArrowSizeColossal = 6
visNoFill = 0
visSolid = 1
visWideUpDiagonal = 2
visWideCross = 3
visWideDiagonalCross = 4
visWideDownDiagonal = 5
visWideHorz = 6
visWideVert = 7
visBackDotsMini = 8
visHalfAndHalf = 9
visForeDotsMini = 10
visForeDotsNarrow = 11
visForeDotsWide = 12
visThickHorz = 13
visThickVertical = 14
visThickDownDiagonal = 15
visThickUpDiagonal = 16
visThickDiagonalCross = 17
visBackDotsWide = 18
visThinHorz = 19
visThinVert = 20
visThinDownDiagonal = 21
visThinUpDiagonal = 22
visThinCross = 23
visThinDiagonalCross = 24
visGuideXActive = 1024
visGuideYActive = 2048
visPrintSetup = 0
visTight = 1
visStandard = 2
visCustom = 3
visLogical = 4
visDSMetric = 5
visDSEngr = 6
visDSArch = 7
visNoScale = 0
visArchitectural = 1
visEngineering = 2
visScaleCustom = 3
visScaleMetric = 4
visScaleMechanical = 5
visVertTop = 0
visVertMiddle = 1
visVertBottom = 2
visTxtBlkOpaque = 255
visTxtBlkLeftToRight = 0
visTxtBlkTopToBottom = 1
visDynFBDefault = 0
visDynFBUCon3Leg = 1
visDynFBUCon5Leg = 2
visGlueTypeDefault = 0
visGlueTypeTrigger = 1
visGlueTypeWalking = 2
visGlueTypeNoWalking = 4
visGlueTypeNoWalkingTo = 8
visWalkPrefBegNS = 1
visWalkPrefEndNS = 2
visLOFlagsVisDecides = 0
visLOFlagsPlacable = 1
visLOFlagsRoutable = 2
visLOFlagsDont = 4
visLOFlagsPNRGroup = 8
visLOIPlaceNormal = 0
visLOIPlaceXPermeable = 2
visLOIPlaceYPermeable = 4
visLOIRouteNormal = 0
visLOBPlaceNormal = 0
visLOBRouteNormal = 0
visLOBRouteRightAng = 1
visLOBRouteStraight = 2
visLOBRouteFlowNS = 5
visLOBRouteFlowWE = 6
visLOBRouteTreeNS = 7
visLOBRouteTreeWE = 8
visLOBRouteManual = 1024
visRulerFine = 32
visRulerNormal = 16
visRulerCoarse = 8
visRulerFixed = 0
visGridFine = 8
visGridNormal = 4
visGridCoarse = 2
visGridFixed = 0
visDocPreviewQualityDraft = 0
visDocPreviewQualityDetailed = 1
visDocPreviewScope1stPage = 0
visDocPreviewScopeNone = 1
visDocPreviewScopeAllPages = 2
visPPOSameAsPrinter = 0
visPPOPortrait = 1
visPPOLandscape = 2
visGrpSelModeGroupOnly = 0
visGrpSelModeGroup1st = 1
visGrpSelModeMembers1st = 2
visGrpDispModeNone = 0
visGrpDispModeBack = 1
visGrpDispModeFront = 2
visLORouteDefault = 0
visLORouteRightAngle = 1
visLORouteStraight = 2
visLORouteOrgChartNS = 3
visLORouteOrgChartWE = 4
visLORouteFlowchartNS = 5
visLORouteFlowchartWE = 6
visLORouteTreeNS = 7
visLORouteTreeWE = 8
visLORouteNetwork = 9
visLORouteOrgChartSN = 10
visLORouteOrgChartEW = 11
visLORouteFlowchartSN = 12
visLORouteFlowchartEW = 13
visLORouteTreeSN = 14
visLORouteTreeEW = 15
visLORouteCenterToCenter = 16
visLORouteSimpleNS = 17
visLORouteSimpleWE = 18
visLORouteSimpleSN = 19
visLORouteSimpleEW = 20
visLORouteSimpleHV = 21
visLORouteSimpleVH = 22
visLOJumpStyleDefault = 0
visLOJumpStyleArc = 1
visLOJumpStyleGap = 2
visLOJumpStyleSquare = 3
visLOJumpStyleTriangle = 4
visLOJumpStyle2Point = 5
visLOJumpStyle3Point = 6
visLOJumpStyle4Point = 7
visLOJumpStyle5Point = 8
visLOJumpStyle6Point = 9
visLOJumpDirXDefault = 0
visLOJumpDirXUp = 1
visLOJumpDirXDown = 2
visLOJumpDirYDefault = 0
visLOJumpDirYLeft = 1
visLOJumpDirYRight = 2
visLOFlipDefault = 0
visLOFlipX = 1
visLOFlipY = 2
visLOFlipRotate = 4
visLOFlipNone = 8
visLORouteExtDefault = 0
visLORouteExtStraight = 1
visLORouteExtNURBS = 2
visSLOFixedPlacement = 1
visSLOFixedPlow = 2
visSLOFixedPermeablePlow = 4
visSLOFixedConnPtsIgnore = 32
visSLOFixedConnPtsOnly = 64
visSLOFixedNoFoldToShape = 128
visSLOPlowDefault = 0
visSLOPlowNever = 1
visSLOPlowAlways = 2
visSLOConFixedRerouteFreely = 0
visSLOConFixedRerouteAsNeeded = 1
visSLOConFixedRerouteNever = 2
visSLOConFixedRerouteOnCrossover = 3
visSLOConFixedByAlgFrom = 4
visSLOConFixedByAlgTo = 5
visSLOConFixedByAlgFromTo = 6
visSLOJumpDefault = 0
visSLOJumpNever = 1
visSLOJumpAlways = 2
visSLOJumpOther = 3
visSLOJumpNeither = 4
visPLOPlaceDefault = 0
visPLOPlaceTopToBottom = 1
visPLOPlaceLeftToRight = 2
visPLOPlaceRadial = 3
visPLOPlaceBottomToTop = 4
visPLOPlaceRightToLeft = 5
visPLOPlaceCircular = 6
visPLOPlaceCompactDownRight = 7
visPLOPlaceCompactRightDown = 8
visPLOPlaceCompactRightUp = 9
visPLOPlaceCompactUpRight = 10
visPLOPlaceCompactUpLeft = 11
visPLOPlaceCompactLeftUp = 12
visPLOPlaceCompactLeftDown = 13
visPLOPlaceCompactDownLeft = 14
visPLOPlaceParentDefault = 15
visPLOPlaceHierarchyTopToBottomLeft = 16
visPLOPlaceHierarchyTopToBottomCenter = 17
visPLOPlaceHierarchyTopToBottomRight = 18
visPLOPlaceHierarchyBottomToTopLeft = 19
visPLOPlaceHierarchyBottomToTopCenter = 20
visPLOPlaceHierarchyBottomToTopRight = 21
visPLOPlaceHierarchyLeftToRightTop = 22
visPLOPlaceHierarchyLeftToRightMiddle = 23
visPLOPlaceHierarchyLeftToRightBottom = 24
visPLOPlaceHierarchyRightToLeftTop = 25
visPLOPlaceHierarchyRightToLeftMiddle = 26
visPLOPlaceHierarchyRightToLeftBottom = 27
visLOPlaceDefault = 0
visLOPlaceTopToBottom = 1
visLOPlaceLeftToRight = 2
visLOPlaceRadial = 3
visLOPlaceBottomToTop = 4
visLOPlaceRightToLeft = 5
visLOPlaceCircular = 6
visLOPlaceCompactDownRight = 7
visLOPlaceCompactRightDown = 8
visLOPlaceCompactRightUp = 9
visLOPlaceCompactUpRight = 10
visLOPlaceCompactUpLeft = 11
visLOPlaceCompactLeftUp = 12
visLOPlaceCompactLeftDown = 13
visLOPlaceCompactDownLeft = 14
visLOPlaceParentDefault = 15
visLOPlaceHierarchyTopToBottomLeft = 16
visLOPlaceHierarchyTopToBottomCenter = 17
visLOPlaceHierarchyTopToBottomRight = 18
visLOPlaceHierarchyBottomToTopLeft = 19
visLOPlaceHierarchyBottomToTopCenter = 20
visLOPlaceHierarchyBottomToTopRight = 21
visLOPlaceHierarchyLeftToRightTop = 22
visLOPlaceHierarchyLeftToRightMiddle = 23
visLOPlaceHierarchyLeftToRightBottom = 24
visLOPlaceHierarchyRightToLeftTop = 25
visLOPlaceHierarchyRightToLeftMiddle = 26
visLOPlaceHierarchyRightToLeftBottom = 27
visPLOPlaceDepthDefault = 0
visPLOPlaceDepthMedium = 1
visPLOPlaceDepthDeep = 2
visPLOPlaceDepthShallow = 3
visPLOPlowNone = 0
visPLOPlowAll = 1
visPLOJumpNone = 0
visPLOJumpHorizontal = 1
visPLOJumpVertical = 2
visPLOJumpLastRouted = 3
visPLOJumpDisplayOrder = 4
visPLOJumpReverseDisplayOrder = 5
visPLOJumpProhibitAll = 6
visPLOLineAdjustFromNotRelated = 0
visPLOLineAdjustFromAll = 1
visPLOLineAdjustFromNone = 2
visPLOLineAdjustFromRoutingDefault = 3
visPLOLineAdjustToDefault = 0
visPLOLineAdjustToAll = 1
visPLOLineAdjustToNone = 2
visPLOLineAdjustToRelated = 3
visBold = 1
visItalic = 2
visUnderLine = 4
visSmallCaps = 8
visComplexBold = 16
visComplexItalic = 32
visCaseNormal = 0
visCaseAllCaps = 1
visCaseInitialCaps = 2
visPosNormal = 0
visPosSuper = 1
visPosSub = 2
visHorzLeft = 0
visHorzCenter = 1
visHorzRight = 2
visHorzJustify = 3
visHorzForce = 4
visHorzDistribute = 4
visHorzJustifyLow = 5
visHorzJustifyMedium = 6
visHorzJustifyHigh = 7
visTabStopLeft = 0
visTabStopCenter = 1
visTabStopRight = 2
visTabStopDecimal = 3
visTabStopComma = 4
visCnnctTypeInward = 0
visCnnctTypeOutward = 1
visCnnctTypeInwardOutward = 2
visCtlProportional = 0
visCtlLocked = 1
visCtlOffsetMin = 2
visCtlOffsetMid = 3
visCtlOffsetMax = 4
visCtlProportionalHidden = 5
visCtlLockedHidden = 6
visCtlOffsetMinHidden = 7
visCtlOffsetMidHidden = 8
visCtlOffsetMaxHidden = 9
visNoLayerColor = 255
visLayerValid = 0
visLayerDeleted = 1
visLayerAvailable = 2
visPropTypeString = 0
visPropTypeListFix = 1
visPropTypeNumber = 2
visPropTypeBool = 3
visPropTypeListVar = 4
visPropTypeDate = 5
visPropTypeDuration = 6
visPropTypeCurrency = 7
visCalWestern = 0
visCalArabicHijri = 1
visCalHebrewLunar = 2
visCalChineseTaiwan = 3
visCalJapaneseEmperor = 4
visCalThaiBuddhism = 5
visCalThaiBuddhist = 5
visCalKoreanDanki = 6
visCalSakaEra = 7
visCalTranslitEnglish = 8
visCalTranslitFrench = 9
visPLOSplitNone = 0
visPLOSplitAllow = 1
visSLOSplitNone = 0
visSLOSplitAllow = 1
visSLOSplittableNone = 0
visSLOSplittableAllow = 1
visFSTPageDefault = 0
visFSTSimple = 1
visFSTOblique = 2
visUIVNormal = 0
visUIVHidden = 1
visLocFontIfArialOrSym = 0
visLocFontAlways = 1
visLocFontNever = 2
visSmartTagXJustifyLeft = 0
visSmartTagXJustifyCenter = 1
visSmartTagXJustifyRight = 2
visSmartTagYJustifyTop = 0
visSmartTagYJustifyMiddle = 1
visSmartTagYJustifyBottom = 2
visSmartTagDispModeMouseOver = 0
visSmartTagDispModeShapeSelected = 1
visSmartTagDispModeAlways = 2
visTFOKStandard = 0
visTFOKHorizontalInVertical = 1
visPPFlagsRTLText = 1
VisCellVals = c_int # enum
LPVISIOACCELITEM = POINTER(IVAccelItem)
LPVISIOSHAPE = POINTER(IVShape)
class Windows(CoClass):
    u'The windows open in a Visio Application or Window. The first Window in a Windows collection is item 1.'
    _reg_clsid_ = GUID('{000D0A0B-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Windows._com_interfaces_ = [IVWindows]
Windows._outgoing_interfaces_ = [EWindows]

LPVISIOACCELITEMS = POINTER(IVAccelItems)
IVWindow._methods_ = [
    COMMETHOD([dispid(0), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeWindow (21).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(3)], HRESULT, 'Activate'),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Type',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(6), helpstring(u'Superseded by variant=Window.Page.'), 'hidden', 'propget'], HRESULT, 'PageAsObj',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(699), helpstring(u'Takes locale specific page name. Superseded by Window.Page=variant.'), 'hidden', 'propput'], HRESULT, 'PageFromName',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Zoom',
              ( ['retval', 'out'], POINTER(c_double), 'lpr8Ret' )),
    COMMETHOD([dispid(7), 'propput'], HRESULT, 'Zoom',
              ( ['in'], c_double, 'lpr8Ret' )),
    COMMETHOD([dispid(8)], HRESULT, 'Close'),
    COMMETHOD([dispid(9)], HRESULT, 'SelectAll'),
    COMMETHOD([dispid(10)], HRESULT, 'DeselectAll'),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Selection',
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(12)], HRESULT, 'Select',
              ( ['in'], POINTER(IVShape), 'SheetObject' ),
              ( ['in'], c_short, 'SelectAction' )),
    COMMETHOD([dispid(13), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(14), 'hidden'], HRESULT, 'Cut'),
    COMMETHOD([dispid(15), 'hidden'], HRESULT, 'Copy'),
    COMMETHOD([dispid(16), 'hidden'], HRESULT, 'Paste'),
    COMMETHOD([dispid(17), 'hidden'], HRESULT, 'Delete'),
    COMMETHOD([dispid(18), 'hidden'], HRESULT, 'Duplicate'),
    COMMETHOD([dispid(19), 'hidden'], HRESULT, 'Group'),
    COMMETHOD([dispid(20), 'hidden'], HRESULT, 'Union'),
    COMMETHOD([dispid(21), 'hidden'], HRESULT, 'Combine'),
    COMMETHOD([dispid(22), 'hidden'], HRESULT, 'Fragment'),
    COMMETHOD([dispid(23), 'hidden'], HRESULT, 'AddToGroup'),
    COMMETHOD([dispid(24), 'hidden'], HRESULT, 'RemoveFromGroup'),
    COMMETHOD([dispid(25), 'propget'], HRESULT, 'SubType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(26), 'hidden'], HRESULT, 'Intersect'),
    COMMETHOD([dispid(27), 'hidden'], HRESULT, 'Subtract'),
    COMMETHOD([dispid(28), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(29), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(30), 'hidden', 'propget'], HRESULT, 'WindowHandle',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(31), 'propget'], HRESULT, 'WindowHandle32',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(32), 'hidden'], HRESULT, 'Trim'),
    COMMETHOD([dispid(33), 'hidden'], HRESULT, 'Join'),
    COMMETHOD([dispid(34), 'propget'], HRESULT, 'ShowRulers',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(34), 'propput'], HRESULT, 'ShowRulers',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(35), 'propget'], HRESULT, 'ShowGrid',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(35), 'propput'], HRESULT, 'ShowGrid',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(36), 'propget'], HRESULT, 'ShowGuides',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(36), 'propput'], HRESULT, 'ShowGuides',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(37), 'propget'], HRESULT, 'ShowConnectPoints',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(37), 'propput'], HRESULT, 'ShowConnectPoints',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(38), 'propget'], HRESULT, 'ShowPageBreaks',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(38), 'propput'], HRESULT, 'ShowPageBreaks',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(39), helpstring(u'Takes locale independent page name, locale specific page name or page object. Returns page object.'), 'propget'], HRESULT, 'Page',
              ( ['retval', 'out'], POINTER(VARIANT), 'lpobjRet' )),
    COMMETHOD([dispid(39), helpstring(u'Takes locale independent page name, locale specific page name or page object. Returns page object.'), 'propput'], HRESULT, 'Page',
              ( ['in'], VARIANT, 'lpobjRet' )),
    COMMETHOD([dispid(40)], HRESULT, 'DockedStencils',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
    COMMETHOD([dispid(41), 'propget'], HRESULT, 'Master',
              ( ['retval', 'out'], POINTER(VARIANT), 'lpobjRet' )),
    COMMETHOD([dispid(42), helpstring(u'Show or hide the scroll bars in a drawing window.'), 'propget'], HRESULT, 'ShowScrollBars',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(42), helpstring(u'Show or hide the scroll bars in a drawing window.'), 'propput'], HRESULT, 'ShowScrollBars',
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(43), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(43), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(44), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrCaption' )),
    COMMETHOD([dispid(44), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pbstrCaption' )),
    COMMETHOD([dispid(45), 'propget'], HRESULT, 'Windows',
              ( ['retval', 'out'], POINTER(POINTER(IVWindows)), 'ppWins' )),
    COMMETHOD([dispid(46)], HRESULT, 'Scroll',
              ( ['in'], c_int, 'nxFlags' ),
              ( ['in'], c_int, 'nyFlags' )),
    COMMETHOD([dispid(47)], HRESULT, 'ScrollViewTo',
              ( ['in'], c_double, 'x' ),
              ( ['in'], c_double, 'y' )),
    COMMETHOD([dispid(48)], HRESULT, 'GetViewRect',
              ( ['out'], POINTER(c_double), 'pdLeft' ),
              ( ['out'], POINTER(c_double), 'pdTop' ),
              ( ['out'], POINTER(c_double), 'pdWidth' ),
              ( ['out'], POINTER(c_double), 'pdHeight' )),
    COMMETHOD([dispid(49)], HRESULT, 'SetViewRect',
              ( ['in'], c_double, 'dLeft' ),
              ( ['in'], c_double, 'dTop' ),
              ( ['in'], c_double, 'dWidth' ),
              ( ['in'], c_double, 'dHeight' )),
    COMMETHOD([dispid(50)], HRESULT, 'GetWindowRect',
              ( ['out'], POINTER(c_int), 'pnLeft' ),
              ( ['out'], POINTER(c_int), 'pnTop' ),
              ( ['out'], POINTER(c_int), 'pnWidth' ),
              ( ['out'], POINTER(c_int), 'pnHeight' )),
    COMMETHOD([dispid(51)], HRESULT, 'SetWindowRect',
              ( ['in'], c_int, 'nLeft' ),
              ( ['in'], c_int, 'nTop' ),
              ( ['in'], c_int, 'nWidth' ),
              ( ['in'], c_int, 'nHeight' )),
    COMMETHOD([dispid(52), 'propget'], HRESULT, 'WindowState',
              ( ['retval', 'out'], POINTER(c_int), 'pnState' )),
    COMMETHOD([dispid(52), 'propput'], HRESULT, 'WindowState',
              ( ['in'], c_int, 'pnState' )),
    COMMETHOD([dispid(53), 'propget'], HRESULT, 'ViewFit',
              ( ['retval', 'out'], POINTER(c_int), 'pnFit' )),
    COMMETHOD([dispid(53), 'propput'], HRESULT, 'ViewFit',
              ( ['in'], c_int, 'pnFit' )),
    COMMETHOD([dispid(54), 'propget'], HRESULT, 'IsEditingText',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEditingText' )),
    COMMETHOD([dispid(55), 'propget'], HRESULT, 'IsEditingOLE',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEditingOLE' )),
    COMMETHOD([dispid(56), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVWindows)), 'ppParent' )),
    COMMETHOD([dispid(57), 'propget'], HRESULT, 'MasterShortcut',
              ( ['retval', 'out'], POINTER(POINTER(IVMasterShortcut)), 'lpdispRet' )),
    COMMETHOD([dispid(58), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'pnID' )),
    COMMETHOD([dispid(59), 'propget'], HRESULT, 'ParentWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'ppParentWindow' )),
    COMMETHOD([dispid(1610743881), 'propget'], HRESULT, 'MergeID',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743882), 'propget'], HRESULT, 'MergeClass',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743883), 'propget'], HRESULT, 'MergePosition',
              ( ['retval', 'out'], POINTER(c_int), 'pnRet' )),
    COMMETHOD([dispid(1610743884), helpstring(u'Enables or disables the Edit command for stencil windows. Set to False to prevent unintentional stencil edits.'), 'propget'], HRESULT, 'AllowEditing',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbAllowEditing' )),
    COMMETHOD([dispid(1610743884), helpstring(u'Enables or disables the Edit command for stencil windows. Set to False to prevent unintentional stencil edits.'), 'propput'], HRESULT, 'AllowEditing',
              ( ['in'], VARIANT_BOOL, 'pbAllowEditing' )),
    COMMETHOD([dispid(1610743886), helpstring(u'Get or set the width of the page tab control in a drawing window. Value is a percentage of the drawing window width, from 0 to 100. Assigning -1 means use default.'), 'hidden', 'propget'], HRESULT, 'PageTabWidth',
              ( ['retval', 'out'], POINTER(c_double), 'pdWidth' )),
    COMMETHOD([dispid(1610743886), helpstring(u'Get or set the width of the page tab control in a drawing window. Value is a percentage of the drawing window width, from 0 to 100. Assigning -1 means use default.'), 'hidden', 'propput'], HRESULT, 'PageTabWidth',
              ( ['in'], c_double, 'pdWidth' )),
    COMMETHOD([dispid(1610743888), helpstring(u'Show or hide the page tab control in a drawing window.'), 'propget'], HRESULT, 'ShowPageTabs',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbShow' )),
    COMMETHOD([dispid(1610743888), helpstring(u'Show or hide the page tab control in a drawing window.'), 'propput'], HRESULT, 'ShowPageTabs',
              ( ['in'], VARIANT_BOOL, 'pbShow' )),
    COMMETHOD([dispid(1610743881), 'propput'], HRESULT, 'MergeID',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743882), 'propput'], HRESULT, 'MergeClass',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743883), 'propput'], HRESULT, 'MergePosition',
              ( ['in'], c_int, 'pnRet' )),
    COMMETHOD([dispid(1610743893), 'propget'], HRESULT, 'InPlace',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbInPlace' )),
    COMMETHOD([dispid(1610743894), helpstring(u'MergeCaption is used for the tab when the window is merged with other windows.'), 'propget'], HRESULT, 'MergeCaption',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrRet' )),
    COMMETHOD([dispid(1610743894), helpstring(u'MergeCaption is used for the tab when the window is merged with other windows.'), 'propput'], HRESULT, 'MergeCaption',
              ( ['in'], BSTR, 'pbstrRet' )),
    COMMETHOD([dispid(1610743896), 'hidden', 'propget'], HRESULT, 'Icon',
              ( ['retval', 'out'], POINTER(POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp)), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743896), 'hidden', 'propputref'], HRESULT, 'Icon',
              ( ['in'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IPictureDisp), 'ppPictureDisp' )),
    COMMETHOD([dispid(1610743898), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpobjRet' )),
    COMMETHOD([dispid(1610743899), 'propget'], HRESULT, 'SelectedCell',
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpobjRet' )),
    COMMETHOD([dispid(1610743900)], HRESULT, 'NewWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpobjRet' )),
    COMMETHOD([dispid(1610743901), 'propget'], HRESULT, 'BackgroundColor',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743901), 'propput'], HRESULT, 'BackgroundColor',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743903), 'propget'], HRESULT, 'BackgroundColorGradient',
              ( ['retval', 'out'], POINTER(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR), 'pColor' )),
    COMMETHOD([dispid(1610743903), 'propput'], HRESULT, 'BackgroundColorGradient',
              ( ['in'], comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_COLOR, 'pColor' )),
    COMMETHOD([dispid(1610743905), 'propget'], HRESULT, 'ShowPageOutline',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Show' )),
    COMMETHOD([dispid(1610743905), 'propput'], HRESULT, 'ShowPageOutline',
              ( ['in'], VARIANT_BOOL, 'Show' )),
    COMMETHOD([dispid(1610743907), 'propget'], HRESULT, 'ScrollLock',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Lock' )),
    COMMETHOD([dispid(1610743907), 'propput'], HRESULT, 'ScrollLock',
              ( ['in'], VARIANT_BOOL, 'Lock' )),
    COMMETHOD([dispid(1610743909), 'propget'], HRESULT, 'ZoomLock',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'Lock' )),
    COMMETHOD([dispid(1610743909), 'propput'], HRESULT, 'ZoomLock',
              ( ['in'], VARIANT_BOOL, 'Lock' )),
    COMMETHOD([dispid(1610743911), 'propget'], HRESULT, 'ZoomBehavior',
              ( ['retval', 'out'], POINTER(VisZoomBehavior), 'pnZoomBehavior' )),
    COMMETHOD([dispid(1610743911), 'propput'], HRESULT, 'ZoomBehavior',
              ( ['in'], VisZoomBehavior, 'pnZoomBehavior' )),
    COMMETHOD([dispid(1610743913), 'propget'], HRESULT, 'SelectedMasters',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(POINTER(IDispatch))), 'SelectedArray' )),
    COMMETHOD([dispid(1610743914), 'propget'], HRESULT, 'SelectedText',
              ( ['retval', 'out'], POINTER(POINTER(IVCharacters)), 'ppObjReturn' )),
    COMMETHOD([dispid(1610743914), 'propput'], HRESULT, 'SelectedText',
              ( ['in'], POINTER(IVCharacters), 'ppObjReturn' )),
    COMMETHOD([dispid(1610743916), 'propget'], HRESULT, 'ReviewerMarkupVisible',
              ( ['in', 'optional'], c_int, 'ReviewerID', -1 ),
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'viewStatus' )),
    COMMETHOD([dispid(1610743916), 'propput'], HRESULT, 'ReviewerMarkupVisible',
              ( ['in', 'optional'], c_int, 'ReviewerID', -1 ),
              ( ['in'], VARIANT_BOOL, 'viewStatus' )),
    COMMETHOD([dispid(11), 'propput'], HRESULT, 'Selection',
              ( ['in'], POINTER(IVSelection), 'lpdispRet' )),
    COMMETHOD([dispid(1610743919), 'propget'], HRESULT, 'SelectedDataRecordset',
              ( ['retval', 'out'], POINTER(POINTER(IVDataRecordset)), 'DataRecordset' )),
    COMMETHOD([dispid(1610743919), 'propput'], HRESULT, 'SelectedDataRecordset',
              ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    COMMETHOD([dispid(1610743921), 'propget'], HRESULT, 'SelectedDataRowID',
              ( ['retval', 'out'], POINTER(c_int), 'DataRowID' )),
    COMMETHOD([dispid(1610743921), 'propput'], HRESULT, 'SelectedDataRowID',
              ( ['in'], c_int, 'DataRowID' )),
    COMMETHOD([dispid(1610743923), 'propget'], HRESULT, 'SelectionForDragCopy',
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'pSel' )),
    COMMETHOD([dispid(1610743924), 'propput'], HRESULT, 'SelectedValidationIssue',
              ( ['in'], POINTER(IVValidationIssue), 'pIssue' )),
    COMMETHOD([dispid(1610743924), 'propget'], HRESULT, 'SelectedValidationIssue',
              ( ['retval', 'out'], POINTER(POINTER(IVValidationIssue)), 'pIssue' )),
    COMMETHOD([dispid(1610743926)], HRESULT, 'CenterViewOnShape',
              ( ['in'], POINTER(IVShape), 'SheetObject' ),
              ( ['in'], VisCenterViewFlags, 'Flags' )),
]
################################################################
## code template for IVWindow implementation
##class IVWindow_Impl(object):
##    def Union(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def RemoveFromGroup(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pIssue
##    def _set(self, pIssue):
##        '-no docstring-'
##    SelectedValidationIssue = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pnFit
##    def _set(self, pnFit):
##        '-no docstring-'
##    ViewFit = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeWindow (21).'
##        #return lpi2Ret
##
##    @property
##    def PageAsObj(self):
##        u'Superseded by variant=Window.Page.'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowRulers = property(_get, _set, doc = _set.__doc__)
##
##    def SetViewRect(self, dLeft, dTop, dWidth, dHeight):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowPageBreaks = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def InPlace(self):
##        '-no docstring-'
##        #return pbInPlace
##
##    def DockedStencils(self):
##        '-no docstring-'
##        #return NameArray
##
##    def _get(self):
##        '-no docstring-'
##        #return pnZoomBehavior
##    def _set(self, pnZoomBehavior):
##        '-no docstring-'
##    ZoomBehavior = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    MergeClass = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ParentWindow(self):
##        '-no docstring-'
##        #return ppParentWindow
##
##    def Select(self, SheetObject, SelectAction):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Lock
##    def _set(self, Lock):
##        '-no docstring-'
##    ScrollLock = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def SelectedMasters(self):
##        '-no docstring-'
##        #return SelectedArray
##
##    @property
##    def Master(self):
##        '-no docstring-'
##        #return lpobjRet
##
##    def Intersect(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Type(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def WindowHandle32(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        u'Show or hide the scroll bars in a drawing window.'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        u'Show or hide the scroll bars in a drawing window.'
##    ShowScrollBars = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SubType(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowGuides = property(_get, _set, doc = _set.__doc__)
##
##    def Join(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpr8Ret
##    def _set(self, lpr8Ret):
##        '-no docstring-'
##    Zoom = property(_get, _set, doc = _set.__doc__)
##
##    def NewWindow(self):
##        '-no docstring-'
##        #return lpobjRet
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    BackgroundColor = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    def AddToGroup(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpdispRet
##    def _set(self, lpdispRet):
##        '-no docstring-'
##    Selection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppParent
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpobjRet
##
##    def _get(self):
##        u'Get or set the width of the page tab control in a drawing window. Value is a percentage of the drawing window width, from 0 to 100. Assigning -1 means use default.'
##        #return pdWidth
##    def _set(self, pdWidth):
##        u'Get or set the width of the page tab control in a drawing window. Value is a percentage of the drawing window width, from 0 to 100. Assigning -1 means use default.'
##    PageTabWidth = property(_get, _set, doc = _set.__doc__)
##
##    def DeselectAll(self):
##        '-no docstring-'
##        #return 
##
##    def Cut(self):
##        '-no docstring-'
##        #return 
##
##    def Group(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def MasterShortcut(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self, ReviewerID):
##        '-no docstring-'
##        #return viewStatus
##    def _set(self, ReviewerID, viewStatus):
##        '-no docstring-'
##    ReviewerMarkupVisible = property(_get, _set, doc = _set.__doc__)
##
##    def Duplicate(self):
##        '-no docstring-'
##        #return 
##
##    def Combine(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        '-no docstring-'
##    MergeID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'Enables or disables the Edit command for stencil windows. Set to False to prevent unintentional stencil edits.'
##        #return pbAllowEditing
##    def _set(self, pbAllowEditing):
##        u'Enables or disables the Edit command for stencil windows. Set to False to prevent unintentional stencil edits.'
##    AllowEditing = property(_get, _set, doc = _set.__doc__)
##
##    def SelectAll(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def IsEditingText(self):
##        '-no docstring-'
##        #return pbEditingText
##
##    @property
##    def IsEditingOLE(self):
##        '-no docstring-'
##        #return pbEditingOLE
##
##    def GetWindowRect(self):
##        '-no docstring-'
##        #return pnLeft, pnTop, pnWidth, pnHeight
##
##    def ScrollViewTo(self, x, y):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def _get(self):
##        u'Takes locale independent page name, locale specific page name or page object. Returns page object.'
##        #return lpobjRet
##    def _set(self, lpobjRet):
##        u'Takes locale independent page name, locale specific page name or page object. Returns page object.'
##    Page = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowConnectPoints = property(_get, _set, doc = _set.__doc__)
##
##    def Subtract(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return DataRecordset
##    def _set(self, DataRecordset):
##        '-no docstring-'
##    SelectedDataRecordset = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pnRet
##    def _set(self, pnRet):
##        '-no docstring-'
##    MergePosition = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SelectedCell(self):
##        '-no docstring-'
##        #return lpobjRet
##
##    def _set(self, rhs):
##        u'Takes locale specific page name. Superseded by Window.Page=variant.'
##    PageFromName = property(fset = _set, doc = _set.__doc__)
##
##    def SetWindowRect(self, nLeft, nTop, nWidth, nHeight):
##        '-no docstring-'
##        #return 
##
##    def Scroll(self, nxFlags, nyFlags):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pColor
##    def _set(self, pColor):
##        '-no docstring-'
##    BackgroundColorGradient = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return DataRowID
##    def _set(self, DataRowID):
##        '-no docstring-'
##    SelectedDataRowID = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return Lock
##    def _set(self, Lock):
##        '-no docstring-'
##    ZoomLock = property(_get, _set, doc = _set.__doc__)
##
##    def Close(self):
##        '-no docstring-'
##        #return 
##
##    def Icon(self, ppPictureDisp):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Show
##    def _set(self, Show):
##        '-no docstring-'
##    ShowPageOutline = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        u'MergeCaption is used for the tab when the window is merged with other windows.'
##        #return pbstrRet
##    def _set(self, pbstrRet):
##        u'MergeCaption is used for the tab when the window is merged with other windows.'
##    MergeCaption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def WindowHandle(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return pnState
##    def _set(self, pnState):
##        '-no docstring-'
##    WindowState = property(_get, _set, doc = _set.__doc__)
##
##    def CenterViewOnShape(self, SheetObject, Flags):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        u'Show or hide the page tab control in a drawing window.'
##        #return pbShow
##    def _set(self, pbShow):
##        u'Show or hide the page tab control in a drawing window.'
##    ShowPageTabs = property(_get, _set, doc = _set.__doc__)
##
##    def Fragment(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, lpi2Ret):
##        '-no docstring-'
##    ShowGrid = property(_get, _set, doc = _set.__doc__)
##
##    def Copy(self):
##        '-no docstring-'
##        #return 
##
##    def Paste(self):
##        '-no docstring-'
##        #return 
##
##    def GetViewRect(self):
##        '-no docstring-'
##        #return pdLeft, pdTop, pdWidth, pdHeight
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return ppWins
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstrCaption
##    def _set(self, pbstrCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return pnID
##
##    def Trim(self):
##        '-no docstring-'
##        #return 
##
##    def Activate(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return ppObjReturn
##    def _set(self, ppObjReturn):
##        '-no docstring-'
##    SelectedText = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SelectionForDragCopy(self):
##        '-no docstring-'
##        #return pSel
##

LPVISIOSHAPES = POINTER(IVShapes)
IVAddons._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeAddons (32).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in an Addons collection is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVAddon)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4)], HRESULT, 'Add',
              ( ['in'], BSTR, 'FileName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVAddon)), 'lpdispRet' )),
    COMMETHOD([dispid(5)], HRESULT, 'GetNames',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(1610743815), helpstring(u'Like Item() but names treated locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVAddon)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743816)], HRESULT, 'GetNamesU',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'NameArray' )),
]
################################################################
## code template for IVAddons implementation
##class IVAddons_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetNamesU(self):
##        '-no docstring-'
##        #return NameArray
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in an Addons collection is item 1.'
##        #return lpdispRet
##
##    @property
##    def ItemU(self, NameOrIndex):
##        u'Like Item() but names treated locale independent.'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self, FileName):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetNames(self):
##        '-no docstring-'
##        #return NameArray
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeAddons (32).'
##        #return lpi2Ret
##

IVWindows._methods_ = [
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeWindows (22).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Windows collection is item 1.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'hidden'], HRESULT, 'VoidArrange'),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(7), 'hidden'], HRESULT, 'Add_WithoutMergeArgs',
              ( ['in', 'optional'], VARIANT, 'bstrCaption' ),
              ( ['in', 'optional'], VARIANT, 'nFlags' ),
              ( ['in', 'optional'], VARIANT, 'nType' ),
              ( ['in', 'optional'], VARIANT, 'nLeft' ),
              ( ['in', 'optional'], VARIANT, 'nTop' ),
              ( ['in', 'optional'], VARIANT, 'nWidth' ),
              ( ['in', 'optional'], VARIANT, 'nHeight' ),
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(8)], HRESULT, 'Arrange',
              ( ['in', 'optional'], VARIANT, 'nArrangeFlags' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'nID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'ppWin' )),
    COMMETHOD([dispid(1610743819)], HRESULT, 'Add',
              ( ['in', 'optional'], VARIANT, 'bstrCaption' ),
              ( ['in', 'optional'], VARIANT, 'nFlags' ),
              ( ['in', 'optional'], VARIANT, 'nType' ),
              ( ['in', 'optional'], VARIANT, 'nLeft' ),
              ( ['in', 'optional'], VARIANT, 'nTop' ),
              ( ['in', 'optional'], VARIANT, 'nWidth' ),
              ( ['in', 'optional'], VARIANT, 'nHeight' ),
              ( ['in', 'optional'], VARIANT, 'bstrMergeID' ),
              ( ['in', 'optional'], VARIANT, 'bstrMergeClass' ),
              ( ['in', 'optional'], VARIANT, 'nMergePosition' ),
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ItemEx',
              ( ['in'], VARIANT, 'CaptionOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'ppWin' )),
]
################################################################
## code template for IVWindows implementation
##class IVWindows_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Arrange(self, nArrangeFlags):
##        '-no docstring-'
##        #return 
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, Index):
##        u'The first item in a Windows collection is item 1.'
##        #return lpdispRet
##
##    def VoidArrange(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ItemFromID(self, nID):
##        '-no docstring-'
##        #return ppWin
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self, bstrCaption, nFlags, nType, nLeft, nTop, nWidth, nHeight, bstrMergeID, bstrMergeClass, nMergePosition):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Add_WithoutMergeArgs(self, bstrCaption, nFlags, nType, nLeft, nTop, nWidth, nHeight):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ItemEx(self, CaptionOrIndex):
##        '-no docstring-'
##        #return ppWin
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeWindows (22).'
##        #return lpi2Ret
##

tagVisFontAttributes = VisFontAttributes
LPVISIOACCELTABLES = POINTER(IVAccelTables)
LPVISIODATACONNECTION = POINTER(IVDataConnection)
IVMasterShortcuts._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), helpstring(u'Returns visObjTypeMasterShortcuts (46).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a MasterShortcuts collection is item 1. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMasterShortcut)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), helpstring(u'Returns locale specific names of mastershortcuts.')], HRESULT, 'GetNames',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeSpecificNameArray' )),
    COMMETHOD([dispid(7)], HRESULT, 'Drop',
              ( ['in'], POINTER(IUnknown), 'ObjectToDrop' ),
              ( ['in'], c_short, 'xPos' ),
              ( ['in'], c_short, 'yPos' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMasterShortcut)), 'lpdispRet' )),
    COMMETHOD([dispid(8), helpstring(u'Like Item() but names treated locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMasterShortcut)), 'lpdispRet' )),
    COMMETHOD([dispid(9), helpstring(u'Returns locale independent names of mastershortcuts.')], HRESULT, 'GetNamesU',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeIndependentNameArray' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
    COMMETHOD([dispid(1610743819), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'nID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMasterShortcut)), 'ppMasterShortcut' )),
    COMMETHOD([dispid(1610743820)], HRESULT, 'Paste',
              ( ['in', 'optional'], VARIANT, 'Flags' )),
]
################################################################
## code template for IVMasterShortcuts implementation
##class IVMasterShortcuts_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def GetNamesU(self):
##        u'Returns locale independent names of mastershortcuts.'
##        #return localeIndependentNameArray
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Paste(self, Flags):
##        '-no docstring-'
##        #return 
##
##    def Drop(self, ObjectToDrop, xPos, yPos):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ItemU(self, NameOrIndex):
##        u'Like Item() but names treated locale independent.'
##        #return lpdispRet
##
##    @property
##    def ItemFromID(self, nID):
##        '-no docstring-'
##        #return ppMasterShortcut
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in a MasterShortcuts collection is item 1. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetNames(self):
##        u'Returns locale specific names of mastershortcuts.'
##        #return localeSpecificNameArray
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeMasterShortcuts (46).'
##        #return lpi2Ret
##

LPVISIOUIOBJECT = POINTER(IVUIObject)
LPVISIOWINDOW = POINTER(IVWindow)
LPVISIOGRAPHICITEMS = POINTER(IVGraphicItems)
IVValidation._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'Document' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'LastValidatedDate',
              ( ['retval', 'out'], POINTER(c_double), 'LastValidatedDate' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'ShowIgnoredIssues',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'IsShown' )),
    COMMETHOD([dispid(1610743813), 'propput'], HRESULT, 'ShowIgnoredIssues',
              ( ['in'], VARIANT_BOOL, 'IsShown' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'RuleSets',
              ( ['retval', 'out'], POINTER(POINTER(IVValidationRuleSets)), 'RuleSets' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Issues',
              ( ['retval', 'out'], POINTER(POINTER(IVValidationIssues)), 'Issues' )),
    COMMETHOD([dispid(1610743817)], HRESULT, 'Validate',
              ( ['in', 'optional'], POINTER(IVValidationRuleSet), 'RuleSet' ),
              ( ['in', 'optional'], VisValidationFlags, 'Flags' )),
]
################################################################
## code template for IVValidation implementation
##class IVValidation_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def LastValidatedDate(self):
##        '-no docstring-'
##        #return LastValidatedDate
##
##    @property
##    def RuleSets(self):
##        '-no docstring-'
##        #return RuleSets
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    @property
##    def Issues(self):
##        '-no docstring-'
##        #return Issues
##
##    def Validate(self, RuleSet, Flags):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return Document
##
##    def _get(self):
##        '-no docstring-'
##        #return IsShown
##    def _set(self, IsShown):
##        '-no docstring-'
##    ShowIgnoredIssues = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

LPVISIOWINDOWS = POINTER(IVWindows)

# values for enumeration 'VisDocCleanTargets'
visDocCleanTargFPages = 1
visDocCleanTargBPages = 2
visDocCleanTargMasters = 4
visDocCleanTargStyles = 8
visDocCleanTargDoc = 16
visDocCleanTargRPages = 32
visDocCleanPageSheet = 256
visDocCleanTargAll = 255
VisDocCleanTargets = c_int # enum
tagVisDocCleanTargets = VisDocCleanTargets
ESection._disp_methods_ = [
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
]
IVMenuSets._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVMenuSet' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a MenuSets collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMenuSet)), 'lplpMenuSet' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ItemAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMenuSet)), 'lplpMenuSet' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuSet)), 'lplpMenuSet' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'AddAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVMenuSet)), 'lplpMenuSet' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lplpVUIObject' )),
]
################################################################
## code template for IVMenuSets implementation
##class IVMenuSets_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVMenuSet
##
##    @property
##    def ItemAtID(self, lID):
##        '-no docstring-'
##        #return lplpMenuSet
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVUIObject
##
##    def AddAtID(self, lID):
##        '-no docstring-'
##        #return lplpMenuSet
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a MenuSets collection is item 0.'
##        #return lplpMenuSet
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpMenuSet
##

LPVISIOENUMVMENUSET = POINTER(IEnumVMenuSet)
LPVISIOLAYERS = POINTER(IVLayers)
LPVISIOLAYER = POINTER(IVLayer)

# values for enumeration 'VisFilterActions'
visFilterMouseMoveNoDrag = 0
visFilterMouseMoveDragBegin = 1
visFilterMouseMoveDragEnter = 2
visFilterMouseMoveDragOver = 3
visFilterMouseMoveDragLeave = 4
visFilterMouseMoveDragDrop = 5
VisFilterActions = c_int # enum
LPVISIOFONT = POINTER(IVFont)
LPVISIOENUMVTOOLBAR = POINTER(IEnumVToolbar)
LPVISIOFONTS = POINTER(IVFonts)
LPVISIOENUMVTOOLBARSET = POINTER(IEnumVToolbarSet)
IVLayers._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Page',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Master',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Layers collection is item 1. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVLayer)), 'lpdispRet' )),
    COMMETHOD([dispid(6)], HRESULT, 'Add',
              ( ['in'], BSTR, 'LayerName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVLayer)), 'lpdispRet' )),
    COMMETHOD([dispid(7), helpstring(u'Returns visObjTypeLayers (26).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(11), helpstring(u'Like Item() but names treated locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVLayer)), 'lpdispRet' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVLayers implementation
##class IVLayers_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in a Layers collection is item 1. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ItemU(self, NameOrIndex):
##        u'Like Item() but names treated locale independent.'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self, LayerName):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Master(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Page(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeLayers (26).'
##        #return lpi2Ret
##

LPVISIOGRAPHICITEM = POINTER(IVGraphicItem)
class IEnumVStatusBarItem(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{000D0273-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'restricted']
    def __iter__(self):
        return self

    def next(self):
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise StopIteration

    def __getitem__(self, index):
        self.Reset()
        self.Skip(index)
        item, fetched = self.Next(1)
        if fetched:
            return item
        raise IndexError(index)

LPVISIOENUMVSTATUSBARITEM = POINTER(IEnumVStatusBarItem)
EDataRecordsets._disp_methods_ = [
    DISPMETHOD([dispid(32800)], None, 'DataRecordsetAdded',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(16416)], None, 'BeforeDataRecordsetDelete',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(8224)], None, 'DataRecordsetChanged',
               ( ['in'], POINTER(IVDataRecordsetChangedEvent), 'DataRecordsetChanged' )),
]
LPVISIOENUMVACCELITEM = POINTER(IEnumVAccelItem)
IVStatusBarItems._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVStatusBar' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a StatusBarItems collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBarItem)), 'lplpStatusBar' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBarItem)), 'lplpStatusBarItem' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'AddAt',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBarItem)), 'lplpStatusBarItem' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBar)), 'lplpVStatusBar' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ParentItem',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBarItem)), 'lplpVStatusBarItem' )),
]
################################################################
## code template for IVStatusBarItems implementation
##class IVStatusBarItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVStatusBar
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVStatusBar
##
##    def AddAt(self, lIndex):
##        '-no docstring-'
##        #return lplpStatusBarItem
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a StatusBarItems collection is item 0.'
##        #return lplpStatusBar
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpStatusBarItem
##
##    @property
##    def ParentItem(self):
##        '-no docstring-'
##        #return lplpVStatusBarItem
##

LPVISIOADDONS = POINTER(IVAddons)

# values for enumeration 'VisContainerAutoResize'
visContainerAutoResizeNone = 0
visContainerAutoResizeExpand = 1
visContainerAutoResizeExpandContract = 2
VisContainerAutoResize = c_int # enum
LPVISIOCURVE = POINTER(IVCurve)
IVGlobal._methods_ = [
    COMMETHOD([dispid(0), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'propget'], HRESULT, 'ActiveDocument',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'ActivePage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'ActiveWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Documents',
              ( ['retval', 'out'], POINTER(POINTER(IVDocuments)), 'lpdispRet' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Windows',
              ( ['retval', 'out'], POINTER(POINTER(IVWindows)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Addons',
              ( ['retval', 'out'], POINTER(POINTER(IVAddons)), 'lpdispRet' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'Vbe',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
]
################################################################
## code template for IVGlobal implementation
##class IVGlobal_Impl(object):
##    @property
##    def ActivePage(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Documents(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Vbe(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Windows(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def ActiveDocument(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Addons(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ActiveWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##

LPVISIOEVENTS = POINTER(IVEventList)
EPage._disp_methods_ = [
    DISPMETHOD([dispid(8208)], None, 'PageChanged',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(16400)], None, 'BeforePageDelete',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(8256)], None, 'ShapeChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(902)], None, 'SelectionAdded',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(16448)], None, 'BeforeShapeDelete',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(33024)], None, 'ConnectionsAdded',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(16640)], None, 'ConnectionsDeleted',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(500), helpstring(u'Cancel delete of page? T:Yes F:No')], None, 'QueryCancelPageDelete',
               ( ['in'], POINTER(IVPage), 'Page' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(501), helpstring(u'Delete page operation was canceled.')], None, 'PageDeleteCanceled',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(805)], None, 'ShapeLinkAdded',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(806)], None, 'ShapeLinkDeleted',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(502)], None, 'ContainerRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(503)], None, 'ContainerRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(504)], None, 'CalloutRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(505)], None, 'CalloutRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(911)], None, 'QueryCancelReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(912)], None, 'ReplaceShapesCanceled',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(913)], None, 'BeforeReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(914)], None, 'AfterReplaceShapes',
               ( ['in'], POINTER(IVSelection), 'sel' )),
]
LPVISIOMENUITEMS = POINTER(IVMenuItems)
EDataRecordset._disp_methods_ = [
    DISPMETHOD([dispid(8224)], None, 'DataRecordsetChanged',
               ( ['in'], POINTER(IVDataRecordsetChangedEvent), 'DataRecordsetChanged' )),
    DISPMETHOD([dispid(16416)], None, 'BeforeDataRecordsetDelete',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
]
LPVISIOMENU = POINTER(IVMenu)

# values for enumeration 'VisListDirection'
visListDirLeftToRight = 0
visListDirRightToLeft = 1
visListDirTopToBottom = 2
visListDirBottomToTop = 3
VisListDirection = c_int # enum
IVContainerProperties._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'Application' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'doc' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'Shape' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'ContainerType',
              ( ['retval', 'out'], POINTER(VisContainerTypes), 'Type' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ListAlignment',
              ( ['retval', 'out'], POINTER(VisListAlignment), 'Alignment' )),
    COMMETHOD([dispid(1610743814), 'propput'], HRESULT, 'ListAlignment',
              ( ['in'], VisListAlignment, 'Alignment' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'ListDirection',
              ( ['retval', 'out'], POINTER(VisListDirection), 'Dir' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'ListDirection',
              ( ['in'], VisListDirection, 'Dir' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'LockMembership',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'IsLocked' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'LockMembership',
              ( ['in'], VARIANT_BOOL, 'IsLocked' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'ResizeAsNeeded',
              ( ['retval', 'out'], POINTER(VisContainerAutoResize), 'ResizeBehavior' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'ResizeAsNeeded',
              ( ['in'], VisContainerAutoResize, 'ResizeBehavior' )),
    COMMETHOD([dispid(1610743822)], HRESULT, 'Disband'),
    COMMETHOD([dispid(1610743823)], HRESULT, 'FitToContents'),
    COMMETHOD([dispid(1610743824)], HRESULT, 'GetMargin',
              ( ['in'], VisUnitCodes, 'MarginUnits' ),
              ( ['retval', 'out'], POINTER(c_double), 'MarginSize' )),
    COMMETHOD([dispid(1610743825)], HRESULT, 'SetMargin',
              ( ['in'], VisUnitCodes, 'MarginUnits' ),
              ( ['in'], c_double, 'MarginSize' )),
    COMMETHOD([dispid(1610743826)], HRESULT, 'GetListSpacing',
              ( ['in'], VisUnitCodes, 'SpacingUnits' ),
              ( ['retval', 'out'], POINTER(c_double), 'SpacingSize' )),
    COMMETHOD([dispid(1610743827)], HRESULT, 'SetListSpacing',
              ( ['in'], VisUnitCodes, 'SpacingUnits' ),
              ( ['in'], c_double, 'SpacingSize' )),
    COMMETHOD([dispid(1610743828)], HRESULT, 'InsertListMember',
              ( ['in'], POINTER(IUnknown), 'ObjectToInsert' ),
              ( [], c_int, 'Position' )),
    COMMETHOD([dispid(1610743829)], HRESULT, 'GetListMemberPosition',
              ( ['in'], POINTER(IVShape), 'ShapeMember' ),
              ( ['retval', 'out'], POINTER(c_int), 'ListPosition' )),
    COMMETHOD([dispid(1610743830)], HRESULT, 'GetMemberState',
              ( ['in'], POINTER(IVShape), 'Shape' ),
              ( ['retval', 'out'], POINTER(VisContainerMemberState), 'State' )),
    COMMETHOD([dispid(1610743831)], HRESULT, 'RemoveMember',
              ( ['in'], POINTER(IUnknown), 'ObjectToRemove' )),
    COMMETHOD([dispid(1610743832)], HRESULT, 'ReorderListMember',
              ( ['in'], POINTER(IUnknown), 'ObjectToReorder' ),
              ( [], c_int, 'Position' )),
    COMMETHOD([dispid(1610743833)], HRESULT, 'GetListMembers',
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pMembers' )),
    COMMETHOD([dispid(1610743834)], HRESULT, 'GetMemberShapes',
              ( ['in'], c_int, 'ContainerFlags' ),
              ( ['retval', 'out'], POINTER(_midlSAFEARRAY(c_int)), 'pMembers' )),
    COMMETHOD([dispid(1610743835)], HRESULT, 'AddMember',
              ( ['in'], POINTER(IUnknown), 'pObjectToAdd' ),
              ( [], VisMemberAddOptions, 'AddOptions' )),
    COMMETHOD([dispid(1610743836), 'propget'], HRESULT, 'OverlappedList',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'List' )),
    COMMETHOD([dispid(1610743836), 'propput'], HRESULT, 'OverlappedList',
              ( ['in'], POINTER(IVShape), 'List' )),
    COMMETHOD([dispid(1610743838)], HRESULT, 'RotateFlipList',
              ( ['in'], VisLayoutDirection, 'Direction' )),
    COMMETHOD([dispid(1610743839), 'propget'], HRESULT, 'ContainerStyle',
              ( ['retval', 'out'], POINTER(c_int), 'pStyle' )),
    COMMETHOD([dispid(1610743839), 'propput'], HRESULT, 'ContainerStyle',
              ( ['in'], c_int, 'pStyle' )),
    COMMETHOD([dispid(1610743841), 'propget'], HRESULT, 'HeadingStyle',
              ( ['retval', 'out'], POINTER(c_int), 'pStyle' )),
    COMMETHOD([dispid(1610743841), 'propput'], HRESULT, 'HeadingStyle',
              ( ['in'], c_int, 'pStyle' )),
]
################################################################
## code template for IVContainerProperties implementation
##class IVContainerProperties_Impl(object):
##    def ReorderListMember(self, ObjectToReorder, Position):
##        '-no docstring-'
##        #return 
##
##    def SetListSpacing(self, SpacingUnits, SpacingSize):
##        '-no docstring-'
##        #return 
##
##    def GetListSpacing(self, SpacingUnits):
##        '-no docstring-'
##        #return SpacingSize
##
##    def InsertListMember(self, ObjectToInsert, Position):
##        '-no docstring-'
##        #return 
##
##    def RotateFlipList(self, Direction):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return doc
##
##    def GetListMemberPosition(self, ShapeMember):
##        '-no docstring-'
##        #return ListPosition
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return IsLocked
##    def _set(self, IsLocked):
##        '-no docstring-'
##    LockMembership = property(_get, _set, doc = _set.__doc__)
##
##    def RemoveMember(self, ObjectToRemove):
##        '-no docstring-'
##        #return 
##
##    def GetMemberState(self, Shape):
##        '-no docstring-'
##        #return State
##
##    def _get(self):
##        '-no docstring-'
##        #return Alignment
##    def _set(self, Alignment):
##        '-no docstring-'
##    ListAlignment = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pStyle
##    def _set(self, pStyle):
##        '-no docstring-'
##    HeadingStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##
##    def AddMember(self, pObjectToAdd, AddOptions):
##        '-no docstring-'
##        #return 
##
##    def Disband(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ContainerType(self):
##        '-no docstring-'
##        #return Type
##
##    def GetListMembers(self):
##        '-no docstring-'
##        #return pMembers
##
##    def _get(self):
##        '-no docstring-'
##        #return List
##    def _set(self, List):
##        '-no docstring-'
##    OverlappedList = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return ResizeBehavior
##    def _set(self, ResizeBehavior):
##        '-no docstring-'
##    ResizeAsNeeded = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pStyle
##    def _set(self, pStyle):
##        '-no docstring-'
##    ContainerStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return Application
##
##    def GetMemberShapes(self, ContainerFlags):
##        '-no docstring-'
##        #return pMembers
##
##    def FitToContents(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return Dir
##    def _set(self, Dir):
##        '-no docstring-'
##    ListDirection = property(_get, _set, doc = _set.__doc__)
##
##    def GetMargin(self, MarginUnits):
##        '-no docstring-'
##        #return MarginSize
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return Shape
##
##    def SetMargin(self, MarginUnits, MarginSize):
##        '-no docstring-'
##        #return 
##


# values for enumeration 'VisAutoLinkFieldTypes'
visAutoLinkShapeText = 1
visAutoLinkCustPropsLabel = 2
visAutoLinkUserRowName = 3
visAutoLinkGeometryAngle = 4
visAutoLinkGeometryWidth = 5
visAutoLinkGeometryHeight = 6
visAutoLinkObjectID = 7
visAutoLinkMasterName = 8
visAutoLinkObjectName = 9
visAutoLinkObjectType = 10
visAutoLinkObjectData1 = 11
visAutoLinkObjectData2 = 12
visAutoLinkObjectData3 = 13
visAutoLinkPropRowNameU = 14
visAutoLinkUserRowNameU = 15
visAutoLinkMasterNameU = 16
visAutoLinkObjectNameU = 17
VisAutoLinkFieldTypes = c_int # enum
LPVISIOMENUS = POINTER(IVMenus)
EDocument._disp_methods_ = [
    DISPMETHOD([dispid(2)], None, 'DocumentOpened',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(1)], None, 'DocumentCreated',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(3)], None, 'DocumentSaved',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(4)], None, 'DocumentSavedAs',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(8194)], None, 'DocumentChanged',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(16386)], None, 'BeforeDocumentClose',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(32772)], None, 'StyleAdded',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(8196)], None, 'StyleChanged',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(16388)], None, 'BeforeStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(32776)], None, 'MasterAdded',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(8200)], None, 'MasterChanged',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(16392)], None, 'BeforeMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(32784)], None, 'PageAdded',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(8208)], None, 'PageChanged',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(16400)], None, 'BeforePageDelete',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(5)], None, 'RunModeEntered',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(6)], None, 'DesignModeEntered',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(7)], None, 'BeforeDocumentSave',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(8)], None, 'BeforeDocumentSaveAs',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(9), helpstring(u'Cancel close of document? T:Yes F:No')], None, 'QueryCancelDocumentClose',
               ( ['in'], POINTER(IVDocument), 'doc' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(10), helpstring(u'Document close operation was canceled.')], None, 'DocumentCloseCanceled',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(300), helpstring(u'Cancel delete of style? T:Yes F:No')], None, 'QueryCancelStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(301), helpstring(u'Delete style operation was canceled.')], None, 'StyleDeleteCanceled',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(400), helpstring(u'Cancel delete of master? T:Yes F:No')], None, 'QueryCancelMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(401), helpstring(u'Delete master operation was canceled.')], None, 'MasterDeleteCanceled',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(500), helpstring(u'Cancel delete of page? T:Yes F:No')], None, 'QueryCancelPageDelete',
               ( ['in'], POINTER(IVPage), 'Page' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(501), helpstring(u'Delete page operation was canceled.')], None, 'PageDeleteCanceled',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(16416)], None, 'BeforeDataRecordsetDelete',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(32800)], None, 'DataRecordsetAdded',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(11)], None, 'AfterRemoveHiddenInformation',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(13)], None, 'RuleSetValidated',
               ( ['in'], POINTER(IVValidationRuleSet), 'RuleSet' )),
    DISPMETHOD([dispid(14)], None, 'AfterDocumentMerge',
               ( ['in'], POINTER(IVCoauthMergeEvent), 'coauthMergeObjects' )),
]
IVMenuSet._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'SetID',
              ( ['retval', 'out'], POINTER(c_int), 'plSetID' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Menus',
              ( ['retval', 'out'], POINTER(POINTER(IVMenus)), 'lplpVMenus' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVMenuSets)), 'lplpVMenuSets' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbBuiltIn' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pbEnabled' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEnabled' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Height',
              ( ['in'], c_short, 'pHeight' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_short), 'pHeight' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Left',
              ( ['in'], c_short, 'pLeft' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_short), 'pLeft' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'Position',
              ( ['in'], c_short, 'pPos' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_short), 'pPos' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'Protection',
              ( ['in'], c_short, 'pProt' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'Protection',
              ( ['retval', 'out'], POINTER(c_short), 'pProt' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'RowIndex',
              ( ['in'], c_short, 'pwRow' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'RowIndex',
              ( ['retval', 'out'], POINTER(c_short), 'pwRow' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'Top',
              ( ['in'], c_short, 'pTop' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_short), 'pTop' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'Width',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
]
################################################################
## code template for IVMenuSet implementation
##class IVMenuSet_Impl(object):
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVMenuSets
##
##    @property
##    def Menus(self):
##        '-no docstring-'
##        #return lplpVMenus
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pCaption
##
##    def _get(self):
##        '-no docstring-'
##        #return pTop
##    def _set(self, pTop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbEnabled
##    def _set(self, pbEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pHeight
##    def _set(self, pHeight):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pbBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return pProt
##    def _set(self, pProt):
##        '-no docstring-'
##    Protection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pPos
##    def _set(self, pPos):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SetID(self):
##        '-no docstring-'
##        #return plSetID
##
##    def _get(self):
##        '-no docstring-'
##        #return pLeft
##    def _set(self, pLeft):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwRow
##    def _set(self, pwRow):
##        '-no docstring-'
##    RowIndex = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

LPVISIOTOOLBARITEMS = POINTER(IVToolbarItems)
EApplication._disp_methods_ = [
    DISPMETHOD([dispid(4097)], None, 'AppActivated',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(4098)], None, 'AppDeactivated',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(4100)], None, 'AppObjActivated',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(4104)], None, 'AppObjDeactivated',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(4112)], None, 'BeforeQuit',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(4128)], None, 'BeforeModal',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(4160)], None, 'AfterModal',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(32769)], None, 'WindowOpened',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(701)], None, 'SelectionChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(16385)], None, 'BeforeWindowClosed',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(4224)], None, 'WindowActivated',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(702)], None, 'BeforeWindowSelDelete',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(703)], None, 'BeforeWindowPageTurn',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(704)], None, 'WindowTurnedToPage',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(2)], None, 'DocumentOpened',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(1)], None, 'DocumentCreated',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(3)], None, 'DocumentSaved',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(4)], None, 'DocumentSavedAs',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(8194)], None, 'DocumentChanged',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(16386)], None, 'BeforeDocumentClose',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(32772)], None, 'StyleAdded',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(8196)], None, 'StyleChanged',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(16388)], None, 'BeforeStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(32776)], None, 'MasterAdded',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(8200)], None, 'MasterChanged',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(16392)], None, 'BeforeMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(32784)], None, 'PageAdded',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(8208)], None, 'PageChanged',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(16400)], None, 'BeforePageDelete',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(8256)], None, 'ShapeChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(902)], None, 'SelectionAdded',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(16448)], None, 'BeforeShapeDelete',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(4352)], None, 'MarkerEvent',
               ( ['in'], POINTER(IVApplication), 'app' ),
               ( ['in'], c_int, 'SequenceNum' ),
               ( ['in'], BSTR, 'ContextString' )),
    DISPMETHOD([dispid(4608)], None, 'NoEventsPending',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(5120)], None, 'VisioIsIdle',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(200)], None, 'MustFlushScopeBeginning',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(201)], None, 'MustFlushScopeEnded',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(5)], None, 'RunModeEntered',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(6)], None, 'DesignModeEntered',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(7)], None, 'BeforeDocumentSave',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(8)], None, 'BeforeDocumentSaveAs',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(33024)], None, 'ConnectionsAdded',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(16640)], None, 'ConnectionsDeleted',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(202)], None, 'EnterScope',
               ( ['in'], POINTER(IVApplication), 'app' ),
               ( ['in'], c_int, 'nScopeID' ),
               ( ['in'], BSTR, 'bstrDescription' )),
    DISPMETHOD([dispid(203)], None, 'ExitScope',
               ( ['in'], POINTER(IVApplication), 'app' ),
               ( ['in'], c_int, 'nScopeID' ),
               ( ['in'], BSTR, 'bstrDescription' ),
               ( ['in'], VARIANT_BOOL, 'bErrOrCancelled' )),
    DISPMETHOD([dispid(204), helpstring(u'Cancel terminate of application? T:Yes F:No')], None, 'QueryCancelQuit',
               ( ['in'], POINTER(IVApplication), 'app' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(205), helpstring(u'Terminate application operation was canceled.')], None, 'QuitCanceled',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(8193), helpstring(u"Fires after a window's size or position changes")], None, 'WindowChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(705), helpstring(u'Fires after scroll or zoom in a drawing window')], None, 'ViewChanged',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(706), helpstring(u'Cancel close of window? T:Yes F:No')], None, 'QueryCancelWindowClose',
               ( ['in'], POINTER(IVWindow), 'Window' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(707), helpstring(u'Window close operation was canceled.')], None, 'WindowCloseCanceled',
               ( ['in'], POINTER(IVWindow), 'Window' )),
    DISPMETHOD([dispid(9), helpstring(u'Cancel close of document? T:Yes F:No')], None, 'QueryCancelDocumentClose',
               ( ['in'], POINTER(IVDocument), 'doc' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(10), helpstring(u'Document close operation was canceled.')], None, 'DocumentCloseCanceled',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(300), helpstring(u'Cancel delete of style? T:Yes F:No')], None, 'QueryCancelStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(301), helpstring(u'Delete style operation was canceled.')], None, 'StyleDeleteCanceled',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(400), helpstring(u'Cancel delete of master? T:Yes F:No')], None, 'QueryCancelMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(401), helpstring(u'Delete master operation was canceled.')], None, 'MasterDeleteCanceled',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(500), helpstring(u'Cancel delete of page? T:Yes F:No')], None, 'QueryCancelPageDelete',
               ( ['in'], POINTER(IVPage), 'Page' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(501), helpstring(u'Delete page operation was canceled.')], None, 'PageDeleteCanceled',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(206), helpstring(u'Cancel suspension of application? T:Yes F:No')], None, 'QueryCancelSuspend',
               ( ['in'], POINTER(IVApplication), 'app' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(207), helpstring(u'Suspend application operation was canceled.')], None, 'SuspendCanceled',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(208)], None, 'BeforeSuspend',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(209)], None, 'AfterResume',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(708), helpstring(u'Called when keystroke message received for Addon window. True return indicates message was handled.')], None, 'OnKeystrokeMessageForAddon',
               ( ['in'], POINTER(IVMSGWrap), 'MSG' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(709), helpstring(u'Called when mousedown message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseDown',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(710), helpstring(u'Called when mousemove message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseMove',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(711), helpstring(u'Called when mouseup message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'MouseUp',
               ( ['in'], c_int, 'Button' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in'], c_double, 'x' ),
               ( ['in'], c_double, 'y' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(712), helpstring(u'Called when keydown message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyDown',
               ( ['in'], c_int, 'KeyCode' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(713), helpstring(u'Called when keypress message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyPress',
               ( ['in'], c_int, 'KeyAscii' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(714), helpstring(u'Called when keyup message received for window. If you set CancelDefault to True then Visio will not process this message.')], None, 'KeyUp',
               ( ['in'], c_int, 'KeyCode' ),
               ( ['in'], c_int, 'KeyButtonState' ),
               ( ['in', 'out'], POINTER(VARIANT_BOOL), 'CancelDefault' )),
    DISPMETHOD([dispid(210), helpstring(u'Cancel suspension of application events? T:Yes F:No')], None, 'QueryCancelSuspendEvents',
               ( ['in'], POINTER(IVApplication), 'app' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(211), helpstring(u'Suspend application events operation was canceled.')], None, 'SuspendEventsCanceled',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(212)], None, 'BeforeSuspendEvents',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(213)], None, 'AfterResumeEvents',
               ( ['in'], POINTER(IVApplication), 'app' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(16416)], None, 'BeforeDataRecordsetDelete',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(8224)], None, 'DataRecordsetChanged',
               ( ['in'], POINTER(IVDataRecordsetChangedEvent), 'DataRecordsetChanged' )),
    DISPMETHOD([dispid(32800)], None, 'DataRecordsetAdded',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(805)], None, 'ShapeLinkAdded',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(806)], None, 'ShapeLinkDeleted',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(11)], None, 'AfterRemoveHiddenInformation',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(502)], None, 'ContainerRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(503)], None, 'ContainerRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(504)], None, 'CalloutRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(505)], None, 'CalloutRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(13)], None, 'RuleSetValidated',
               ( ['in'], POINTER(IVValidationRuleSet), 'RuleSet' )),
    DISPMETHOD([dispid(911)], None, 'QueryCancelReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(912)], None, 'ReplaceShapesCanceled',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(913)], None, 'BeforeReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(914)], None, 'AfterReplaceShapes',
               ( ['in'], POINTER(IVSelection), 'sel' )),
]
LPVISIOTOOLBARS = POINTER(IVToolbars)
tagVisWindowStates = VisWindowStates
LPVISIOVALIDATIONRULESETS = POINTER(IVValidationRuleSets)
LPVISIOMENUSETS = POINTER(IVMenuSets)
EDocuments._disp_methods_ = [
    DISPMETHOD([dispid(2)], None, 'DocumentOpened',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(1)], None, 'DocumentCreated',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(3)], None, 'DocumentSaved',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(4)], None, 'DocumentSavedAs',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(8194)], None, 'DocumentChanged',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(16386)], None, 'BeforeDocumentClose',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(32772)], None, 'StyleAdded',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(8196)], None, 'StyleChanged',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(16388)], None, 'BeforeStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(32776)], None, 'MasterAdded',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(8200)], None, 'MasterChanged',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(16392)], None, 'BeforeMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(32784)], None, 'PageAdded',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(8208)], None, 'PageChanged',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(16400)], None, 'BeforePageDelete',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(32832)], None, 'ShapeAdded',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(901)], None, 'BeforeSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(8256)], None, 'ShapeChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(902)], None, 'SelectionAdded',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(16448)], None, 'BeforeShapeDelete',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(8320)], None, 'TextChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(10240), helpstring(u"Fires after a cell's value changes.")], None, 'CellChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(5)], None, 'RunModeEntered',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(6)], None, 'DesignModeEntered',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(7)], None, 'BeforeDocumentSave',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(8)], None, 'BeforeDocumentSaveAs',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(12288), helpstring(u"Fires after a cell's formula changes.")], None, 'FormulaChanged',
               ( ['in'], POINTER(IVCell), 'Cell' )),
    DISPMETHOD([dispid(33024)], None, 'ConnectionsAdded',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(16640)], None, 'ConnectionsDeleted',
               ( ['in'], POINTER(IVConnects), 'Connects' )),
    DISPMETHOD([dispid(9), helpstring(u'Cancel close of document? T:Yes F:No')], None, 'QueryCancelDocumentClose',
               ( ['in'], POINTER(IVDocument), 'doc' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(10), helpstring(u'Document close operation was canceled.')], None, 'DocumentCloseCanceled',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(300), helpstring(u'Cancel delete of style? T:Yes F:No')], None, 'QueryCancelStyleDelete',
               ( ['in'], POINTER(IVStyle), 'Style' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(301), helpstring(u'Delete style operation was canceled.')], None, 'StyleDeleteCanceled',
               ( ['in'], POINTER(IVStyle), 'Style' )),
    DISPMETHOD([dispid(400), helpstring(u'Cancel delete of master? T:Yes F:No')], None, 'QueryCancelMasterDelete',
               ( ['in'], POINTER(IVMaster), 'Master' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(401), helpstring(u'Delete master operation was canceled.')], None, 'MasterDeleteCanceled',
               ( ['in'], POINTER(IVMaster), 'Master' )),
    DISPMETHOD([dispid(500), helpstring(u'Cancel delete of page? T:Yes F:No')], None, 'QueryCancelPageDelete',
               ( ['in'], POINTER(IVPage), 'Page' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(501), helpstring(u'Delete page operation was canceled.')], None, 'PageDeleteCanceled',
               ( ['in'], POINTER(IVPage), 'Page' )),
    DISPMETHOD([dispid(802)], None, 'ShapeParentChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(803)], None, 'BeforeShapeTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(804)], None, 'ShapeExitedTextEdit',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(903), helpstring(u'Cancel delete of shapes? T:Yes F:No')], None, 'QueryCancelSelectionDelete',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(904), helpstring(u'Delete shapes operation was canceled.')], None, 'SelectionDeleteCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(905), helpstring(u'Cancel ungroup operation? T:Yes F:No')], None, 'QueryCancelUngroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(906), helpstring(u'Ungroup operation was canceled.')], None, 'UngroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(907), helpstring(u'Cancel convert to group operation? T:Yes F:No')], None, 'QueryCancelConvertToGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(908), helpstring(u'Convert to group operation was canceled.')], None, 'ConvertToGroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(909), helpstring(u'Cancel group operation? T:Yes F:No')], None, 'QueryCancelGroup',
               ( ['in'], POINTER(IVSelection), 'Selection' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(910), helpstring(u'Group operation was canceled.')], None, 'GroupCanceled',
               ( ['in'], POINTER(IVSelection), 'Selection' )),
    DISPMETHOD([dispid(807)], None, 'ShapeDataGraphicChanged',
               ( ['in'], POINTER(IVShape), 'Shape' )),
    DISPMETHOD([dispid(16416)], None, 'BeforeDataRecordsetDelete',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(8224)], None, 'DataRecordsetChanged',
               ( ['in'], POINTER(IVDataRecordsetChangedEvent), 'DataRecordsetChanged' )),
    DISPMETHOD([dispid(32800)], None, 'DataRecordsetAdded',
               ( ['in'], POINTER(IVDataRecordset), 'DataRecordset' )),
    DISPMETHOD([dispid(805)], None, 'ShapeLinkAdded',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(806)], None, 'ShapeLinkDeleted',
               ( ['in'], POINTER(IVShape), 'Shape' ),
               ( ['in'], c_int, 'DataRecordsetID' ),
               ( ['in'], c_int, 'DataRowID' )),
    DISPMETHOD([dispid(11)], None, 'AfterRemoveHiddenInformation',
               ( ['in'], POINTER(IVDocument), 'doc' )),
    DISPMETHOD([dispid(502)], None, 'ContainerRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(503)], None, 'ContainerRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(504)], None, 'CalloutRelationshipAdded',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(505)], None, 'CalloutRelationshipDeleted',
               ( ['in'], POINTER(IVRelatedShapePairEvent), 'ShapePair' )),
    DISPMETHOD([dispid(13)], None, 'RuleSetValidated',
               ( ['in'], POINTER(IVValidationRuleSet), 'RuleSet' )),
    DISPMETHOD([dispid(911)], None, 'QueryCancelReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' ),
               ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'lpboolRet' )),
    DISPMETHOD([dispid(912)], None, 'ReplaceShapesCanceled',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(913)], None, 'BeforeReplaceShapes',
               ( ['in'], POINTER(IVReplaceShapesEvent), 'replaceShapes' )),
    DISPMETHOD([dispid(914)], None, 'AfterReplaceShapes',
               ( ['in'], POINTER(IVSelection), 'sel' )),
    DISPMETHOD([dispid(14)], None, 'AfterDocumentMerge',
               ( ['in'], POINTER(IVCoauthMergeEvent), 'coauthMergeObjects' )),
]
class StatusBarItem(CoClass):
    u'StatusBarItem is obsolete as of Visio 2002.'
    _reg_clsid_ = GUID('{000D0270-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
StatusBarItem._com_interfaces_ = [IVStatusBarItem]

IVStyles._methods_ = [
    COMMETHOD([dispid(3), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), helpstring(u'Returns visObjTypeStyles (20).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a Styles collection is item 1. Name treated as locale specific.'), 'propget'], HRESULT, 'Item',
              ( ['in'], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(1), 'hidden', 'propget'], HRESULT, 'Count16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(4), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(5)], HRESULT, 'Add',
              ( ['in'], BSTR, 'StyleName' ),
              ( ['in'], BSTR, 'BasedOn' ),
              ( ['in'], c_short, 'fIncludesText' ),
              ( ['in'], c_short, 'fIncludesLine' ),
              ( ['in'], c_short, 'fIncludesFill' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(8), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(9), 'hidden', 'propget'], HRESULT, 'ItemFromID16',
              ( ['in'], c_short, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(10), helpstring(u'Returns locale specific names of styles.')], HRESULT, 'GetNames',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeSpecificNameArray' )),
    COMMETHOD([dispid(11), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(12), 'propget'], HRESULT, 'ItemFromID',
              ( ['in'], c_int, 'ObjectID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(13), helpstring(u'Like Item() but names treated locale independent.'), 'propget'], HRESULT, 'ItemU',
              ( [], VARIANT, 'NameOrIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVStyle)), 'lpdispRet' )),
    COMMETHOD([dispid(14), helpstring(u'Returns locale independent names of styles.')], HRESULT, 'GetNamesU',
              ( ['out'], POINTER(_midlSAFEARRAY(BSTR)), 'localeIndependentNameArray' )),
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppEnum' )),
]
################################################################
## code template for IVStyles implementation
##class IVStyles_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def GetNamesU(self):
##        u'Returns locale independent names of styles.'
##        #return localeIndependentNameArray
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return ppEnum
##
##    @property
##    def Item(self, NameOrIndex):
##        u'The first item in a Styles collection is item 1. Name treated as locale specific.'
##        #return lpdispRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Count16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def ItemU(self, NameOrIndex):
##        u'Like Item() but names treated locale independent.'
##        #return lpdispRet
##
##    @property
##    def ItemFromID(self, ObjectID):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    def Add(self, StyleName, BasedOn, fIncludesText, fIncludesLine, fIncludesFill):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ItemFromID16(self, ObjectID):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def GetNames(self):
##        u'Returns locale specific names of styles.'
##        #return localeSpecificNameArray
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeStyles (20).'
##        #return lpi2Ret
##

IVStatusBar._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'SetID',
              ( ['retval', 'out'], POINTER(c_int), 'plSetID' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'StatusBarItems',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBarItems)), 'lplpVStatusBarItems' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVStatusBars)), 'lplpVStatusBars' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbBuiltIn' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Protection',
              ( ['in'], c_short, 'pProt' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Protection',
              ( ['retval', 'out'], POINTER(c_short), 'pProt' )),
]
################################################################
## code template for IVStatusBar implementation
##class IVStatusBar_Impl(object):
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVStatusBars
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pCaption
##
##    @property
##    def StatusBarItems(self):
##        '-no docstring-'
##        #return lplpVStatusBarItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pbBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return pProt
##    def _set(self, pProt):
##        '-no docstring-'
##    Protection = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def SetID(self):
##        '-no docstring-'
##        #return plSetID
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

IVRelatedShapePairEvent._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ContainingPage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'pPage' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'ContainingPageID',
              ( ['retval', 'out'], POINTER(c_int), 'pID' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'pDoc' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'FromShapeID',
              ( ['retval', 'out'], POINTER(c_int), 'pID' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ToShapeID',
              ( ['retval', 'out'], POINTER(c_int), 'pID' )),
]
################################################################
## code template for IVRelatedShapePairEvent implementation
##class IVRelatedShapePairEvent_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ToShapeID(self):
##        '-no docstring-'
##        #return pID
##
##    @property
##    def ContainingPageID(self):
##        '-no docstring-'
##        #return pID
##
##    @property
##    def FromShapeID(self):
##        '-no docstring-'
##        #return pID
##
##    @property
##    def ContainingPage(self):
##        '-no docstring-'
##        #return pPage
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return pDoc
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

tagVisPasteSpecialCodes = VisPasteSpecialCodes

# values for enumeration 'VisShapeTypes'
visTypeInval = 0
visTypePage = 1
visTypeGroup = 2
visTypeShape = 3
visTypeForeignObject = 4
visTypeGuide = 5
visTypeDoc = 6
visTypeMetafile = 16
visTypeBitmap = 32
visTypeIsLinked = 256
visTypeIsEmbedded = 512
visTypeIsControl = 1024
visTypeIsOLE2 = 32768
visTypeInk = 64
VisShapeTypes = c_int # enum
LPVISIOVALIDATIONRULESET = POINTER(IVValidationRuleSet)
LPVISIOVALIDATIONISSUES = POINTER(IVValidationIssues)
class StatusBar(CoClass):
    u'StatusBar is obsolete as of Visio 2002.'
    _reg_clsid_ = GUID('{000D0280-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
StatusBar._com_interfaces_ = [IVStatusBar]

IVToolbar._methods_ = [
    COMMETHOD([dispid(1610743808)], HRESULT, 'Delete'),
    COMMETHOD([dispid(1610743809), 'hidden', 'propget'], HRESULT, 'Default',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(0), 'propput'], HRESULT, 'Caption',
              ( ['in'], BSTR, 'pCaption' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Caption',
              ( ['retval', 'out'], POINTER(BSTR), 'pCaption' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_int), 'plIndex' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'ToolbarItems',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarItems)), 'lplpVToolbarItems' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbars)), 'lplpVToolbars' )),
    COMMETHOD([dispid(1610743815), 'propget'], HRESULT, 'BuiltIn',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbBuiltIn' )),
    COMMETHOD([dispid(1610743816), 'propput'], HRESULT, 'Enabled',
              ( ['in'], VARIANT_BOOL, 'pbEnabled' )),
    COMMETHOD([dispid(1610743816), 'propget'], HRESULT, 'Enabled',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbEnabled' )),
    COMMETHOD([dispid(1610743818), 'propput'], HRESULT, 'Height',
              ( ['in'], c_short, 'pHeight' )),
    COMMETHOD([dispid(1610743818), 'propget'], HRESULT, 'Height',
              ( ['retval', 'out'], POINTER(c_short), 'pHeight' )),
    COMMETHOD([dispid(1610743820), 'propput'], HRESULT, 'Left',
              ( ['in'], c_short, 'pLeft' )),
    COMMETHOD([dispid(1610743820), 'propget'], HRESULT, 'Left',
              ( ['retval', 'out'], POINTER(c_short), 'pLeft' )),
    COMMETHOD([dispid(1610743822), 'propput'], HRESULT, 'Position',
              ( ['in'], c_short, 'pPos' )),
    COMMETHOD([dispid(1610743822), 'propget'], HRESULT, 'Position',
              ( ['retval', 'out'], POINTER(c_short), 'pPos' )),
    COMMETHOD([dispid(1610743824), 'propput'], HRESULT, 'Protection',
              ( ['in'], c_short, 'pProt' )),
    COMMETHOD([dispid(1610743824), 'propget'], HRESULT, 'Protection',
              ( ['retval', 'out'], POINTER(c_short), 'pProt' )),
    COMMETHOD([dispid(1610743826), 'propput'], HRESULT, 'RowIndex',
              ( ['in'], c_short, 'pwRow' )),
    COMMETHOD([dispid(1610743826), 'propget'], HRESULT, 'RowIndex',
              ( ['retval', 'out'], POINTER(c_short), 'pwRow' )),
    COMMETHOD([dispid(1610743828), 'propput'], HRESULT, 'Top',
              ( ['in'], c_short, 'pTop' )),
    COMMETHOD([dispid(1610743828), 'propget'], HRESULT, 'Top',
              ( ['retval', 'out'], POINTER(c_short), 'pTop' )),
    COMMETHOD([dispid(1610743830), 'propput'], HRESULT, 'Visible',
              ( ['in'], VARIANT_BOOL, 'pbVisible' )),
    COMMETHOD([dispid(1610743830), 'propget'], HRESULT, 'Visible',
              ( ['retval', 'out'], POINTER(VARIANT_BOOL), 'pbVisible' )),
    COMMETHOD([dispid(1610743832), 'propput'], HRESULT, 'Width',
              ( ['in'], c_short, 'pwWidth' )),
    COMMETHOD([dispid(1610743832), 'propget'], HRESULT, 'Width',
              ( ['retval', 'out'], POINTER(c_short), 'pwWidth' )),
]
################################################################
## code template for IVToolbar implementation
##class IVToolbar_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return plIndex
##
##    @property
##    def ToolbarItems(self):
##        '-no docstring-'
##        #return lplpVToolbarItems
##
##    def _get(self):
##        '-no docstring-'
##        #return pwWidth
##    def _set(self, pwWidth):
##        '-no docstring-'
##    Width = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVToolbars
##
##    def _get(self):
##        '-no docstring-'
##        #return pbVisible
##    def _set(self, pbVisible):
##        '-no docstring-'
##    Visible = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Default(self):
##        '-no docstring-'
##        #return pCaption
##
##    def _get(self):
##        '-no docstring-'
##        #return pTop
##    def _set(self, pTop):
##        '-no docstring-'
##    Top = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pbEnabled
##    def _set(self, pbEnabled):
##        '-no docstring-'
##    Enabled = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pHeight
##    def _set(self, pHeight):
##        '-no docstring-'
##    Height = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pCaption
##    def _set(self, pCaption):
##        '-no docstring-'
##    Caption = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def BuiltIn(self):
##        '-no docstring-'
##        #return pbBuiltIn
##
##    def _get(self):
##        '-no docstring-'
##        #return pProt
##    def _set(self, pProt):
##        '-no docstring-'
##    Protection = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pPos
##    def _set(self, pPos):
##        '-no docstring-'
##    Position = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pLeft
##    def _set(self, pLeft):
##        '-no docstring-'
##    Left = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return pwRow
##    def _set(self, pwRow):
##        '-no docstring-'
##    RowIndex = property(_get, _set, doc = _set.__doc__)
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##

LPVISIOCOLOR = POINTER(IVColor)
class StatusBars(CoClass):
    u'StatusBars is obsolete as of Visio 2002. The first StatusBar in a StatusBars collection is item 0.'
    _reg_clsid_ = GUID('{000D0284-0000-0000-C000-000000000046}')
    _idlflags_ = ['hidden', 'noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
StatusBars._com_interfaces_ = [IVStatusBars]

class RelatedShapePairEvent(CoClass):
    u'RelatedShapePairEvent object'
    _reg_clsid_ = GUID('{000D0A34-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
RelatedShapePairEvent._com_interfaces_ = [IVRelatedShapePairEvent]

tagVisStatCodes = VisStatCodes
tagVisWindowArrange = VisWindowArrange
class ContainerProperties(CoClass):
    u'ContainerProperties object'
    _reg_clsid_ = GUID('{000D0A33-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ContainerProperties._com_interfaces_ = [IVContainerProperties]

class AccelItems(CoClass):
    u'The items of a Visio AccelTable. The first AccelItem in an AccelItems collection is item 0.'
    _reg_clsid_ = GUID('{000D0294-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
AccelItems._com_interfaces_ = [IVAccelItems]


# values for enumeration 'VisUIBarPosition'
visBarLeft = 0
visBarTop = 1
visBarRight = 2
visBarBottom = 3
visBarFloating = 4
visBarPopup = 5
visBarMenu = 6
VisUIBarPosition = c_int # enum
class MovedSelectionEvent(CoClass):
    u'MovedSelectionEvent object'
    _reg_clsid_ = GUID('{000D0A35-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
MovedSelectionEvent._com_interfaces_ = [IVMovedSelectionEvent]

class AccelTable(CoClass):
    u'The AccelItems associated with an interactive state, such as drawing window active, etc.'
    _reg_clsid_ = GUID('{000D02A0-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
AccelTable._com_interfaces_ = [IVAccelTable]

IVMovedSelectionEvent._methods_ = [
    COMMETHOD([dispid(1610743808), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743809), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'ObjectType' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ReplacementShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743811), 'propget'], HRESULT, 'SelectionSource',
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'SelectionTarget',
              ( ['retval', 'out'], POINTER(POINTER(IVSelection)), 'lpdispRet' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
]
################################################################
## code template for IVMovedSelectionEvent implementation
##class IVMovedSelectionEvent_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def SelectionTarget(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Application(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ReplacementShape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def SelectionSource(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectType(self):
##        '-no docstring-'
##        #return ObjectType
##

tagVisUIMenuAnimation = VisUIMenuAnimation
class AccelTables(CoClass):
    u'The accelerator tables associated with a Visio UIObject. The first AccelTable in an AccelTables collection is item 0.'
    _reg_clsid_ = GUID('{000D02A4-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
AccelTables._com_interfaces_ = [IVAccelTables]

IVKeyboardEvent._methods_ = [
    COMMETHOD(['propget', helpstring(u"String representation of this object's properties.")], HRESULT, 'ToString',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrString' )),
    COMMETHOD(['propget', helpstring(u'Returns Visio Application instance hosting the object.')], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD(['propget', helpstring(u'Returns visObjTypeKeyboardEvent (50).')], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(VisObjectTypes), 'peType' )),
    COMMETHOD(['propget', helpstring(u'The Visio.Window associated with this event.')], HRESULT, 'Window',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'ppWindow' )),
    COMMETHOD(['propget', helpstring(u'Code associated with KeyDown and KeyUp events.')], HRESULT, 'KeyCode',
              ( ['retval', 'out'], POINTER(c_int), 'pnKeyCode' )),
    COMMETHOD(['propget', helpstring(u'Indicates state of mouse buttons and shift and control keys for the KeyDown or KeyUp event.')], HRESULT, 'KeyButtonState',
              ( ['retval', 'out'], POINTER(c_int), 'pnKeyButtonState' )),
    COMMETHOD(['propget', helpstring(u'Character associated with KeyPress event.')], HRESULT, 'KeyAscii',
              ( ['retval', 'out'], POINTER(c_int), 'pnKeyAscii' )),
    COMMETHOD(['propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
]
################################################################
## code template for IVKeyboardEvent implementation
##class IVKeyboardEvent_Impl(object):
##    @property
##    def KeyAscii(self):
##        u'Character associated with KeyPress event.'
##        #return pnKeyAscii
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Window(self):
##        u'The Visio.Window associated with this event.'
##        #return ppWindow
##
##    @property
##    def ToString(self):
##        u"String representation of this object's properties."
##        #return pbstrString
##
##    @property
##    def KeyCode(self):
##        u'Code associated with KeyDown and KeyUp events.'
##        #return pnKeyCode
##
##    @property
##    def KeyButtonState(self):
##        u'Indicates state of mouse buttons and shift and control keys for the KeyDown or KeyUp event.'
##        #return pnKeyButtonState
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeKeyboardEvent (50).'
##        #return peType
##

tagVisToParts = VisToParts
LPVISIOHYPERLINK = POINTER(IVHyperlink)
IVMouseEvent._methods_ = [
    COMMETHOD(['propget', helpstring(u"String representation of this object's properties.")], HRESULT, 'ToString',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstrString' )),
    COMMETHOD(['propget', helpstring(u'Returns Visio Application instance hosting the object.')], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD(['propget', helpstring(u'Returns visObjTypeMouseEvent (49).')], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(VisObjectTypes), 'peType' )),
    COMMETHOD(['propget', helpstring(u'The Visio.Window associated with this event.')], HRESULT, 'Window',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'ppWindow' )),
    COMMETHOD(['propget', helpstring(u'Which mouse button was clicked for MouseDown or MouseUp event.')], HRESULT, 'Button',
              ( ['retval', 'out'], POINTER(c_int), 'pnButton' )),
    COMMETHOD(['propget', helpstring(u'Indicates state of mouse buttons and shift and control keys for the event.')], HRESULT, 'KeyButtonState',
              ( ['retval', 'out'], POINTER(c_int), 'pnKeyButtonState' )),
    COMMETHOD(['propget', helpstring(u'Indicates x coordinate of mouse event in Visio.Window specific coordinates.')], HRESULT, 'x',
              ( ['retval', 'out'], POINTER(c_double), 'pdX' )),
    COMMETHOD(['propget', helpstring(u'Indicates y coordinate of mouse event in Visio.Window specific coordinates.')], HRESULT, 'y',
              ( ['retval', 'out'], POINTER(c_double), 'pdY' )),
    COMMETHOD(['propget', helpstring(u'Indicates drag state of a mouse move operation')], HRESULT, 'DragState',
              ( ['retval', 'out'], POINTER(VisMouseMoveDragStates), 'peDragState' )),
    COMMETHOD(['propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
]
################################################################
## code template for IVMouseEvent implementation
##class IVMouseEvent_Impl(object):
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Button(self):
##        u'Which mouse button was clicked for MouseDown or MouseUp event.'
##        #return pnButton
##
##    @property
##    def DragState(self):
##        u'Indicates drag state of a mouse move operation'
##        #return peDragState
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Window(self):
##        u'The Visio.Window associated with this event.'
##        #return ppWindow
##
##    @property
##    def ToString(self):
##        u"String representation of this object's properties."
##        #return pbstrString
##
##    @property
##    def y(self):
##        u'Indicates y coordinate of mouse event in Visio.Window specific coordinates.'
##        #return pdY
##
##    @property
##    def x(self):
##        u'Indicates x coordinate of mouse event in Visio.Window specific coordinates.'
##        #return pdX
##
##    @property
##    def KeyButtonState(self):
##        u'Indicates state of mouse buttons and shift and control keys for the event.'
##        #return pnKeyButtonState
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeMouseEvent (49).'
##        #return peType
##

tagVisUIBarPosition = VisUIBarPosition
class ValidationRuleSets(CoClass):
    u'ValidationRuleSets object'
    _reg_clsid_ = GUID('{000D0A38-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ValidationRuleSets._com_interfaces_ = [IVValidationRuleSets]

tagVisInsertObjArgs = VisInsertObjArgs
tagVisUnitCodes = VisUnitCodes
tagVisShapeTypes = VisShapeTypes
LPVISIOOBJECT = POINTER(IVOLEObject)
IEnumVStatusBarItem._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVStatusBarItem)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVStatusBarItem)), 'ppenm' )),
]
################################################################
## code template for IEnumVStatusBarItem implementation
##class IEnumVStatusBarItem_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

tagVisPaperSizes = VisPaperSizes
tagVisCellVals = VisCellVals
class ValidationRuleSet(CoClass):
    u'ValidationRuleSet object'
    _reg_clsid_ = GUID('{000D0A39-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ValidationRuleSet._com_interfaces_ = [IVValidationRuleSet]

LPVISIOADDON = POINTER(IVAddon)
class ValidationRules(CoClass):
    u'ValidationRules object'
    _reg_clsid_ = GUID('{000D0A3A-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ValidationRules._com_interfaces_ = [IVValidationRules]

class CoauthMergeEvent(CoClass):
    u'CoauthMergeEvent object'
    _reg_clsid_ = GUID('{000D0A3F-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
CoauthMergeEvent._com_interfaces_ = [IVCoauthMergeEvent]

tagVisUIBarProtection = VisUIBarProtection
tagVisGuideTypes = VisGuideTypes
LPVISIOCONNECT = POINTER(IVConnect)
IVAccelTables._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVAccelTable' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in an AccelTables collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVAccelTable)), 'lplpAccelTable' )),
    COMMETHOD([dispid(1610743810), 'propget'], HRESULT, 'ItemAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVAccelTable)), 'lplpAccelTable' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVAccelTable)), 'lplpAccelTable' )),
    COMMETHOD([dispid(1610743812)], HRESULT, 'AddAtID',
              ( ['in'], c_int, 'lID' ),
              ( ['retval', 'out'], POINTER(POINTER(IVAccelTable)), 'lplpAccelTable' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVUIObject)), 'lplpVUIObject' )),
]
################################################################
## code template for IVAccelTables implementation
##class IVAccelTables_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVAccelTable
##
##    @property
##    def ItemAtID(self, lID):
##        '-no docstring-'
##        #return lplpAccelTable
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVUIObject
##
##    def AddAtID(self, lID):
##        '-no docstring-'
##        #return lplpAccelTable
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in an AccelTables collection is item 0.'
##        #return lplpAccelTable
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpAccelTable
##

class ValidationRule(CoClass):
    u'ValidationRule object'
    _reg_clsid_ = GUID('{000D0A3B-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ValidationRule._com_interfaces_ = [IVValidationRule]

class IVExtender(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    u'Dual interface of extensions Visio gives to a control contained in a Visio Document.'
    _iid_ = GUID('{000D0D0E-0000-0000-C000-000000000046}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation', 'hidden']
IVExtender._methods_ = [
    COMMETHOD([dispid(-2147418112), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'pbstr' )),
    COMMETHOD([dispid(-2147418112), 'propput'], HRESULT, 'Name',
              ( ['in'], BSTR, 'pbstr' )),
    COMMETHOD([dispid(-802), 'propget'], HRESULT, 'Object',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunk' )),
    COMMETHOD([dispid(-2147418104), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'ppunk' )),
    COMMETHOD([dispid(-801), 'hidden'], HRESULT, 'Delete'),
    COMMETHOD([dispid(-804), 'hidden'], HRESULT, 'Index'),
    COMMETHOD([dispid(-2147417856), 'propget'], HRESULT, 'Shape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417811), 'hidden'], HRESULT, 'VoidGroup'),
    COMMETHOD([dispid(-2147417810)], HRESULT, 'BringForward'),
    COMMETHOD([dispid(-2147417809)], HRESULT, 'BringToFront'),
    COMMETHOD([dispid(-2147417808)], HRESULT, 'ConvertToGroup'),
    COMMETHOD([dispid(-2147417804)], HRESULT, 'SendBackward'),
    COMMETHOD([dispid(-2147417803)], HRESULT, 'SendToBack'),
    COMMETHOD([dispid(-2147417812), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417800), 'propget'], HRESULT, 'ShapeParent',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417855), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417835), 'propget'], HRESULT, 'Master',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417843), 'propget'], HRESULT, 'Cells',
              ( ['in'], BSTR, 'localeSpecificCellName' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417842), 'propget'], HRESULT, 'CellsSRC',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'Column' ),
              ( ['retval', 'out'], POINTER(POINTER(IVCell)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417841), 'propget'], HRESULT, 'Data1',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417841), 'propput'], HRESULT, 'Data1',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417840), 'propget'], HRESULT, 'Data2',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417840), 'propput'], HRESULT, 'Data2',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417839), 'propget'], HRESULT, 'Data3',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417839), 'propput'], HRESULT, 'Data3',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417838), 'propget'], HRESULT, 'Help',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417838), 'propput'], HRESULT, 'Help',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417852), 'propget'], HRESULT, 'NameID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpLocaleIndependentName' )),
    COMMETHOD([dispid(-2147417847)], HRESULT, 'ShapeCopy'),
    COMMETHOD([dispid(-2147417846)], HRESULT, 'ShapeCut'),
    COMMETHOD([dispid(-2147417845)], HRESULT, 'ShapeDelete'),
    COMMETHOD([dispid(-2147417844), 'hidden'], HRESULT, 'VoidShapeDuplicate'),
    COMMETHOD([dispid(-2147417832), 'propget'], HRESULT, 'RowCount',
              ( ['in'], c_short, 'Section' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417831)], HRESULT, 'AddSection',
              ( ['in'], c_short, 'Section' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417830)], HRESULT, 'DeleteSection',
              ( ['in'], c_short, 'Section' )),
    COMMETHOD([dispid(-2147417829)], HRESULT, 'AddRow',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'RowTag' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417828)], HRESULT, 'DeleteRow',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' )),
    COMMETHOD([dispid(-2147417827), 'propget'], HRESULT, 'RowsCellCount',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417826), 'propget'], HRESULT, 'RowType',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417826), 'propput'], HRESULT, 'RowType',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417825)], HRESULT, 'SetCenter',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' )),
    COMMETHOD([dispid(-2147417822), 'propget'], HRESULT, 'Connects',
              ( ['retval', 'out'], POINTER(POINTER(IVConnects)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417821), 'hidden', 'propget'], HRESULT, 'ShapeIndex16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417820), 'propget'], HRESULT, 'Style',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417820), 'propput'], HRESULT, 'Style',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417816), 'propput'], HRESULT, 'StyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(-2147417819), 'propget'], HRESULT, 'LineStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417819), 'propput'], HRESULT, 'LineStyle',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417815), 'propput'], HRESULT, 'LineStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(-2147417818), 'propget'], HRESULT, 'FillStyle',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417818), 'propput'], HRESULT, 'FillStyle',
              ( ['in'], BSTR, 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417814), 'propput'], HRESULT, 'FillStyleKeepFmt',
              ( ['in'], BSTR, 'rhs' )),
    COMMETHOD([dispid(-2147417799)], HRESULT, 'Export',
              ( ['in'], BSTR, 'FileName' )),
    COMMETHOD([dispid(-2147417795), 'propget'], HRESULT, 'UniqueID',
              ( ['in'], c_short, 'fUniqueID' ),
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417794), 'propget'], HRESULT, 'ContainingPage',
              ( ['retval', 'out'], POINTER(POINTER(IVPage)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417793), 'propget'], HRESULT, 'ContainingMaster',
              ( ['retval', 'out'], POINTER(POINTER(IVMaster)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417792), 'propget'], HRESULT, 'ContainingShape',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417791), 'propget'], HRESULT, 'SectionExists',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417790), 'propget'], HRESULT, 'RowExists',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417789), 'propget'], HRESULT, 'CellExists',
              ( ['in'], BSTR, 'localeSpecificCellName' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417788), 'propget'], HRESULT, 'CellsSRCExists',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'Column' ),
              ( ['in'], c_short, 'fExistsLocally' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417787), 'propget'], HRESULT, 'LayerCount',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417786), 'propget'], HRESULT, 'Layer',
              ( ['in'], c_short, 'Index' ),
              ( ['retval', 'out'], POINTER(POINTER(IVLayer)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417785)], HRESULT, 'AddNamedRow',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], BSTR, 'RowName' ),
              ( ['in'], c_short, 'RowTag' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417784)], HRESULT, 'AddRows',
              ( ['in'], c_short, 'Section' ),
              ( ['in'], c_short, 'Row' ),
              ( ['in'], c_short, 'RowTag' ),
              ( ['in'], c_short, 'RowCount' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417783), 'propget'], HRESULT, 'EventList',
              ( ['retval', 'out'], POINTER(POINTER(IVEventList)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417782), 'propget'], HRESULT, 'PersistsEvents',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(-2147417770), 'propget'], HRESULT, 'ClassID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417768), 'propget'], HRESULT, 'ShapeObject',
              ( ['retval', 'out'], POINTER(POINTER(IDispatch)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417766)], HRESULT, 'OpenSheetWindow',
              ( ['retval', 'out'], POINTER(POINTER(IVWindow)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417765), 'hidden', 'propget'], HRESULT, 'ShapeID16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417763)], HRESULT, 'GetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' )),
    COMMETHOD([dispid(-2147417762)], HRESULT, 'GetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['out'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' )),
    COMMETHOD([dispid(-2147417761)], HRESULT, 'SetFormulas',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'formulaArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417760)], HRESULT, 'SetResults',
              ( ['in'], POINTER(_midlSAFEARRAY(c_short)), 'SRCStream' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'UnitsNamesOrCodes' ),
              ( ['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'resultArray' ),
              ( ['in'], c_short, 'Flags' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417759), 'propget'], HRESULT, 'FromConnects',
              ( ['retval', 'out'], POINTER(POINTER(IVConnects)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417757)], HRESULT, 'BoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
    COMMETHOD([dispid(-2147417756)], HRESULT, 'HitTest',
              ( ['in'], c_double, 'xPos' ),
              ( ['in'], c_double, 'yPos' ),
              ( ['in'], c_double, 'Tolerance' ),
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(-2147417755), 'propget'], HRESULT, 'Hyperlink',
              ( ['retval', 'out'], POINTER(POINTER(IVHyperlink)), 'lpdispRet' )),
    COMMETHOD([dispid(-2147417754), 'propget'], HRESULT, 'ProgID',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(-2147417753), 'propget'], HRESULT, 'ObjectIsInherited',
              ( ['retval', 'out'], POINTER(c_short), 'lpboolRet' )),
    COMMETHOD([dispid(-2147417749), 'propget'], HRESULT, 'ShapeID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-2147417748), 'propget'], HRESULT, 'ShapeIndex',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
    COMMETHOD([dispid(-2147417726), helpstring(u'Returns the created group shape')], HRESULT, 'Group',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppShape' )),
    COMMETHOD([dispid(-2147417725), helpstring(u'Returns the duplicated shape')], HRESULT, 'ShapeDuplicate',
              ( ['retval', 'out'], POINTER(POINTER(IVShape)), 'ppShape' )),
    COMMETHOD([dispid(-2147417724)], HRESULT, 'VisualBoundingBox',
              ( ['in'], c_short, 'Flags' ),
              ( ['out'], POINTER(c_double), 'lpr8Left' ),
              ( ['out'], POINTER(c_double), 'lpr8Bottom' ),
              ( ['out'], POINTER(c_double), 'lpr8Right' ),
              ( ['out'], POINTER(c_double), 'lpr8Top' )),
]
################################################################
## code template for IVExtender implementation
##class IVExtender_Impl(object):
##    def SetResults(self, SRCStream, UnitsNamesOrCodes, resultArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def Index(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Style = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def PersistsEvents(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    def Group(self):
##        u'Returns the created group shape'
##        #return ppShape
##
##    @property
##    def RowExists(self, Section, Row, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def DeleteSection(self, Section):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ShapeIndex(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def GetResults(self, SRCStream, Flags, UnitsNamesOrCodes):
##        '-no docstring-'
##        #return resultArray
##
##    def VoidShapeDuplicate(self):
##        '-no docstring-'
##        #return 
##
##    def AddRows(self, Section, Row, RowTag, RowCount):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def CellExists(self, localeSpecificCellName, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def HitTest(self, xPos, yPos, Tolerance):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def Master(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def ShapeDelete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Data1 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Data3 = property(_get, _set, doc = _set.__doc__)
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Data2 = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ClassID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    def SendBackward(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return ppunk
##
##    @property
##    def RowsCellCount(self, Section, Row):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def NameID(self):
##        '-no docstring-'
##        #return lpLocaleIndependentName
##
##    @property
##    def Object(self):
##        '-no docstring-'
##        #return ppunk
##
##    @property
##    def Connects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def ShapeCopy(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    FillStyle = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def ContainingShape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CellsSRC(self, Section, Row, Column):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ShapeParent(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def VoidGroup(self):
##        '-no docstring-'
##        #return 
##
##    def BringForward(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ShapeIndex16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _set(self, rhs):
##        '-no docstring-'
##    FillStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    def ConvertToGroup(self):
##        '-no docstring-'
##        #return 
##
##    def SetFormulas(self, SRCStream, formulaArray, Flags):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def BringToFront(self):
##        '-no docstring-'
##        #return 
##
##    def _get(self):
##        '-no docstring-'
##        #return pbstr
##    def _set(self, pbstr):
##        '-no docstring-'
##    Name = property(_get, _set, doc = _set.__doc__)
##
##    @property
##    def Hyperlink(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ObjectIsInherited(self):
##        '-no docstring-'
##        #return lpboolRet
##
##    @property
##    def EventList(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def Cells(self, localeSpecificCellName):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddNamedRow(self, Section, RowName, RowTag):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def _set(self, rhs):
##        '-no docstring-'
##    StyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def LayerCount(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ContainingPage(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def DeleteRow(self, Section, Row):
##        '-no docstring-'
##        #return 
##
##    def _get(self, Section, Row):
##        '-no docstring-'
##        #return lpi2Ret
##    def _set(self, Section, Row, lpi2Ret):
##        '-no docstring-'
##    RowType = property(_get, _set, doc = _set.__doc__)
##
##    def GetFormulas(self, SRCStream):
##        '-no docstring-'
##        #return formulaArray
##
##    def VisualBoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    def ShapeDuplicate(self):
##        u'Returns the duplicated shape'
##        #return ppShape
##
##    @property
##    def ContainingMaster(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def SendToBack(self):
##        '-no docstring-'
##        #return 
##
##    def Delete(self):
##        '-no docstring-'
##        #return 
##
##    @property
##    def SectionExists(self, Section, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Layer(self, Index):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ShapeID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    Help = property(_get, _set, doc = _set.__doc__)
##
##    def AddSection(self, Section):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def ShapeCut(self):
##        '-no docstring-'
##        #return 
##
##    def SetCenter(self, xPos, yPos):
##        '-no docstring-'
##        #return 
##
##    @property
##    def ShapeID16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ProgID(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def RowCount(self, Section):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Shape(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def Export(self, FileName):
##        '-no docstring-'
##        #return 
##
##    @property
##    def UniqueID(self, fUniqueID):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def FromConnects(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def BoundingBox(self, Flags):
##        '-no docstring-'
##        #return lpr8Left, lpr8Bottom, lpr8Right, lpr8Top
##
##    def _get(self):
##        '-no docstring-'
##        #return lpbstrRet
##    def _set(self, lpbstrRet):
##        '-no docstring-'
##    LineStyle = property(_get, _set, doc = _set.__doc__)
##
##    def _set(self, rhs):
##        '-no docstring-'
##    LineStyleKeepFmt = property(fset = _set, doc = _set.__doc__)
##
##    @property
##    def ShapeObject(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def CellsSRCExists(self, Section, Row, Column, fExistsLocally):
##        '-no docstring-'
##        #return lpi2Ret
##
##    def OpenSheetWindow(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    def AddRow(self, Section, Row, RowTag):
##        '-no docstring-'
##        #return lpi2Ret
##

IVFont._methods_ = [
    COMMETHOD([dispid(1), helpstring(u'Returns Visio Application instance hosting the object.'), 'propget'], HRESULT, 'Application',
              ( ['retval', 'out'], POINTER(POINTER(IVApplication)), 'lpdispRet' )),
    COMMETHOD([dispid(2), 'propget'], HRESULT, 'Document',
              ( ['retval', 'out'], POINTER(POINTER(IVDocument)), 'lpdispRet' )),
    COMMETHOD([dispid(3), 'propget'], HRESULT, 'Index',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(0), 'propget'], HRESULT, 'Name',
              ( ['retval', 'out'], POINTER(BSTR), 'lpbstrRet' )),
    COMMETHOD([dispid(4), 'hidden', 'propget'], HRESULT, 'ID16',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(5), 'propget'], HRESULT, 'Attributes',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(6), 'propget'], HRESULT, 'CharSet',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(7), 'propget'], HRESULT, 'PitchAndFamily',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(8), helpstring(u'Returns visObjTypeFont (27).'), 'propget'], HRESULT, 'ObjectType',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(9), 'propget'], HRESULT, 'Stat',
              ( ['retval', 'out'], POINTER(c_short), 'lpi2Ret' )),
    COMMETHOD([dispid(10), 'propget'], HRESULT, 'ID',
              ( ['retval', 'out'], POINTER(c_int), 'lpi4Ret' )),
]
################################################################
## code template for IVFont implementation
##class IVFont_Impl(object):
##    @property
##    def Index(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Stat(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Name(self):
##        '-no docstring-'
##        #return lpbstrRet
##
##    @property
##    def CharSet(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Application(self):
##        u'Returns Visio Application instance hosting the object.'
##        #return lpdispRet
##
##    @property
##    def PitchAndFamily(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def ID16(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Attributes(self):
##        '-no docstring-'
##        #return lpi2Ret
##
##    @property
##    def Document(self):
##        '-no docstring-'
##        #return lpdispRet
##
##    @property
##    def ID(self):
##        '-no docstring-'
##        #return lpi4Ret
##
##    @property
##    def ObjectType(self):
##        u'Returns visObjTypeFont (27).'
##        #return lpi2Ret
##

class ValidationIssues(CoClass):
    u'ValidationIssues object'
    _reg_clsid_ = GUID('{000D0A3C-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ValidationIssues._com_interfaces_ = [IVValidationIssues]

class ValidationIssue(CoClass):
    u'ValidationIssue object'
    _reg_clsid_ = GUID('{000D0A3D-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ValidationIssue._com_interfaces_ = [IVValidationIssue]

class Menus(CoClass):
    u'The menus of a Visio MenuSet. The first Menu in a Menus collection is item 0.'
    _reg_clsid_ = GUID('{000D0224-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Menus._com_interfaces_ = [IVMenus]


# values for enumeration 'VisUIButtonState'
visButtonUp = 0
visButtonDown = -1
visButtonMixed = 2
VisUIButtonState = c_int # enum
tagVisUIButtonState = VisUIButtonState
LPVISIOREPLACESHAPESEVENT = POINTER(IVReplaceShapesEvent)
class Colors(CoClass):
    u'The colors in a Visio Document. The first Color in a Colors collection is item 0.'
    _reg_clsid_ = GUID('{000D0A12-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
Colors._com_interfaces_ = [IVColors]

tagVisSnapSettings = VisSnapSettings
class Library(object):
    u'Microsoft Visio 15.0 Type Library'
    name = u'Visio'
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)

tagVisUIButtonStyle = VisUIButtonStyle
IVToolbarItems._methods_ = [
    COMMETHOD([dispid(-4), 'restricted', 'propget'], HRESULT, '_NewEnum',
              ( ['retval', 'out'], POINTER(POINTER(IUnknown)), 'lplpIEnumVToolbarItem' )),
    COMMETHOD([dispid(0), helpstring(u'The first item in a ToolbarItems collection is item 0.'), 'propget'], HRESULT, 'Item',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarItem)), 'lplpToolbarItem' )),
    COMMETHOD([dispid(1610743810)], HRESULT, 'Add',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarItem)), 'lplpToolbarItem' )),
    COMMETHOD([dispid(1610743811)], HRESULT, 'AddAt',
              ( ['in'], c_int, 'lIndex' ),
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarItem)), 'lplpToolbarItem' )),
    COMMETHOD([dispid(1610743812), 'propget'], HRESULT, 'Count',
              ( ['retval', 'out'], POINTER(c_int), 'lplCount' )),
    COMMETHOD([dispid(1610743813), 'propget'], HRESULT, 'Parent',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbar)), 'lplpVToolbar' )),
    COMMETHOD([dispid(1610743814), 'propget'], HRESULT, 'ParentItem',
              ( ['retval', 'out'], POINTER(POINTER(IVToolbarItem)), 'lplpVToolbarItem' )),
]
################################################################
## code template for IVToolbarItems implementation
##class IVToolbarItems_Impl(object):
##    @property
##    def Count(self):
##        '-no docstring-'
##        #return lplCount
##
##    @property
##    def _NewEnum(self):
##        '-no docstring-'
##        #return lplpIEnumVToolbarItem
##
##    @property
##    def Parent(self):
##        '-no docstring-'
##        #return lplpVToolbar
##
##    def AddAt(self, lIndex):
##        '-no docstring-'
##        #return lplpToolbarItem
##
##    @property
##    def Item(self, lIndex):
##        u'The first item in a ToolbarItems collection is item 0.'
##        #return lplpToolbarItem
##
##    def Add(self):
##        '-no docstring-'
##        #return lplpToolbarItem
##
##    @property
##    def ParentItem(self):
##        '-no docstring-'
##        #return lplpVToolbarItem
##

class ReplaceShapesEvent(CoClass):
    u'ReplaceShapesEvent object'
    _reg_clsid_ = GUID('{000D0A3E-0000-0000-C000-000000000046}')
    _idlflags_ = ['noncreatable']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{00021A98-0000-0000-C000-000000000046}', 4, 15)
ReplaceShapesEvent._com_interfaces_ = [IVReplaceShapesEvent]

LPVISIOCOAUTHMERGEEVENT = POINTER(IVCoauthMergeEvent)
LPVISIOEVENT = POINTER(IVEvent)
IEnumVStatusBar._methods_ = [
    COMMETHOD([], HRESULT, 'Next',
              ( ['in'], c_int, 'celt' ),
              ( ['out'], POINTER(POINTER(IVStatusBar)), 'rgelt' ),
              ( ['out'], POINTER(c_int), 'pceltFetched' )),
    COMMETHOD([], HRESULT, 'Skip',
              ( ['in'], c_int, 'celt' )),
    COMMETHOD([], HRESULT, 'Reset'),
    COMMETHOD([], HRESULT, 'Clone',
              ( ['out'], POINTER(POINTER(IEnumVStatusBar)), 'ppenm' )),
]
################################################################
## code template for IEnumVStatusBar implementation
##class IEnumVStatusBar_Impl(object):
##    def Reset(self):
##        '-no docstring-'
##        #return 
##
##    def Skip(self, celt):
##        '-no docstring-'
##        #return 
##
##    def Clone(self):
##        '-no docstring-'
##        #return ppenm
##
##    def Next(self, celt):
##        '-no docstring-'
##        #return rgelt, pceltFetched
##

__all__ = [ 'visThemeColorsAustin', 'visThemeColorsCivic',
           'visIconIXZOOMIN', 'visFCodeEditTime', 'LPVISIOSTYLE',
           'visCmdApplyMainTheme', 'VisWindowArrange',
           'visFmtDateyymmdd', 'visCmdTextVAlignTop',
           'LPVISIOTOOLBARSETS', 'visSnapToGuides',
           'visCmdDropAndContain', 'visSpatialIncludeGuides',
           'visPLOCtrlAsInput', 'visPageDrawResizeType',
           'visAnnotationLangID', 'visPLOPlaceTopToBottom',
           'visCmdInsertComment', 'visSplineAbrupt', 'LPVISIOLAYERS',
           'VisDiagramServices', 'visThickHorz', 'visFeet',
           'visIconIXREPEAT', 'visCmdTranslateOptions',
           'visDrawRegionIgnoreVisible', 'visObjLocalizeMerge',
           'visArrowSizeLarge', 'visPosNormal', 'visObjTypeAddons',
           'visThemeColorsMedianDark', 'visPageUnits',
           'visIconIXDCREROUTE', 'visSLOPermY', 'visSLOPermX',
           'visSnapToHandles', 'visSetTestCircular', 'visImageGamma',
           'visDSMetric', 'IVMenuSets', 'visLineEndArrowSize',
           'LPVISIOMSGWRAP', 'visCtrlIDTEXTSTYLELIST',
           'visPLOJumpHorizontal', 'visCtrlIDTEXTCOLOR',
           'visCmdApplyMainThemeToPage',
           'visPLOPlaceHierarchyRightToLeftTop',
           'visCtrlIDDESIGNMODE', 'visCmdShapeExplorer', 'EPages',
           'visConnectedShapesIncomingNodes', 'visRowVertex',
           'visLockEnd', 'visPublishDataRecordsetSelect',
           'visCmdOptionsReorderPages', 'visCmdDynamicGrid',
           'visCtrlIDINSERTCONTROL', 'visOpenDocked',
           'visPLOPlaceHierarchyBottomToTopRight',
           'visLOPlaceParentDefault', 'visIconIXTEXTALIGNMIDDLE',
           'visSectionLayer', 'visCmdRightDragMove',
           'tagVisFieldCategories', 'visOpenNoWorkspace',
           'visLeftEdge', 'visCmdStampTool', 'visPLOJumpVertical',
           'visCmdSpaceShapesAvoidPageBreaksToggle',
           'visTypeIsEmbedded', 'visCtrlIDTRANSPARENT',
           'visCmdMoveOffPageBreaks', 'visCmdFirst',
           'visCmdShapeCommentDelete', 'visCtrlIDFLIPHORZ',
           'visHorzAlignCenter', 'VisRoleSelectionTypes',
           'visSnapExtNone', 'visCmdObjectFlipVertical',
           'VisTypeSelectionTypes', 'visCmdInkCustomizePen',
           'visPrintPropertiesPagesX', 'visPrintPropertiesPagesY',
           'visSmartTagYJustify', 'visDataColumnPropertyUnits',
           'visCtrlIDLINECOLORS', 'visCtrlIDCUT',
           'visPrintPropertiesTopMargin', 'visCmdDataAutoLink',
           'visGuideFlags', 'visXFormPinX',
           'visGroupDontMoveChildren', 'visCmdFileSaveAsWebPage',
           'VisDocCleanActions', 'LPVISIOCURVE',
           'visLOPlaceHierarchyRightToLeftMiddle', 'visLORouteTreeWE',
           'visIconIXPRINT', 'visCmdHyperlinkList', 'visCaseAllCaps',
           'visTypeInk', 'EventList', 'visCmdInsertScrollBarControl',
           'visCharacterColor', 'visLORouteTreeEW',
           'visCmdStenNewMaster', 'visNURBSKnot', 'visCmdAppRestore',
           'visCmdDropManyOnPage', 'visListAlignLeftOrTop',
           'visXFormHeight', 'visXFormResizeDontCare',
           'visFCodeSubject', 'visMin', 'visCtrlIDFILLPATTERN',
           'visFieldFormat', 'visUIObjSetCntx_DEStyles',
           'visEvtShapeLinkDeleted', 'LPVISIOGRAPHICITEMS',
           'visLOIPlaceXPermeable', 'visThinDownDiagonal',
           'tagVisInsertObjArgs', 'visCmdHelpStencil',
           'VisLayoutDirection', 'visIconIXPAGELINEJUMPCODE_HORZ',
           'visAutoLinkObjectNameU', 'VisDocCleanTargets',
           'visMasFPCenter', 'visRoleSelCallout',
           'visBevelContourSize', 'tagVisWindowArrange',
           'visCmdFormatProtection', 'visSavePrevDetailedAll',
           'visFmtJDateyyyyXmXdX', 'tagVisUICmds',
           'visCtrlIDFORMATPAINTER', 'visNone', 'visTypeLineEnd',
           'visScrollRightPage', 'visCmdHideAllToolbars',
           'visCmdDataColumnSettingsDlg', 'visOpenDontList', 'IVRow',
           'visUIObjSetCntx_ToolbarHostingInPlace',
           'visBuiltInStencilBackgrounds', 'visRuleTargetDocument',
           'VisThemeEffects', 'visSketchSeed', 'visRulerNormal',
           'visSolid', 'visCmdFileExit', 'visThickDownDiagonal',
           'visUnitsString', 'visArrangeCascade', 'visPLOLineToLineY',
           'visPLOLineToLineX', 'visIconIXDOUBLE_UNDERLINE',
           'visSectionReviewer', 'visLayoutDirFlipHorz',
           'visFmtJDateyyyyXmXdXww', 'visDocCleanFixDefault',
           'visResizeDirNE', 'visSmartTagYJustifyMiddle',
           'visCmdMinimizeRibbonToggle', 'visRowNone',
           'visComponentStateModal', 'visDataColumnPropertyCalendar',
           'visCmdContainerAutoResizeExpandContract',
           'visResizeDirNW', 'visBevelContourColor',
           'ValidationRuleSet', 'visCmdSetLineEnds', 'visToolBarOn',
           'visAcre', 'visIconIXLINEJUMPSTYLE_3PT', 'visPropTypeBool',
           'visEvtCellTheData', 'visSLOJumpDefault',
           'visCmdViewDirectionToggle', 'InvisibleApp',
           'visFmtFeetAndInches', 'visRowBevelProperties',
           'VisOnComponentEnterCodes', 'visTypeTemplate',
           'visErrorNumber', 'visDocCleanActBadDisplayLists',
           'visCmdObjectRemoveFromGroup', 'visIconIXFILLCOLOR',
           'visGetFormulas', 'visCmdCancelInPlaceEditing',
           'visDeleteNoContainerMembers', 'tagVisSelectArgs',
           'visTFOKStandard', 'VisListAlignment',
           'visRowQuickStyleProperties', 'LPVISIOCELL',
           'VisFieldCategories', 'visCmdTextHAlignRight',
           'visCmdDRRectTool', 'IVMenu', 'visIconIXUNDO',
           'visRasterDiffusion', 'visCmdTextUline',
           'visCtrlTypeCOLORBOX', 'visEvtWinActivate',
           'visSpatialIncludeContainerShapes',
           'visCmdSetContainerProperties',
           'visCmdShapeTransparencyDlg', 'visCtrlIDCOLOR13',
           'visReviewerReviewerID', 'tagVisWindowStates',
           'visIconIXDELETE', 'VisLayoutHorzAlignType',
           'visRasterFitToScreenSize', 'visLORouteExtNURBS',
           'visEllipseCenterX', 'visEllipseCenterY',
           'visCmdDesignMode', 'visUIObjSetCntx_StencilRO',
           'visCmdFileCheckIn', 'visBlack', 'visThemeColorsBasic',
           'visCnnctTypeOutward', 'visLORouteFlowchartNS',
           'visEvtWindow', 'visIconIXSMALLCAPS',
           'visPublishDataRecordsetAll', 'tagVisUIButtonState',
           'visCmdDrawGlue', 'LPVISIORELATEDSHAPEPAIREVENT',
           'visBeginY', 'visFmtTimeAMPM_hmm_K',
           'visFmtMsoDateLongDay', 'visPPOLandscape',
           'visPPOPortrait', 'visCmdSetDynConnAppearanceStraight',
           'visLineArrowSize', 'visFmtDateDMYY',
           'visThemeColorsEquity', 'visPLOPlaceDefault',
           'visSmallCaps', 'visIconIXSHAPEEXT',
           'visSLOConFixedByAlgTo', 'visEvtCodeBeforeReplaceShapes',
           'visCmdShapeIntersect', 'visLineColor',
           'visVariationColorIndex', 'visFmtDateyyyymmdd_S',
           'LPVISIOENUMVSTATUSBARITEM', 'visCompNoSnap', 'visRowTab',
           'tagVisUIBarProtection', 'visEvtCodeDocCreate',
           'visObjTypeDocs', 'visLOPlaceCompactUpLeft',
           'LPVISIOSTATUSBAR', 'visCmdFormatText',
           'visGrpSelModeGroup1st', 'visCmdApplyDataGraphicAfterLink',
           'LPVISIOROW', 'visLayerActive', 'visCtrlIDRIGHTCOLORBOX',
           'visDocLangID', 'visEvtCodeCancelConvertToGroup',
           'visPrintAll', 'visSaveAsListInMRU',
           'visCmdStenImageMaster', 'visCmdInsertControlDlg',
           'visLORouteExtStraight', 'visAutoLinkMasterName',
           'visPageWin', 'IVPage', 'visContainerFlagsDefault',
           'visCmdSetDynConnRoutingStyle', 'visReplaceShapeKeepBasic',
           'visCmdPrivacySettings', 'visConnectFromError',
           'visIconIXDESIGNMODE', 'VisLinkReplaceBehavior',
           'visSLOPlowNever', 'visCmdAllowThemes',
           'visWideUpDiagonal', 'Path', 'LPVISIOSTATUSBARITEM',
           'VisConnectorEnds', 'visPrintPropertiesCenterX',
           'LPVISIOMENUSETS', 'visCmdIncreaseParaSpacing',
           'visObjTypeValidationIssue',
           'visLOPlaceHierarchyBottomToTopLeft',
           'visIconIXTEXTBLOCKTOOL', 'visCyan', 'visCmdRightDragCopy',
           'Documents', 'visDarkBlue', 'VisHorizontalAlignTypes',
           'visUIObjSetCntx_MEMasters', 'visIconIXICONBUCKET',
           'visContainerFlagsExcludeElements', 'visFmtTimeHMM',
           'visBBoxUprightText', 'visResizeDirN', 'visCtrlIDGRID',
           'visCmdToolsShowAddins', 'visIconIXROUTINGRECPT',
           'visListAlignCenterOrMiddle', 'visResizeDirE',
           'visCmdMultipleFileImport', 'visSnapToGrid',
           'visCopyPasteNoTranslate', 'visLOJumpStyleDefault',
           'visCompNoShow', 'visCmdSWShowToggle',
           'visCmdValidationIssuesArrangeByIgnored', 'visResizeDirW',
           'visResizeDirS', 'visEvtCodeDocDesign',
           'visRotateSelection', 'visCtlTip', 'VisUICtrlAtts',
           'tagVisGetSetArgs', 'visCmdSetDynConnLineJumpStyle_Square',
           'IEnumVToolbarSet', 'visUIObjSetIcon', 'visKilometers',
           'visObjTypeFonts', 'Styles', 'visGray50',
           'visCtrlIDSHAPELAYER', 'visTextDisplayClear',
           'visSLOConFixedRerouteAsNeeded', 'visServiceAll',
           'visLOBehavior', 'visCmdInsertRadioButtonControl',
           'visCmdAlignObjectLeft', 'visIconIXALIGNMIDDLE',
           'visRowExport', 'visCmdSetDynConnLineJumpStyle_Page',
           'visAutoLinkUserRowNameU', 'visIconIXPOINTSIZEUP',
           'visCmdObjectSendBackward', 'tagVisObjectTypes',
           'visCtrlTypeMESSAGE', 'visIconIXPREVIOUSPAGE',
           'LPVISIOCOLOR', 'visLineBeginArrowSize',
           'visUIObjSetCntx_ShapeSheet',
           'visUIObjSetCntx_BuiltinMenus', 'visFmtFraction2PlNoUnits',
           'visElapsedWeek', 'visCmdOpenActiveObject',
           'visCmdWindowCascadeAll', 'visLangUniversal',
           'LPVISIOOBJECT', 'visRowEvent', 'visRowUser',
           'visPrintSelection', 'visLOPlaceHierarchyTopToBottomRight',
           'visEvtCodeQueryCancelUngroup', 'visEvtConnect',
           'visIconIXBULLETS', 'visIconIXLINETOOL',
           'visIconIXCUSTOM_MAN', 'EPage', 'visRed',
           'visIconIXTEXTOOL', 'visQuickStyleMatrixVariant2',
           'visUIObjSetCntx_ShortcutMenus', 'visRulerCoarse',
           'visIconIXPRINTPREVIEW', 'visIconIXLARGE_PADLOCK',
           'visIconIXLAYOUTSHAPES', 'visObjTypeMouseEvent',
           'VisTraceFlags', 'visQuickStyleVariation', 'Toolbars',
           'visElapsedHour', 'visIconIXDECRPARA',
           'visFmtJDategggeXmXdXww', 'visPLOPlaceDepthDeep',
           'visPasteVisioMastersXML', 'visGetGUID',
           'visCmdSetDynConnLineJumpStyle_4pt',
           'visIconIXTEXTALIGNJUSTIFY', 'OLEObjects',
           'visThemeColorsNone', 'visWSAnchorRight',
           'visScaleMechanical', 'visScrollRight', 'visAnnotationY',
           'visAnnotationX', 'visCmdINETGoForward',
           'visCmdTextAllCaps', 'visCmdInsertPushButtonControl',
           'visFmt2PlDefUnits', 'VisFilterActions',
           'visCtrlIDRIGHTCOLORLABEL', 'visIconIXDHORZ_EQSPACE',
           'visFmtDateLong', 'visTall', 'visCtrlTypeSPINBUTTON',
           'visCmdStopIgnoringValidationRule',
           'visEmbellishmentIndex', 'visEvtCodeQueryCancelStyleDel',
           'visObjTypeMovedSelectionEvent', 'visLockThemeEffects',
           'visSectionTab', 'visCmdSelectionModeExtend',
           'visMenuAnimationSlide', 'visThemeColorsOffice',
           'visConnectError', 'visTagCnnctPtABCD',
           'visLORouteFlowchartEW', 'IEnumVStatusBarItem',
           'visCmdMSOInsertSymbolDlg', 'visContainerIncludeNested',
           'visCmdFileLastFile5', 'visCmdFileLastFile4',
           'visWinIDExternalData', 'visCmdFileLastFile6',
           'visCmdFileLastFile1', 'LPVISIOMENUITEMS',
           'visCmdFileLastFile3', 'visCmdFileLastFile2',
           'visRowXFormIn', 'visInchFrac',
           'visPLOPlaceHierarchyRightToLeftBottom',
           'visCmdViewPageBreaks', 'visCmdFileLastFile8',
           'visAnnotationDate', 'visRXModeDrawing',
           'visCtrlAlignmentCENTERBOX', 'LPVISIOENUMVTOOLBARSET',
           'visEvtCodeBeforeSuspend', 'visPLOJumpCode',
           'visWideDiagonalCross', 'visIconIXSHAPEHAND',
           'visIconIXFORMATPAINTER', 'visInvalWinID',
           'tagVisUIBarRow', 'IVShape', 'visWalkPrefEndNS',
           'visTagEllipticalArcTo', 'visCharacterStrikethru',
           'visAlignBottom', 'visFromPin', 'visCtrlIDALIGNMIDDLE',
           'visCmdPostDrag', 'visHLinkAddress', 'visCmdNMMeetNow',
           'visTypePage', 'visLOPlaceHierarchyTopToBottomLeft',
           'VisEventCodes', 'VisDocVersions', 'visWSAnchorBottom',
           'visBarPopup', 'visDocCleanActStaleResults',
           'visCtrlIDCOLOR2', 'visConnectToError',
           'visCtrlIDROTATECOUNTER',
           'visCmdSetDynConnRerouteOnCrossover',
           'visIconIXFLIPVERTICAL', 'visBlue',
           'visCmdINETEditHyperlink', 'visObjTypeChars',
           'visCtrlIDSHADOWSTYLE', 'visThemeColorsMetro',
           'visIconIXWEBPAGE', 'visIconIXEDITSTEN',
           'visFmtMsoDateShortSlash', 'visCmdToolbarsDlg',
           'visEvtDoc', 'visFmtFraction1PlDefUnits', 'VisRunTypes',
           'visFixedFormatPDF', 'VisSnapExtensions',
           'visCmdSSWindowCollapse', 'visCmdDropCallout',
           'visUIObjSetCntx_Issues', 'visCtrlIDSHAPELAYERLIST',
           'visIconIXCUSTOM_MUG', 'IEnumVAccelItem',
           'visScrollToRight', 'visContainerMemberInterior',
           'visAddDocked', 'StatusBarItems',
           'visCtrlIDROTATECLOCKWISE', 'visFeetAndInches',
           'visCmdSizePos', 'visCmdStenCleanup', 'visIcon',
           'visKeySingle', 'visGridFine', 'visGraphicBelow',
           'visNoFill', 'visIconIXPAGEBREAKS', 'visApplication',
           'visThemeColorsPerspective', 'visRowGradientStop',
           'visPLOPlaceCompactDownRight', 'visIconIXCONNECTORTOOL',
           'visCtrlIDTEXTJUSTIFY', 'visCmdFileLastFile10',
           'visAddStencil', 'visUIObjSetPal_RotationTool',
           'VisRefreshSettings', 'visQuickStyleColorBackground',
           'visCmdLastTile', 'visBegTrigger',
           'visCmdSetDynConnLineJumpStyle_5pt',
           'visCmdFileNewStencilDlg', 'ERow', 'visCmdFileLastFile17',
           'visObjTypeDataColumn', 'visCtrlIDCANCELFORMULA',
           'visEvtCodeDocSaveAs', 'visHorzCenter',
           'visCtrlIDDHORZ_EQSPACE', 'visCmdSWExpandRow',
           'visPLOPlaceHierarchyBottomToTopCenter',
           'visCmdFileLastFile19', 'visGuideXActive',
           'visCtrlIDVBEDITOR', 'IVDataRecordsetChangedEvent',
           'visReplaceShapeDefault', 'visRefreshOverwriteAll',
           'visAutomatic', 'visCtrlIDSTATUSMSG_8',
           'visCtrlIDSTATUSMSG_9', 'visCmdInsertDataMap',
           'visCtrlIDSTATUSMSG_2', 'visCtrlIDSTATUSMSG_3',
           'visCtrlIDSTATUSMSG_1', 'visCtrlIDSTATUSMSG_6',
           'visCtrlIDSTATUSMSG_7', 'visCtrlIDSTATUSMSG_4',
           'visCtrlIDSTATUSMSG_5', 'visIconIXQTRARCTOOL',
           'visCtrlIDCASCADE', 'visHorzForce',
           'visCmdValidationIssueNavigateToShape',
           'visAutoLinkNullMatchesNoFormula',
           'visCharacterDblUnderline', 'visSelIsSubItem',
           'visUIObjSetCntx_FullScreen', 'visXFormResizeSpread',
           'visLOFlipDefault', 'visThemeColorsUrban',
           'visWinIDStencilExplorer', 'visCmdSetDynConnRerouteFreely',
           'visCmdResearchTranslate', 'visIconIXNEW',
           'LPVISIOTOOLBARITEMS', 'VisScrollbarStates',
           'visCmdDataAutoLinkWiz', 'visLOPlaceLeftToRight',
           'visLayerValid', 'visCmdInkReviewPen', 'visLockBegin',
           'visCmdSetFillColor', 'visThemeColorsFoundryDark',
           'visCmdDrawTextStyle', 'visCmdRotateObject',
           'visUIObjSetNoDocument', 'LPVISIODOCUMENTS',
           'visXFormAngle', 'visMasIsLinePat', 'visLockMoveX',
           'visLockMoveY', 'visTypeBackground', 'visSectionParagraph',
           'visDarkRed', 'visGraphicPropertyLabel', 'visFillShdwBlur',
           'visLayerSnap', 'visRHINone', 'visActionHelp',
           'visLinkReplaceAlways', 'visCmdFormatDoubleClick',
           'VisGraphicField', 'visFmtTimeHMM24',
           'visSectionFirstComponent', 'visLORouteFlowchartSN',
           'visLayoutVertAlignTop', 'visNormal',
           'visSketchFillChange', 'visCmdView50', 'visPLOJumpDirX',
           'visPLOJumpDirY', 'visActionInvisible',
           'visIconIXNAMEONLY', 'visGrpDispModeNone',
           'visCmdDeleteDataRecordset', 'visCmdCustomPropertySets',
           'visTextPosAfterBullet', 'visCmdSetPageLineJumpCode_Horz',
           'visMenuAnimationUnfold', 'visObjTypeGraphicItem',
           'ToolbarSet', 'visDarkYellow', 'visWordRun', 'visEndX',
           'visRowScratch', 'visAutoLinkShapeText', 'visFCodeAngle',
           'visThemeColorsBlackTie', 'visCmdFullScreenMode',
           'visGray40', 'visReflectionDist', 'visTypeSelGuide',
           'visEvtCodeCancelQuit', 'visCtrlIDFONTLABEL',
           'visIconIXDVERT_EQSPACE', 'VisRemoveHiddenInfoItems',
           'visVersion110', 'visTopEdge', 'visSavePrevNone',
           'visLockTextEdit', 'visGuideY', 'visGuideX',
           'visTagRelLineTo', 'visScopeIDInval', 'visVertAlignTop',
           'visCmdFormatShadow', 'Comments', 'visEvtCodeAfterResume',
           'visCtrlIDCOLOR14', 'visInsertIcon',
           'visCtrlSpacingNEW_ROW_PALETTERIGHT', 'visCmdBullets',
           'visRowFill', 'visCmdFileSaveAsMacroDrawing',
           'visLayerVisible', 'IVGraphicItem', 'IVGlobal',
           'visTypeSelBitmap', 'visCtrlIDDISTRIBUTE',
           'visLayoutDirRotateLeft', 'visEllipseMajorY',
           'visEllipseMajorX', 'visCtrlIDLEFTCOLORLABEL',
           'visIconIXFULLSCREEN', 'visEvtCodeDocRunning',
           'visCmdCreateShortcut', 'visCmdApplyMainThemeToDocument',
           'visDataColumnPropertyCurrency', 'visForeDotsNarrow',
           'visCmdFileSummaryInfoDlg', 'visIndentFirst',
           'visCmdNewFromExisting', 'visCmdInsertSpinControl',
           'IVMouseEvent', 'visLayoutIncrSpace', 'visLockFormat',
           'visSectionSmartTag', 'visFmtFeetAndInches1Pl',
           'visScrollNoneY', 'visScrollNoneX', 'visLOJumpStyle3Point',
           'visFmtTimeHHMM', 'visPasteText', 'visRasterProgressive',
           'visIconIXMAILRECPT', 'visFieldCalendar',
           'tagVisDrawSplineFlags', 'visSLOJumpNeither',
           'visDocCleanActMissingSubs', 'visGroupIsSnapTarget',
           'visCmdInkStockPen1', 'visCmdShowLineJumpsToggle',
           'visCmdSelectionModeLasso', 'visGetOrMakeGUIDWithUndo',
           'VisVerticalAlignTypes', 'VisUIBarProtection',
           'visModalDisableVisiosFrame', 'visModalNoBeforeAfter',
           'visCmdSWShowSectionsDlg', 'visCmdInkStockPen2',
           'visBulletIndex', 'visCmdProgRefHelp', 'visFontRaster',
           'visFmtDateYYYYMMMDDD_C', 'EDocument',
           'visCtrlIDALIGNLEFT', 'visGraphicTopEdge',
           'visCmdInkStockPen4', 'visAngleUnits',
           'visCmdWindowShowDrawPage', 'Menu',
           'visCmdINETKnowledgeBase', 'visDocAddMarkup',
           'visLOJumpStyle2Point', 'visCtrlIDSHAPELAYERCOMBO',
           'visCmdObjectDistributeDlg', 'visCompPath',
           'visUIObjSetCntx_PageTabNavigation', 'IEnumVMenu',
           'visRasterRotateLeft', 'visSetUniversalSyntax',
           'tagVisRowIndices', 'visUIObjSetInPlace', 'LPVISIOMENU',
           'visCmdMsoAutoCorrectDlg', 'ValidationRules',
           'visEvtCodeQueryCancelConvertToGroup', 'visSLOPlowDefault',
           'visRowXForm1D', 'visUIObjSetPal_DistributeShapes',
           'IVStyles', 'visArcSweepFlagConcave', 'visPLOSplit',
           'visCtrlTypePALETTEBUTTONNOMRU', 'visCtrlIDTEXTSTYLELABEL',
           'visEvtCodeMouseDown', 'visSLOConFixedRerouteOnCrossover',
           'visSnapToNone', 'visObjTypeApplicationSettings',
           'visLORouteSimpleHV', 'visUIObjSetText',
           'visQuickStyleMatrixNone', 'visCompNoLine',
           'visPLOLineAdjustToNone', 'visBarNoResize',
           'VisContainerMemberState', 'visDefaultSaveCurrentBinary',
           'visScratchY', 'visScratchX', 'visLegendNoContents',
           'visScratchD', 'visScratchC', 'visScratchB', 'visScratchA',
           'GraphicItem', 'visDataRecordsetDontCopyLinks',
           'visThemeColorsVerveLight', 'visTight', 'visPercent',
           'visGluedShapesOutgoing1D', 'visLORouteStraight',
           'visPoints', 'visDefaultSaveCurrentMacroEnabled',
           'visThemeColorsHardcover', 'visUIObjSetCntx_Hyperlink',
           'visIconIXDCREROUTE_ASNEEDED', 'visObjKeywords',
           'visDocPreviewQualityDraft', 'visAutoLinkObjectName',
           'visCmdReplaceShape', 'visCmdObjectBringForward',
           'visIconIXCUSTOM_DOWN', 'visRowHyperlink',
           'visCmdFormatLine', 'visCmdFormatTabs', 'VisZoomBehavior',
           'visTypeDataGraphic', 'visSLOLineRouteExt',
           'VisUIMenuAnimation', 'visCustPropsPrompt',
           'visCmdTextStyle', 'visEvtIdle',
           'visObjTypeServerPublishOptions',
           'visCmdReinstateValidationIssue', 'visCmdShapeCommentDlg',
           'visCtrlIDTEXTCENTER', 'visIconFormatVisio', 'visPasteEMF',
           'VisContainerTypes', 'visUIObjSetCntx_TextEdit',
           'visCmdFileSave', 'visCmdMsoMediaGallery',
           'visDataColumnPropertyLangID', 'visUIObjSetBinderInPlace',
           'visIconIXTEXTALIGNRIGHT', 'visCmdPanZoom',
           'visPLOPlaceCompactUpRight', 'visLayerColorTrans',
           'visRowInval', 'visPLOPlaceHierarchyTopToBottomRight',
           'visThemeColorsEquityLight',
           'visUIObjSetPopup_LineJumpCode', 'visDocTypeInval',
           'visTypeHeading', 'visCharacterStyle', 'visFmtDateShort',
           'visFmtJDateaxpxhmm', 'visPageShdwOffsetX',
           'visPageShdwOffsetY', 'visEvtCellXFMod',
           'visCmdSetLanguageDlg', 'IVEventList',
           'visCtrlIDDISTRIBUTESHAPES', 'visIconIXTEXTALIGNCENTER',
           'visDeleteGUIDWithUndo', 'VisPrimaryKeySettings',
           'visPLOPlowAll', 'visPLOJumpReverseDisplayOrder',
           'visSelModeSkipSuper', 'visCmdDataRecordsetSetCommand',
           'visCmdInsertMemberIntoList', 'tagVisFieldFormats',
           'visObjTypeValidationIssues', 'visObjTypeMasterShortcuts',
           'visCmdOptionsPreferences', 'visCmdIconPencilTool',
           'visCmdPauseRecordingMacro', 'visCmdInsertWordArt',
           'IVMaster', 'visCmdAlignObjectCenter', 'visBBoxNoNonPrint',
           'tagVisSpatialRelationCodes', 'visCtrlIDGLUE',
           'visListDirTopToBottom', 'visLOFlagsPlacable',
           'LPVISIODATARECORDSET', 'visCiceros',
           'visRasterRotateRight', 'visCmdFormatBehavior',
           'visCmdSWFormula', 'visIconIXDELETECOMMENT',
           'visCtrlIDDVERT_EQSPACE', 'visCmdEditLinks',
           'visActionAction', 'IVEvent', 'visRowField',
           'visPLOLineAdjustFrom', 'visEditionPremium',
           'visLOJumpStyleSquare', 'visCmdRightDragCancel',
           'visCmdUFEditClear', 'visLogical', 'visScrollBarBoth',
           'Application', 'visFillShdwOffsetX', 'visFillShdwOffsetY',
           'visRowRulerGrid', 'visTypeMarkup', 'visScrollUpPage',
           'visTypeIconSet', 'visCmdSetPageSize', 'visCmdShapeHand',
           'visIconIXSHAPESHEET', 'visCtlProportional',
           'visObjTypeOLEObject', 'visCmdLayoutSpacingDlg',
           'visBBoxDrawingCoords', 'visCtrlTypeSPACER',
           'visIconIXCUSTOM_HEART', 'VisDataColumnProperties',
           'visWideVert', 'visLineColorTrans',
           'visIconIXSHAPEEXPLORER', 'visDocCleanActAll',
           'visCmdShapeTransparency', 'visPropTypeCurrency',
           'visCmdFileSaveAsVDX', 'VisExistsFlags',
           'VisTextDisplayQualityTypes', 'visCmdStenIconAndName',
           'visCmdToolsRunVBE', 'visIconIXTEXTALIGNBOTTOM',
           'visCharacterLangID', 'visArrangeTileHorizontal',
           'visEvtCodeWinPageTurn', 'visCmdDrawRegion',
           'visIconIXNEXTPAGE', 'visKeyShift', 'StatusBarItem',
           'visTypeIsLinked', 'visAspectRatio', 'visWideHorz',
           'visDynFeedback', 'visButtonIconandCaption', 'Font',
           'visCmdFileSaveAsDrawingPreviousFileFormat',
           'visSplineKnot2', 'visCtrlIDOVALTOOL', 'visObjTypePath',
           'visThemeColorsMonochrome', 'visCmdLockContainer',
           'visCmdSizeTextBlock', 'visCtrlIDFILLSTYLECOMBO',
           'visRasterFitToPrinterSize', 'visUIObjSetCntx_DEShape',
           'visSnapExtCurveExtension', 'VisContainerFlags',
           'visPaperSizeD', 'visPaperSizeE', 'visCtrlTypeLISTBOX',
           'visThemeColorsPushpin', 'visCmdSpellingChange',
           'ESection', 'visPaperSizeC', 'visNoObjHandles',
           'visCmdSWPasteNameDlg', 'visPasteRichText',
           'visCmdInsertListBoxControl', 'visBulletString',
           'visFSTPageDefault', 'tagVisEventCodes', 'visXGridDensity',
           'visEvtDataRecordset', 'visReplaceLockText',
           'visXFormFlipX', 'visXFormFlipY', 'visPaperSizeA3',
           'visGray70', 'visDarkGray', 'visPLOJumpNone',
           'visObjTypeValidationRuleSet', 'visDataColumnPropertyType',
           'visCmdIncreaseIndent', 'visConnectorSchemeIndex',
           'visSavePreviewDetailedAll', 'VisShapeIDs',
           'visSavePrevDraftAll', 'visCtrlIDLAYERPROPERTIES',
           'visCmdLicenseVerification', 'tagVisRowTags',
           'visPublishPageSelect', 'visRaster16ColorGrayScale',
           'visSnapToVertices', 'visAutoLinkCustPropsLabel',
           'visBevelBottomWidth', 'visCmdDelControlPt',
           'visCtrlIDINCRINDENT', 'visUnitsPolyline',
           'visIconIXPANZOOM', 'visEvtCodeAfterCoauthMerge',
           'visCmdNextWindow', 'visVariationStyleIndex',
           'visIconIXPAGELINEJUMPCODE_VERT',
           'visIconIXLINEJUMPSTYLE_GAP', 'visFCodeManager',
           'visRasterCMYK', 'visLOFlipX', 'visRowForeign',
           'tagVisSnapExtensions', 'tagVisDocVersions',
           'visCtrlIDGUIDE', 'visIconIXWHOLEPAGE',
           'visServiceVersion140', 'visFmtCDateieXmmmmXdddd',
           'visIconIXSNAP_LINES', 'ContainerProperties',
           'visWalkPrefBegNS', 'visCmdINETGoBack', 'visFCatNotes',
           'visObjTypeDataRecordset', 'visStencil',
           'visCmdShapesWindow', 'visSmartTagXJustifyRight',
           'visCmdDataSelectorDlg', 'visAutoLinkObjectData1',
           'visThemeTypeIndex', 'visCmdStenNamesUnderIcons',
           'visCmdTaskPaneReviewer', 'visSoftEdgesSize',
           'visTraceEvents', 'visDocCleanTargMasters',
           'visCtlProportionalHidden', 'visCmdGoToPageToolbar',
           'visZoomInPlaceContainer', 'visSectionInval',
           'visPageLockDuplicate', 'visElapsedSec',
           'visEvtCodeCancelSelGroup', 'visCmdDRPencilTool',
           'visUIObjSetPal_LineEnds', 'visTransparent',
           'visCmdTaskPane', 'visObjTypeValidationRules',
           'visCmdHelpAboutVisio', 'visCmdFileSaveAsEMF',
           'visCmdFitContainerToContents',
           'visCmdObjectConvertToGroup', 'visSmartTagXJustifyCenter',
           'visCtrlIDSPELLING', 'visTypeDrawing',
           'IVValidationRuleSets', 'IVKeyboardEvent',
           'visCmdObjectAddToGroup', 'VisUniqueIDArgs', 'Pages',
           'visCmdCenterDrawing', 'visIconIXLINEJUMPSTYLE_ARC',
           'Fonts', 'visThemeColorsClarity', 'Windows', 'IVMenuSet',
           'visCmdFileNewBlankStencilUS', 'GraphicItems',
           'visQuickStyleShadowColor', 'visRasterUseCustomResolution',
           'visSelect', 'visFilterMouseMoveDragEnter',
           'visCtrlIDGROUP', 'visVersionUnsaved', 'visRowTextXForm',
           'visCmdModConnectPt', 'visIconIXTEXTALIGNTOP',
           'visAddDeclineAutoRefresh', 'visCmdSizeObjects', 'Color',
           'VisRasterExportFlip', 'visCmdTextBlockTool',
           'visFillShdwPattern', 'LPVISIOVALIDATIONRULE',
           'visCmdNextMarkup', 'visIconIXREDO', 'visIconIXPASTE',
           'VisSVGExportFormat', 'visIconIXCUSTOM_FEET',
           'VisOpenSaveArgs', 'visFillGradientAngle',
           'visDocExIntentPrint', 'VisGraphicPositionVertical',
           'visCmdCustProp', 'visFrgnImgClippingPath',
           'visWinIDSizePos', 'visRasterBiLevel', 'IVDocument',
           'visBarNoHorizontalDock', 'visUIVNormal', 'visCtlYDyn',
           'VisSelectItemStatus', 'visIconIXZOOMOUT',
           'visPLOAvoidPageBreaks', 'VisPaperSizes',
           'visTextDisplayFaster', 'visCmdSWPasteFunctionDlg',
           'tagVisUIObjSets', 'visHalfAndHalf', 'visGluedShapesAll2D',
           'Hyperlinks', 'visCmdDropAndInsertIntoList',
           'visObjTypeDataRecordsets', 'visUIObjSetPal_Shadow',
           'LPVISIOTOOLBARITEM', 'visObjTypeKeyboardEvent',
           'visFCatPage', 'visFmtMsoDateShortAlt', 'visCtlXDyn',
           'visCmdOptionsEditBackground', 'visIconIXCUSTOM_EIGHTBALL',
           'visCmdDRConnectorTool', 'visAutoLinkObjectData3',
           'visEvtCodeQueryCancelSelDel', 'visFCodeNumberOfPages',
           'visBarNoVerticalDock', 'visLegendPopulate',
           'visSLOSplitAllow', 'visIconIXITALIC', 'visIconIXCOPY',
           'visContainerFormatFitToContents', 'tagVisGlueSettings',
           'IVDataRecordsets', 'visPropTypeString',
           'VisSectionIndices', 'visDocExIntentScreen',
           'visCmdInsertCheckBoxControl', 'visLayerPrint',
           'visCmdAddMemberToContainer', 'visDistanceFromGround',
           'visCmdMove2D', 'visCmdWindowNewWindow',
           'visCustPropsLabel', 'visRowText',
           'visUIObjSetCntx_DEMasters', 'visIconIXCUSTOM_FISH',
           'Global', 'visCmdSetPagePlow', 'VisPublishDataRecordsets',
           'visCmdShapeSearchWindowToggle', 'visFmtDateDMMMYYYY',
           'visObjTypeFont', 'visCtrlTypeCOMBOBOX_SORTED',
           'visCmdDropOnPage', 'visCtlType', 'visGlueTypeWalking',
           'visCtrlIDPOINTSIZELIST', 'visCmdAlignBox',
           'visSelModeSkipSub', 'visUIObjSetCntx_ToolbarInPlace',
           'visCtrlIDZOOMIN', 'visKeyRowOrder', 'visCmdStenSaveAs',
           'visCtrlSpacingVARIABLE_AFTER', 'visDefaultSaveCurrentXML',
           'visCmdSetLineWeight', 'IVAccelTables',
           'visWinIDShapeSearch', 'visServiceNone',
           'visCmdViewCustom', 'visSLORelChanged',
           'visDefaultSavePreviousBinary', 'visCmdINETUserSearchPage',
           'visAutoLinkReplaceExistingLinks', 'VisSavePreviewMode',
           'visPurple', 'visDocCleanActEmptyRowsAndSects',
           'visAddMacrosDisabled', 'visTxtBlkRightMargin',
           'visPLOPlaceCircular', 'visLOPlaceCompactRightUp',
           'VisCellError', 'visDeselectAll', 'visIconIXVBEDITOR',
           'visCmdAlignObjectRight', 'visNURBSWeight', 'IVWindows',
           'IVValidationRule', 'visBarNoChangeDock',
           'visTypeSelMetafile', 'visIconIXSIZEPOS', 'visCmdTextBold',
           'visCmdLanguagePreferencesDlg', 'visCmdMasterSetup',
           'visCtrlIDREDO', 'tagVisPaperSizes',
           'visCmdTaskPaneThemeColors', 'visSectionFillGradientStops',
           'visIconIXBOLD', 'LPVISIOADDONS', 'LPVISIODATACONNECTION',
           'visSmartTagName', 'visIconIXIMAGE', 'IVCurve',
           'visPasteBitmap', 'visCmdSaveAsFixedFormatDlg',
           'visBevelDepthSize', 'visBarNoCustomize', 'visControl2Y',
           'visWSNone', 'visSelTypeByLayer', 'visIconIXSTAMPTOOL',
           'visCmdWindowShowMasterObjects', 'visFmt3PlDefUnits',
           'LPVISIOENUMVTOOLBARITEM', 'visInvalShapeID',
           'visCmdObjectFragment', 'visGuideIntersect',
           'visFmtDateyyyymd_J', 'IVValidationIssue',
           'visQuickStyleColorAccent4', 'visFlipVertical',
           'visCtrlIDPASTE', 'visIconIXLASTPAGE',
           'visPasteVisioMasters', 'visImageBrightness',
           'visFmtTimeHMMAMPM', 'visObjTypeWindows',
           'visCmdAutoConnectToggle', 'visCenterViewSelectShape',
           'visTabPos', 'visGridNormal', 'visCmdUpdateContentCache',
           'visCaseInitialCaps', 'visCmdDrawAddGuide',
           'visQuickStyleColorAccent5', 'visCmdWindowShowShapeSheet',
           'visCharacterCase', 'visFCodeWidth', 'visCmdInsertPageTab',
           'visCtrlIDBRINGFRONT', 'visRasterFitToSourceSize',
           'ToolbarSets', 'visMouseRight', 'visStencilAddon',
           'visMSUS', 'visCtrlIDFILLCOLORS',
           'visPLOLineAdjustFromNone', 'IVDataColumn',
           'visCmdTextDoubleStrikethrough', 'visTypeIsControl',
           'visGray60', 'visGlowColor', 'visCmdTextRotate90',
           'LPVISIOSTYLES', 'tagVisUICtrlIDs',
           'visCharacterDoubleStrikethrough', 'visCtrlIDFLIPVERT',
           'visYRulerDensity', 'visEvtCodeBefDocSaveAs',
           'visLORouteOrgChartSN', 'visLineRounding',
           'visUIObjSetCntx_ConnectPtType', 'visCmdDropOnStencil',
           'visCmdToolsSecurity', 'IVOLEObjects',
           'visCmdInsertMicrosoftGraph', 'visComplexItalic',
           'visIconIXCLEAR', 'visLayerNameUniv', 'visFmtJDateyyyymd',
           'visObjTypeOLEObjects', 'IVAccelTable', 'visCtrlTypeLABEL',
           'visUseGroupGradient', 'visCmdShapeGalleryAddOn',
           'visIconIXCUSTOM_HOURGLASS', 'visFCodeMasterName',
           'visFmtFraction1PlNoUnits', 'visMouseMoveDragStatesBegin',
           'visIconIXCUSTOM_PAGES', 'visZoomVisioExact',
           'visSpaceBefore', 'visEvtShapeDataGraphicChanged',
           'visNonPrinting', 'visFmtDategggemdww_J',
           'visBuiltInStencilLegends', 'visObjNoProofing',
           'visSLOPlowAlways', 'visSpatialBackToFront',
           'visEvtCodeCancelDocClose', 'visIconIXINSERT_OBJECT',
           'visCtrlIDCLEAR', 'visCmdAddControlPt', 'visRotateShapes',
           'visContainerExcludeNested', 'visCtrlAlignmentRIGHTBOX',
           'visCtrlIDSNAP', 'visPrintPropertiesBottomMargin',
           'visCmdDeleteTheme', 'visPublishPageAll',
           'visFCodeObjectName', 'visThemeColorsEquityDark',
           'VisCutCopyPasteCodes', 'IVOLEObject', 'visCompoundType',
           'visCtrlTypeLISTBOXDRAW', 'visRowAnnotation',
           'visUIObjSetCntx_DEMaster', 'visArrowSizeVeryLarge',
           'visRasterModifiedHuffman', 'VisLayoutIncrementalType',
           'visCtrlIDLINESTYLECOMBO', 'visIconIXALIGNBOX', 'Curve',
           'visKeepTextFlat', 'visTypeSelOLE', 'visFmtMsoFEExtra2',
           'visStyleIncludesLine', 'visFmtMsoFEExtra1',
           'visFmtMsoFEExtra4', 'visFmtMsoFEExtra5',
           'VisAutoLinkBehaviors', 'visThemeEffectsButton',
           'visFilterMouseMoveDragLeave', 'visGraphicRight',
           'visTxtBlkOpaque', 'visQuickStyleColorVariant4',
           'visQuickStyleColorVariant5', 'visQuickStyleColorVariant6',
           'visAutoLinkGenericProgressBar', 'visLinePattern',
           'visQuickStyleColorVariant1', 'visTxtBlkVerticalAlign',
           'visQuickStyleColorVariant3', 'visLockCalcWH',
           'IVMasterShortcut', 'visLockDelete', 'tagVisUIIconIDs',
           'visCmdSetFillShadow', 'visCmdABarToggleFloat',
           'visSLOConFixedRerouteNever', 'visSavePrevDraft1st',
           'visStatTouched', 'visThemeEffectsSubdued',
           'visTxtBlkLeftToRight', 'VisUICtrlTypes',
           'visEvtCodeBeforeSuspendEvents',
           'visCmdValidationIssuesArrangeByRule',
           'visCharacterPerpendicular',
           'visObjTypeDataRecordsetChangedEvent', 'visFCodeKeyWords',
           'visCmdTaskPaneDataGraphic', 'visIconIXDRAWINGEXPLORER',
           'visFieldType', 'visCmdDrawSnap', 'visFont0Alias',
           'visCtrlIDROTATETOOL', 'visAutoLinkGeometryAngle',
           'visCtlLockedHidden', 'visBarNoMove',
           'visBevelLightingType', 'visTraceAddonInvokes',
           'visWideCross', 'visEvtCodeCancelPageDel',
           'visCmdListInsertAfter', 'visLocalizeBulletFont',
           'visFilterMouseMoveNoDrag', 'visCtrlIDSHAPEEXPL',
           'visLockAspect', 'visComment', 'visInvalDocID',
           'LPVISIOSHAPES', 'visCustPropsSortKey', 'IVAddon',
           'visPrintPropertiesPaperKind', 'visSavePreviewDetailed1st',
           'visCmdImageProperties', 'visCtrlTypeSWATCH', 'IVExtender',
           'visIconIXWORDART', 'visSLOSplittableAllow',
           'visLockWidth', 'visCmdViewGrid', 'visSubSelect',
           'visCtrlIDFILLPATTERNS', 'visCmdINETPasteAsHyperlink',
           'visCmdStenNameOnly', 'visObjTypeContainerProperties',
           'EMasters', 'visThemeTypeColor', 'visFmt1PlNoUnits',
           'visHorzLeft', 'visCmdInsertLabelControl',
           'visTypeThemeEffects', 'visCmdSWShapeActionDlg',
           'visLOJumpStyleArc', 'visWinIDFormulaTracing',
           'visIconIXPAGELINEJUMPCODE_NONE', 'visCtrlIDPREVIEW',
           'Event', 'visCmdDataRefresh', 'tagVisFromParts',
           'visThemeColorsOrigin', 'visHitInside',
           'visDocCleanActDuplicateSubs', 'VisFieldCodes',
           'visCmdApplyDataGraphic', 'visFmtTimeAMPMhhmm_S',
           'visButtonUp', 'visRowLast', 'visCmdFileSaveAsTemplate',
           'visSnapExtCenterAxes', 'visQuickStyleFillColor',
           'visCmdDrawLineStyle', 'visIconIXMINIMIZE',
           'visPLOPlaceDepthShallow', 'visCmdCreateEditMaster',
           'visRHIStyles', 'IVValidationRuleSet',
           'visCtrlIDGOFORWARD', 'visUIObjSetPal_LineWeights',
           'visExistsAnywhere', 'visActionFlyoutChild', 'visObjHelp',
           'IVFont', 'visFillForegndTrans', 'visFmtMsoTime24',
           'visUIObjSetCntx_DataExplorerList', 'visCtrlSpacingNONE',
           'visControl1X', 'visControl1Y', 'visGraphicTop',
           'LPVISIOMASTERSHORTCUTS', 'AccelItems',
           'visEvtCodeCancelMasterDel', 'visHLinkExtraInfo',
           'visIconIXROTATECOUNTERCLOCKWISE',
           'visCmdValidationIssuesWindowToggle', 'visThemeTypeFont',
           'visHLinkSortKey', 'visPaperSizeA4', 'IVDispExtender',
           'visCtrlIDRECTTOOL', 'visCmdToolsLayoutShapesDlg',
           'visPaperSizeA5', 'LPVISIOTOOLBAR', 'visRulerFine',
           'visCmdFormatBlock', 'visYRulerOrigin',
           'visSectionAnnotation', 'visFmt2PlNoUnits',
           'visListDirLeftToRight', 'visPLOJumpProhibitAll',
           'visCmdUFEditDuplicate', 'visCustPropsCalendar',
           'visComplexBold', 'visUIObjSetCntx_DEPage',
           'IVInvisibleApp', 'visRowFirst', 'visUIObjSetActiveXDoc',
           'visSetFormulas', 'visFmtMsoTimeDateSecPM',
           'visRasterAdaptive', 'visCopyPasteNoContainerMembers',
           'visCmdFormatCustPropDef', 'ValidationIssue',
           'visUIObjSetPal_FillColors', 'visToolBarMSOffice',
           'visUIObjSetPal_Rectangle_Tool', 'visCtrlIDNEWWINDOW',
           'visReflectionTrans', 'visThemeColorsAspect',
           'visMasLPAnnotate', 'ECharacters', 'visCompNoFill',
           'visOpenCopyOfNaming', 'visRotateGradientWithShape',
           'visPosSuper', 'visCmdInsertLegendVertical1',
           'visSpatialContain', 'visDocMetric',
           'visCmdSSWindowExpand', 'visDocPreviewQuality',
           'DataConnection', 'visCmdFormatCorners', 'visTxtBlkBkgnd',
           'visCmdObjectBringToFront', 'ECell',
           'visDocCleanActBadFieldMarks', 'visFCatCustom',
           'visFmtTimeAMPMhmm_J', 'visCmdObjectRotate90',
           'IVRelatedShapePairEvent', 'visSpatialOverlap',
           'visConnectorBothEnds', 'visRowPrintProperties',
           'visRasterNoFlip', 'visServiceStructureFull',
           'visFmtMsoDateShort', 'Extender', 'visCmdAutoAlign',
           'visCmdInsertClipArt', 'visCtrlIDCOLOR8',
           'visCtrlIDCOLOR9', 'visLOPlaceCompactLeftDown',
           'visCtrlIDSENDBACK', 'visCtrlIDCOLOR3', 'visCtrlIDCOLOR1',
           'visCtrlIDCOLOR6', 'visCtrlIDCOLOR7', 'visCtrlIDCOLOR4',
           'visCtrlIDCOLOR5', 'LPVISIOCONNECT', 'visTabStopCenter',
           'visCtrlIDCONNECTORTOOL', 'visSpline1D', 'Addons',
           'visLayoutVertAlignDefault', 'visEvtCodeShapeExitTextEdit',
           'visContainerMemberInList', 'visQuickStyleLineColor',
           'LPVISIOUIOBJECT', 'visFmtFeetAndInches2Pl',
           'visLayoutVertAlignBottom', 'visTxtBlkTopToBottom',
           'visPLOJumpFactorY', 'visPLOJumpFactorX',
           'visThemeColorsMedian', 'visCopyPasteNoAssociatedCallouts',
           'visUIObjSetCntx_AnchorBar_Shapes', 'visCtrlIDTEXTMIDDLE',
           'MasterShortcuts', 'visCmdFitCurve', 'visTypeSelShape',
           'visIconIXSEND_BACKWARD', 'visReviewerInitials',
           'visCmdViewLeftToRight', 'visPLOSplitNone',
           'visDistHorzRight', 'visCustPropsLangID',
           'visCmdShapeActions', 'visCmdInkStockPen0',
           'visCmdInkStockPen3', 'visUIObjSetPal_LinePatterns',
           'visGlueTypeNoWalkingTo', 'visMouseMiddle',
           'visRowReviewer', 'visThemeTypeConnector',
           'visLocFontNever', 'visRowComponent', 'visGray10',
           'visWSAnchorMerged', 'IVConnects', 'visCmdFileSaveAsJPG',
           'visEvtCodeMouseUp', 'visIconIXCANTFIND',
           'visCmdINETDeleteHlink', 'visObjTypeStyle',
           'visDocCleanActConstantFormulas', 'visIconIXFOLDER',
           'visDataRecordsetNoAdvConfig', 'visObjTypeGraphicItems',
           'visDeleteNoHealConnectors', 'visCtrlIDACCEPTFORMULA',
           'visCtrlIDLEFTCOLORBOX', 'Toolbar',
           'visIconIXCONNECTSHAPES', 'visPaperSizeLegal',
           'visIconIXLINEEND', 'visFillShdwObliqueAngle',
           'visContainerMemberNotAMember', 'visSLOFixedPermeablePlow',
           'visTypeMaster', 'MenuSet', 'visCtrlIDBOLD',
           'visArrowSizeColossal', 'visCtrlIDWEBTOOLBAR',
           'visCmdSSWindowChangeRowType', 'visThemeColorsTechnic',
           'visIconIXTEXTCOLOR', 'LPVISIOSHAPE', 'visCtrlIDFONTLIST',
           'visRasterUseSourceResolution',
           'visUIObjSetCntx_AnchorBar_CustProp', 'visSLOJumpAlways',
           'visRuleSetDefault', 'visCmdDlgCustomFit',
           'visGradientStopPosition', 'IVApplication', 'visWide',
           'visCmdTextEditRuler', 'visLayoutHorzAlignLeft',
           'visCmdTrim', 'visPrintPropertiesRightMargin',
           'visObjTypeSection', 'visThemeColorsFoundryLight',
           'LPVISIOLAYER', 'tagVisBoundingBoxArgs', 'visImageSharpen',
           'VisGlueSettings', 'visFmtMsoDateISO',
           'visObjTypeHyperlink', 'visThemeColorsSolstice',
           'visCmdSetIndexInStencil', 'visCmdNewThemeColors',
           'visCenter', 'VisUIBarRow', 'visIconIXDCREROUTE_FREELY',
           'visDocCleanTargDoc', 'visLineBeginArrow',
           'visLayerStatus', 'visAutoLinkGeometryWidth',
           'visCmdSetPageLineJumpCode_None',
           'visCmdRemoveMemberFromContainer', 'visCalHebrewLunar',
           'visIconIXRECTANGLETOOL', 'visCmdAddTextShape',
           'visFmtDateyyyymd_K', 'visThemeEffectsToy',
           'visCmdEditPasteSpecial', 'visRasterBaseline',
           'visValidationNoOpenWindow', 'visFmtDateyyyymd_S',
           'visObjTypeRow', 'visLockThemeColors', 'visCtrlIDBULLETS',
           'VisFlipDirection', 'tagVisShapeTypes',
           'visCmdDRQtrArcTool', 'visCmdDrawOval', 'visObjTypeLayer',
           'visUIObjSetCntx_AnchorBar_Base', 'visScrollBarNeither',
           'visCmdSize2D', 'VisFixedFormatTypes', 'visRotationXAngle',
           'visTruncate', 'visCtrlTypeDROPDOWN_SORTED_OWNERDRAW',
           'visFmt3PlNoUnits', 'visLOFlipY',
           'visLOPlaceCompactLeftUp', 'visCurrency',
           'visDocCleanActNearZero', 'visStatDeleted',
           'visCmdFileUndoCheckout', 'visEvtCellDblClick',
           'visLOBRouteStraight', 'visPLOPlaceCompactRightDown',
           'LPVISIOHYPERLINKS', 'visIconIXDYNGRID', 'visWSDockedLeft',
           'visScrollToTop', 'visTagInfiniteLine',
           'visLORouteDefault', 'visThickUpDiagonal',
           'visFmtTimeAMPMhmm_K', 'visGroupIsDropTarget',
           'tagVisWindowFit', 'visFmtDategeMMMMddddww_K',
           'visCmdINETOpenHlinkNewWnd',
           'visUIObjSetPal_ConnectorTool', 'visCmdSetHeaderFooter',
           'visCmdValidationIssuesArrangeOriginalOrder',
           'visCmdFormatSpecial', 'VisGluedShapesFlags',
           'visEvtCodeCreate', 'visEvtCodeCalloutRelationshipDeleted',
           'visCmdStenDrawingExplorer', 'visCtrlIDFILLSTYLELABEL',
           'visFmtTimeAMPMhmm_S', 'IVServerPublishOptions',
           'visTypeTextCallout', 'visStyleIncludesFill',
           'visDynFBUCon5Leg', 'visHLinkNewWin', 'visYards',
           'visCmdDecreaseParaSpacing', 'visCtrlIDPOINTERTOOL',
           'StatusBar', 'visSavePreviewDraft1st',
           'VisMasterProperties', 'visBevelBottomHeight',
           'visCtrlTypeCOMBOBOX', 'visCmdUpdateColumnsInLinkedShapes',
           'visCtrlIDUNGROUP', 'visGray80', 'visCtrlIDSEARCHTHEWEB',
           'visPLOLineAdjustTo', 'LPVISIOCOAUTHMERGEEVENT',
           'visCtrlSpacingPALETTERIGHT', 'VisRasterExportSizeUnits',
           'visLockCrop', 'visGlueToGeometry',
           'visUIObjSetCntx_Master', 'visCmdSSWindowDeselect',
           'visObjTypeDoc', 'visGraphicLeftEdge',
           'visEvtCodeCancelSuspendEvents',
           'visPLOPlaceCompactLeftDown', 'visArchitectural',
           'visSnapExtEllipseCenter', 'visIconIXALIGNCENTER',
           'visCmdMDIMinimize', 'visRasterRLE',
           'visGluedShapesOutgoing2D', 'visCmdStenAutoArrange',
           'visNURBSWeightPrev', 'visPerspective',
           'visCmdPrintPreview', 'visLOIPlaceYPermeable',
           'visFrgnImgOffsetX', 'visFrgnImgOffsetY',
           'visLayoutDirFlipVert', 'visIconIXNEWWINDOW',
           'visCharacterFont', 'visUIObjSetCntx_DEStyle',
           'visCtrlIDCUSTPROP', 'visGlueToVertices',
           'visPLOPlaceHierarchyLeftToRightBottom',
           'visPasteMetafile', 'visCmdHelpTemplates',
           'visRowGradientProperties', 'visCmdInsertLegendHorizontal',
           'VisThemeTypes', 'visCmdView100', 'ValidationRule',
           'visCtrlIDTEXTLEFT', 'visCmdDataUnlinkRow',
           'visRow3DRotationProperties', 'visIconIXCUSTOM_BALLOON',
           'visCmdFileNewBlankDrawingMetric', 'visBarTop',
           'visVersion20', 'VisLayoutVertAlignType', 'visCmdRulSub',
           'visSelTypeByType', 'tagVisUIStringIDs',
           'visObjTypeReplaceShapesEvent', 'visFmtJDategggeXmXdX',
           'visCmdObjectGroup', 'visCopyPasteDontAddToContainers',
           'visCmdOfficeCenterOptions', 'MenuItems',
           'visBBoxUprightWH', 'visPLOPlaceDepthMedium',
           'visFillShdwForegnd', 'visTypeDoc',
           'visEvtCodeCancelSuspend', 'IVMenuItem',
           'visCmdInsertHyperLink', 'visRHIMasters',
           'visLOPlaceDefault', 'visLayoutDirRotateRight',
           'visCalTranslitFrench', 'visDocNoCoauth',
           'visIconIXUNDERLINE', 'visCmdAssociateCallout',
           'visCharacterOverline', 'visIconIXCUSTOM_LEFT',
           'LPVISIOENUMVMENUSET', 'visCmdHelpMode',
           'tagVisUniqueIDArgs', 'visEvtCodeBefSelDel',
           'visCmdINETVisioOnTheWeb', 'visFCodePageName',
           'visCnnctAutoGen', 'visCmdLayerSetupDlg',
           'visCmdDataRefreshResolveConflict',
           'visPrintPropertiesPageOrientation', 'VisFieldFormats',
           'visCmdTextItalic', 'visQuickStyleMatrixVariant3',
           'visWinIDCustProp', 'visQuickStyleMatrixVariant1',
           'visFillShdwBkgnd', 'visNoLiveDynamics',
           'visQuickStyleMatrixVariant4', 'visTabPropRow',
           'visCmdIconBucketTool', 'visCmdStenIconOnly',
           'visFmtDateMDYY', 'visThemeColorsOfficeDark',
           'LPVISIOFONT', 'visFlags', 'visCmdDRRotateTool',
           'IVComment', 'visCtrlAlignmentBOX',
           'visDocCleanTargFPages', 'visCmdCheckCompatibility',
           'visRasterFlipHorizontal', 'visLOPlaceRightToLeft',
           'visMasIsLineEnd', 'visSelModeOnlySub', 'EWindow',
           'VisThemeColors', 'visRowReplaceBehaviors',
           'VisRowIndices', 'visCmdCheckForUpdates', 'visFmtRadians',
           'visIconIXLINEJUMPSTYLE_4PT', 'Menus',
           'visIconIXCUSTOM_RUN', 'visTypeFillPattern',
           'visCtlOffsetMid', 'visFmtTimehmm_C',
           'visDocCleanActBadReferences', 'visTagCtlPt',
           'visConnectionPoint', 'visMouseMoveDragStatesDrop',
           'visCmdEditOpenObject', 'visLORouteFlowchartWE',
           'visCmdDiagramGallery', 'visResizeDirSE', 'visPolyline1D',
           'visCmdEditPasteLink', 'visCtrlTypeSTATE_DROPBUTTON',
           'IEnumVMenuSet', 'visBarNoProtection', 'VisUIIconIDs',
           'visFCodeObjectType',
           'visPLOPlaceHierarchyLeftToRightMiddle', 'visVersion100',
           'visFillShdwScaleFactor', 'visDocCleanTargStyles',
           'visAutoConnectDirUp', 'visSpatialIgnoreVisible',
           'visFmtJDatehmmaxpx', 'visAutoLinkSelectedShapesOnly',
           'IVCell', 'visSpaceLine', 'visCmdObjectFlipHorizontal',
           'IVStatusBarItems', 'visBBoxIncludeDataGraphics',
           'visPaperSizeB5', 'visPaperSizeB4', 'visObjTypePages',
           'visTagNURBSTo', 'visCmdViewFitInWindow',
           'visThemeColorsModule', 'visUIObjSetCntx_MEDocument',
           'visLineGradientAngle', 'visPrintSetup',
           'visCmdEditThemeColors', 'visPLOPlaceDepth',
           'visPLOSplitAllow', 'visTagRelQuadBezTo',
           'visCmdCOMAddinsDlg', 'visCustPropsAsk', 'visCtrlIDUNDO',
           'visIconIXLINEJUMPSTYLE_PAGE', 'visCmdInsertImageControl',
           'visCmdZoomPageWidth', 'tagVisUIMenuAnimation',
           'visCmdFormatPictureCompressionDlg', 'visCtrlIDTEXTTOP',
           'AccelTable', 'visAutoLinkPropRowNameU', 'visCmdABarHide',
           'visPrintPropertiesLeftMargin', 'visCmdDrawingTools',
           'visCellNone', 'IEnumVToolbarItem', 'visCmdSize1D',
           'visCmdInkTool', 'visThemeColorsOriel', 'visIconIXADDIN',
           'visEvtCodeKeyUp', 'visCtlOffsetMin',
           'visThemeEffectsStripes', 'visFmtDategeMMMMddd_K',
           'visCmdRemoveFromAllContainers', 'visScaleMetric',
           'LPVISIOPAGES', 'LPVISIOWINDOW', 'visTagRowVoid',
           'visOpenCopy', 'visCmdMasterExplorer',
           'visCmdRemoveThemeFromSel', 'visRaster16Color',
           'visIconIXSNAP', 'visDocLockPreview',
           'visCmdMSOInsertSymbol', 'visSectionHyperlink',
           'IVMasterShortcuts', 'visWSDockedRight',
           'visPLOPlaceCompactLeftUp', 'LPVISIOTOOLBARS',
           'visQuickStyleColorAccent6', 'visIconIXCUSTOM_LOAD',
           'visMasLEUpright', 'visCmdInsertToggleButtonControl',
           'visQuickStyleColorAccent2', 'visCmdTextEditState',
           'visQuickStyleColorAccent1', 'visUIObjSetPal_LineTool',
           'visGlueTypeNoWalking', 'visCmdSetThemeBehavior',
           'visDrawRegionIncludeHidden', 'LPVISIOVALIDATIONRULESETS',
           'visCmdFilePrint', 'visBarFloating', 'visGridCoarse',
           'VisRasterExportDataFormat', 'visFmtTimehmm_J',
           'visCmdAutoSpace', 'visIconIXICONONLY',
           'visCtrlIDICONLASSO', 'visWSDockedTop',
           'visEvtCellTheText', 'visMasFPStretch', 'LPVISIOHYPERLINK',
           'visTypeSelGroup', 'visLayerMember',
           'visEvtCodeQueryCancelDocClose',
           'visCmdContainerAutoResizeOff',
           'visCtrlTypeBUTTON_OWNERDRAW', 'visFmtTimehmm_K',
           'visUIObjSetDrawing', 'VisBuiltInStencilTypes',
           'visEvtCell', 'IVToolbarItem', 'visLORouteRightAngle',
           'Master', 'visUnderLine', 'visFmtDatewwyyyymmdd_S',
           'visRasterGroup3', 'visResizePages', 'visDeleteGUID',
           'visRasterPixelsPerCm', 'VisReplaceFlags',
           'IVValidationRules', 'VisMouseMoveDragStates',
           'visPLOPlowNone', 'visIconIXHELPBOOK',
           'visFmtMsoDateShortAbb', 'visUIObjSetPal_FillPatterns',
           'visCmdZoomLast', 'visRHIDataRecordsets',
           'visServiceAnimations', 'visCtrlIDOPEN', 'MSGWrap',
           'visCmdObjectHelp', 'visMemberAddExpandContainer',
           'visFCodeData2', 'visFCodeData3', 'visGrpDispModeBack',
           'visIconIXALIGN', 'visIconIXINSERTCOMMENT', 'visGreen',
           'LPVISIOACCELITEM', 'visCmdValidateDiagram',
           'tagVisCellError', 'visIconIXTILE',
           'visUIObjSetHostingInPlace', 'VisDefaultSaveFormats',
           'visVertBottom', 'visCmdEditTheme',
           'visLOPlaceHierarchyLeftToRightTop',
           'visIconIXCORNERSTYLE', 'LPVISIOCONTAINERPROPERTIES',
           'visCtrlIDTILE', 'visCmdDiagramRotateLeft',
           'visUIObjSetCntx_DEDocument', 'tagVisSavePreviewMode',
           'visFmtDateMmmDYYYY', 'visObjTypeMasterShortcut',
           'visUIObjSetCntx_DEShapes', 'visCtlOffsetMidHidden',
           'visLockVtxEdit', 'visCmdPreviousCommentMarkup',
           'visCmdResearchThesaurus', 'visRuleTargetPage',
           'visUnitsInval', 'VisHitTestResults', 'visThinCross',
           'visIconIXCROP', 'visIconIXRESTORE',
           'visIconIXSTRIKETHROUGH', 'visFmtTimeAMPMhmm_C',
           'visRadians', 'tagVisOnComponentEnterCodes', 'visMileFrac',
           'visPageHeight', 'visCmdConnectorEffectRightAngle',
           'visCmdInsertAutoCADAddOn', 'visIconIXSNAPTOGRID',
           'visSaveAsRO', 'visHorzJustify',
           'visCmdOptionsEditDrawing', 'visCtrlTypeDROPBUTTON',
           'visCmdEditFind', 'visSnapExtIsometricAngles',
           'visCmdDistributeBottom', 'visLOFlagsDont',
           'visSpatialIncludeHidden', 'visCmdDeleteBackWord',
           'visPageGroupWin', 'visLayerDeleted', 'visLeft',
           'visCmdSetCharSizeUp', 'visBarBottom',
           'visCmdViewRightToLeft', 'tagVisUIBarPosition',
           'visCenterViewIfOffScreen', 'visUserPrompt',
           'visCtrlIDTEXTBOTTOM', 'visGeomXYLocal',
           'visDocPreviewQualityDetailed', 'IVPaths', 'Characters',
           'visThemeEffectsSquare', 'visTagCtlPtTip',
           'visCmdTextFont', 'visHorzDistribute', 'visCmdFileSaveAs',
           'visCmdZoomOut', 'VisFromParts',
           'visObjTypeValidationRuleSets', 'visImageBlur',
           'visDataColumnPropertyVisible', 'visEvtCodeOpen',
           'visEvtCodeShapeDelete', 'visCopyPasteNoCascade',
           'VisSpatialRelationFlags', 'visPropTypeListVar',
           'visVersion30', 'visCtrlTypeDROPDOWN_SORTED',
           'visAnchorBarBuiltIn', 'visPasteHyperlink',
           'visTextDisplayHigherQuality', 'visEvtAdd',
           'visCtrlIDSPACER', 'visBold', 'visIconIXSEARCHTHEWEB',
           'visThemeColorsMedianLight', 'LPVISIODATACOLUMN',
           'visIconIXDISTRIBUTE', 'visCmdStenEditToggle',
           'visDynFBUCon3Leg', 'visCmdFileLastFile20',
           'visCmdHelpContents', 'Paths', 'visObjTypeLayers',
           'visIconIXPAGELINEJUMPCODE_DISP', 'visCmdObjectCombine',
           'visCtrlIDALIGN', 'visBevelLightingAngle',
           'visCmdSetPlaceableShapeBehavior', 'visEvtCodeDocOpen',
           'visUIObjSetCntx_Toolbar', 'visCtrlIDALIGNRIGHT',
           'DataRecordsetChangedEvent', 'visGraphicFarLeft',
           'visCmdCropObject', 'visCtrlIDGOTOPAGELIST',
           'visPublishDataRecordsetNone', 'visWinOther',
           'ReplaceShapesEvent', 'visCmdAddToAllContainers',
           'visUnitsNURBS', 'visIconIXSUPERSCRIPT',
           'visCalJapaneseEmperor', 'visMemberAddDoNotExpand',
           'visRowPageLayout', 'visIconIXREPLACE',
           'visThemeEffectsOblique', 'visHorzRight',
           'visFontScalable', 'visCtrlIDQTRARCTOOL',
           'visCmdINETOpenHlink', 'visToAngle',
           'visIconIXINSERT_EQUATION', 'visSLORelationships',
           'visSLOFixedPlacement', 'visCmdShapeVert',
           'VisUIButtonStyle', 'visContainerFlagsExcludeContainers',
           'VisQuickStyleMatrixIndices', 'visFCatDocument',
           'visUIObjSetPal_TextTool', 'visEvtCodeShapeBeforeTextEdit',
           'visAddHidden', 'visMiles', 'visCmdStenIconAndDetail',
           'visEvtCodeKeyDown', 'visPasteURL', 'visCmdFileNew',
           'visCmdINETVisioHomePage', 'visGrpSelModeMembers1st',
           'visCmdMsoAutoCorrect', 'visPrintPropertiesPaperSource',
           'visLocFontIfArialOrSym', 'visAutoConnectDirRight',
           'visCmdResumeRecordingMacro', 'visXRulerOrigin',
           'visTagPolylineTo', 'visCmdContactUs', 'KeyboardEvent',
           'visFCodeDescription', 'visCmdABarAutoHeight',
           'visLayoutIncrAlign', 'EStyles', 'LPVISIOACCELITEMS',
           'visCmdPasteToLocation', 'visIconIXSINGLETILE',
           'visCtrlIDALLSTYLESLIST', 'VisUIObjSets',
           'visSnapToConnectionPoints', 'visSLOSplittableNone',
           'visGray30', 'VisAutoConnectDir',
           'visIconIXCUSTOM_QUESTION', 'visCmdDetectAndRepair',
           'visAlignRight', 'visFCodeEditDate', 'VisCharsBias',
           'visCmdSetLineCornerStyle', 'visCmdReviewerPaneToggle',
           'visDataRecordsetDelayQuery',
           'visContainerFlagsExcludeCallouts', 'visCmdStenActivate',
           'visCmdCreateNewDrawing', 'visLineGradientEnabled',
           'visThemeEffectsBasicShadow', 'visCmdMsoCustomItem',
           'visPrintFromTo', 'visCmdSWCancel',
           'visEvtCodeAfterForcedFlush', 'OLEObject', 'visTagLineTo',
           'visCmdTextSubscript', 'visFmtDateTWNsYYYYMMDDD_C',
           'visSectionFirst', 'visPLOPlaceLeftToRight',
           'VisRegionalUIOptions', 'visCtrlIDCLOSE',
           'visCmdOfficeDiagnostics', 'visImageContrast',
           'visCmdLayoutDynamic', 'visBeginX', 'visDocViewMarkup',
           'visCtlOffsetMaxHidden', 'visCmdStenProperties',
           'visPLOPlaceRadial', 'tagVisZoomBehavior',
           'visScrollDownPage', 'visIconIXARRANGE', 'Validation',
           'visForeDotsMini', 'visUIObjSetCntx_StencilRW',
           'visStrIDPlaceHolder', 'visPrintPropertiesCenterY',
           'visAutoLinkUserRowName', 'visIconIXLINEPATTERN',
           'visInsertNoDesignModeTransition', 'visIconIXZOOM100',
           'VisResizeDirection', 'visArrowSizeJumbo', 'visZoomNone',
           'visDistVertSpace', 'MenuItem', 'IVHyperlink',
           'visCmdDiagramFlipHorizontal', 'visControlPoint',
           'visGetFormulasU', 'visTagRelCubBezTo',
           'visCmdHelpQuickTour', 'CoauthMergeEvent',
           'visIconIXROTATECLOCKWISE', 'visCharacterLetterspace',
           'visCmdDataRecordsetSetPrimaryKey', 'visYGridOrigin',
           'visCellInval', 'visLOJumpStyleGap', 'visErrorReference',
           'IVMenuItems', 'visCmdINETOfficeOnTheWeb',
           'visReflectionSize', 'visTagSplineBeg', 'visTagComponent',
           'visPaperSizeUnknown', 'visLOFlipNone',
           'visCtrlIDLAYOUTSHAPES', 'visCmdInsertClipArtDlg',
           'visCmdFileSaveAsDrawing',
           'visCmdSetDynConnLineJumpStyle_Gap', 'visIconIXLINEWEIGHT',
           'visCtrlIDPRINT', 'Colors', 'visFitPage',
           'visFmtCDateiieXmmmmXdddd',
           'visCmdPublishToProcessRepository',
           'visArcSweepFlagConvex', 'visCmdDistributeHSpace',
           'visRasterNonInterlace', 'visCtrlIDSTATUSREADOUT',
           'visPLOJumpLastRouted', 'visIconIXLAYERPROPERTIES',
           'visFmtMsoTimeSecPM', 'visCmdSWInsertRow', 'visBarRight',
           'visListDirBottomToTop', 'visCharacterColorTrans',
           'visEnd', 'visIconIXCUSTOM_CAMCORD',
           'visCmdInsertComboBoxControl', 'visIconIXCUSTOM_DIAMOND',
           'IVMasters', 'visBarRowFirst', 'vis1DEndY', 'vis1DEndX',
           'visCmdShowIgnoredIssuesToggle', 'visFmtJDateaxpxhXmmX',
           'visEvtAppDeactivate',
           'visContainerFlagsExcludeConnectors',
           'visIconIXHELPASSISTANT', 'visCmdObjectUnion',
           'LPVISIOREPLACESHAPESEVENT', 'visIconIXICONLASSO',
           'visSnapToGeometry', 'visSelModeOnlySuper',
           'VisGraphicItemTypes', 'visCmdFileSaveAsDWG',
           'visXGridSpacing', 'visCmdEmailRouting', 'visBottomEdge',
           'IEnumVMenuItem', 'visCmdShowShapeSheetShape',
           'visUIObjSetCntx_StencilDocked', 'visPLOResizePage',
           'LPVISIOAPPLICATION', 'visCmdIconSelectNet', 'Style',
           'visIconIXICONNAME', 'visFmtTimeHHMMAMPM_E',
           'visConnectorBeginpoint', 'visIconIXGOFORWARD', 'EShape',
           'visEvtCodeQueryCancelReplaceShapes',
           'visIconIXCONNECTIONPOINTS', 'visNoCast', 'visLockGroup',
           'visEvtText', 'visSLOJumpDirY', 'visSLOJumpDirX',
           'visHorz', 'visCmdEditRedoMultiple', 'visIconIXCUT',
           'visCmdEditConvertObject',
           'visUIObjSetCntx_DataExplorerTabs', 'visCmdView200',
           'visDocModeDesign', 'tagVisDocCleanActions',
           'visCharacterFontScale', 'RelatedShapePairEvent',
           'visCmdDropOnText', 'visRowCharacter', 'visIconIXUNGROUP',
           'visCmdTaskTogglePreviewSize', 'DataRecordsets',
           'visEvtCodeCalloutRelationshipAdded',
           'visPrintPropertiesScaleX', 'visPrintPropertiesScaleY',
           'visIconIXFIND', 'visHLinkDescription', 'visFCatGeometry',
           'visEvtCodeBefWinSelDel', 'visAutoLinkObjectData2',
           'visFrgnImgWidth', 'visCalThaiBuddhism', 'visCtrlIDULINE',
           'visTxtBlkTopMargin', 'visSLOConFixedByAlgFromTo',
           'visCmdFileCheckOut', 'visActionChecked',
           'visIconIXSENDBACK', 'visWSAnchorLeft', 'visEvtDel',
           'visXGridOrigin', 'visTagRelMoveTo', 'visHLinkSubAddress',
           'visGraphicBottom', 'visCopyPasteNoHealConnectors',
           'visCmdAlignObjectMiddle', 'visTypeForeignObject',
           'visCmdStenEditDrawing', 'visCtlGlue',
           'visPLOLineAdjustToAll', 'visCmdSpellingOptionsDlg',
           'visCmdShapeLayerToolbar', 'visUIObjSetCntx_DrawOleObjSel',
           'IVLayers', 'VisValidationFlags', 'LPVISIOSECTION',
           'visCtrlIDSTATUSLABEL', 'visEvtShape',
           'visBevelBottomType', 'visCmdSetDynConnLineJumpStyle_Arc',
           'visInsertLink', 'visCtrlIDALLSTYLESCOMBO',
           'VisSpatialRelationCodes', 'visFieldCell',
           'visBevelMaterialType', 'IVSection',
           'visEvtCodeShapesReplaced', 'visButtonMixed',
           'IVDataColumns', 'visFmtMsoDateMon_Yr',
           'visEvtCodeCancelWinClose', 'EApplication',
           'visCmdABarAutohide', 'visCmdSetDynConnRerouteAsNeeded',
           'visLOPlaceCircular', 'visBarMenu',
           'visQuickStyleMatrixTheme3', 'visPasteOLEObject',
           'tagVisUIButtonStyle', 'visOpenMinimized',
           'visStatAppHasShutdown', 'visCharacterLocalizeFont',
           'visIconIXSHAPEGEO', 'visTxtBlkDefaultTabStop',
           'visMemberAddUseResizeSetting', 'visTagMoveTo',
           'visContainerFlagsExcludeNested', 'visCtrlTypeDROPDOWN',
           'IVApplicationSettings',
           'visCmdSetDynConnAppearanceCurved', 'visIconIXCUSTOM_BOX',
           'visCmdRecordNewMacro', 'visPLOPlaceParentDefault',
           'VisSelectMode', 'visQuickStyleMatrixTheme6',
           'visCmdStenEditOff', 'visEvtCodeQueryCancelWinClose',
           'visPLOLineToNodeY', 'visPLOLineToNodeX',
           'visCmdSetCharColor', 'visIconIXMAXIMIZE',
           'visSpatialFrontToBack', 'visCtrlIDSINGLETILE',
           'visDrawingUnits', 'visCmdModControlPt', 'EDataRecordset',
           'tagVisUISpacingTypes', 'LPVISIOVALIDATIONISSUES',
           'IVValidation', 'visCmdPublishToVisioServices',
           'IVCharacters', 'visSectionMember', 'visObjTypePage',
           'visInvalMasterID', 'visCmdOptionsDeletePages',
           'LPVISIOMASTER', 'visScrollBarHoriz', 'visRasterPixel',
           'visOpenDeclineAutoRefresh', 'visIconIXCUSTOM_TRASH',
           'tagVisGuideTypes', 'visProtectNone', 'VisKeyButtonFlags',
           'visCtrlTypePALETTEBUTTON', 'visCmdTrustCenterDlg',
           'visThemeColorsConcourseDark', 'visRHIValidationRules',
           'visFmtDateDDMMYY', 'visIconIXCHART',
           'visObjTypeValidationRule', 'visTypeUnits',
           'visCtrlIDNAMEONLY', 'visEvtObjDeactivate',
           'visRasterNone', 'visFmtCDateieXmmmmXddddXww',
           'visTagInvalid', 'visSmartTagXJustify',
           'visPPOSameAsPrinter', 'visPLODynamicsOff', 'visGeomWHPct',
           'tagVisSelectItemStatus', 'visBackDotsMini',
           'visCmdFileOpen', 'visEvtCodeExitScope',
           'visLOJumpDirXDefault', 'visEndTrigger',
           'visCtrlIDICONSELNET', 'visVersion120', 'visObjLangID',
           'visCtrlTypeEDITBOX', 'visPLOPlaceRightToLeft', 'visPoint',
           'visPLOLineAdjustToDefault',
           'visEvtCodeQueryCancelSelGroup', 'visIconIXINSERTCONTROL',
           'visObjTypeMasters', 'visActionTagName',
           'visQuickStyleFontColor', 'visTxtBlkLeftMargin',
           'visCmdSetLineColor', 'tagVisGeomFlags',
           'visCmdTaskPaneThemeEffects', 'visGetFloats', 'visGray20',
           'visEvtShapeLinkAdded', 'visCtrlIDHELPMODE',
           'visPropTypeDuration', 'visIconIXALIGNTOP', 'visEvtStyle',
           'visEvtCodeViewChanged', 'Cell', 'visCmdHierarchical',
           'visCtrlIDALLSTYLESLABEL', 'visGradientStopColorTrans',
           'visGraphicLeft', 'visQuickStyleLineMatrix',
           'visLORouteOrgChartWE', 'visSectionLastComponent',
           'visEvtCodeShapeParentChange', 'visCtrlIDLINEWEIGHT',
           'visCmdSetAddMarkup', 'visCmdIconRightColor',
           'visRXModeStencil', 'AccelItem', 'IVBUndoUnit',
           'tagVisToolbarFlavors', 'IVConnect', 'visObjTypeColor',
           'visIconIXLINEJUMPSTYLE_6PT', 'visPageZOrderChanged',
           'visThinUpDiagonal', 'visCmdViewGuides',
           'visCmdSetDynConnLineJumpStyle_6pt',
           'visCtrlIDALIGNSHAPES', 'visLOBRouteRightAng',
           'visLOJumpStyle5Point', 'visLinkReplaceNever',
           'visCmdStenClose', 'visTagCnnctNamed',
           'visWinIDValidationIssues', 'visTypeColorByValue',
           'visCmdSetDynConnRerouteNever', 'visFmtDateMmmmDYYYY',
           'visVersion60', 'Connects', 'visLOJumpDirYDefault',
           'visIconIXCUSTOM_SPEAKER', 'visCmdObjectConnectObjects',
           'visCmdFileClose', 'visThemeColorsVerve',
           'visReviewerName', 'visCmdDisbandContainer',
           'visUIObjSetPal_ShapeExt', 'visRasterInterlace',
           'visContainerTypeNormal', 'visAutoLinkObjectType',
           'visConnectorEndPoint', 'visCmdDuplicateDataGraphic',
           'visLORouteOrgChartEW', 'visUIObjSetCntx_DrawNoObjSel',
           'visCtrlIDZOOM100', 'visSLOPlaceStyle',
           'visRasterHalftone', 'ValidationRuleSets',
           'visDeleteHealConnectors', 'visPosSub', 'visCmdDRTextTool',
           'visPageShdwObliqueAngle', 'visScrollBarVert',
           'VisSelectionTypes', 'visHitOutside',
           'visCtrlIDPAGEBREAKS', 'visQuickStyleMatrixTheme1',
           'Shape', 'visQuickStyleMatrixTheme2',
           'visQuickStyleMatrixTheme5', 'visQuickStyleMatrixTheme4',
           'visCtrlIDZOOMLIST', 'visRasterPackbits',
           'visCmdDistributeLeft', 'visUIObjSetCntx_DEPatterns',
           'visIconIXRULSUB', 'visCmdDataRefreshDeleteConflict',
           'visCmdSWChangeRowTypeDlg', 'visLOBRouteManual',
           'visBBoxIncludeHidden', 'visXRulerDensity',
           'visRaster256Color', 'visCmdSendAsMail',
           'visDocOutputFormat', 'visGlowColorTrans',
           'visUIObjSetPal_LineColors', 'visWSMinimized',
           'visSavePreviewDraftAll', 'IVHyperlinks', 'visCharPropRow',
           'LPVISIOPAGE', 'visContainerMemberOutside',
           'visActionReadOnly', 'visWhite',
           'visCmdDataRefreshConfigDlg', 'IVShapes', 'visEvtRow',
           'visDurationUnits', 'VisObjectTypes',
           'visCtrlTypeDROPDOWN_OWNERDRAW',
           'visConnectedShapesAllNodes', 'visPasteVisioShapesXML',
           'IEnumVAccelTable', 'visCmdFormatAllTextProps',
           'visCmdEditThemeEffects', 'visRowParagraph', 'visFieldRun',
           'visKeyComposite', 'visIconIXCUSTOM_SCALES',
           'IVReplaceShapesEvent', 'visPLOPlaceFlip',
           'visSplinePeriodic', 'visSLOJumpOther',
           'visFilterMouseMoveDragBegin', 'visCmdFormatInkDlg',
           'visIconIXCUSTOM_KEYBOARD', 'visCmdDROvalTool',
           'visCtrlIDPREVIOUSPAGE', 'visCmdEditRedo', 'visThemeIndex',
           'visCmdOptionsNewPage', 'tagVisMasterProperties',
           'visCtrlTypeSPLITBUTTON_MRU_COLOR',
           'visDocCleanActBadFieldCounts',
           'visEvtCodeCancelReplaceShapes', 'AccelTables',
           'visEngineering', 'visPasteVisioText', 'VisMasterTypes',
           'visContainerFormatLockMembership',
           'visCmdTaskPaneDocumentManagement',
           'visPLOLineAdjustFromAll', 'visIconIXINSERTHYPERLINK',
           'visFmt0PlDefUnits', 'visCmdCloseInkToolsRibbonTab',
           'visCmdTextHAlignJustify',
           'visPLOPlaceHierarchyBottomToTopLeft', 'visObjTypeStyles',
           'visSaveAsWS', 'visCharacterUseVertical', 'Window',
           'visEvtApp', 'visCtrlIDPENCILTOOL', 'visTagSplineSpan',
           'visErrorName', 'visCmdActivateQuickShapesWnd',
           'visActCodeRunAddon', 'visCalTranslitEnglish',
           'visIconIXGOBACK', 'visRowLayer', 'visSketchLineWeight',
           'VisRegionalUIOptionsShow', 'DataColumns',
           'visLayoutVertAlignMiddle', 'visTypeThemeColors',
           'visTagBase', 'EWindows', 'visLangLocal',
           'visRotationZAngle', 'visCtrlAlignmentRIGHT',
           'VisBoundingBoxArgs', 'VisRasterExportRotation',
           'visIconIXGUIDES', 'VisWindowFit', 'visPageSheetID',
           'visFieldUICategory', 'visLORouteNetwork',
           'visFCodeFileName', 'IVSelection', 'visTypeIsOLE2',
           'visVersion10', 'visLayerGlue',
           'visCmdDataRecordsetProperties', 'visLockVariation',
           'visIconIXINCRINDENT', 'visRowProp', 'visActionMenu',
           'visThemeColorsOfficeLight', 'visWSMaximized',
           'visCmdSetAutoSize', 'visCmdViewRulers',
           'visCmdDiagramFlipVertical', 'tagVisSectionIndices',
           'visRightEdge', 'visIconIXCUSTOM_EYE', 'visInsertAsEmbed',
           'visSnapExtCurveTangent', 'visCtrlIDCONNECTSHAPES',
           'visIconIXFILLPATTERN', 'visCmdFileNewBlankStencilMetric',
           'visCmdFileChooseTemplates', 'visThemeColorsAngles',
           'visCtrlIDPOINTSIZEDOWN', 'VisLangFlags',
           'visScrollToBottom', 'visRasterRGB', 'visCalChineseTaiwan',
           'visRasterCm', 'visLayerAvailable',
           'visIconIXCUSTOM_SPADE', 'visGetTruncatedInts',
           'visButtonDown', 'visDocCleanTargBPages',
           'visPLOPlaceHierarchyTopToBottomCenter', 'VisProtection',
           'visCmdDuplicatePage', 'visFCatDateTime', 'visSplineKnot',
           'visEvtNonePending', 'visSketchAmount',
           'visGrpSelModeGroupOnly', 'visMouseMoveDragStatesEnter',
           'visEvtCodeKeyPress', 'visCnnctType', 'IVAccelItems',
           'visCmdSWShowValues', 'visSelTypeAll', 'visFromNone',
           'visArrowSizeMedium', 'visIconIXSHADOWSTYLE',
           'visAlignTop', 'visFitNone', 'visPageDrawScaleType',
           'visLOJumpDirXUp', 'visLOFlagsRoutable',
           'visDocPreviewScope1stPage', 'visGraphicFarRight',
           'visLayerName', 'visSLOSplit', 'Masters', 'visRasterYCC',
           'visCmdFileLastFile7', 'visPLOPlaceStyle',
           'LPVISIOMOVEDSELECTIONEVENT', 'visBulletFont',
           'visCmdSSWindowShowTraceWindow',
           'visCmdDataRefreshAddConflict', 'visRowSmartTag',
           'VisLegendFlags', 'visRHIPersonalInfo', 'visMasIsFillPat',
           'visMSMetric', 'visEvtBeforeQuit',
           'visFmtCDateiiieXmmmmXdddd', 'visBBoxExtents',
           'visIconIXROTATETEXT', 'visDate', 'visSLODisplayLevel',
           'visBiasLeft', 'visSmartTagXJustifyLeft', 'visVersion150',
           'visDeleteNoAssociatedCallouts', 'IVColor',
           'visPageShdwType', 'visStyleHidden',
           'visThemeColorsConcourseLight', 'visVertAlignBottom',
           'visEvtObjActivate', 'visActionSortKey',
           'visPageUIVisibility', 'visAlignCenter',
           'visThemeColorsVerveDark', 'visFSTSimple',
           'visIconIXCASCADE', 'visFCodeHyperlinkBase',
           'visCmdFileLastFile9', 'visWSVisible',
           'visCmdDistributeTop', 'visSLOFixedNoFoldToShape',
           'visFmtJDatehXmmX', 'visSelTypeEmpty', 'visDocModeRun',
           'visTabStopRight', 'visLocFontAlways',
           'visQuickStyleColorLight', 'visSLOConFixedByAlgFrom',
           'visGlueToDisabled', 'visFmtDateyyyy_m_d',
           'visObjTypeWindow', 'visSmartTagYJustifyBottom',
           'visCmdOptionsProtectDocument', 'visIconIXINCRPARA',
           'visCmdSetDynConnLineJumpStyle_Triangle',
           'visSmartTagDispModeAlways', 'tagVisUICtrlTypes',
           'visIconIXGROUP', 'visIconIXPAGELINEJUMPCODE_RDISP',
           'visCmdOptionsPageSetup', 'LPVISIOGRAPHICITEM',
           'visCmdToolsSpelling', 'visIndentRight',
           'visObjTypeSelection', 'visCtrlIDFILLCOLOR',
           'visUIObjSetCntx_AnchorBar_SizePos', 'visPageLockReplace',
           'visIconIXGUIDE', 'visGraphicExpression',
           'visLockThemeFonts', 'visCmdDeselectAll',
           'visSectionTextField', 'visCmdMove1D',
           'visDocCleanActBadFieldFormulas', 'visResizeDirSW',
           'visSelIsPrimaryItem', 'visIconIXEDITCOMMENT',
           'IVToolbars', 'tagVisSpatialRelationFlags',
           'visPLOLineAdjustFromNotRelated', 'visParaRun',
           'visMillimeters', 'visHorzJustifyHigh',
           'visCmdPageSizeToFitDrawing', 'visThemeColorsThatch',
           'visCmdEditSelectSpecial', 'visUIObjSetPal_CornerRounding',
           'visIconIXDCREROUTE_NEVER', 'visLORouteTreeNS',
           'visCmdSWInsertRowAfter', 'visCmdINETCopyHyperlink',
           'visCmdSelectContainerMembers', 'visCmdPasteShortcut',
           'visCmdHelpSearch', 'visThemeEffectsBevelHighlight',
           'visEvtCodeSelAdded', 'LPVISIOOBJECTS',
           'visLOPlaceHierarchyBottomToTopCenter',
           'tagVisSnapSettings', 'visCmdRightDragLink',
           'visSnapExtEndpoint', 'visThinHorz',
           'visEvtCodeRuleSetValidated', 'tagVisDocModeArgs',
           'visEvtCellMultiDrop', 'visCtrlAlignmentLEFTBOX',
           'VisGeomFlags', 'LPVISIOCHARS', 'visFCatObject',
           'visVertAlignMiddle', 'VisSelectArgs',
           'visCtrlIDINSERTHYPERLINK', 'visCmdInsertVertTextBox',
           'visSnapExtEndpointVertical', 'visUIObjSetPal_AlignShapes',
           'visThemeColorsPaperLight', 'visPLOPlowCode', 'VisToParts',
           'visLayerColor', 'visObjTypeDataConnection',
           'visCmdDistributeCenter', 'visProtectStyles',
           'visCmdInkEraser', 'visCmdReorderList',
           'visLOPlaceBottomToTop', 'visCtrlTypeOWNERDRAW_BUTTON',
           'visEvtCodeQueryCancelMasterDel', 'visCopyright',
           'visThickVertical', 'visObjTypeComments',
           'visCtrlIDCROPTOOL', 'visWSActive',
           'tagVisCutCopyPasteCodes', 'visFCodeCurrentTime',
           'visItalic', 'visCmdRemoveMemberFromList',
           'visAutoLinkMasterNameU', 'visUIObjSetCntx_Stencil',
           'visCmdShowShapeSheetDocument',
           'visCmdInsertNewBackgroundPage', 'visMSDefault',
           'visCmdSetDynConnAppearanceDefault', 'visStatNormal',
           'visEvtCodeQueryCancelPageDel', 'VisPageTypes',
           'visLineGradientDir', 'visCtrlIDLINEPATTERNS',
           'visCmdZoomArea', 'visFrgnImgHeight', 'visIconIXSTYLE',
           'visFmtStrLower', 'visCmdHelpShapeBasics',
           'visContainerTypeList', 'visUIObjSetCntx_CommentMarker',
           'visRasterUsePrinterResolution', 'visRasterInch',
           'VisUICmds', 'visCmdJoin',
           'visLOPlaceHierarchyLeftToRightMiddle', 'visDynFBDefault',
           'IVDataConnection', 'visMasLPScale',
           'visPLOPlaceCompactRightUp', 'visTagEllipse',
           'LPVISIOVALIDATION', 'visReplaceShapeLockShapeData',
           'visFCodePrintTime', 'tagVisCharsBias', 'visSelTypeSingle',
           'VisRasterExportColorFormat', 'visSplineDegree',
           'visBulletFontSize', 'visSmartTagButtonFace',
           'visRotationType', 'visTabStopDecimal',
           'visLockFromGroupFormat', 'visTypeLinePattern',
           'LPVISIOSTATUSBARITEMS', 'visCmdFileNewBlankDrawingUS',
           'visLockHeight', 'visObjTypePaths',
           'visCmdApplyThemeColors', 'visThemeEffectsSimpleShadow',
           'visThemeColorsPaperDark', 'ApplicationSettings',
           'visSectionScratch', 'visWalkPref',
           'visSaveAsCheckCompatibility', 'visMiddleEdge',
           'tagVisProtection', 'visIconIXCUSTOM_PASTE',
           'visEvtIdMostRecent', 'visCmdExportDatabaseAddOn',
           'visPLORouteStyle', 'visListDirRightToLeft',
           'VisDeleteFlags', 'visDistVertMiddle', 'visNumber',
           'visCmdPageAutoSizeToggle', 'visControl2X',
           'VisUIBarPosition', 'visQuickStyleColorAccent3',
           'visEffectSchemeIndex', 'VisRibbonXModes',
           'visCmdFileLastFile13', 'visCmdFileLastFile12',
           'visCmdFileLastFile15', 'visCmdFileLastFile14',
           'visRXModeNone', 'visCmdFileLastFile16',
           'visCtrlIDLINESTYLELABEL', 'visCmdFileLastFile18',
           'visCmdReOrderPage', 'visIconIXBRINGFRONT',
           'visFillGradientDir', 'visCmdMsoAutoFormat',
           'LPVISIOEVENT', 'visUIObjSetPal_TextColors',
           'visPicasAndPoints', 'visCtrlIDINCRPARA',
           'visIconIXCUSTOM_MIC', 'visPrintPropertiesOnPage',
           'visDouble', 'visPageWidth', 'visUIObjSetCntx_PageTabs',
           'visCmdApplyThemeToPage', 'visSnapExtEndpointHorizontal',
           'visDeleteNormal', 'visSmartTagDescription', 'visEvtLayer',
           'visCtrlIDFIRSTPAGE', 'VisPageSizingBehaviors',
           'visIconIXLINEJUMPSTYLE_SQUARE',
           'visCtrlSpacingFIXED_BEFORE', 'visFilterMouseMoveDragDrop',
           'visRoleSelContainer', 'IVDocuments', 'LPVISIOMASTERS',
           'visCmdUFEditCopy', 'visCenterViewDefault',
           'visCmdNextTile', 'visVert', 'visCmdToolsArrayShapesAddOn',
           'visCtrlIDALIGNCENTER', 'visCmdAutoSizeDrawing',
           'visPolylineData', 'visCmdTaskPaneResearch',
           'VisDrawSplineFlags', 'visCmdToolsInventory',
           'visCmdSSWindowPasteName',
           'visCmdINETVisioSolutionsLibrary', 'visLOPlaceTopToBottom',
           'visFmtTimeGen', 'visLOPlaceCompactRightDown',
           'visRasterFitToCustomSize', 'visFillPattern',
           'visLayerLock', 'VisUIButtonState', 'visAddNoWorkspace',
           'visPLOPlaceBottomToTop', 'visSLOPlowCode',
           'LPSERVERPUBLISHOPTIONS', 'visCmdZoomOutIgnoreSel',
           'VisGuideTypes', 'visFmtMsoDateEnglish',
           'visCmdLinkRowToShape', 'ValidationIssues',
           'visUIObjSetCntx_DELayer',
           'visSnapExtEndpointPerpendicular', 'Layers',
           'visIconIXROTATETOOL', 'visNURBSKnotPrev', 'visNoScale',
           'visScrollDown', 'visFCodeCompany', 'visMasterGroupWin',
           'visObjTypeConnects', 'visCmdAutoAlignAndSpace',
           'visCmdTurnToNextPage', 'visIconIXOVALTOOL',
           'visCmdHideDocumentStencil', 'visSectionLineGradientStops',
           'visCmdMoveComment', 'visLockSelect', 'visCtrlIDLINECOLOR',
           'visRaster256ColorGrayScale', 'visUnitsGUID',
           'visThemeEffectsRaisedSurface',
           'visLOPlaceCompactDownRight', 'visCopyPasteCenter',
           'visQuickStyleEffectsMatrix', 'visMasFPScale',
           'VisRasterExportDataCompression', 'visVersion140',
           'visAnnotationReviewerID', 'visCalKoreanDanki',
           'visBarRowLast', 'LPVISIOWINDOWS', 'visObjTypeGlobal',
           'visLayoutHorzAlignCenter', 'visIconIXCUSTOM_FROWN',
           'LPVISIOPATHS', 'visCnnctY', 'visCnnctX',
           'visCharacterComplexScriptSize',
           'visMouseMoveDragStatesNone', 'IVisEventProc', 'visCnnctA',
           'visCnnctC', 'visCnnctB', 'DataColumn', 'visCnnctD',
           'visActionBeginGroup', 'ToolbarItem',
           'visCtrlIDPOINTSIZELABEL', 'visThemeColorsApex',
           'visGridFixed', 'visFmtNumGenNoUnits',
           'visCmdTaskPaneToggle', 'visEvtCodeBefDocSave',
           'visCompNoQuickDrag', 'IVMenus', 'visGraphicMiddle',
           'visCtrlAlignmentCENTER', 'visUIObjSetCntx_DrawObjSel',
           'visActionPrompt', 'visWinIDPanZoom', 'visObjTypeMaster',
           'LPVISIOCONNECTS', 'visRasterNoRotation',
           'visWSDockedBottom', 'visIconIXPOINTSIZEDOWN',
           'VisContainerAutoResize', 'visAutoConnectDirDown',
           'visRXModePrintPreview', 'visButtonAutomatic',
           'visCmdZoomInIgnoreSel', 'Row', 'visCmdDeleteConnectors',
           'visProtectBackgrounds', 'visCmdDeleteComment',
           'visCtlYCon', 'visBiasRight', 'visLORouteSimpleSN',
           'visWSFloating', 'visFmtTimeHHMM24', 'visIconIXACCEPT',
           'visCmdAlignObjectBottom', 'visSplineDoCircles',
           'visSnapExtAlignmentBoxExtension', 'IVPages',
           'visCmdTextHAlignLeft', 'visScrollToLeft',
           'visServiceStructureBasic', 'visReplaceShapeLockFormat',
           'visCmdConnPoints', 'visCmdDataUnlinkShape',
           'visFixedFormatXPS', 'visBevelTopHeight',
           'visProtectShapes', 'visRHIPreview', 'visTypeSelInk',
           'visCmdGuides', 'visCmdToolsMacroDlg',
           'visFmtDateYYYYMMMDDDWWW_C', 'IVDataRecordset',
           'LPVISIOEVENTS', 'visTagTab2', 'visTagTab0',
           'visRowMember', 'visUIObjSetPal_Undo', 'visObjTypeColors',
           'visHorzAlignNone', 'visCtrlIDCONNECTIONPTTOOL',
           'VisRuleSetFlags', 'visLOPlaceHierarchyTopToBottomCenter',
           'visLORouteExtDefault', 'VisArcSweepFlags',
           'visContainerAutoResizeExpand', 'visCmdDistributeVSpace',
           'visIconIXCONNPOINTS', 'visCmdNextCommentMarkup',
           'visQuickStyleColorDark', 'VisInsertObjArgs',
           'visLOPlaceCompactUpRight', 'visNeverResizePages',
           'visEvtAppActivate', 'visCmdSWDeleteSection',
           'EDataRecordsets', 'visPageDrawSizeType',
           'visIconIXWEBTOOLBAR', 'visCmdImagePropertiesDlg',
           'visDistHorzCenter', 'visTagDefault',
           'visRowOtherEffectProperties', 'visCtrlIDREPEAT',
           'visCmdPageSizeDlg', 'visCtrlSpacingTB_NOTFIXED',
           'visPageTypeInval', 'visEvtCodeBefWinPageTurn',
           'visIconIXCUSTOM_NOTE', 'tagVisOpenSaveArgs',
           'visThemeEffectsPinstripe', 'LPVISIOENUMVACCELITEM',
           'visPLOPlaceCompactUpLeft', 'StatusBars', 'visEvtMaster',
           'visRuleTargetShape', 'visFmtMsoTimeDatePM',
           'visCtrlIDALIGNTOP', 'visSnapToExtensions',
           'visImageDenoise', 'visDocLockReplace',
           'visThemeColorsSlipstream', 'visCopyPasteNormal',
           'visButtonIcon', 'visRasterGroup4',
           'LPVISIODATARECORDSETS', 'visUIObjSetCntx_Debug',
           'visPrintCurrentPage', 'visIconIXCUSTOM_SMILE',
           'visCmdPreviousTile', 'visObjDropOnPageScale',
           'visCmdSSWindowPasteFunction', 'IVToolbarSet',
           'visLORouteTreeSN', 'visExistsLocally',
           'visCmdHyperlinkHier', 'visSLOSplitNone', 'visCmdZoomPt',
           'visCmdUFEditSelectAll', 'visCmdDelConnectPt',
           'visCmdTextHAlignCenter', 'visSectionControls',
           'VisWindowStates', 'visIconIXCLOSE',
           'visCnnctTypeInwardOutward', 'visFmtTimeHMMAMPM_E',
           'visCmdDragDuplicate', 'visCmdPrintPage',
           'visGuideYActive', 'visIconIXGLUE', 'VisPrintOutRange',
           'visAutoLinkGeometryHeight', 'visReplaceShapeLockText',
           'visFmtStrUpper', 'IVToolbarSets', 'visSectionAction',
           'VisShapeTypes', 'visFieldUIFormat',
           'visCmdFileSaveWorkspace', 'visDidots',
           'VisRasterExportResolution', 'visCmdZoomIn', 'visGray',
           'visCtrlIDZOOMLABEL', 'tagVisRunTypes', 'visCmdStenEditOn',
           'VisRoundFlags', 'visFillShdwForegndTrans', 'visCmdRHI',
           'visDocCleanActDeletedFields', 'visObjTypeComment',
           'VisRasterExportColorReduction', 'visSectionProp',
           'visThinDiagonalCross', 'visUIObjSetCntx_InPlaceNoObj',
           'visCmdSWAccept', 'visCmdStenEditIcon',
           'visTxtBlkBottomMargin', 'visIconIXMACROS',
           'visObjTypeCell', 'VisMemberAddOptions', 'visCellFirst',
           'visCmdOpenInVisio', 'IVMovedSelectionEvent',
           'visCtrlTypeSTATE_HIERBUTTON', 'visCtrlIDPREVIEWLABEL',
           'VisRowTags', 'visRowMisc', 'visRowShapeLayout', 'IVLayer',
           'visActionButtonFace', 'visCmdReviewerVisibilityNone',
           'visCmdDropManyLinked', 'visCmdSSWindowSelect',
           'visToNone', 'visCmdRemoveVBAFromActiveDoc',
           'visSVGIncludeVisioElements', 'VisGetSetArgs', 'Addon',
           'visCmdDistributeRight', 'visFCodeCategory',
           'visCmdOptionsSnapGlueSetup', 'vis1DBeginY', 'vis1DBeginX',
           'visTagCnnctPt', 'visCmdIgnoreValidationIssue',
           'tagVisUICtrlAtts', 'DataRecordset', 'visHectare',
           'visFCodeData1', 'VisWindowScrollY', 'VisWindowScrollX',
           'visLOPlaceHierarchyRightToLeftTop', 'visRowStyle',
           'visXFormResizeMode', 'visNURBSData',
           'visAnnotationMarkerIndex', 'visTagTab60',
           'visRow1stHyperlink', 'visSectionNone',
           'visAutoLinkIncludeHiddenProps', 'visFlipSelectionWithPin',
           'visTypeStencil', 'visLineEndArrow', 'visZoomVisio',
           'visPasteVisioIcon', 'visObjThemeModern',
           'visUIObjSetStencil', 'visFmtDateTWNfYYYYMMDDD_C',
           'visHorzJustifyLow', 'visThemeColorsOpulent',
           'visEvtCodeWinSelChange', 'visCmdOpenCommentForEdit',
           'visWholeShape', 'visEditionStandard', 'visEvtCodeDocSave',
           'visLOJumpDirYRight', 'visThemeColorsCouture',
           'visHitOnBoundary', 'tagVisUnitCodes', 'visCmdShapeGeo',
           'VisFontAttributes', 'VisContainerNested',
           'VisDocExIntent', 'visRaster24Bit', 'visCmdObjectUngroup',
           'visRowConnectionPts', 'visCtrlIDFORMULA',
           'visCmdEditUndoMultiple', 'visCtrlIDSUPERSCRIPT',
           'visEvtCodeWinOnAddonKeyMSG', 'visCmdDrawingExplorer',
           'visCustPropsInvis', 'visCtrlTypeEND', 'visObjCalendar',
           'VisDefaultColors', 'visCmdView150',
           'visFillShdwBkgndTrans', 'visThemeColorsHorizon',
           'IVUIObject', 'visUIObjSetPrintPreview',
           'visPageDrawingScale', 'visCmdPanObject',
           'visLOBPlaceNormal', 'visModalDeferEvents',
           'tagVisStatCodes', 'visIconIXSAVE', 'visMasLPTileDeform',
           'VisToolbarFlavors', 'visIconIXCUSTOM_CARDS',
           'visTypeGroup', 'visFontDevice', 'visTraceCallsToVBA',
           'visDataRecordsetNoExternalDataUI', 'visIconIXALIGNLEFT',
           'visSavePreviewNone', 'VisQuickStyleColors',
           'visCmdFileImport', 'visTypeForeground', 'Selection',
           'visCmdPageMeasureUnitsDlg', 'visCmdSetLinePattern',
           'LPVISIOENUMVMENU', 'visCmdLayerDlg',
           'visEccentricityAngle', 'visCtrlTypeSWATCH_COLORS',
           'visFCodeTitle', 'visToolBarLotusSS',
           'IVContainerProperties', 'visRowHelpCopyright',
           'LPVISIOFONTS', 'visCmdView75', 'visCalArabicHijri',
           'visCmdStenSave', 'visDocCleanActNonDefaultFonts',
           'IVAccelItem', 'visErrorSuccess', 'visHorzAlignLeft',
           'visCmdFileSaveAsPNG', 'visNautMiles',
           'visXFormResizeScale', 'visCtrlIDFONTCOMBO',
           'MasterShortcut', 'visRowLock', 'visBarLeft',
           'visWinIDMasterExplorer', 'visThemeColorsFlow',
           'visPropTypeListFix', 'visCmdToolSnapLines',
           'visCmdINETDiagrammingResources', 'visCtrlIDSTAMPTOOL',
           'visTypeShape', 'visCharacterComplexScriptFont',
           'visCustPropsValue', 'visRasterGrayScale',
           'visEvtCodeAfterResumeEvents', 'visTabStopCount',
           'MenuSets', 'visIconIXSMALL_PADLOCK',
           'visGradientStopColor', 'visBiasLetVisioChoose',
           'LPVISIOAPPSETTINGS', 'visCtrlIDTEXTTOOL',
           'visCmdTextDoubleUline', 'visAnnotationComment',
           'visCtrlIDROTATETEXT', 'VisDataRecordsetAddOptions',
           'VisDrawRegionFlags', 'visCtrlIDARRANGEICONS',
           'visCharacterAsianFont', 'visBegin',
           'visCtrlIDDHORZ_CENTER', 'visIconIXCUSTOM_RIGHT',
           'visSketchEnabled', 'visCmdIconLassoTool',
           'visCmdDeleteForwardWord', 'visCmdNewDefDocBlankDrawing',
           'visUnitsPoint', 'IVToolbarItems', 'visCmdSubtract',
           'visHorzAlignRight', 'visEvtFormula', 'IVWindow',
           'visLayoutVertAlignNone',
           'visIconIXLINEJUMPSTYLE_TRIANGLE', 'visSLOCategoryChanged',
           'visCmdFileOpenStencil', 'visSheet',
           'visSmartTagDispModeShapeSelected', 'visCmdSetFillPattern',
           'visGraphicCenter', 'visCmdSWDeleteRow',
           'visLOBRouteFlowWE', 'VisDocModeArgs', 'visEvtSection',
           'visVerticalText', 'visSelTypeByRole',
           'visIconIXCUSTOM_PENCIL', 'visCmdDRConnectionTool',
           'visActionDisabled', 'visEvtIDInval', 'visCalWestern',
           'visThemeColorsExecutive', 'visLOIPlaceNormal',
           'visIconIXVSD', 'visCalThaiBuddhist',
           'visRasterFlipVertical', 'visHorzAlign',
           'visCmdSSWindowShowSection', 'visCtrlAlignmentLEFT',
           'visCtrlIDTEXTCOLORS', 'visIconIXSHAPEEXPL',
           'visIconIXVSS', 'visCicerosAndDidots', 'visEvtCellDrop',
           'visIconIXVST', 'visCtrlSpacingFIXED_AFTER',
           'tagVisFontAttributes', 'visCtrlIDWHOLEPAGE',
           'visDefaultSaveCurrent', 'visLOBRouteNormal',
           'visCtrlIDDVERT_MIDDLE', 'visCmdOptionsColorPaletteDlg',
           'visLOPlaceHierarchyLeftToRightBottom',
           'visIconIXOPENSTENCIL', 'visGluedShapesIncoming1D',
           'visIconIXCUSTOM_CALC', 'visListAlignRightOrBottom',
           'visCmdSSWindowAddSection', 'IVMSGWrap',
           'visCmdSetPageLineJumpCode_Disp', 'visCmdMovConnectPt',
           'visIconIXPOINTERTOOL', 'visCtrlIDITALIC',
           'visFmtDategggemd_J',
           'visContainerAutoResizeExpandContract',
           'visArrangeTileVertical', 'visUIObjSetCntx_Page',
           'visDistHorzSpace', 'Hyperlink',
           'visCmdValidationIssuesArrangeByPage',
           'visCmdApplyThemeToNewShapesToggle', 'visUpdateAlignBox',
           'visLORouteSimpleNS', 'visFmtDateyyyymd', 'visRowLayerMem',
           'visCmdSWAddSectionDlg', 'visVertAlignNone',
           'visLOBRouteTreeNS', 'visNoAlignBox',
           'visBuiltInStencilBorders', 'visStatSuspended',
           'visSLOFixedCode', 'tagVisDefaultColors',
           'visCtlOffsetMax', 'visCmdFormatStyle',
           'visFCodePrintDate', 'visUIObjSetCntx_AddCommands',
           'visGroupSelectMode', 'visCmdObjectSwapEnds',
           'visCmdAppMaximize', 'visCmdEditReplace',
           'visDocCleanActDefault', 'visServiceVersion150',
           'visCtrlIDCOPY', 'visSmartTagDisplayMode',
           'visIconIXCANCEL', 'visCmdShowShapeSheetPage',
           'visCmdPagesList', 'visDocCleanActLocalFormulas',
           'visPLOAvenueSizeX', 'visPasteDIB', 'visToolBarNone',
           'visRowControl', 'visIconIXCUSTOM_GEARS',
           'LPVISIODOCUMENT', 'visLORouteSimpleVH', 'visCmdFirstTile',
           'VisUICtrlIDs', 'visFillForegnd',
           'visCmdObjectAlignObjects', 'visDropSource',
           'visIconIXCUSTOM_BANK', 'visObjTypeMSGWrap',
           'visParaPropRow', 'visRowImage',
           'visGroupIsTextEditTarget', 'visSmartTagDispModeMouseOver',
           'visTypeBitmap', 'visSectionUser',
           'visCmdSharedWorkspacePaneToggle', 'visCmdEditRepeat',
           'VisRasterExportResolutionUnits', 'visRulerFixed',
           'visLOJumpDirYLeft',
           'visEvtCodeContainerRelationshipAdded', 'visUIVHidden',
           'visCtrlIDSUBSCRIPT', 'visFieldUICode', 'visErrorValue',
           'visCmdStartRecordingMacro', 'visSLOJumpStyle',
           'visSnapExtMidpoint', 'visGray90',
           'visBuiltInStencilCallouts', 'visCmdSendToExchange',
           'visCmdRecalcObjectWH', 'visEvtCodeCancelUngroup',
           'visCmdTurnToPrevPage', 'LPVISIOTOOLBARSET',
           'visAutoLinkNoApplyDataGraphic', 'visUIObjSetShapeSheet',
           'visPLOPlaceCompactDownLeft', 'visVertTop',
           'visThemeColorsComposite', 'visMouseMoveDragStatesOver',
           'visIndentLeft', 'visScaleCustom', 'LPVISIOMASTERSHORTCUT',
           'tagVisPasteSpecialCodes', 'Layer',
           'visThemeEffectsOutline', 'VisMeasurementSystem',
           'visScrollLeftPage', 'visSectionLast',
           'visIconIXFLIPHORIZONTAL', 'visReviewerCurrentIndex',
           'VisUISpacingTypes', 'visCmdDRPointerTool',
           'visLockThemeIndex', 'visContainerMemberOnBoundary',
           'visObjTypeCurve', 'visCmdMsoClipboard', 'visCtlLocked',
           'visLOBRouteTreeWE', 'visSec', 'visIconIXVERTICALTEXT',
           'visObjTypeEventList', 'visCmdDrawFillStyle',
           'visVersion40', 'visCtrlIDSPLINETOOL',
           'visLOFlagsPNRGroup', 'LPVISIOMENUS', 'visIconIXGRID',
           'visRowGuide', 'visPLOPlaceDepthDefault',
           'visFmtTimeHHMMAMPM', 'visPLOJumpStyle',
           'visCtrlIDDECRINDENT', 'visDSEngr', 'visCmdPreviousMarkup',
           'visThemeColorsElemental', 'visTagTab10', 'visCaseNormal',
           'LPVISIOVALIDATIONRULES', 'UIObject',
           'visCmdCreateSubProcessFromSel', 'IVStyle', 'visDarkCyan',
           'visFmt0PlNoUnits', 'visCtrlIDMSG_PAGES',
           'visDockedStencilAddon', 'visCtrlTypePALETTEBUTTONICON',
           'VisPasteSpecialCodes', 'visObjTypeShapes',
           'visThemeEffectsDecal', 'visEvtMod', 'Shapes',
           'visFmtMsoTimePM', 'IVStatusBarItem',
           'visRefreshNoReconcilationUI', 'visFmtDegrees',
           'visDockedStencilBuiltIn', 'visGraphicAbove',
           'visQuickStyleFillMatrix', 'visWSRestored',
           'VisSnapSettings', 'visInsertAsControl',
           'tagVisCellIndices', 'visPasteInk',
           'visLayoutHorzAlignRight', 'visIconIXCUSTOM_CLUB',
           'visCmdINETAddToFavorites', 'visCmdAlignObjectTop',
           'visSmartTagYJustifyTop',
           'visLOPlaceHierarchyBottomToTopRight', 'visDrawingAddon',
           'visCtrlIDGOTOPAGE', 'visInfiniteLineX1',
           'visInsertDontShow', 'visInfiniteLineX2',
           'visThemeTypeEffect', 'visAddMinimized',
           'visFmtMsoFEExtra3', 'visCtrlIDCORNERSTYLE',
           'visCtrlIDCOLOR15', 'visCtrlIDCOLOR16', 'visTabStopComma',
           'visCtrlIDCOLOR10', 'visCtrlIDCOLOR11', 'visCtrlIDCOLOR12',
           'visDistVertBottom', 'visIconIXDECRINDENT', 'visMeters',
           'visAlignLeft', 'visFmtTimeAMPM_hmm_J',
           'visIconIXLINEJUMPSTYLE_5PT', 'visTypeDataBar',
           'visCmdListInsertBefore', 'visFmtTimeAMPM_hmm_C',
           'visDeselect', 'visPolyarcs', 'visFontSchemeIndex',
           'LPVISIOPATH', 'visCmdTextHAlignDistribute',
           'visLOJumpStyle6Point', 'visRight', 'visCtrlIDMACROS',
           'visCmdEditRedoOrRepeat', 'tagVisToParts',
           'tagVisCellVals', 'visGlueTypeTrigger',
           'visCharacterRTLText', 'visCmdAddDataRecordset',
           'visCtrlIDTEXTSTYLECOMBO', 'visDataRecordsetNoRefreshUI',
           'VisCenterViewFlags', 'visDarkGreen', 'visGetStrings',
           'visLOIRouteNormal', 'visSLOConFixedCode', 'visUserValue',
           'visPrintCurrentView', 'visPLOJumpDisplayOrder',
           'visFCodeHeight', 'visUnitsColor', 'visPaperSizeFolio',
           'visSLOPermeablePlace', 'visRotationYAngle',
           'visNoLayerColor', 'visMasLPTile', 'visLineEndCap',
           'visIconIXTEXTALIGNLEFT', 'visContainerAutoResizeNone',
           'visOpenHidden', 'visGetOrMakeGUID',
           'visEvtCodeContainerRelationshipDeleted',
           'visAnchorBarAddon', 'visQuickStyleColorVariant7',
           'visCmdRemoveDataGraphicFromSel', 'visMenuAnimationNone',
           'visCnnctDirY', 'visCnnctDirX', 'visRasterPixelsPerInch',
           'visCustPropsType', 'visManual', 'visSLOFixedPlow',
           'visIconIXICONSELNET', 'visCmdConnectorEffectCurved',
           'visQuickStyleColorVariant2', 'visLockCustProp',
           'visTxtBlkDirection', 'visXFormPinY', 'visAlignMiddle',
           'visRoleSelConnector', 'Connect', 'visFCodeCreateDate',
           'visCmdDRLineTool', 'visGlueTypeDefault',
           'visQuickStyleFontMatrix', 'visIconIXFIRSTPAGE',
           'visXFormWidth', 'visTypeGuide', 'visScrollLeft',
           'tagVisDrawRegionFlags', 'visThemeColorsPaper',
           'visCmdDynConnReroute', 'visEvtMarker',
           'visCmdStopRecordingMacro', 'visSLOSplittable',
           'visCtrlIDICONNAME', 'LPVISIOENUMVACCELTABLE',
           'visCmdMDIRestore', 'visLORouteSimpleEW',
           'visCtrlIDZOOMCOMBO', 'visIconIXVBAMACRO',
           'visCmdResearchLookUp', 'visCmdMoveObject',
           'visAutoLinkDontReplaceExistingLinks',
           'visGraphicBottomEdge', 'visDocCleanAlertDefault',
           'visIconIXSHAPEVERT', 'visGlueToHandles',
           'visCharacterSize', 'visThemeColorsApothecary',
           'visObjTypeRelatedShapePairEvent', 'visCustom',
           'visFCodeDirectory', 'visIconIXCUSTOM_PHONE',
           'visGlowSize', 'visCmdMSOInsertEquation',
           'visCmdToggleDocumentStencil', 'visCmdInserTextBoxControl',
           'visDocCleanPageSheet', 'visCmdDataExplorerWindow',
           'visCmdEditInsertObject', 'visSLOJumpNever',
           'visHLinkFrame', 'visCmdSetPageLineJumpCode_Vert',
           'LPVISIOENUMVTOOLBAR', 'IVClientSite', 'visSplineKnot3',
           'VisUIStringIDs', 'visPageInhibitSnap', 'visSectionExport',
           'VisListDirection', 'visRowDoc', 'visPropTypeDate',
           'tagVisFieldCodes', 'visSLOFixedConnPtsOnly',
           'visReflectionBlur', 'visRasterLZW',
           'visLOPlaceHierarchyRightToLeftBottom', 'IVBUndoManager',
           'visIconIXCUSTOM_UP', 'visDocPreviewScopeNone',
           'visBBoxIgnoreVisible', 'visX', 'visY',
           'visGeomExcludeLastPoint', 'visLOJumpDirXDown',
           'visYGridSpacing', 'visFmtDateDMMMMYYYY',
           'visRowThemeProperties', 'visObjTypeConnect',
           'visTagArcTo', 'VisPageAndMasterIDs', 'visMasLPStretch',
           'visElapsedMin', 'Comment', 'visFmtMsoDateMonthYr',
           'visPLOAvenueSizeY', 'visCtrlTypeHIERBUTTON',
           'visCmdBrowseSampleDrawings', 'visCtrlTypeSTATE',
           'visMasterWin', 'visCmdIconLeftColor', 'visScrollUp',
           'visIconIXALIGNRIGHT',
           'visCmdValidationIssuesArrangeByCategory', 'IVToolbar',
           'visInvalPageID', 'visIconIXSHAPE_INTERSECT', 'Document',
           'visSLORouteStyle', 'VisConnectedShapesFlags',
           'visIconIXALIGNBOTTOM', 'visIconIXCLIPART',
           'visTFOKHorizontalInVertical', 'visTagRelEllipticalArcTo',
           'visCtrlIDNEW', 'visThemeEffectsNone',
           'visLOJumpStyle4Point', 'visSLOFixedConnPtsIgnore',
           'LPVISIOVALIDATIONISSUE', 'IVAmbients',
           'visCmdAddConnectPt', 'visCtrlIDTEXTBLOCKTOOL',
           'visEvtCodeBefForcedFlush', 'visThickDiagonalCross',
           'visCmdObjectSendToBack', 'visFilterMouseMoveDragOver',
           'visCmdHideMoreShapes', 'visCmdSetDiagramServices',
           'visPLOPlaceHierarchyRightToLeftMiddle',
           'visEllipseMinorY', 'visEllipseMinorX',
           'visQuickStyleType', 'visCtrlIDALIGNBOTTOM',
           'visEvtCodeQueryCancelSuspendEvents',
           'visCmdContainerAutoResizeExpandOnly', 'visTabStopLeft',
           'VisEdition', 'visDataColumnPropertyHyperlink',
           'visCmdEditInsertField',
           'visContainerFormatContainerAutoResize', 'visCentimeters',
           'visCmdConnectorEffectStraight', 'visFCodeCreator',
           'VisRotationTypes', 'visThemeEffectsMesh',
           'visCtrlIDLINEWEIGHTS', 'visCtrlIDNEXTPAGE',
           'visCmdFileSaveAsSVG', 'visSmartTagDisabled',
           'visIconIXCUSTOM_WOMAN', 'VisPublishPages',
           'visLinkReplacePrompt', 'visGluedShapesAll1D',
           'VisRasterExportSize', 'VisDocumentTypes',
           'visRotateSelectionWithPin', 'tagVisDocCleanTargets',
           'visCmdAcquireImages', 'visRowAction', 'visForeDotsWide',
           'visFlipShapes', 'visReplaceLockFormat',
           'visFieldEditMode', 'visSpatialIncludeDataGraphics',
           'visCmdUFEditPaste',
           'visEvtCodeSelectionMovedToSubprocess', 'visObjTypeApp',
           'visBuiltInStencilContainers',
           'visContainerFlagsExcludeListMembers', 'VisWinTypes',
           'visReplaceCopyCells', 'visSpatialContainedIn',
           'visDrawRegionDeleteInput', 'visBow', 'VisUnitCodes',
           'visArrowSizeSmall', 'visThemeColorsWaveform',
           'visDistHorzLeft', 'visSLOJumpCode', 'visCmdTextSmallCaps',
           'visCmdAppMinimize', 'visPLOBlockSizeY',
           'visPLOBlockSizeX', 'visDocPreviewScope', 'visFSTOblique',
           'visCmdTextSize', 'visCtrlIDLINETOOL',
           'visLORouteSimpleWE', 'visVersion50', 'visRowXFormOut',
           'tagVisTraceFlags', 'visDocPreviewScopeAllPages',
           'VisGraphicPositionHorizontal', 'visCmdRHIDlg',
           'IVStatusBars', 'visEvtCodeQueryCancelSuspend',
           'visEvtCodeCancelSelDel', 'visThinVert', 'visPicas',
           'visThemeColorsConcourse', 'visCmdOffsetDlg',
           'visSelectAll', 'visStandard', 'visCtrlIDTEXTRIGHT',
           'visErrorDivideByZero', 'visIconIXHELPMODE',
           'visObjTypeHyperlinks', 'visFmtFraction2PlDefUnits',
           'visCmdFormatPictureAutobalance',
           'visCmdDiagramRotateRight', 'visUIObjSetPal_Redo',
           'visMouseMoveDragStatesLeave', 'visIconIXCUSTPROP',
           'visTabAlign', 'visRasterUseScreenResolution',
           'visPLOLineAdjustFromRoutingDefault',
           'visLayoutHorzAlignDefault', 'IVStatusBar',
           'visElapsedDay', 'visCtrlIDDECRPARA', 'visFCodeCreateTime',
           'visIconIXPENCILTOOL', 'visCmdTextStrikethrough',
           'visWSAnchorAutoHide', 'visCmdCustPropDefine',
           'visCtrlIDPOINTSIZECOMBO', 'VisRegionalUIOptionsHide',
           'visControlX', 'visControlY',
           'visThemeEffectsBevelIllusion', 'visInfiniteLineY2',
           'IVValidationIssues', 'visInfiniteLineY1',
           'visSectionObject', 'visEditionProfessional',
           'visNoCtlHandles', 'visMasLEScale',
           'visFCodeBackgroundName', 'VisCellVals', 'visEndY',
           'visCmdRulerGridDlg', 'visProtectMasters',
           'LPVISIOVALIDATIONRULESET', 'visOpenMacrosDisabled',
           'visDocLockDuplicatePage', 'visButtonCaption',
           'visThemeColorsGrid', 'visCmdShapeStudioAddon',
           'visCmdApplyThemeEffects', 'visCtrlIDRULER',
           'VisDistributeTypes', 'visCnnctTypeInward', 'visPageScale',
           'visCmdGrid', 'visIconIXNEWSTEN',
           'visCmdSaveForAutoRecover', 'visCmdDataRefreshDlg',
           'visUIObjSetPopup_LineJumpStyle', 'visPLOEnableGrid',
           'visCmdDrawRect', 'visDistVertTop',
           'visSnapToRulerSubdivisions', 'visEvtAfterModal',
           'visCtrlIDLINESTYLELIST', 'visCmdDistributeMiddle',
           'VisCellIndices', 'visIconIXPAGELINEJUMPCODE_LASTROUTED',
           'VisContainerFormatType', 'visBBoxIncludeGuides',
           'visUIObjSetCntx_DELayers', 'visCmdNewForegroundPage',
           'MovedSelectionEvent', 'visPasteOEMText',
           'visCmdRunAddOnMenu', 'visAutoConnectDirNone',
           'visRuleSetHidden', 'visSnapExtLinearExtension',
           'visSavePrevDetailed1st', 'visLOFlipRotate',
           'visPaperSizeNote', 'visCtrlTypeBUTTON', 'visLockRotate',
           'visVertMiddle', 'visCmdIntersect',
           'visCmdSetPageLineJumpCode_Last',
           'VisRegionalUIOptionsUseSystemSettings', 'visFromAngle',
           'visGroupDisplayMode', 'visEvtCodeLastUser', 'visHideText',
           'visCmdHeaderFooter', 'visCtrlIDICONPENCIL',
           'LPVISIOSTATUSBARS', 'visCmdSetPageOrientation',
           'visCmdFormatDefineStyles', 'visCmdShapeComment',
           'visSpatialTouching', 'visGlueToConnectionPoints',
           'visLORouteOrgChartNS', 'visFmtMsoDateShortMon',
           'visRaster16Bit', 'visSnapToDisabled', 'IVColors',
           'visEvtCodeQueryCancelQuit', 'visLORouteCenterToCenter',
           'visCtrlIDSHAPESHEET', 'visFmtDateMMDDYY',
           'visFmtDateTWNfyyyymmddww_C', 'visIconIXEXCHANGEFOLDER',
           'visEvtCode1stUser', 'visCmdSWShowFormulas',
           'visSnapToIntersections', 'visLOBRouteFlowNS',
           'visLayoutHorzAlignNone', 'visSpaceAfter',
           'visEvtBeforeModal', 'visIconIXICONPENCIL',
           'visObjTypeUnknown', 'visArrowSizeVerySmall',
           'visThemeColorsFoundry', 'visWSAnchorTop',
           'visDrawRegionIncludeDataGraphics', 'visObjTypeAddon',
           'LPVISIODATARECORDSETCHANGEDEVENT',
           'visCmdOptionsGoToDrawing', 'IVAddons', 'visIconFormatBMP',
           'visFmtMsoTimeSec24', 'visIconIXCUSTOM_TACK',
           'visFlipSelection', 'visIconIXPAGEPLOW',
           'visFmt1PlDefUnits', 'visReplaceLockShapeData',
           'tagVisExistsFlags', 'VisStatCodes', 'visCmdDrawZoom',
           'ServerPublishOptions', 'visCmdDRSplineTool',
           'visSectionConnectionPts', 'visBevelDepthColor',
           'VisFlipTypes', 'visRowGroup',
           'visCmdAutoGenerateDataGraphics', 'visFitWidth',
           'visCmdSetDynConnLineJumpStyle_2pt', 'visLineWeight',
           'visPageShdwScaleFactor', 'visCtrlTypeCOMBODRAW',
           'visIconIXRULER', 'visHLinkInvisible',
           'visCharacterLocale', 'visFmtDateTWNfyyyymmdd_C',
           'visGluedShapesIncoming2D', 'visGraphicRightEdge',
           'visAutoConnectDirLeft', 'visFmtDateyy_mm_dd',
           'visIconIXSPLINETOOL', 'visCtrlIDICONONLY',
           'visThemeEffectsPillow', 'visCmdView400',
           'visCtrlIDZOOMOUT', 'visFCodePageNumber',
           'visEvtRemoveHiddenInformation', 'visCmdCropTool',
           'visFillShdwType', 'visFmtMsoDateLong',
           'visSetBlastGuards', 'visObjTypeEvent',
           'visGrpDispModeFront', 'LPVISIOENUMVSTATUSBAR',
           'visCtlOffsetMinHidden', 'visPaperSizeLetter',
           'visTagCnnctNamedABCD', 'visIconIXCHECKMARK',
           'visPLOLineRouteExt', 'visCtrlIDGOBACK',
           'tagVisHitTestResults', 'visCmdViewStatusBar',
           'visPrintPropertiesPrintGrid', 'visLOFlagsVisDecides',
           'visProtectPreviews', 'visFieldObjectKind',
           'visModalDontBlockMessages', 'tagVisShapeIDs',
           'visSnapExtMidpointPerpendicular', 'visCmdViewConnections',
           'visLOJumpStyleTriangle', 'visCmdCollapseShapesWindow',
           'visIconIXCUSTOM_SAVE', 'visGlueToGuides', 'visCenterEdge',
           'visCmdZoomSingleTile', 'visMouseLeft',
           'visCustPropsDataLinked', 'visCharacterPos',
           'visCmdFileNewBlankDrawing', 'visCmdApplyThemeToDoc',
           'visFillBkgnd', 'visSectionCharacter',
           'visMenuAnimationRandom', 'visIconIXDHORZ_CENTER',
           'visCmdSelectionModeRect', 'visThemeColorsTrek',
           'visCmdEditUndo', 'visCmdObjectInfoDlg',
           'visCmdMDIMaximize', 'visInches', 'visCmdTextVAlignBottom',
           'visSLOConFixedRerouteFreely', 'visObjTypeValidation',
           'visRowPage', 'visCmdFormatPainter', 'visReviewerColor',
           'Section', 'visPLOLineAdjustToRelated',
           'visPasteVisioShapes', 'LPVISIOACCELTABLE',
           'visSelTypeByDataGraphic', 'visYGridDensity',
           'visObjTypeShape', 'visBevelTopType', 'LPVISIODATACOLUMNS',
           'visPLOPlaceHierarchyLeftToRightTop',
           'visCmdDataAutoConnect', 'IVGraphicItems',
           'visFCodeObjectID', 'VisRasterExportOperation',
           'visCmdUpgradeThemeModel', 'visCmdRelayoutShapes',
           'visCmdNewSubProcess', 'VisAutoLinkFieldTypes',
           'visCtrlTypeSPLITBUTTON', 'visGetRoundedInts',
           'visMagenta', 'LPVISIOCOLORS',
           'visConnectedShapesOutgoingNodes', 'visCmdFileLastFile11',
           'visCtrlSpacingNEW_ROW', 'visLOPlaceRadial',
           'visCmdDuplicateTheme', 'tagVisWinTypes', 'visDrawing',
           'visCmdReviewerVisibilityAll', 'visCmdObjectReverse',
           'visCmdFormatCustPropEdit', 'IEnumVStatusBar',
           'tagVisScrollbarStates', 'visDegrees',
           'visIconIXSHOWDOCSTEN', 'visFlipHorizontal',
           'visIconIXDVERT_MIDDLE', 'EStyle', 'visSelIsSuperItem',
           'IVComments', 'visDataColumnPropertyDisplayName',
           'visPropTypeNumber', 'visIconIXBRING_FORWARD',
           'IVCoauthMergeEvent', 'visTypeMetafile',
           'visCmdRotate90Clockwise', 'visCmdDeleteDataGraphic',
           'visCmdCloseWindow', 'visLockThemeConnectors',
           'visPLOPlaceHierarchyTopToBottomLeft', 'visGlueType',
           'visIconIXCUSTOM_KEY', 'visIconIXCUSTOM_BELL',
           'visTypeInval', 'visSnapToAlignmentBox', 'visObjTheme',
           'visCmdAddToNewContainer',
           'visCmdSetDynConnLineJumpStyle_3pt',
           'visFillGradientEnabled', 'visCmdBreakOLELink',
           'visSLOPlaceFlip', 'visIconIXCONNECTIONPTTOOL',
           'visWideDownDiagonal', 'visFmtJDateyymmdd',
           'visErrorNotAvailable', 'visIconIXCUSTOMPROP_WINDOW',
           'visFmtStrNormal', 'visSmartTagY', 'visSmartTagX',
           'visDocCleanTargAll', 'visFillShdwShow',
           'visCmdSetCharSizeDown', 'visCmdLast', 'visPPFlagsRTLText',
           'LPVISIOACCELTABLES', 'visFillBkgndTrans',
           'IVisLibOcxSupport', 'IVFonts', 'visEvtCodeInval',
           'tagVisSelectMode', 'IEnumVToolbar', 'visHLinkDefault',
           'visCmdTextVAlignMiddle', 'visCtrlSpacingVARIABLE_BEFORE',
           'visEvtCodeEnterScope', 'visXFormLocPinX',
           'visXFormLocPinY', 'visCtrlIDSAVE', 'visFmtDatewwyyyymd_S',
           'visCtlXCon', 'visObjTypeDataColumns',
           'visCmdTextSuperscript', 'visDSArch',
           'visHorzJustifyMedium', 'visColorSchemeIndex',
           'LPVISIOMENUSET', 'visFCodeCurrentDate',
           'visSVGExcludeVisioElements', 'visCtrlIDLASTPAGE',
           'tagVisRoundFlags', 'visThemeColorsAdjacency',
           'visSketchLineChange', 'visServiceAutoSizePage',
           'visMasLEDefault', 'visKeyControl', 'visBevelTopWidth',
           'visImageTransparency', 'visLOFlags', 'visIconIXSPELLING',
           'ToolbarItems', 'visActCodeAdvise',
           'visThemeColorsNewsprint', 'visCalSakaEra', 'EMaster',
           'visPasteVisioShapesWithoutDataLinks', 'visRowAlign',
           'visEvtCodeMouseMove', 'visCustPropsFormat',
           'visGlueToNone', 'visEvtCodeCancelStyleDel',
           'visUIObjSetCntx_DEPages', 'visDocCleanTargRPages',
           'visCtrlIDLINEPATTERN', 'visCtrlTypeSTATE_BUTTON',
           'visCtrlIDFILLSTYLELIST', 'visCtrlIDCONNECT',
           'VisRuleTargets', 'visAutoLinkObjectID',
           'visFmtDateyyyymdww_K', 'visLockReplace',
           'visFmtDateyyyymdww_J', 'visCmdInsertTextBox',
           'visWinIDDrawingExplorer', 'visFmtNumGenDefUnits',
           'visSectionLastReal', 'visCmdFileNewBlankStencil',
           'visEvtPage', 'visValidationDefault',
           'LPVISIOENUMVMENUITEM', 'visTxtBlkBkgndTrans', 'visRound',
           'visTraceAdvises', 'visIconIXLINEJUMPSTYLE_2PT',
           'LPVISIOADDON', 'MouseEvent', 'visCtrlIDPOINTSIZEUP',
           'visCmdRunAddOnDlg', 'visCmdNewThemeEffects',
           'visCmdFormatParagraph', 'visCtrlIDLINEEND',
           'visCmdFormatFill', 'visCmdUFEditCut', 'visIconIXOPEN',
           'visCmdMsoSearch', 'visRowFormat',
           'visCmdIgnoreValidationRule', 'visRowLine',
           'visIconIXSUBSCRIPT', 'visCmdStenNameMaster', 'IVPath',
           'visCtrlIDOPENSTEN', 'visStatClosed', 'visOpenRO',
           'visCmdResearchPaneToggle', 'visCmdDecreaseIndent',
           'visOpenRW', 'visYellow', 'visSelTypeByMaster',
           'visRowData123', 'visCtlX', 'visCtlY',
           'visIconIXLINECOLOR', 'visCtrlTypeSPLITBUTTON_MRU_COMMAND',
           'Page', 'visCmdCoauthMerging', 'visLOInteraction',
           'LPVISIOSELECTION', 'LPVISIOMENUITEM',
           'visCmdWindowTileAll', 'visStyleIncludesText',
           'visCtrlIDICONBUCKET', 'visMasFPTile',
           'visLOPlaceCompactDownLeft', 'tagVisWindowScrollX',
           'EDocuments', 'tagVisWindowScrollY',
           'visThemeColorsEssential', 'visCtrlTypePUSHBUTTON',
           'visBackDotsWide', 'visDegreeMinSec']
from comtypes import _check_version; _check_version('', 1349095706.000000)
